{"id":"97f1de2c3acf27cc054927259d91fef4","_format":"hh-sol-build-info-1","solcVersion":"0.8.20","solcLongVersion":"0.8.20+commit.a1b79de6","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/AccessControl.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.20;\n\nimport {IAccessControl} from \"./IAccessControl.sol\";\nimport {Context} from \"../utils/Context.sol\";\nimport {ERC165} from \"../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address account => bool) hasRole;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 role => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with an {AccessControlUnauthorizedAccount} error including the required role.\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual returns (bool) {\n        return _roles[role].hasRole[account];\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n     * is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier.\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n     * is missing `role`.\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert AccessControlUnauthorizedAccount(account, role);\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) public virtual {\n        if (callerConfirmation != _msgSender()) {\n            revert AccessControlBadConfirmation();\n        }\n\n        _revokeRole(role, callerConfirmation);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (!hasRole(role, account)) {\n            _roles[role].hasRole[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Attempts to revoke `role` to `account` and returns a boolean indicating if `role` was revoked.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (hasRole(role, account)) {\n            _roles[role].hasRole[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n"},"@openzeppelin/contracts/access/IAccessControl.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (access/IAccessControl.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev External interface of AccessControl declared to support ERC-165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev The `account` is missing a role.\n     */\n    error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);\n\n    /**\n     * @dev The caller of a function is not the expected one.\n     *\n     * NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\n     */\n    error AccessControlBadConfirmation();\n\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted signaling this.\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n     * Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) external;\n}\n"},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"},"@openzeppelin/contracts/token/ERC1155/ERC1155.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC1155/ERC1155.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC1155} from \"./IERC1155.sol\";\nimport {IERC1155MetadataURI} from \"./extensions/IERC1155MetadataURI.sol\";\nimport {ERC1155Utils} from \"./utils/ERC1155Utils.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC165, ERC165} from \"../../utils/introspection/ERC165.sol\";\nimport {Arrays} from \"../../utils/Arrays.sol\";\nimport {IERC1155Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the basic standard multi-token.\n * See https://eips.ethereum.org/EIPS/eip-1155\n * Originally based on code by Enjin: https://github.com/enjin/erc-1155\n */\nabstract contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI, IERC1155Errors {\n    using Arrays for uint256[];\n    using Arrays for address[];\n\n    mapping(uint256 id => mapping(address account => uint256)) private _balances;\n\n    mapping(address account => mapping(address operator => bool)) private _operatorApprovals;\n\n    // Used as the URI for all token types by relying on ID substitution, e.g. https://token-cdn-domain/{id}.json\n    string private _uri;\n\n    /**\n     * @dev See {_setURI}.\n     */\n    constructor(string memory uri_) {\n        _setURI(uri_);\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC1155).interfaceId ||\n            interfaceId == type(IERC1155MetadataURI).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC1155MetadataURI-uri}.\n     *\n     * This implementation returns the same URI for *all* token types. It relies\n     * on the token type ID substitution mechanism\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the ERC].\n     *\n     * Clients calling this function must replace the `\\{id\\}` substring with the\n     * actual token type ID.\n     */\n    function uri(uint256 /* id */) public view virtual returns (string memory) {\n        return _uri;\n    }\n\n    /**\n     * @dev See {IERC1155-balanceOf}.\n     */\n    function balanceOf(address account, uint256 id) public view virtual returns (uint256) {\n        return _balances[id][account];\n    }\n\n    /**\n     * @dev See {IERC1155-balanceOfBatch}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(\n        address[] memory accounts,\n        uint256[] memory ids\n    ) public view virtual returns (uint256[] memory) {\n        if (accounts.length != ids.length) {\n            revert ERC1155InvalidArrayLength(ids.length, accounts.length);\n        }\n\n        uint256[] memory batchBalances = new uint256[](accounts.length);\n\n        for (uint256 i = 0; i < accounts.length; ++i) {\n            batchBalances[i] = balanceOf(accounts.unsafeMemoryAccess(i), ids.unsafeMemoryAccess(i));\n        }\n\n        return batchBalances;\n    }\n\n    /**\n     * @dev See {IERC1155-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC1155-isApprovedForAll}.\n     */\n    function isApprovedForAll(address account, address operator) public view virtual returns (bool) {\n        return _operatorApprovals[account][operator];\n    }\n\n    /**\n     * @dev See {IERC1155-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) public virtual {\n        address sender = _msgSender();\n        if (from != sender && !isApprovedForAll(from, sender)) {\n            revert ERC1155MissingApprovalForAll(sender, from);\n        }\n        _safeTransferFrom(from, to, id, value, data);\n    }\n\n    /**\n     * @dev See {IERC1155-safeBatchTransferFrom}.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) public virtual {\n        address sender = _msgSender();\n        if (from != sender && !isApprovedForAll(from, sender)) {\n            revert ERC1155MissingApprovalForAll(sender, from);\n        }\n        _safeBatchTransferFrom(from, to, ids, values, data);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`. Will mint (or burn) if `from`\n     * (or `to`) is the zero address.\n     *\n     * Emits a {TransferSingle} event if the arrays contain one element, and {TransferBatch} otherwise.\n     *\n     * Requirements:\n     *\n     * - If `to` refers to a smart contract, it must implement either {IERC1155Receiver-onERC1155Received}\n     *   or {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\n     * - `ids` and `values` must have the same length.\n     *\n     * NOTE: The ERC-1155 acceptance check is not performed in this function. See {_updateWithAcceptanceCheck} instead.\n     */\n    function _update(address from, address to, uint256[] memory ids, uint256[] memory values) internal virtual {\n        if (ids.length != values.length) {\n            revert ERC1155InvalidArrayLength(ids.length, values.length);\n        }\n\n        address operator = _msgSender();\n\n        for (uint256 i = 0; i < ids.length; ++i) {\n            uint256 id = ids.unsafeMemoryAccess(i);\n            uint256 value = values.unsafeMemoryAccess(i);\n\n            if (from != address(0)) {\n                uint256 fromBalance = _balances[id][from];\n                if (fromBalance < value) {\n                    revert ERC1155InsufficientBalance(from, fromBalance, value, id);\n                }\n                unchecked {\n                    // Overflow not possible: value <= fromBalance\n                    _balances[id][from] = fromBalance - value;\n                }\n            }\n\n            if (to != address(0)) {\n                _balances[id][to] += value;\n            }\n        }\n\n        if (ids.length == 1) {\n            uint256 id = ids.unsafeMemoryAccess(0);\n            uint256 value = values.unsafeMemoryAccess(0);\n            emit TransferSingle(operator, from, to, id, value);\n        } else {\n            emit TransferBatch(operator, from, to, ids, values);\n        }\n    }\n\n    /**\n     * @dev Version of {_update} that performs the token acceptance check by calling\n     * {IERC1155Receiver-onERC1155Received} or {IERC1155Receiver-onERC1155BatchReceived} on the receiver address if it\n     * contains code (eg. is a smart contract at the moment of execution).\n     *\n     * IMPORTANT: Overriding this function is discouraged because it poses a reentrancy risk from the receiver. So any\n     * update to the contract state after this function would break the check-effect-interaction pattern. Consider\n     * overriding {_update} instead.\n     */\n    function _updateWithAcceptanceCheck(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) internal virtual {\n        _update(from, to, ids, values);\n        if (to != address(0)) {\n            address operator = _msgSender();\n            if (ids.length == 1) {\n                uint256 id = ids.unsafeMemoryAccess(0);\n                uint256 value = values.unsafeMemoryAccess(0);\n                ERC1155Utils.checkOnERC1155Received(operator, from, to, id, value, data);\n            } else {\n                ERC1155Utils.checkOnERC1155BatchReceived(operator, from, to, ids, values, data);\n            }\n        }\n    }\n\n    /**\n     * @dev Transfers a `value` tokens of token type `id` from `from` to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of tokens of type `id` of at least `value` amount.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function _safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value);\n        _updateWithAcceptanceCheck(from, to, ids, values, data);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     * - `ids` and `values` must have the same length.\n     */\n    function _safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        _updateWithAcceptanceCheck(from, to, ids, values, data);\n    }\n\n    /**\n     * @dev Sets a new URI for all token types, by relying on the token type ID\n     * substitution mechanism\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the ERC].\n     *\n     * By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n     * URI or any of the values in the JSON file at said URI will be replaced by\n     * clients with the token type ID.\n     *\n     * For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n     * interpreted by clients as\n     * `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n     * for token type ID 0x4cce0.\n     *\n     * See {uri}.\n     *\n     * Because these URIs cannot be meaningfully represented by the {URI} event,\n     * this function emits no events.\n     */\n    function _setURI(string memory newuri) internal virtual {\n        _uri = newuri;\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens of type `id`, and assigns them to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function _mint(address to, uint256 id, uint256 value, bytes memory data) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value);\n        _updateWithAcceptanceCheck(address(0), to, ids, values, data);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `ids` and `values` must have the same length.\n     * - `to` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function _mintBatch(address to, uint256[] memory ids, uint256[] memory values, bytes memory data) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        _updateWithAcceptanceCheck(address(0), to, ids, values, data);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens of type `id` from `from`\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `from` must have at least `value` amount of tokens of type `id`.\n     */\n    function _burn(address from, uint256 id, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value);\n        _updateWithAcceptanceCheck(from, address(0), ids, values, \"\");\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `from` must have at least `value` amount of tokens of type `id`.\n     * - `ids` and `values` must have the same length.\n     */\n    function _burnBatch(address from, uint256[] memory ids, uint256[] memory values) internal {\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        _updateWithAcceptanceCheck(from, address(0), ids, values, \"\");\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Emits an {ApprovalForAll} event.\n     *\n     * Requirements:\n     *\n     * - `operator` cannot be the zero address.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        if (operator == address(0)) {\n            revert ERC1155InvalidOperator(address(0));\n        }\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Creates an array in memory with only one value for each of the elements provided.\n     */\n    function _asSingletonArrays(\n        uint256 element1,\n        uint256 element2\n    ) private pure returns (uint256[] memory array1, uint256[] memory array2) {\n        assembly (\"memory-safe\") {\n            // Load the free memory pointer\n            array1 := mload(0x40)\n            // Set array length to 1\n            mstore(array1, 1)\n            // Store the single element at the next word after the length (where content starts)\n            mstore(add(array1, 0x20), element1)\n\n            // Repeat for next array locating it right after the first array\n            array2 := add(array1, 0x40)\n            mstore(array2, 1)\n            mstore(add(array2, 0x20), element2)\n\n            // Update the free memory pointer by pointing after the second array\n            mstore(0x40, add(array2, 0x40))\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC1155/extensions/ERC1155Burnable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC1155} from \"../ERC1155.sol\";\n\n/**\n * @dev Extension of {ERC1155} that allows token holders to destroy both their\n * own tokens and those that they have been approved to use.\n */\nabstract contract ERC1155Burnable is ERC1155 {\n    function burn(address account, uint256 id, uint256 value) public virtual {\n        if (account != _msgSender() && !isApprovedForAll(account, _msgSender())) {\n            revert ERC1155MissingApprovalForAll(_msgSender(), account);\n        }\n\n        _burn(account, id, value);\n    }\n\n    function burnBatch(address account, uint256[] memory ids, uint256[] memory values) public virtual {\n        if (account != _msgSender() && !isApprovedForAll(account, _msgSender())) {\n            revert ERC1155MissingApprovalForAll(_msgSender(), account);\n        }\n\n        _burnBatch(account, ids, values);\n    }\n}\n"},"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Pausable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC1155/extensions/ERC1155Pausable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC1155} from \"../ERC1155.sol\";\nimport {Pausable} from \"../../../utils/Pausable.sol\";\n\n/**\n * @dev ERC-1155 token with pausable token transfers, minting and burning.\n *\n * Useful for scenarios such as preventing trades until the end of an evaluation\n * period, or having an emergency switch for freezing all token transfers in the\n * event of a large bug.\n *\n * IMPORTANT: This contract does not include public pause and unpause functions. In\n * addition to inheriting this contract, you must define both functions, invoking the\n * {Pausable-_pause} and {Pausable-_unpause} internal functions, with appropriate\n * access control, e.g. using {AccessControl} or {Ownable}. Not doing so will\n * make the contract pause mechanism of the contract unreachable, and thus unusable.\n */\nabstract contract ERC1155Pausable is ERC1155, Pausable {\n    /**\n     * @dev See {ERC1155-_update}.\n     *\n     * Requirements:\n     *\n     * - the contract must not be paused.\n     */\n    function _update(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values\n    ) internal virtual override whenNotPaused {\n        super._update(from, to, ids, values);\n    }\n}\n"},"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC1155/extensions/ERC1155Supply.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC1155} from \"../ERC1155.sol\";\nimport {Arrays} from \"../../../utils/Arrays.sol\";\n\n/**\n * @dev Extension of ERC-1155 that adds tracking of total supply per id.\n *\n * Useful for scenarios where Fungible and Non-fungible tokens have to be\n * clearly identified. Note: While a totalSupply of 1 might mean the\n * corresponding is an NFT, there is no guarantees that no other token with the\n * same id are not going to be minted.\n *\n * NOTE: This contract implies a global limit of 2**256 - 1 to the number of tokens\n * that can be minted.\n *\n * CAUTION: This extension should not be added in an upgrade to an already deployed contract.\n */\nabstract contract ERC1155Supply is ERC1155 {\n    using Arrays for uint256[];\n\n    mapping(uint256 id => uint256) private _totalSupply;\n    uint256 private _totalSupplyAll;\n\n    /**\n     * @dev Total value of tokens in with a given id.\n     */\n    function totalSupply(uint256 id) public view virtual returns (uint256) {\n        return _totalSupply[id];\n    }\n\n    /**\n     * @dev Total value of tokens.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupplyAll;\n    }\n\n    /**\n     * @dev Indicates whether any token exist with a given id, or not.\n     */\n    function exists(uint256 id) public view virtual returns (bool) {\n        return totalSupply(id) > 0;\n    }\n\n    /**\n     * @dev See {ERC1155-_update}.\n     */\n    function _update(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values\n    ) internal virtual override {\n        super._update(from, to, ids, values);\n\n        if (from == address(0)) {\n            uint256 totalMintValue = 0;\n            for (uint256 i = 0; i < ids.length; ++i) {\n                uint256 value = values.unsafeMemoryAccess(i);\n                // Overflow check required: The rest of the code assumes that totalSupply never overflows\n                _totalSupply[ids.unsafeMemoryAccess(i)] += value;\n                totalMintValue += value;\n            }\n            // Overflow check required: The rest of the code assumes that totalSupplyAll never overflows\n            _totalSupplyAll += totalMintValue;\n        }\n\n        if (to == address(0)) {\n            uint256 totalBurnValue = 0;\n            for (uint256 i = 0; i < ids.length; ++i) {\n                uint256 value = values.unsafeMemoryAccess(i);\n\n                unchecked {\n                    // Overflow not possible: values[i] <= balanceOf(from, ids[i]) <= totalSupply(ids[i])\n                    _totalSupply[ids.unsafeMemoryAccess(i)] -= value;\n                    // Overflow not possible: sum_i(values[i]) <= sum_i(totalSupply(ids[i])) <= totalSupplyAll\n                    totalBurnValue += value;\n                }\n            }\n            unchecked {\n                // Overflow not possible: totalBurnValue = sum_i(values[i]) <= sum_i(totalSupply(ids[i])) <= totalSupplyAll\n                _totalSupplyAll -= totalBurnValue;\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155URIStorage.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC1155/extensions/ERC1155URIStorage.sol)\n\npragma solidity ^0.8.20;\n\nimport {Strings} from \"../../../utils/Strings.sol\";\nimport {ERC1155} from \"../ERC1155.sol\";\n\n/**\n * @dev ERC-1155 token with storage based token URI management.\n * Inspired by the {ERC721URIStorage} extension\n */\nabstract contract ERC1155URIStorage is ERC1155 {\n    using Strings for uint256;\n\n    // Optional base URI\n    string private _baseURI = \"\";\n\n    // Optional mapping for token URIs\n    mapping(uint256 tokenId => string) private _tokenURIs;\n\n    /**\n     * @dev See {IERC1155MetadataURI-uri}.\n     *\n     * This implementation returns the concatenation of the `_baseURI`\n     * and the token-specific uri if the latter is set\n     *\n     * This enables the following behaviors:\n     *\n     * - if `_tokenURIs[tokenId]` is set, then the result is the concatenation\n     *   of `_baseURI` and `_tokenURIs[tokenId]` (keep in mind that `_baseURI`\n     *   is empty per default);\n     *\n     * - if `_tokenURIs[tokenId]` is NOT set then we fallback to `super.uri()`\n     *   which in most cases will contain `ERC1155._uri`;\n     *\n     * - if `_tokenURIs[tokenId]` is NOT set, and if the parents do not have a\n     *   uri value set, then the result is empty.\n     */\n    function uri(uint256 tokenId) public view virtual override returns (string memory) {\n        string memory tokenURI = _tokenURIs[tokenId];\n\n        // If token URI is set, concatenate base URI and tokenURI (via string.concat).\n        return bytes(tokenURI).length > 0 ? string.concat(_baseURI, tokenURI) : super.uri(tokenId);\n    }\n\n    /**\n     * @dev Sets `tokenURI` as the tokenURI of `tokenId`.\n     */\n    function _setURI(uint256 tokenId, string memory tokenURI) internal virtual {\n        _tokenURIs[tokenId] = tokenURI;\n        emit URI(uri(tokenId), tokenId);\n    }\n\n    /**\n     * @dev Sets `baseURI` as the `_baseURI` for all tokens\n     */\n    function _setBaseURI(string memory baseURI) internal virtual {\n        _baseURI = baseURI;\n    }\n}\n"},"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC1155/extensions/IERC1155MetadataURI.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC1155} from \"../IERC1155.sol\";\n\n/**\n * @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n * in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[ERC].\n */\ninterface IERC1155MetadataURI is IERC1155 {\n    /**\n     * @dev Returns the URI for token type `id`.\n     *\n     * If the `\\{id\\}` substring is present in the URI, it must be replaced by\n     * clients with the actual token type ID.\n     */\n    function uri(uint256 id) external view returns (string memory);\n}\n"},"@openzeppelin/contracts/token/ERC1155/IERC1155.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC1155/IERC1155.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC-1155 compliant contract, as defined in the\n * https://eips.ethereum.org/EIPS/eip-1155[ERC].\n */\ninterface IERC1155 is IERC165 {\n    /**\n     * @dev Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\n     */\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\n\n    /**\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n     * transfers.\n     */\n    event TransferBatch(\n        address indexed operator,\n        address indexed from,\n        address indexed to,\n        uint256[] ids,\n        uint256[] values\n    );\n\n    /**\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n     * `approved`.\n     */\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\n\n    /**\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n     *\n     * If an {URI} event was emitted for `id`, the standard\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n     * returned by {IERC1155MetadataURI-uri}.\n     */\n    event URI(string value, uint256 indexed id);\n\n    /**\n     * @dev Returns the value of tokens of token type `id` owned by `account`.\n     */\n    function balanceOf(address account, uint256 id) external view returns (uint256);\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(\n        address[] calldata accounts,\n        uint256[] calldata ids\n    ) external view returns (uint256[] memory);\n\n    /**\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n     *\n     * Emits an {ApprovalForAll} event.\n     *\n     * Requirements:\n     *\n     * - `operator` cannot be the zero address.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n     *\n     * See {setApprovalForAll}.\n     */\n    function isApprovedForAll(address account, address operator) external view returns (bool);\n\n    /**\n     * @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`.\n     *\n     * WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n     * to an untrusted contract, when invoking {onERC1155Received} on the receiver.\n     * Ensure to follow the checks-effects-interactions pattern and consider employing\n     * reentrancy guards when interacting with untrusted contracts.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n     * - `from` must have a balance of tokens of type `id` of at least `value` amount.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes calldata data) external;\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n     *\n     * WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n     * to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver.\n     * Ensure to follow the checks-effects-interactions pattern and consider employing\n     * reentrancy guards when interacting with untrusted contracts.\n     *\n     * Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments.\n     *\n     * Requirements:\n     *\n     * - `ids` and `values` must have the same length.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external;\n}\n"},"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC1155/IERC1155Receiver.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Interface that must be implemented by smart contracts in order to receive\n * ERC-1155 token transfers.\n */\ninterface IERC1155Receiver is IERC165 {\n    /**\n     * @dev Handles the receipt of a single ERC-1155 token type. This function is\n     * called at the end of a `safeTransferFrom` after the balance has been updated.\n     *\n     * NOTE: To accept the transfer, this must return\n     * `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n     * (i.e. 0xf23a6e61, or its own function selector).\n     *\n     * @param operator The address which initiated the transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param id The ID of the token being transferred\n     * @param value The amount of tokens being transferred\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed\n     */\n    function onERC1155Received(\n        address operator,\n        address from,\n        uint256 id,\n        uint256 value,\n        bytes calldata data\n    ) external returns (bytes4);\n\n    /**\n     * @dev Handles the receipt of a multiple ERC-1155 token types. This function\n     * is called at the end of a `safeBatchTransferFrom` after the balances have\n     * been updated.\n     *\n     * NOTE: To accept the transfer(s), this must return\n     * `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n     * (i.e. 0xbc197c81, or its own function selector).\n     *\n     * @param operator The address which initiated the batch transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param ids An array containing ids of each token being transferred (order and length must match values array)\n     * @param values An array containing amounts of each token being transferred (order and length must match ids array)\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed\n     */\n    function onERC1155BatchReceived(\n        address operator,\n        address from,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"},"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC1155/utils/ERC1155Utils.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC1155Receiver} from \"../IERC1155Receiver.sol\";\nimport {IERC1155Errors} from \"../../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Library that provide common ERC-1155 utility functions.\n *\n * See https://eips.ethereum.org/EIPS/eip-1155[ERC-1155].\n *\n * _Available since v5.1._\n */\nlibrary ERC1155Utils {\n    /**\n     * @dev Performs an acceptance check for the provided `operator` by calling {IERC1155-onERC1155Received}\n     * on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n     *\n     * The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n     * Otherwise, the recipient must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value to accept\n     * the transfer.\n     */\n    function checkOnERC1155Received(\n        address operator,\n        address from,\n        address to,\n        uint256 id,\n        uint256 value,\n        bytes memory data\n    ) internal {\n        if (to.code.length > 0) {\n            try IERC1155Receiver(to).onERC1155Received(operator, from, id, value, data) returns (bytes4 response) {\n                if (response != IERC1155Receiver.onERC1155Received.selector) {\n                    // Tokens rejected\n                    revert IERC1155Errors.ERC1155InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    // non-IERC1155Receiver implementer\n                    revert IERC1155Errors.ERC1155InvalidReceiver(to);\n                } else {\n                    assembly (\"memory-safe\") {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @dev Performs a batch acceptance check for the provided `operator` by calling {IERC1155-onERC1155BatchReceived}\n     * on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n     *\n     * The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n     * Otherwise, the recipient must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value to accept\n     * the transfer.\n     */\n    function checkOnERC1155BatchReceived(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) internal {\n        if (to.code.length > 0) {\n            try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, values, data) returns (\n                bytes4 response\n            ) {\n                if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {\n                    // Tokens rejected\n                    revert IERC1155Errors.ERC1155InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    // non-IERC1155Receiver implementer\n                    revert IERC1155Errors.ERC1155InvalidReceiver(to);\n                } else {\n                    assembly (\"memory-safe\") {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Arrays.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Arrays.sol)\n// This file was procedurally generated from scripts/generate/templates/Arrays.js.\n\npragma solidity ^0.8.20;\n\nimport {Comparators} from \"./Comparators.sol\";\nimport {SlotDerivation} from \"./SlotDerivation.sol\";\nimport {StorageSlot} from \"./StorageSlot.sol\";\nimport {Math} from \"./math/Math.sol\";\n\n/**\n * @dev Collection of functions related to array types.\n */\nlibrary Arrays {\n    using SlotDerivation for bytes32;\n    using StorageSlot for bytes32;\n\n    /**\n     * @dev Sort an array of uint256 (in memory) following the provided comparator function.\n     *\n     * This function does the sorting \"in place\", meaning that it overrides the input. The object is returned for\n     * convenience, but that returned value can be discarded safely if the caller has a memory pointer to the array.\n     *\n     * NOTE: this function's cost is `O(n · log(n))` in average and `O(n²)` in the worst case, with n the length of the\n     * array. Using it in view functions that are executed through `eth_call` is safe, but one should be very careful\n     * when executing this as part of a transaction. If the array being sorted is too large, the sort operation may\n     * consume more gas than is available in a block, leading to potential DoS.\n     *\n     * IMPORTANT: Consider memory side-effects when using custom comparator functions that access memory in an unsafe way.\n     */\n    function sort(\n        uint256[] memory array,\n        function(uint256, uint256) pure returns (bool) comp\n    ) internal pure returns (uint256[] memory) {\n        _quickSort(_begin(array), _end(array), comp);\n        return array;\n    }\n\n    /**\n     * @dev Variant of {sort} that sorts an array of uint256 in increasing order.\n     */\n    function sort(uint256[] memory array) internal pure returns (uint256[] memory) {\n        sort(array, Comparators.lt);\n        return array;\n    }\n\n    /**\n     * @dev Sort an array of address (in memory) following the provided comparator function.\n     *\n     * This function does the sorting \"in place\", meaning that it overrides the input. The object is returned for\n     * convenience, but that returned value can be discarded safely if the caller has a memory pointer to the array.\n     *\n     * NOTE: this function's cost is `O(n · log(n))` in average and `O(n²)` in the worst case, with n the length of the\n     * array. Using it in view functions that are executed through `eth_call` is safe, but one should be very careful\n     * when executing this as part of a transaction. If the array being sorted is too large, the sort operation may\n     * consume more gas than is available in a block, leading to potential DoS.\n     *\n     * IMPORTANT: Consider memory side-effects when using custom comparator functions that access memory in an unsafe way.\n     */\n    function sort(\n        address[] memory array,\n        function(address, address) pure returns (bool) comp\n    ) internal pure returns (address[] memory) {\n        sort(_castToUint256Array(array), _castToUint256Comp(comp));\n        return array;\n    }\n\n    /**\n     * @dev Variant of {sort} that sorts an array of address in increasing order.\n     */\n    function sort(address[] memory array) internal pure returns (address[] memory) {\n        sort(_castToUint256Array(array), Comparators.lt);\n        return array;\n    }\n\n    /**\n     * @dev Sort an array of bytes32 (in memory) following the provided comparator function.\n     *\n     * This function does the sorting \"in place\", meaning that it overrides the input. The object is returned for\n     * convenience, but that returned value can be discarded safely if the caller has a memory pointer to the array.\n     *\n     * NOTE: this function's cost is `O(n · log(n))` in average and `O(n²)` in the worst case, with n the length of the\n     * array. Using it in view functions that are executed through `eth_call` is safe, but one should be very careful\n     * when executing this as part of a transaction. If the array being sorted is too large, the sort operation may\n     * consume more gas than is available in a block, leading to potential DoS.\n     *\n     * IMPORTANT: Consider memory side-effects when using custom comparator functions that access memory in an unsafe way.\n     */\n    function sort(\n        bytes32[] memory array,\n        function(bytes32, bytes32) pure returns (bool) comp\n    ) internal pure returns (bytes32[] memory) {\n        sort(_castToUint256Array(array), _castToUint256Comp(comp));\n        return array;\n    }\n\n    /**\n     * @dev Variant of {sort} that sorts an array of bytes32 in increasing order.\n     */\n    function sort(bytes32[] memory array) internal pure returns (bytes32[] memory) {\n        sort(_castToUint256Array(array), Comparators.lt);\n        return array;\n    }\n\n    /**\n     * @dev Performs a quick sort of a segment of memory. The segment sorted starts at `begin` (inclusive), and stops\n     * at end (exclusive). Sorting follows the `comp` comparator.\n     *\n     * Invariant: `begin <= end`. This is the case when initially called by {sort} and is preserved in subcalls.\n     *\n     * IMPORTANT: Memory locations between `begin` and `end` are not validated/zeroed. This function should\n     * be used only if the limits are within a memory array.\n     */\n    function _quickSort(uint256 begin, uint256 end, function(uint256, uint256) pure returns (bool) comp) private pure {\n        unchecked {\n            if (end - begin < 0x40) return;\n\n            // Use first element as pivot\n            uint256 pivot = _mload(begin);\n            // Position where the pivot should be at the end of the loop\n            uint256 pos = begin;\n\n            for (uint256 it = begin + 0x20; it < end; it += 0x20) {\n                if (comp(_mload(it), pivot)) {\n                    // If the value stored at the iterator's position comes before the pivot, we increment the\n                    // position of the pivot and move the value there.\n                    pos += 0x20;\n                    _swap(pos, it);\n                }\n            }\n\n            _swap(begin, pos); // Swap pivot into place\n            _quickSort(begin, pos, comp); // Sort the left side of the pivot\n            _quickSort(pos + 0x20, end, comp); // Sort the right side of the pivot\n        }\n    }\n\n    /**\n     * @dev Pointer to the memory location of the first element of `array`.\n     */\n    function _begin(uint256[] memory array) private pure returns (uint256 ptr) {\n        assembly (\"memory-safe\") {\n            ptr := add(array, 0x20)\n        }\n    }\n\n    /**\n     * @dev Pointer to the memory location of the first memory word (32bytes) after `array`. This is the memory word\n     * that comes just after the last element of the array.\n     */\n    function _end(uint256[] memory array) private pure returns (uint256 ptr) {\n        unchecked {\n            return _begin(array) + array.length * 0x20;\n        }\n    }\n\n    /**\n     * @dev Load memory word (as a uint256) at location `ptr`.\n     */\n    function _mload(uint256 ptr) private pure returns (uint256 value) {\n        assembly {\n            value := mload(ptr)\n        }\n    }\n\n    /**\n     * @dev Swaps the elements memory location `ptr1` and `ptr2`.\n     */\n    function _swap(uint256 ptr1, uint256 ptr2) private pure {\n        assembly {\n            let value1 := mload(ptr1)\n            let value2 := mload(ptr2)\n            mstore(ptr1, value2)\n            mstore(ptr2, value1)\n        }\n    }\n\n    /// @dev Helper: low level cast address memory array to uint256 memory array\n    function _castToUint256Array(address[] memory input) private pure returns (uint256[] memory output) {\n        assembly {\n            output := input\n        }\n    }\n\n    /// @dev Helper: low level cast bytes32 memory array to uint256 memory array\n    function _castToUint256Array(bytes32[] memory input) private pure returns (uint256[] memory output) {\n        assembly {\n            output := input\n        }\n    }\n\n    /// @dev Helper: low level cast address comp function to uint256 comp function\n    function _castToUint256Comp(\n        function(address, address) pure returns (bool) input\n    ) private pure returns (function(uint256, uint256) pure returns (bool) output) {\n        assembly {\n            output := input\n        }\n    }\n\n    /// @dev Helper: low level cast bytes32 comp function to uint256 comp function\n    function _castToUint256Comp(\n        function(bytes32, bytes32) pure returns (bool) input\n    ) private pure returns (function(uint256, uint256) pure returns (bool) output) {\n        assembly {\n            output := input\n        }\n    }\n\n    /**\n     * @dev Searches a sorted `array` and returns the first index that contains\n     * a value greater or equal to `element`. If no such index exists (i.e. all\n     * values in the array are strictly less than `element`), the array length is\n     * returned. Time complexity O(log n).\n     *\n     * NOTE: The `array` is expected to be sorted in ascending order, and to\n     * contain no repeated elements.\n     *\n     * IMPORTANT: Deprecated. This implementation behaves as {lowerBound} but lacks\n     * support for repeated elements in the array. The {lowerBound} function should\n     * be used instead.\n     */\n    function findUpperBound(uint256[] storage array, uint256 element) internal view returns (uint256) {\n        uint256 low = 0;\n        uint256 high = array.length;\n\n        if (high == 0) {\n            return 0;\n        }\n\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n\n            // Note that mid will always be strictly less than high (i.e. it will be a valid array index)\n            // because Math.average rounds towards zero (it does integer division with truncation).\n            if (unsafeAccess(array, mid).value > element) {\n                high = mid;\n            } else {\n                low = mid + 1;\n            }\n        }\n\n        // At this point `low` is the exclusive upper bound. We will return the inclusive upper bound.\n        if (low > 0 && unsafeAccess(array, low - 1).value == element) {\n            return low - 1;\n        } else {\n            return low;\n        }\n    }\n\n    /**\n     * @dev Searches an `array` sorted in ascending order and returns the first\n     * index that contains a value greater or equal than `element`. If no such index\n     * exists (i.e. all values in the array are strictly less than `element`), the array\n     * length is returned. Time complexity O(log n).\n     *\n     * See C++'s https://en.cppreference.com/w/cpp/algorithm/lower_bound[lower_bound].\n     */\n    function lowerBound(uint256[] storage array, uint256 element) internal view returns (uint256) {\n        uint256 low = 0;\n        uint256 high = array.length;\n\n        if (high == 0) {\n            return 0;\n        }\n\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n\n            // Note that mid will always be strictly less than high (i.e. it will be a valid array index)\n            // because Math.average rounds towards zero (it does integer division with truncation).\n            if (unsafeAccess(array, mid).value < element) {\n                // this cannot overflow because mid < high\n                unchecked {\n                    low = mid + 1;\n                }\n            } else {\n                high = mid;\n            }\n        }\n\n        return low;\n    }\n\n    /**\n     * @dev Searches an `array` sorted in ascending order and returns the first\n     * index that contains a value strictly greater than `element`. If no such index\n     * exists (i.e. all values in the array are strictly less than `element`), the array\n     * length is returned. Time complexity O(log n).\n     *\n     * See C++'s https://en.cppreference.com/w/cpp/algorithm/upper_bound[upper_bound].\n     */\n    function upperBound(uint256[] storage array, uint256 element) internal view returns (uint256) {\n        uint256 low = 0;\n        uint256 high = array.length;\n\n        if (high == 0) {\n            return 0;\n        }\n\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n\n            // Note that mid will always be strictly less than high (i.e. it will be a valid array index)\n            // because Math.average rounds towards zero (it does integer division with truncation).\n            if (unsafeAccess(array, mid).value > element) {\n                high = mid;\n            } else {\n                // this cannot overflow because mid < high\n                unchecked {\n                    low = mid + 1;\n                }\n            }\n        }\n\n        return low;\n    }\n\n    /**\n     * @dev Same as {lowerBound}, but with an array in memory.\n     */\n    function lowerBoundMemory(uint256[] memory array, uint256 element) internal pure returns (uint256) {\n        uint256 low = 0;\n        uint256 high = array.length;\n\n        if (high == 0) {\n            return 0;\n        }\n\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n\n            // Note that mid will always be strictly less than high (i.e. it will be a valid array index)\n            // because Math.average rounds towards zero (it does integer division with truncation).\n            if (unsafeMemoryAccess(array, mid) < element) {\n                // this cannot overflow because mid < high\n                unchecked {\n                    low = mid + 1;\n                }\n            } else {\n                high = mid;\n            }\n        }\n\n        return low;\n    }\n\n    /**\n     * @dev Same as {upperBound}, but with an array in memory.\n     */\n    function upperBoundMemory(uint256[] memory array, uint256 element) internal pure returns (uint256) {\n        uint256 low = 0;\n        uint256 high = array.length;\n\n        if (high == 0) {\n            return 0;\n        }\n\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n\n            // Note that mid will always be strictly less than high (i.e. it will be a valid array index)\n            // because Math.average rounds towards zero (it does integer division with truncation).\n            if (unsafeMemoryAccess(array, mid) > element) {\n                high = mid;\n            } else {\n                // this cannot overflow because mid < high\n                unchecked {\n                    low = mid + 1;\n                }\n            }\n        }\n\n        return low;\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(address[] storage arr, uint256 pos) internal pure returns (StorageSlot.AddressSlot storage) {\n        bytes32 slot;\n        assembly (\"memory-safe\") {\n            slot := arr.slot\n        }\n        return slot.deriveArray().offset(pos).getAddressSlot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(bytes32[] storage arr, uint256 pos) internal pure returns (StorageSlot.Bytes32Slot storage) {\n        bytes32 slot;\n        assembly (\"memory-safe\") {\n            slot := arr.slot\n        }\n        return slot.deriveArray().offset(pos).getBytes32Slot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(uint256[] storage arr, uint256 pos) internal pure returns (StorageSlot.Uint256Slot storage) {\n        bytes32 slot;\n        assembly (\"memory-safe\") {\n            slot := arr.slot\n        }\n        return slot.deriveArray().offset(pos).getUint256Slot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeMemoryAccess(address[] memory arr, uint256 pos) internal pure returns (address res) {\n        assembly {\n            res := mload(add(add(arr, 0x20), mul(pos, 0x20)))\n        }\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeMemoryAccess(bytes32[] memory arr, uint256 pos) internal pure returns (bytes32 res) {\n        assembly {\n            res := mload(add(add(arr, 0x20), mul(pos, 0x20)))\n        }\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeMemoryAccess(uint256[] memory arr, uint256 pos) internal pure returns (uint256 res) {\n        assembly {\n            res := mload(add(add(arr, 0x20), mul(pos, 0x20)))\n        }\n    }\n\n    /**\n     * @dev Helper to set the length of an dynamic array. Directly writing to `.length` is forbidden.\n     *\n     * WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased.\n     */\n    function unsafeSetLength(address[] storage array, uint256 len) internal {\n        assembly (\"memory-safe\") {\n            sstore(array.slot, len)\n        }\n    }\n\n    /**\n     * @dev Helper to set the length of an dynamic array. Directly writing to `.length` is forbidden.\n     *\n     * WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased.\n     */\n    function unsafeSetLength(bytes32[] storage array, uint256 len) internal {\n        assembly (\"memory-safe\") {\n            sstore(array.slot, len)\n        }\n    }\n\n    /**\n     * @dev Helper to set the length of an dynamic array. Directly writing to `.length` is forbidden.\n     *\n     * WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased.\n     */\n    function unsafeSetLength(uint256[] storage array, uint256 len) internal {\n        assembly (\"memory-safe\") {\n            sstore(array.slot, len)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Comparators.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Comparators.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides a set of functions to compare values.\n *\n * _Available since v5.1._\n */\nlibrary Comparators {\n    function lt(uint256 a, uint256 b) internal pure returns (bool) {\n        return a < b;\n    }\n\n    function gt(uint256 a, uint256 b) internal pure returns (bool) {\n        return a > b;\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\nimport {Panic} from \"../Panic.sol\";\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an success flag (no overflow).\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an success flag (no overflow).\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an success flag (no overflow).\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, uint256 a, uint256 b) internal pure returns (uint256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * SafeCast.toUint(condition));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n\n        // The following calculation ensures accurate ceiling division without overflow.\n        // Since a is non-zero, (a - 1) / b will not overflow.\n        // The largest possible result occurs when (a - 1) / b is type(uint256).max,\n        // but the largest value we can obtain is type(uint256).max - 1, which happens\n        // when a = type(uint256).max and b = 1.\n        unchecked {\n            return SafeCast.toUint(a > 0) * ((a - 1) / b + 1);\n        }\n    }\n\n    /**\n     * @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     *\n     * Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2²⁵⁶ and mod 2²⁵⁶ - 1, then use\n            // the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2²⁵⁶ + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2²⁵⁶. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                Panic.panic(ternary(denominator == 0, Panic.DIVISION_BY_ZERO, Panic.UNDER_OVERFLOW));\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2²⁵⁶ / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2²⁵⁶. Now that denominator is an odd number, it has an inverse modulo 2²⁵⁶ such\n            // that denominator * inv ≡ 1 mod 2²⁵⁶. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv ≡ 1 mod 2⁴.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹⁶\n            inverse *= 2 - denominator * inverse; // inverse mod 2³²\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁶⁴\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹²⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2²⁵⁶\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2²⁵⁶. Since the preconditions guarantee that the outcome is\n            // less than 2²⁵⁶, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @dev Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        return mulDiv(x, y, denominator) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0);\n    }\n\n    /**\n     * @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n     *\n     * If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n     * If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n     *\n     * If the input value is not inversible, 0 is returned.\n     *\n     * NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n     * inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}.\n     */\n    function invMod(uint256 a, uint256 n) internal pure returns (uint256) {\n        unchecked {\n            if (n == 0) return 0;\n\n            // The inverse modulo is calculated using the Extended Euclidean Algorithm (iterative version)\n            // Used to compute integers x and y such that: ax + ny = gcd(a, n).\n            // When the gcd is 1, then the inverse of a modulo n exists and it's x.\n            // ax + ny = 1\n            // ax = 1 + (-y)n\n            // ax ≡ 1 (mod n) # x is the inverse of a modulo n\n\n            // If the remainder is 0 the gcd is n right away.\n            uint256 remainder = a % n;\n            uint256 gcd = n;\n\n            // Therefore the initial coefficients are:\n            // ax + ny = gcd(a, n) = n\n            // 0a + 1n = n\n            int256 x = 0;\n            int256 y = 1;\n\n            while (remainder != 0) {\n                uint256 quotient = gcd / remainder;\n\n                (gcd, remainder) = (\n                    // The old remainder is the next gcd to try.\n                    remainder,\n                    // Compute the next remainder.\n                    // Can't overflow given that (a % gcd) * (gcd // (a % gcd)) <= gcd\n                    // where gcd is at most n (capped to type(uint256).max)\n                    gcd - remainder * quotient\n                );\n\n                (x, y) = (\n                    // Increment the coefficient of a.\n                    y,\n                    // Decrement the coefficient of n.\n                    // Can overflow, but the result is casted to uint256 so that the\n                    // next value of y is \"wrapped around\" to a value between 0 and n - 1.\n                    x - y * int256(quotient)\n                );\n            }\n\n            if (gcd != 1) return 0; // No inverse exists.\n            return ternary(x < 0, n - uint256(-x), uint256(x)); // Wrap the result if it's negative.\n        }\n    }\n\n    /**\n     * @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n     *\n     * From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n     * prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n     * `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n     *\n     * NOTE: this function does NOT check that `p` is a prime greater than `2`.\n     */\n    function invModPrime(uint256 a, uint256 p) internal view returns (uint256) {\n        unchecked {\n            return Math.modExp(a, p - 2, p);\n        }\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n     *\n     * Requirements:\n     * - modulus can't be zero\n     * - underlying staticcall to precompile must succeed\n     *\n     * IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n     * sure the chain you're using it on supports the precompiled contract for modular exponentiation\n     * at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n     * the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n     * interpreted as 0.\n     */\n    function modExp(uint256 b, uint256 e, uint256 m) internal view returns (uint256) {\n        (bool success, uint256 result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n     * It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n     * to operate modulo 0 or if the underlying precompile reverted.\n     *\n     * IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n     * you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n     * https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n     * of a revert, but the result may be incorrectly interpreted as 0.\n     */\n    function tryModExp(uint256 b, uint256 e, uint256 m) internal view returns (bool success, uint256 result) {\n        if (m == 0) return (false, 0);\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            // | Offset    | Content    | Content (Hex)                                                      |\n            // |-----------|------------|--------------------------------------------------------------------|\n            // | 0x00:0x1f | size of b  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x20:0x3f | size of e  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x40:0x5f | size of m  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x60:0x7f | value of b | 0x<.............................................................b> |\n            // | 0x80:0x9f | value of e | 0x<.............................................................e> |\n            // | 0xa0:0xbf | value of m | 0x<.............................................................m> |\n            mstore(ptr, 0x20)\n            mstore(add(ptr, 0x20), 0x20)\n            mstore(add(ptr, 0x40), 0x20)\n            mstore(add(ptr, 0x60), b)\n            mstore(add(ptr, 0x80), e)\n            mstore(add(ptr, 0xa0), m)\n\n            // Given the result < m, it's guaranteed to fit in 32 bytes,\n            // so we can use the memory scratch space located at offset 0.\n            success := staticcall(gas(), 0x05, ptr, 0xc0, 0x00, 0x20)\n            result := mload(0x00)\n        }\n    }\n\n    /**\n     * @dev Variant of {modExp} that supports inputs of arbitrary length.\n     */\n    function modExp(bytes memory b, bytes memory e, bytes memory m) internal view returns (bytes memory) {\n        (bool success, bytes memory result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Variant of {tryModExp} that supports inputs of arbitrary length.\n     */\n    function tryModExp(\n        bytes memory b,\n        bytes memory e,\n        bytes memory m\n    ) internal view returns (bool success, bytes memory result) {\n        if (_zeroBytes(m)) return (false, new bytes(0));\n\n        uint256 mLen = m.length;\n\n        // Encode call args in result and move the free memory pointer\n        result = abi.encodePacked(b.length, e.length, mLen, b, e, m);\n\n        assembly (\"memory-safe\") {\n            let dataPtr := add(result, 0x20)\n            // Write result on top of args to avoid allocating extra memory.\n            success := staticcall(gas(), 0x05, dataPtr, mload(result), dataPtr, mLen)\n            // Overwrite the length.\n            // result.length > returndatasize() is guaranteed because returndatasize() == m.length\n            mstore(result, mLen)\n            // Set the memory pointer after the returned data.\n            mstore(0x40, add(dataPtr, mLen))\n        }\n    }\n\n    /**\n     * @dev Returns whether the provided byte array is zero.\n     */\n    function _zeroBytes(bytes memory byteArray) private pure returns (bool) {\n        for (uint256 i = 0; i < byteArray.length; ++i) {\n            if (byteArray[i] != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n     * using integer operations.\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        unchecked {\n            // Take care of easy edge cases when a == 0 or a == 1\n            if (a <= 1) {\n                return a;\n            }\n\n            // In this function, we use Newton's method to get a root of `f(x) := x² - a`. It involves building a\n            // sequence x_n that converges toward sqrt(a). For each iteration x_n, we also define the error between\n            // the current value as `ε_n = | x_n - sqrt(a) |`.\n            //\n            // For our first estimation, we consider `e` the smallest power of 2 which is bigger than the square root\n            // of the target. (i.e. `2**(e-1) ≤ sqrt(a) < 2**e`). We know that `e ≤ 128` because `(2¹²⁸)² = 2²⁵⁶` is\n            // bigger than any uint256.\n            //\n            // By noticing that\n            // `2**(e-1) ≤ sqrt(a) < 2**e → (2**(e-1))² ≤ a < (2**e)² → 2**(2*e-2) ≤ a < 2**(2*e)`\n            // we can deduce that `e - 1` is `log2(a) / 2`. We can thus compute `x_n = 2**(e-1)` using a method similar\n            // to the msb function.\n            uint256 aa = a;\n            uint256 xn = 1;\n\n            if (aa >= (1 << 128)) {\n                aa >>= 128;\n                xn <<= 64;\n            }\n            if (aa >= (1 << 64)) {\n                aa >>= 64;\n                xn <<= 32;\n            }\n            if (aa >= (1 << 32)) {\n                aa >>= 32;\n                xn <<= 16;\n            }\n            if (aa >= (1 << 16)) {\n                aa >>= 16;\n                xn <<= 8;\n            }\n            if (aa >= (1 << 8)) {\n                aa >>= 8;\n                xn <<= 4;\n            }\n            if (aa >= (1 << 4)) {\n                aa >>= 4;\n                xn <<= 2;\n            }\n            if (aa >= (1 << 2)) {\n                xn <<= 1;\n            }\n\n            // We now have x_n such that `x_n = 2**(e-1) ≤ sqrt(a) < 2**e = 2 * x_n`. This implies ε_n ≤ 2**(e-1).\n            //\n            // We can refine our estimation by noticing that the middle of that interval minimizes the error.\n            // If we move x_n to equal 2**(e-1) + 2**(e-2), then we reduce the error to ε_n ≤ 2**(e-2).\n            // This is going to be our x_0 (and ε_0)\n            xn = (3 * xn) >> 1; // ε_0 := | x_0 - sqrt(a) | ≤ 2**(e-2)\n\n            // From here, Newton's method give us:\n            // x_{n+1} = (x_n + a / x_n) / 2\n            //\n            // One should note that:\n            // x_{n+1}² - a = ((x_n + a / x_n) / 2)² - a\n            //              = ((x_n² + a) / (2 * x_n))² - a\n            //              = (x_n⁴ + 2 * a * x_n² + a²) / (4 * x_n²) - a\n            //              = (x_n⁴ + 2 * a * x_n² + a² - 4 * a * x_n²) / (4 * x_n²)\n            //              = (x_n⁴ - 2 * a * x_n² + a²) / (4 * x_n²)\n            //              = (x_n² - a)² / (2 * x_n)²\n            //              = ((x_n² - a) / (2 * x_n))²\n            //              ≥ 0\n            // Which proves that for all n ≥ 1, sqrt(a) ≤ x_n\n            //\n            // This gives us the proof of quadratic convergence of the sequence:\n            // ε_{n+1} = | x_{n+1} - sqrt(a) |\n            //         = | (x_n + a / x_n) / 2 - sqrt(a) |\n            //         = | (x_n² + a - 2*x_n*sqrt(a)) / (2 * x_n) |\n            //         = | (x_n - sqrt(a))² / (2 * x_n) |\n            //         = | ε_n² / (2 * x_n) |\n            //         = ε_n² / | (2 * x_n) |\n            //\n            // For the first iteration, we have a special case where x_0 is known:\n            // ε_1 = ε_0² / | (2 * x_0) |\n            //     ≤ (2**(e-2))² / (2 * (2**(e-1) + 2**(e-2)))\n            //     ≤ 2**(2*e-4) / (3 * 2**(e-1))\n            //     ≤ 2**(e-3) / 3\n            //     ≤ 2**(e-3-log2(3))\n            //     ≤ 2**(e-4.5)\n            //\n            // For the following iterations, we use the fact that, 2**(e-1) ≤ sqrt(a) ≤ x_n:\n            // ε_{n+1} = ε_n² / | (2 * x_n) |\n            //         ≤ (2**(e-k))² / (2 * 2**(e-1))\n            //         ≤ 2**(2*e-2*k) / 2**e\n            //         ≤ 2**(e-2*k)\n            xn = (xn + a / xn) >> 1; // ε_1 := | x_1 - sqrt(a) | ≤ 2**(e-4.5)  -- special case, see above\n            xn = (xn + a / xn) >> 1; // ε_2 := | x_2 - sqrt(a) | ≤ 2**(e-9)    -- general case with k = 4.5\n            xn = (xn + a / xn) >> 1; // ε_3 := | x_3 - sqrt(a) | ≤ 2**(e-18)   -- general case with k = 9\n            xn = (xn + a / xn) >> 1; // ε_4 := | x_4 - sqrt(a) | ≤ 2**(e-36)   -- general case with k = 18\n            xn = (xn + a / xn) >> 1; // ε_5 := | x_5 - sqrt(a) | ≤ 2**(e-72)   -- general case with k = 36\n            xn = (xn + a / xn) >> 1; // ε_6 := | x_6 - sqrt(a) | ≤ 2**(e-144)  -- general case with k = 72\n\n            // Because e ≤ 128 (as discussed during the first estimation phase), we know have reached a precision\n            // ε_6 ≤ 2**(e-144) < 1. Given we're operating on integers, then we can ensure that xn is now either\n            // sqrt(a) or sqrt(a) + 1.\n            return xn - SafeCast.toUint(xn > a / xn);\n        }\n    }\n\n    /**\n     * @dev Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && result * result < a);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        uint256 exp;\n        unchecked {\n            exp = 128 * SafeCast.toUint(value > (1 << 128) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 64 * SafeCast.toUint(value > (1 << 64) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 32 * SafeCast.toUint(value > (1 << 32) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 16 * SafeCast.toUint(value > (1 << 16) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 8 * SafeCast.toUint(value > (1 << 8) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 4 * SafeCast.toUint(value > (1 << 4) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 2 * SafeCast.toUint(value > (1 << 2) - 1);\n            value >>= exp;\n            result += exp;\n\n            result += SafeCast.toUint(value > 1);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 10 ** result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        uint256 isGt;\n        unchecked {\n            isGt = SafeCast.toUint(value > (1 << 128) - 1);\n            value >>= isGt * 128;\n            result += isGt * 16;\n\n            isGt = SafeCast.toUint(value > (1 << 64) - 1);\n            value >>= isGt * 64;\n            result += isGt * 8;\n\n            isGt = SafeCast.toUint(value > (1 << 32) - 1);\n            value >>= isGt * 32;\n            result += isGt * 4;\n\n            isGt = SafeCast.toUint(value > (1 << 16) - 1);\n            value >>= isGt * 16;\n            result += isGt * 2;\n\n            result += SafeCast.toUint(value > (1 << 8) - 1);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << (result << 3) < value);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SafeCast.sol)\n// This file was procedurally generated from scripts/generate/templates/SafeCast.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeCast {\n    /**\n     * @dev Value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value);\n\n    /**\n     * @dev An int value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedIntToUint(int256 value);\n\n    /**\n     * @dev Value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedIntDowncast(uint8 bits, int256 value);\n\n    /**\n     * @dev An uint value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedUintToInt(uint256 value);\n\n    /**\n     * @dev Returns the downcasted uint248 from uint256, reverting on\n     * overflow (when the input is greater than largest uint248).\n     *\n     * Counterpart to Solidity's `uint248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toUint248(uint256 value) internal pure returns (uint248) {\n        if (value > type(uint248).max) {\n            revert SafeCastOverflowedUintDowncast(248, value);\n        }\n        return uint248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint240 from uint256, reverting on\n     * overflow (when the input is greater than largest uint240).\n     *\n     * Counterpart to Solidity's `uint240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toUint240(uint256 value) internal pure returns (uint240) {\n        if (value > type(uint240).max) {\n            revert SafeCastOverflowedUintDowncast(240, value);\n        }\n        return uint240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint232 from uint256, reverting on\n     * overflow (when the input is greater than largest uint232).\n     *\n     * Counterpart to Solidity's `uint232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toUint232(uint256 value) internal pure returns (uint232) {\n        if (value > type(uint232).max) {\n            revert SafeCastOverflowedUintDowncast(232, value);\n        }\n        return uint232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        if (value > type(uint224).max) {\n            revert SafeCastOverflowedUintDowncast(224, value);\n        }\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint216 from uint256, reverting on\n     * overflow (when the input is greater than largest uint216).\n     *\n     * Counterpart to Solidity's `uint216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toUint216(uint256 value) internal pure returns (uint216) {\n        if (value > type(uint216).max) {\n            revert SafeCastOverflowedUintDowncast(216, value);\n        }\n        return uint216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint208 from uint256, reverting on\n     * overflow (when the input is greater than largest uint208).\n     *\n     * Counterpart to Solidity's `uint208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toUint208(uint256 value) internal pure returns (uint208) {\n        if (value > type(uint208).max) {\n            revert SafeCastOverflowedUintDowncast(208, value);\n        }\n        return uint208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint200 from uint256, reverting on\n     * overflow (when the input is greater than largest uint200).\n     *\n     * Counterpart to Solidity's `uint200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toUint200(uint256 value) internal pure returns (uint200) {\n        if (value > type(uint200).max) {\n            revert SafeCastOverflowedUintDowncast(200, value);\n        }\n        return uint200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint192 from uint256, reverting on\n     * overflow (when the input is greater than largest uint192).\n     *\n     * Counterpart to Solidity's `uint192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toUint192(uint256 value) internal pure returns (uint192) {\n        if (value > type(uint192).max) {\n            revert SafeCastOverflowedUintDowncast(192, value);\n        }\n        return uint192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint184 from uint256, reverting on\n     * overflow (when the input is greater than largest uint184).\n     *\n     * Counterpart to Solidity's `uint184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toUint184(uint256 value) internal pure returns (uint184) {\n        if (value > type(uint184).max) {\n            revert SafeCastOverflowedUintDowncast(184, value);\n        }\n        return uint184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint176 from uint256, reverting on\n     * overflow (when the input is greater than largest uint176).\n     *\n     * Counterpart to Solidity's `uint176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toUint176(uint256 value) internal pure returns (uint176) {\n        if (value > type(uint176).max) {\n            revert SafeCastOverflowedUintDowncast(176, value);\n        }\n        return uint176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint168 from uint256, reverting on\n     * overflow (when the input is greater than largest uint168).\n     *\n     * Counterpart to Solidity's `uint168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toUint168(uint256 value) internal pure returns (uint168) {\n        if (value > type(uint168).max) {\n            revert SafeCastOverflowedUintDowncast(168, value);\n        }\n        return uint168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint160 from uint256, reverting on\n     * overflow (when the input is greater than largest uint160).\n     *\n     * Counterpart to Solidity's `uint160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        if (value > type(uint160).max) {\n            revert SafeCastOverflowedUintDowncast(160, value);\n        }\n        return uint160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint152 from uint256, reverting on\n     * overflow (when the input is greater than largest uint152).\n     *\n     * Counterpart to Solidity's `uint152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toUint152(uint256 value) internal pure returns (uint152) {\n        if (value > type(uint152).max) {\n            revert SafeCastOverflowedUintDowncast(152, value);\n        }\n        return uint152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint144 from uint256, reverting on\n     * overflow (when the input is greater than largest uint144).\n     *\n     * Counterpart to Solidity's `uint144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toUint144(uint256 value) internal pure returns (uint144) {\n        if (value > type(uint144).max) {\n            revert SafeCastOverflowedUintDowncast(144, value);\n        }\n        return uint144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint136 from uint256, reverting on\n     * overflow (when the input is greater than largest uint136).\n     *\n     * Counterpart to Solidity's `uint136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toUint136(uint256 value) internal pure returns (uint136) {\n        if (value > type(uint136).max) {\n            revert SafeCastOverflowedUintDowncast(136, value);\n        }\n        return uint136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        if (value > type(uint128).max) {\n            revert SafeCastOverflowedUintDowncast(128, value);\n        }\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint120 from uint256, reverting on\n     * overflow (when the input is greater than largest uint120).\n     *\n     * Counterpart to Solidity's `uint120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toUint120(uint256 value) internal pure returns (uint120) {\n        if (value > type(uint120).max) {\n            revert SafeCastOverflowedUintDowncast(120, value);\n        }\n        return uint120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint112 from uint256, reverting on\n     * overflow (when the input is greater than largest uint112).\n     *\n     * Counterpart to Solidity's `uint112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toUint112(uint256 value) internal pure returns (uint112) {\n        if (value > type(uint112).max) {\n            revert SafeCastOverflowedUintDowncast(112, value);\n        }\n        return uint112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint104 from uint256, reverting on\n     * overflow (when the input is greater than largest uint104).\n     *\n     * Counterpart to Solidity's `uint104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toUint104(uint256 value) internal pure returns (uint104) {\n        if (value > type(uint104).max) {\n            revert SafeCastOverflowedUintDowncast(104, value);\n        }\n        return uint104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        if (value > type(uint96).max) {\n            revert SafeCastOverflowedUintDowncast(96, value);\n        }\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint88 from uint256, reverting on\n     * overflow (when the input is greater than largest uint88).\n     *\n     * Counterpart to Solidity's `uint88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toUint88(uint256 value) internal pure returns (uint88) {\n        if (value > type(uint88).max) {\n            revert SafeCastOverflowedUintDowncast(88, value);\n        }\n        return uint88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint80 from uint256, reverting on\n     * overflow (when the input is greater than largest uint80).\n     *\n     * Counterpart to Solidity's `uint80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toUint80(uint256 value) internal pure returns (uint80) {\n        if (value > type(uint80).max) {\n            revert SafeCastOverflowedUintDowncast(80, value);\n        }\n        return uint80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint72 from uint256, reverting on\n     * overflow (when the input is greater than largest uint72).\n     *\n     * Counterpart to Solidity's `uint72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toUint72(uint256 value) internal pure returns (uint72) {\n        if (value > type(uint72).max) {\n            revert SafeCastOverflowedUintDowncast(72, value);\n        }\n        return uint72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        if (value > type(uint64).max) {\n            revert SafeCastOverflowedUintDowncast(64, value);\n        }\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint56 from uint256, reverting on\n     * overflow (when the input is greater than largest uint56).\n     *\n     * Counterpart to Solidity's `uint56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toUint56(uint256 value) internal pure returns (uint56) {\n        if (value > type(uint56).max) {\n            revert SafeCastOverflowedUintDowncast(56, value);\n        }\n        return uint56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint48 from uint256, reverting on\n     * overflow (when the input is greater than largest uint48).\n     *\n     * Counterpart to Solidity's `uint48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toUint48(uint256 value) internal pure returns (uint48) {\n        if (value > type(uint48).max) {\n            revert SafeCastOverflowedUintDowncast(48, value);\n        }\n        return uint48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint40 from uint256, reverting on\n     * overflow (when the input is greater than largest uint40).\n     *\n     * Counterpart to Solidity's `uint40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toUint40(uint256 value) internal pure returns (uint40) {\n        if (value > type(uint40).max) {\n            revert SafeCastOverflowedUintDowncast(40, value);\n        }\n        return uint40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        if (value > type(uint32).max) {\n            revert SafeCastOverflowedUintDowncast(32, value);\n        }\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint24 from uint256, reverting on\n     * overflow (when the input is greater than largest uint24).\n     *\n     * Counterpart to Solidity's `uint24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toUint24(uint256 value) internal pure returns (uint24) {\n        if (value > type(uint24).max) {\n            revert SafeCastOverflowedUintDowncast(24, value);\n        }\n        return uint24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        if (value > type(uint16).max) {\n            revert SafeCastOverflowedUintDowncast(16, value);\n        }\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        if (value > type(uint8).max) {\n            revert SafeCastOverflowedUintDowncast(8, value);\n        }\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        if (value < 0) {\n            revert SafeCastOverflowedIntToUint(value);\n        }\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int248 from int256, reverting on\n     * overflow (when the input is less than smallest int248 or\n     * greater than largest int248).\n     *\n     * Counterpart to Solidity's `int248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toInt248(int256 value) internal pure returns (int248 downcasted) {\n        downcasted = int248(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(248, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int240 from int256, reverting on\n     * overflow (when the input is less than smallest int240 or\n     * greater than largest int240).\n     *\n     * Counterpart to Solidity's `int240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toInt240(int256 value) internal pure returns (int240 downcasted) {\n        downcasted = int240(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(240, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int232 from int256, reverting on\n     * overflow (when the input is less than smallest int232 or\n     * greater than largest int232).\n     *\n     * Counterpart to Solidity's `int232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toInt232(int256 value) internal pure returns (int232 downcasted) {\n        downcasted = int232(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(232, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int224 from int256, reverting on\n     * overflow (when the input is less than smallest int224 or\n     * greater than largest int224).\n     *\n     * Counterpart to Solidity's `int224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toInt224(int256 value) internal pure returns (int224 downcasted) {\n        downcasted = int224(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(224, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int216 from int256, reverting on\n     * overflow (when the input is less than smallest int216 or\n     * greater than largest int216).\n     *\n     * Counterpart to Solidity's `int216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toInt216(int256 value) internal pure returns (int216 downcasted) {\n        downcasted = int216(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(216, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int208 from int256, reverting on\n     * overflow (when the input is less than smallest int208 or\n     * greater than largest int208).\n     *\n     * Counterpart to Solidity's `int208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toInt208(int256 value) internal pure returns (int208 downcasted) {\n        downcasted = int208(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(208, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int200 from int256, reverting on\n     * overflow (when the input is less than smallest int200 or\n     * greater than largest int200).\n     *\n     * Counterpart to Solidity's `int200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toInt200(int256 value) internal pure returns (int200 downcasted) {\n        downcasted = int200(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(200, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int192 from int256, reverting on\n     * overflow (when the input is less than smallest int192 or\n     * greater than largest int192).\n     *\n     * Counterpart to Solidity's `int192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toInt192(int256 value) internal pure returns (int192 downcasted) {\n        downcasted = int192(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(192, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int184 from int256, reverting on\n     * overflow (when the input is less than smallest int184 or\n     * greater than largest int184).\n     *\n     * Counterpart to Solidity's `int184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toInt184(int256 value) internal pure returns (int184 downcasted) {\n        downcasted = int184(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(184, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int176 from int256, reverting on\n     * overflow (when the input is less than smallest int176 or\n     * greater than largest int176).\n     *\n     * Counterpart to Solidity's `int176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toInt176(int256 value) internal pure returns (int176 downcasted) {\n        downcasted = int176(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(176, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int168 from int256, reverting on\n     * overflow (when the input is less than smallest int168 or\n     * greater than largest int168).\n     *\n     * Counterpart to Solidity's `int168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toInt168(int256 value) internal pure returns (int168 downcasted) {\n        downcasted = int168(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(168, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int160 from int256, reverting on\n     * overflow (when the input is less than smallest int160 or\n     * greater than largest int160).\n     *\n     * Counterpart to Solidity's `int160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toInt160(int256 value) internal pure returns (int160 downcasted) {\n        downcasted = int160(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(160, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int152 from int256, reverting on\n     * overflow (when the input is less than smallest int152 or\n     * greater than largest int152).\n     *\n     * Counterpart to Solidity's `int152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toInt152(int256 value) internal pure returns (int152 downcasted) {\n        downcasted = int152(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(152, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int144 from int256, reverting on\n     * overflow (when the input is less than smallest int144 or\n     * greater than largest int144).\n     *\n     * Counterpart to Solidity's `int144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toInt144(int256 value) internal pure returns (int144 downcasted) {\n        downcasted = int144(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(144, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int136 from int256, reverting on\n     * overflow (when the input is less than smallest int136 or\n     * greater than largest int136).\n     *\n     * Counterpart to Solidity's `int136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toInt136(int256 value) internal pure returns (int136 downcasted) {\n        downcasted = int136(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(136, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toInt128(int256 value) internal pure returns (int128 downcasted) {\n        downcasted = int128(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(128, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int120 from int256, reverting on\n     * overflow (when the input is less than smallest int120 or\n     * greater than largest int120).\n     *\n     * Counterpart to Solidity's `int120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toInt120(int256 value) internal pure returns (int120 downcasted) {\n        downcasted = int120(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(120, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int112 from int256, reverting on\n     * overflow (when the input is less than smallest int112 or\n     * greater than largest int112).\n     *\n     * Counterpart to Solidity's `int112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toInt112(int256 value) internal pure returns (int112 downcasted) {\n        downcasted = int112(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(112, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int104 from int256, reverting on\n     * overflow (when the input is less than smallest int104 or\n     * greater than largest int104).\n     *\n     * Counterpart to Solidity's `int104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toInt104(int256 value) internal pure returns (int104 downcasted) {\n        downcasted = int104(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(104, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int96 from int256, reverting on\n     * overflow (when the input is less than smallest int96 or\n     * greater than largest int96).\n     *\n     * Counterpart to Solidity's `int96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toInt96(int256 value) internal pure returns (int96 downcasted) {\n        downcasted = int96(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(96, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int88 from int256, reverting on\n     * overflow (when the input is less than smallest int88 or\n     * greater than largest int88).\n     *\n     * Counterpart to Solidity's `int88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toInt88(int256 value) internal pure returns (int88 downcasted) {\n        downcasted = int88(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(88, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int80 from int256, reverting on\n     * overflow (when the input is less than smallest int80 or\n     * greater than largest int80).\n     *\n     * Counterpart to Solidity's `int80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toInt80(int256 value) internal pure returns (int80 downcasted) {\n        downcasted = int80(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(80, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int72 from int256, reverting on\n     * overflow (when the input is less than smallest int72 or\n     * greater than largest int72).\n     *\n     * Counterpart to Solidity's `int72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toInt72(int256 value) internal pure returns (int72 downcasted) {\n        downcasted = int72(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(72, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toInt64(int256 value) internal pure returns (int64 downcasted) {\n        downcasted = int64(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(64, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int56 from int256, reverting on\n     * overflow (when the input is less than smallest int56 or\n     * greater than largest int56).\n     *\n     * Counterpart to Solidity's `int56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toInt56(int256 value) internal pure returns (int56 downcasted) {\n        downcasted = int56(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(56, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int48 from int256, reverting on\n     * overflow (when the input is less than smallest int48 or\n     * greater than largest int48).\n     *\n     * Counterpart to Solidity's `int48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toInt48(int256 value) internal pure returns (int48 downcasted) {\n        downcasted = int48(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(48, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int40 from int256, reverting on\n     * overflow (when the input is less than smallest int40 or\n     * greater than largest int40).\n     *\n     * Counterpart to Solidity's `int40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toInt40(int256 value) internal pure returns (int40 downcasted) {\n        downcasted = int40(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(40, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toInt32(int256 value) internal pure returns (int32 downcasted) {\n        downcasted = int32(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(32, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int24 from int256, reverting on\n     * overflow (when the input is less than smallest int24 or\n     * greater than largest int24).\n     *\n     * Counterpart to Solidity's `int24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toInt24(int256 value) internal pure returns (int24 downcasted) {\n        downcasted = int24(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(24, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toInt16(int256 value) internal pure returns (int16 downcasted) {\n        downcasted = int16(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(16, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toInt8(int256 value) internal pure returns (int8 downcasted) {\n        downcasted = int8(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(8, value);\n        }\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        if (value > uint256(type(int256).max)) {\n            revert SafeCastOverflowedUintToInt(value);\n        }\n        return int256(value);\n    }\n\n    /**\n     * @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump.\n     */\n    function toUint(bool b) internal pure returns (uint256 u) {\n        assembly (\"memory-safe\") {\n            u := iszero(iszero(b))\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, int256 a, int256 b) internal pure returns (int256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * int256(SafeCast.toUint(condition)));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // Formula from the \"Bit Twiddling Hacks\" by Sean Eron Anderson.\n            // Since `n` is a signed integer, the generated bytecode will use the SAR opcode to perform the right shift,\n            // taking advantage of the most significant (or \"sign\" bit) in two's complement representation.\n            // This opcode adds new most significant bits set to the value of the previous most significant bit. As a result,\n            // the mask will either be `bytes32(0)` (if n is positive) or `~bytes32(0)` (if n is negative).\n            int256 mask = n >> 255;\n\n            // A `bytes32(0)` mask leaves the input unchanged, while a `~bytes32(0)` mask complements it.\n            return uint256((n + mask) ^ mask);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Panic.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Panic.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Helper library for emitting standardized panic codes.\n *\n * ```solidity\n * contract Example {\n *      using Panic for uint256;\n *\n *      // Use any of the declared internal constants\n *      function foo() { Panic.GENERIC.panic(); }\n *\n *      // Alternatively\n *      function foo() { Panic.panic(Panic.GENERIC); }\n * }\n * ```\n *\n * Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n *\n * _Available since v5.1._\n */\n// slither-disable-next-line unused-state\nlibrary Panic {\n    /// @dev generic / unspecified error\n    uint256 internal constant GENERIC = 0x00;\n    /// @dev used by the assert() builtin\n    uint256 internal constant ASSERT = 0x01;\n    /// @dev arithmetic underflow or overflow\n    uint256 internal constant UNDER_OVERFLOW = 0x11;\n    /// @dev division or modulo by zero\n    uint256 internal constant DIVISION_BY_ZERO = 0x12;\n    /// @dev enum conversion error\n    uint256 internal constant ENUM_CONVERSION_ERROR = 0x21;\n    /// @dev invalid encoding in storage\n    uint256 internal constant STORAGE_ENCODING_ERROR = 0x22;\n    /// @dev empty array pop\n    uint256 internal constant EMPTY_ARRAY_POP = 0x31;\n    /// @dev array out of bounds access\n    uint256 internal constant ARRAY_OUT_OF_BOUNDS = 0x32;\n    /// @dev resource error (too large allocation or too large array)\n    uint256 internal constant RESOURCE_ERROR = 0x41;\n    /// @dev calling invalid internal function\n    uint256 internal constant INVALID_INTERNAL_FUNCTION = 0x51;\n\n    /// @dev Reverts with a panic code. Recommended to use with\n    /// the internal constants with predefined codes.\n    function panic(uint256 code) internal pure {\n        assembly (\"memory-safe\") {\n            mstore(0x00, 0x4e487b71)\n            mstore(0x20, code)\n            revert(0x1c, 0x24)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Pausable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Pausable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    bool private _paused;\n\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    /**\n     * @dev The operation failed because the contract is paused.\n     */\n    error EnforcedPause();\n\n    /**\n     * @dev The operation failed because the contract is not paused.\n     */\n    error ExpectedPause();\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    constructor() {\n        _paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        if (paused()) {\n            revert EnforcedPause();\n        }\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        if (!paused()) {\n            revert ExpectedPause();\n        }\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"},"@openzeppelin/contracts/utils/SlotDerivation.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/SlotDerivation.sol)\n// This file was procedurally generated from scripts/generate/templates/SlotDerivation.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for computing storage (and transient storage) locations from namespaces and deriving slots\n * corresponding to standard patterns. The derivation method for array and mapping matches the storage layout used by\n * the solidity language / compiler.\n *\n * See https://docs.soliditylang.org/en/v0.8.20/internals/layout_in_storage.html#mappings-and-dynamic-arrays[Solidity docs for mappings and dynamic arrays.].\n *\n * Example usage:\n * ```solidity\n * contract Example {\n *     // Add the library methods\n *     using StorageSlot for bytes32;\n *     using SlotDerivation for bytes32;\n *\n *     // Declare a namespace\n *     string private constant _NAMESPACE = \"<namespace>\" // eg. OpenZeppelin.Slot\n *\n *     function setValueInNamespace(uint256 key, address newValue) internal {\n *         _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value = newValue;\n *     }\n *\n *     function getValueInNamespace(uint256 key) internal view returns (address) {\n *         return _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value;\n *     }\n * }\n * ```\n *\n * TIP: Consider using this library along with {StorageSlot}.\n *\n * NOTE: This library provides a way to manipulate storage locations in a non-standard way. Tooling for checking\n * upgrade safety will ignore the slots accessed through this library.\n *\n * _Available since v5.1._\n */\nlibrary SlotDerivation {\n    /**\n     * @dev Derive an ERC-7201 slot from a string (namespace).\n     */\n    function erc7201Slot(string memory namespace) internal pure returns (bytes32 slot) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, sub(keccak256(add(namespace, 0x20), mload(namespace)), 1))\n            slot := and(keccak256(0x00, 0x20), not(0xff))\n        }\n    }\n\n    /**\n     * @dev Add an offset to a slot to get the n-th element of a structure or an array.\n     */\n    function offset(bytes32 slot, uint256 pos) internal pure returns (bytes32 result) {\n        unchecked {\n            return bytes32(uint256(slot) + pos);\n        }\n    }\n\n    /**\n     * @dev Derive the location of the first element in an array from the slot where the length is stored.\n     */\n    function deriveArray(bytes32 slot) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, slot)\n            result := keccak256(0x00, 0x20)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, address key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, and(key, shr(96, not(0))))\n            mstore(0x20, slot)\n            result := keccak256(0x00, 0x40)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, bool key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, iszero(iszero(key)))\n            mstore(0x20, slot)\n            result := keccak256(0x00, 0x40)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, bytes32 key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, key)\n            mstore(0x20, slot)\n            result := keccak256(0x00, 0x40)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, uint256 key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, key)\n            mstore(0x20, slot)\n            result := keccak256(0x00, 0x40)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, int256 key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, key)\n            mstore(0x20, slot)\n            result := keccak256(0x00, 0x40)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, string memory key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            let length := mload(key)\n            let begin := add(key, 0x20)\n            let end := add(begin, length)\n            let cache := mload(end)\n            mstore(end, slot)\n            result := keccak256(begin, add(length, 0x20))\n            mstore(end, cache)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, bytes memory key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            let length := mload(key)\n            let begin := add(key, 0x20)\n            let end := add(begin, length)\n            let cache := mload(end)\n            mstore(end, slot)\n            result := keccak256(begin, add(length, 0x20))\n            mstore(end, cache)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/StorageSlot.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC-1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n *\n * TIP: Consider using this library along with {SlotDerivation}.\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct Int256Slot {\n        int256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Int256Slot` with member `value` located at `slot`.\n     */\n    function getInt256Slot(bytes32 slot) internal pure returns (Int256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SafeCast} from \"./math/SafeCast.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    using SafeCast for *;\n\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev The string being parsed contains characters that are not in scope of the given base.\n     */\n    error StringsInvalidChar();\n\n    /**\n     * @dev The string being parsed is not a properly formatted address.\n     */\n    error StringsInvalidAddressFormat();\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            assembly (\"memory-safe\") {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                assembly (\"memory-safe\") {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n     * representation, according to EIP-55.\n     */\n    function toChecksumHexString(address addr) internal pure returns (string memory) {\n        bytes memory buffer = bytes(toHexString(addr));\n\n        // hash the hex part of buffer (skip length + 2 bytes, length 40)\n        uint256 hashValue;\n        assembly (\"memory-safe\") {\n            hashValue := shr(96, keccak256(add(buffer, 0x22), 40))\n        }\n\n        for (uint256 i = 41; i > 1; --i) {\n            // possible values for buffer[i] are 48 (0) to 57 (9) and 97 (a) to 102 (f)\n            if (hashValue & 0xf > 7 && uint8(buffer[i]) > 96) {\n                // case shift by xoring with 0x20\n                buffer[i] ^= 0x20;\n            }\n            hashValue >>= 4;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n\n    /**\n     * @dev Parse a decimal string and returns the value as a `uint256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `[0-9]*`\n     * - The result must fit into an `uint256` type\n     */\n    function parseUint(string memory input) internal pure returns (uint256) {\n        return parseUint(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseUint} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `[0-9]*`\n     * - The result must fit into an `uint256` type\n     */\n    function parseUint(string memory input, uint256 begin, uint256 end) internal pure returns (uint256) {\n        (bool success, uint256 value) = tryParseUint(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseUint-string} that returns false if the parsing fails because of an invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseUint(string memory input) internal pure returns (bool success, uint256 value) {\n        return _tryParseUintUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseUint-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n     * character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseUint(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, uint256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseUintUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseUint} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseUintUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, uint256 value) {\n        bytes memory buffer = bytes(input);\n\n        uint256 result = 0;\n        for (uint256 i = begin; i < end; ++i) {\n            uint8 chr = _tryParseChr(bytes1(_unsafeReadBytesOffset(buffer, i)));\n            if (chr > 9) return (false, 0);\n            result *= 10;\n            result += chr;\n        }\n        return (true, result);\n    }\n\n    /**\n     * @dev Parse a decimal string and returns the value as a `int256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `[-+]?[0-9]*`\n     * - The result must fit in an `int256` type.\n     */\n    function parseInt(string memory input) internal pure returns (int256) {\n        return parseInt(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseInt-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `[-+]?[0-9]*`\n     * - The result must fit in an `int256` type.\n     */\n    function parseInt(string memory input, uint256 begin, uint256 end) internal pure returns (int256) {\n        (bool success, int256 value) = tryParseInt(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseInt-string} that returns false if the parsing fails because of an invalid character or if\n     * the result does not fit in a `int256`.\n     *\n     * NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`.\n     */\n    function tryParseInt(string memory input) internal pure returns (bool success, int256 value) {\n        return _tryParseIntUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    uint256 private constant ABS_MIN_INT256 = 2 ** 255;\n\n    /**\n     * @dev Variant of {parseInt-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n     * character or if the result does not fit in a `int256`.\n     *\n     * NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`.\n     */\n    function tryParseInt(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, int256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseIntUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseInt} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseIntUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, int256 value) {\n        bytes memory buffer = bytes(input);\n\n        // Check presence of a negative sign.\n        bytes1 sign = begin == end ? bytes1(0) : bytes1(_unsafeReadBytesOffset(buffer, begin)); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        bool positiveSign = sign == bytes1(\"+\");\n        bool negativeSign = sign == bytes1(\"-\");\n        uint256 offset = (positiveSign || negativeSign).toUint();\n\n        (bool absSuccess, uint256 absValue) = tryParseUint(input, begin + offset, end);\n\n        if (absSuccess && absValue < ABS_MIN_INT256) {\n            return (true, negativeSign ? -int256(absValue) : int256(absValue));\n        } else if (absSuccess && negativeSign && absValue == ABS_MIN_INT256) {\n            return (true, type(int256).min);\n        } else return (false, 0);\n    }\n\n    /**\n     * @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as a `uint256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `(0x)?[0-9a-fA-F]*`\n     * - The result must fit in an `uint256` type.\n     */\n    function parseHexUint(string memory input) internal pure returns (uint256) {\n        return parseHexUint(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseHexUint} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `(0x)?[0-9a-fA-F]*`\n     * - The result must fit in an `uint256` type.\n     */\n    function parseHexUint(string memory input, uint256 begin, uint256 end) internal pure returns (uint256) {\n        (bool success, uint256 value) = tryParseHexUint(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string} that returns false if the parsing fails because of an invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseHexUint(string memory input) internal pure returns (bool success, uint256 value) {\n        return _tryParseHexUintUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string-uint256-uint256} that returns false if the parsing fails because of an\n     * invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseHexUint(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, uint256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseHexUintUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseHexUint} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseHexUintUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, uint256 value) {\n        bytes memory buffer = bytes(input);\n\n        // skip 0x prefix if present\n        bool hasPrefix = (end > begin + 1) && bytes2(_unsafeReadBytesOffset(buffer, begin)) == bytes2(\"0x\"); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        uint256 offset = hasPrefix.toUint() * 2;\n\n        uint256 result = 0;\n        for (uint256 i = begin + offset; i < end; ++i) {\n            uint8 chr = _tryParseChr(bytes1(_unsafeReadBytesOffset(buffer, i)));\n            if (chr > 15) return (false, 0);\n            result *= 16;\n            unchecked {\n                // Multiplying by 16 is equivalent to a shift of 4 bits (with additional overflow check).\n                // This guaratees that adding a value < 16 will not cause an overflow, hence the unchecked.\n                result += chr;\n            }\n        }\n        return (true, result);\n    }\n\n    /**\n     * @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as an `address`.\n     *\n     * Requirements:\n     * - The string must be formatted as `(0x)?[0-9a-fA-F]{40}`\n     */\n    function parseAddress(string memory input) internal pure returns (address) {\n        return parseAddress(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseAddress} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `(0x)?[0-9a-fA-F]{40}`\n     */\n    function parseAddress(string memory input, uint256 begin, uint256 end) internal pure returns (address) {\n        (bool success, address value) = tryParseAddress(input, begin, end);\n        if (!success) revert StringsInvalidAddressFormat();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string} that returns false if the parsing fails because the input is not a properly\n     * formatted address. See {parseAddress} requirements.\n     */\n    function tryParseAddress(string memory input) internal pure returns (bool success, address value) {\n        return tryParseAddress(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string-uint256-uint256} that returns false if the parsing fails because input is not a properly\n     * formatted address. See {parseAddress} requirements.\n     */\n    function tryParseAddress(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, address value) {\n        if (end > bytes(input).length || begin > end) return (false, address(0));\n\n        bool hasPrefix = (end > begin + 1) && bytes2(_unsafeReadBytesOffset(bytes(input), begin)) == bytes2(\"0x\"); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        uint256 expectedLength = 40 + hasPrefix.toUint() * 2;\n\n        // check that input is the correct length\n        if (end - begin == expectedLength) {\n            // length guarantees that this does not overflow, and value is at most type(uint160).max\n            (bool s, uint256 v) = _tryParseHexUintUncheckedBounds(input, begin, end);\n            return (s, address(uint160(v)));\n        } else {\n            return (false, address(0));\n        }\n    }\n\n    function _tryParseChr(bytes1 chr) private pure returns (uint8) {\n        uint8 value = uint8(chr);\n\n        // Try to parse `chr`:\n        // - Case 1: [0-9]\n        // - Case 2: [a-f]\n        // - Case 3: [A-F]\n        // - otherwise not supported\n        unchecked {\n            if (value > 47 && value < 58) value -= 48;\n            else if (value > 96 && value < 103) value -= 87;\n            else if (value > 64 && value < 71) value -= 55;\n            else return type(uint8).max;\n        }\n\n        return value;\n    }\n\n    /**\n     * @dev Reads a bytes32 from a bytes array without bounds checking.\n     *\n     * NOTE: making this function internal would mean it could be used with memory unsafe offset, and marking the\n     * assembly block as such would prevent some optimizations.\n     */\n    function _unsafeReadBytesOffset(bytes memory buffer, uint256 offset) private pure returns (bytes32 value) {\n        // This is not memory safe in the general case, but all calls to this private function are within bounds.\n        assembly (\"memory-safe\") {\n            value := mload(add(buffer, add(0x20, offset)))\n        }\n    }\n}\n"},"contracts/IPDocV5.sol":{"content":"// SPDX-License-Identifier: MIT\n// Compatible with OpenZeppelin Contracts ^5.0.0\npragma solidity ^0.8.20;\n\nimport {AccessControl} from \"@openzeppelin/contracts/access/AccessControl.sol\";\nimport {ERC1155} from \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\";\nimport {ERC1155Burnable} from \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\";\nimport {ERC1155Pausable} from \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Pausable.sol\";\nimport {ERC1155Supply} from \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\";\nimport {ERC1155URIStorage} from \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155URIStorage.sol\";\n\n/// @custom:security-contact andy@shipstone.com\ncontract IPDocV5 is ERC1155, AccessControl, ERC1155Pausable, ERC1155Burnable, ERC1155Supply, ERC1155URIStorage {\n    bytes32 public constant URI_SETTER_ROLE = keccak256(\"URI_SETTER_ROLE\");\n    bytes32 public constant PAUSER_ROLE = keccak256(\"PAUSER_ROLE\");\n    bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\");\n    mapping(bytes32 => uint256) private _tokenIdMap;\n    mapping(uint256 => bytes32) private _reverseTokenIdMap;\n    uint256 private _nextTokenId = 1;\n\n    event IDCreated(bytes32 indexed externalId, uint256 indexed tokenId);\n    // Create a function to register a bytes32 and get a manageable uint256\n    function _createId(bytes32 externalId) internal returns (uint256) {\n        // Check if this bytes32 ID is already mapped\n        if (_tokenIdMap[externalId] != 0) {\n            return _tokenIdMap[externalId];\n        }\n\n        // Assign a new sequential uint256 ID\n        uint256 newId = _nextTokenId++;\n\n        // Store the mapping in both directions\n        _tokenIdMap[externalId] = newId;\n        _reverseTokenIdMap[newId] = externalId;\n        \n        emit IDCreated(externalId, newId);\n\n        return newId;\n    }\n\n    function createId(bytes32 externalId) public onlyRole(MINTER_ROLE) returns (uint256) {\n      return _createId(externalId);\n    }\n    function createIds(bytes32[] memory externalIds) public onlyRole(MINTER_ROLE) returns (uint256[] memory) {\n        uint256[] memory ids = new uint256[](externalIds.length);\n        for (uint256 i = 0; i < externalIds.length; i++) {\n            ids[i] = _createId(externalIds[i]);\n        }\n        return ids;\n    }\n\n    // Retrieve the original bytes32 from a uint256 token ID\n    function getExternalId(uint256 tokenId) public view returns (bytes32) {\n        return _reverseTokenIdMap[tokenId];\n    }\n    function getId(bytes32 externalId) public view returns (uint256) {\n        return _tokenIdMap[externalId];\n    }\n    \n    constructor(address defaultAdmin, address pauser, address minter)\n        ERC1155(\"https://safeidea.net/doc/{id}\") ERC1155URIStorage()\n    {\n        _grantRole(DEFAULT_ADMIN_ROLE, defaultAdmin);\n        _grantRole(URI_SETTER_ROLE, defaultAdmin);\n        _grantRole(PAUSER_ROLE, pauser);\n        _grantRole(MINTER_ROLE, minter);\n    }\n\n    function uri(uint256 tokenId) public view virtual override(ERC1155, ERC1155URIStorage) returns (string memory) {\n        return super.uri(tokenId);\n    }\n    \n    function setBaseURI(string memory baseURI) public onlyRole(URI_SETTER_ROLE) {\n        _setBaseURI(baseURI);\n    }\n    \n    function setTokenURI(uint256 tokenId, string memory tokenURI) public onlyRole(URI_SETTER_ROLE) {\n        _setURI(tokenId, tokenURI);\n    }\n    \n    function setURI(string memory newuri) public onlyRole(URI_SETTER_ROLE) {\n        _setURI(newuri);\n    }\n\n    function pause() public onlyRole(PAUSER_ROLE) {\n        _pause();\n    }\n\n    function unpause() public onlyRole(PAUSER_ROLE) {\n        _unpause();\n    }\n\n    function mint(address account, uint256 id, uint256 amount, bytes memory data)\n        public\n        onlyRole(MINTER_ROLE)\n    {\n        _mint(account, id, amount, data);\n    }\n\n    function mintBatch(address to, uint256[] memory ids, uint256[] memory amounts, bytes memory data)\n        public\n        onlyRole(MINTER_ROLE)\n    {\n        _mintBatch(to, ids, amounts, data);\n    }\n\n    // The following functions are overrides required by Solidity.\n\n    function _update(address from, address to, uint256[] memory ids, uint256[] memory values)\n        internal\n        override(ERC1155, ERC1155Pausable, ERC1155Supply)\n    {\n        super._update(from, to, ids, values);\n    }\n\n    function supportsInterface(bytes4 interfaceId)\n        public\n        view\n        override(ERC1155, AccessControl)\n        returns (bool)\n    {\n        return super.supportsInterface(interfaceId);\n    }\n}\n"}},"settings":{"evmVersion":"paris","optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts/access/AccessControl.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/AccessControl.sol","exportedSymbols":{"AccessControl":[295],"Context":[3096],"ERC165":[4743],"IAccessControl":[378]},"id":296,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"108:24:0"},{"absolutePath":"@openzeppelin/contracts/access/IAccessControl.sol","file":"./IAccessControl.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":296,"sourceUnit":379,"src":"134:52:0","symbolAliases":[{"foreign":{"id":2,"name":"IAccessControl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":378,"src":"142:14:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":5,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":296,"sourceUnit":3097,"src":"187:45:0","symbolAliases":[{"foreign":{"id":4,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3096,"src":"195:7:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"../utils/introspection/ERC165.sol","id":7,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":296,"sourceUnit":4744,"src":"233:57:0","symbolAliases":[{"foreign":{"id":6,"name":"ERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4743,"src":"241:6:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":9,"name":"Context","nameLocations":["1988:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":3096,"src":"1988:7:0"},"id":10,"nodeType":"InheritanceSpecifier","src":"1988:7:0"},{"baseName":{"id":11,"name":"IAccessControl","nameLocations":["1997:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":378,"src":"1997:14:0"},"id":12,"nodeType":"InheritanceSpecifier","src":"1997:14:0"},{"baseName":{"id":13,"name":"ERC165","nameLocations":["2013:6:0"],"nodeType":"IdentifierPath","referencedDeclaration":4743,"src":"2013:6:0"},"id":14,"nodeType":"InheritanceSpecifier","src":"2013:6:0"}],"canonicalName":"AccessControl","contractDependencies":[],"contractKind":"contract","documentation":{"id":8,"nodeType":"StructuredDocumentation","src":"292:1660:0","text":" @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."},"fullyImplemented":true,"id":295,"linearizedBaseContracts":[295,4743,4755,378,3096],"name":"AccessControl","nameLocation":"1971:13:0","nodeType":"ContractDefinition","nodes":[{"canonicalName":"AccessControl.RoleData","id":21,"members":[{"constant":false,"id":18,"mutability":"mutable","name":"hasRole","nameLocation":"2085:7:0","nodeType":"VariableDeclaration","scope":21,"src":"2052:40:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":17,"keyName":"account","keyNameLocation":"2068:7:0","keyType":{"id":15,"name":"address","nodeType":"ElementaryTypeName","src":"2060:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2052:32:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":16,"name":"bool","nodeType":"ElementaryTypeName","src":"2079:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"internal"},{"constant":false,"id":20,"mutability":"mutable","name":"adminRole","nameLocation":"2110:9:0","nodeType":"VariableDeclaration","scope":21,"src":"2102:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":19,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2102:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"RoleData","nameLocation":"2033:8:0","nodeType":"StructDefinition","scope":295,"src":"2026:100:0","visibility":"public"},{"constant":false,"id":26,"mutability":"mutable","name":"_roles","nameLocation":"2174:6:0","nodeType":"VariableDeclaration","scope":295,"src":"2132:48:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData)"},"typeName":{"id":25,"keyName":"role","keyNameLocation":"2148:4:0","keyType":{"id":22,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2140:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"2132:33:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":24,"nodeType":"UserDefinedTypeName","pathNode":{"id":23,"name":"RoleData","nameLocations":["2156:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":21,"src":"2156:8:0"},"referencedDeclaration":21,"src":"2156:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$21_storage_ptr","typeString":"struct AccessControl.RoleData"}}},"visibility":"private"},{"constant":true,"functionSelector":"a217fddf","id":29,"mutability":"constant","name":"DEFAULT_ADMIN_ROLE","nameLocation":"2211:18:0","nodeType":"VariableDeclaration","scope":295,"src":"2187:49:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":27,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2187:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"30783030","id":28,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2232:4:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"public"},{"body":{"id":39,"nodeType":"Block","src":"2454:44:0","statements":[{"expression":{"arguments":[{"id":35,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":32,"src":"2475:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":34,"name":"_checkRole","nodeType":"Identifier","overloadedDeclarations":[93,114],"referencedDeclaration":93,"src":"2464:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$__$","typeString":"function (bytes32) view"}},"id":36,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2464:16:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":37,"nodeType":"ExpressionStatement","src":"2464:16:0"},{"id":38,"nodeType":"PlaceholderStatement","src":"2490:1:0"}]},"documentation":{"id":30,"nodeType":"StructuredDocumentation","src":"2243:174:0","text":" @dev Modifier that checks that an account has a specific role. Reverts\n with an {AccessControlUnauthorizedAccount} error including the required role."},"id":40,"name":"onlyRole","nameLocation":"2431:8:0","nodeType":"ModifierDefinition","parameters":{"id":33,"nodeType":"ParameterList","parameters":[{"constant":false,"id":32,"mutability":"mutable","name":"role","nameLocation":"2448:4:0","nodeType":"VariableDeclaration","scope":40,"src":"2440:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":31,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2440:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2439:14:0"},"src":"2422:76:0","virtual":false,"visibility":"internal"},{"baseFunctions":[4742],"body":{"id":61,"nodeType":"Block","src":"2656:111:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":59,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":54,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":49,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43,"src":"2673:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":51,"name":"IAccessControl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":378,"src":"2693:14:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAccessControl_$378_$","typeString":"type(contract IAccessControl)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IAccessControl_$378_$","typeString":"type(contract IAccessControl)"}],"id":50,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2688:4:0","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":52,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2688:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IAccessControl_$378","typeString":"type(contract IAccessControl)"}},"id":53,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2709:11:0","memberName":"interfaceId","nodeType":"MemberAccess","src":"2688:32:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"2673:47:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":57,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43,"src":"2748:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":55,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2724:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_AccessControl_$295_$","typeString":"type(contract super AccessControl)"}},"id":56,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2730:17:0","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":4742,"src":"2724:23:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":58,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2724:36:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2673:87:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":48,"id":60,"nodeType":"Return","src":"2666:94:0"}]},"documentation":{"id":41,"nodeType":"StructuredDocumentation","src":"2504:56:0","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":62,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"2574:17:0","nodeType":"FunctionDefinition","overrides":{"id":45,"nodeType":"OverrideSpecifier","overrides":[],"src":"2632:8:0"},"parameters":{"id":44,"nodeType":"ParameterList","parameters":[{"constant":false,"id":43,"mutability":"mutable","name":"interfaceId","nameLocation":"2599:11:0","nodeType":"VariableDeclaration","scope":62,"src":"2592:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":42,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2592:6:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2591:20:0"},"returnParameters":{"id":48,"nodeType":"ParameterList","parameters":[{"constant":false,"id":47,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":62,"src":"2650:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":46,"name":"bool","nodeType":"ElementaryTypeName","src":"2650:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2649:6:0"},"scope":295,"src":"2565:202:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[345],"body":{"id":79,"nodeType":"Block","src":"2937:53:0","statements":[{"expression":{"baseExpression":{"expression":{"baseExpression":{"id":72,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":26,"src":"2954:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":74,"indexExpression":{"id":73,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":65,"src":"2961:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2954:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$21_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":75,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2967:7:0","memberName":"hasRole","nodeType":"MemberAccess","referencedDeclaration":18,"src":"2954:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":77,"indexExpression":{"id":76,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"2975:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2954:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":71,"id":78,"nodeType":"Return","src":"2947:36:0"}]},"documentation":{"id":63,"nodeType":"StructuredDocumentation","src":"2773:76:0","text":" @dev Returns `true` if `account` has been granted `role`."},"functionSelector":"91d14854","id":80,"implemented":true,"kind":"function","modifiers":[],"name":"hasRole","nameLocation":"2863:7:0","nodeType":"FunctionDefinition","parameters":{"id":68,"nodeType":"ParameterList","parameters":[{"constant":false,"id":65,"mutability":"mutable","name":"role","nameLocation":"2879:4:0","nodeType":"VariableDeclaration","scope":80,"src":"2871:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":64,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2871:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":67,"mutability":"mutable","name":"account","nameLocation":"2893:7:0","nodeType":"VariableDeclaration","scope":80,"src":"2885:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":66,"name":"address","nodeType":"ElementaryTypeName","src":"2885:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2870:31:0"},"returnParameters":{"id":71,"nodeType":"ParameterList","parameters":[{"constant":false,"id":70,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":80,"src":"2931:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":69,"name":"bool","nodeType":"ElementaryTypeName","src":"2931:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2930:6:0"},"scope":295,"src":"2854:136:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":92,"nodeType":"Block","src":"3255:47:0","statements":[{"expression":{"arguments":[{"id":87,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":83,"src":"3276:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":88,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3078,"src":"3282:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":89,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3282:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":86,"name":"_checkRole","nodeType":"Identifier","overloadedDeclarations":[93,114],"referencedDeclaration":114,"src":"3265:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address) view"}},"id":90,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3265:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":91,"nodeType":"ExpressionStatement","src":"3265:30:0"}]},"documentation":{"id":81,"nodeType":"StructuredDocumentation","src":"2996:198:0","text":" @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier."},"id":93,"implemented":true,"kind":"function","modifiers":[],"name":"_checkRole","nameLocation":"3208:10:0","nodeType":"FunctionDefinition","parameters":{"id":84,"nodeType":"ParameterList","parameters":[{"constant":false,"id":83,"mutability":"mutable","name":"role","nameLocation":"3227:4:0","nodeType":"VariableDeclaration","scope":93,"src":"3219:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":82,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3219:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3218:14:0"},"returnParameters":{"id":85,"nodeType":"ParameterList","parameters":[],"src":"3255:0:0"},"scope":295,"src":"3199:103:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":113,"nodeType":"Block","src":"3505:124:0","statements":[{"condition":{"id":105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3519:23:0","subExpression":{"arguments":[{"id":102,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":96,"src":"3528:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":103,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":98,"src":"3534:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":101,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":80,"src":"3520:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":104,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3520:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":112,"nodeType":"IfStatement","src":"3515:108:0","trueBody":{"id":111,"nodeType":"Block","src":"3544:79:0","statements":[{"errorCall":{"arguments":[{"id":107,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":98,"src":"3598:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":108,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":96,"src":"3607:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":106,"name":"AccessControlUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"3565:32:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_bytes32_$returns$__$","typeString":"function (address,bytes32) pure"}},"id":109,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3565:47:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":110,"nodeType":"RevertStatement","src":"3558:54:0"}]}}]},"documentation":{"id":94,"nodeType":"StructuredDocumentation","src":"3308:119:0","text":" @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n is missing `role`."},"id":114,"implemented":true,"kind":"function","modifiers":[],"name":"_checkRole","nameLocation":"3441:10:0","nodeType":"FunctionDefinition","parameters":{"id":99,"nodeType":"ParameterList","parameters":[{"constant":false,"id":96,"mutability":"mutable","name":"role","nameLocation":"3460:4:0","nodeType":"VariableDeclaration","scope":114,"src":"3452:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":95,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3452:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":98,"mutability":"mutable","name":"account","nameLocation":"3474:7:0","nodeType":"VariableDeclaration","scope":114,"src":"3466:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":97,"name":"address","nodeType":"ElementaryTypeName","src":"3466:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3451:31:0"},"returnParameters":{"id":100,"nodeType":"ParameterList","parameters":[],"src":"3505:0:0"},"scope":295,"src":"3432:197:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[353],"body":{"id":127,"nodeType":"Block","src":"3884:46:0","statements":[{"expression":{"expression":{"baseExpression":{"id":122,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":26,"src":"3901:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":124,"indexExpression":{"id":123,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":117,"src":"3908:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3901:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$21_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":125,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3914:9:0","memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":20,"src":"3901:22:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":121,"id":126,"nodeType":"Return","src":"3894:29:0"}]},"documentation":{"id":115,"nodeType":"StructuredDocumentation","src":"3635:170:0","text":" @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."},"functionSelector":"248a9ca3","id":128,"implemented":true,"kind":"function","modifiers":[],"name":"getRoleAdmin","nameLocation":"3819:12:0","nodeType":"FunctionDefinition","parameters":{"id":118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":117,"mutability":"mutable","name":"role","nameLocation":"3840:4:0","nodeType":"VariableDeclaration","scope":128,"src":"3832:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":116,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3832:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3831:14:0"},"returnParameters":{"id":121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":120,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":128,"src":"3875:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":119,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3875:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3874:9:0"},"scope":295,"src":"3810:120:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[361],"body":{"id":146,"nodeType":"Block","src":"4320:42:0","statements":[{"expression":{"arguments":[{"id":142,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":131,"src":"4341:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":143,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":133,"src":"4347:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":141,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"4330:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":144,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4330:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":145,"nodeType":"ExpressionStatement","src":"4330:25:0"}]},"documentation":{"id":129,"nodeType":"StructuredDocumentation","src":"3936:285:0","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."},"functionSelector":"2f2ff15d","id":147,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"arguments":[{"id":137,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":131,"src":"4313:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":136,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":128,"src":"4300:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":138,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4300:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":139,"kind":"modifierInvocation","modifierName":{"id":135,"name":"onlyRole","nameLocations":["4291:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"4291:8:0"},"nodeType":"ModifierInvocation","src":"4291:28:0"}],"name":"grantRole","nameLocation":"4235:9:0","nodeType":"FunctionDefinition","parameters":{"id":134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":131,"mutability":"mutable","name":"role","nameLocation":"4253:4:0","nodeType":"VariableDeclaration","scope":147,"src":"4245:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":130,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4245:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":133,"mutability":"mutable","name":"account","nameLocation":"4267:7:0","nodeType":"VariableDeclaration","scope":147,"src":"4259:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":132,"name":"address","nodeType":"ElementaryTypeName","src":"4259:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4244:31:0"},"returnParameters":{"id":140,"nodeType":"ParameterList","parameters":[],"src":"4320:0:0"},"scope":295,"src":"4226:136:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[369],"body":{"id":165,"nodeType":"Block","src":"4737:43:0","statements":[{"expression":{"arguments":[{"id":161,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":150,"src":"4759:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":162,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":152,"src":"4765:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":160,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":294,"src":"4747:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":163,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4747:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":164,"nodeType":"ExpressionStatement","src":"4747:26:0"}]},"documentation":{"id":148,"nodeType":"StructuredDocumentation","src":"4368:269:0","text":" @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."},"functionSelector":"d547741f","id":166,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"arguments":[{"id":156,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":150,"src":"4730:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":155,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":128,"src":"4717:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":157,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4717:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":158,"kind":"modifierInvocation","modifierName":{"id":154,"name":"onlyRole","nameLocations":["4708:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"4708:8:0"},"nodeType":"ModifierInvocation","src":"4708:28:0"}],"name":"revokeRole","nameLocation":"4651:10:0","nodeType":"FunctionDefinition","parameters":{"id":153,"nodeType":"ParameterList","parameters":[{"constant":false,"id":150,"mutability":"mutable","name":"role","nameLocation":"4670:4:0","nodeType":"VariableDeclaration","scope":166,"src":"4662:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":149,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4662:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":152,"mutability":"mutable","name":"account","nameLocation":"4684:7:0","nodeType":"VariableDeclaration","scope":166,"src":"4676:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":151,"name":"address","nodeType":"ElementaryTypeName","src":"4676:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4661:31:0"},"returnParameters":{"id":159,"nodeType":"ParameterList","parameters":[],"src":"4737:0:0"},"scope":295,"src":"4642:138:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[377],"body":{"id":188,"nodeType":"Block","src":"5407:166:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":174,"name":"callerConfirmation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":171,"src":"5421:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":175,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3078,"src":"5443:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":176,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5443:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5421:34:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":182,"nodeType":"IfStatement","src":"5417:102:0","trueBody":{"id":181,"nodeType":"Block","src":"5457:62:0","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":178,"name":"AccessControlBadConfirmation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":308,"src":"5478:28:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":179,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5478:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":180,"nodeType":"RevertStatement","src":"5471:37:0"}]}},{"expression":{"arguments":[{"id":184,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":169,"src":"5541:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":185,"name":"callerConfirmation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":171,"src":"5547:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":183,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":294,"src":"5529:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":186,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5529:37:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":187,"nodeType":"ExpressionStatement","src":"5529:37:0"}]},"documentation":{"id":167,"nodeType":"StructuredDocumentation","src":"4786:537:0","text":" @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`.\n May emit a {RoleRevoked} event."},"functionSelector":"36568abe","id":189,"implemented":true,"kind":"function","modifiers":[],"name":"renounceRole","nameLocation":"5337:12:0","nodeType":"FunctionDefinition","parameters":{"id":172,"nodeType":"ParameterList","parameters":[{"constant":false,"id":169,"mutability":"mutable","name":"role","nameLocation":"5358:4:0","nodeType":"VariableDeclaration","scope":189,"src":"5350:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":168,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5350:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":171,"mutability":"mutable","name":"callerConfirmation","nameLocation":"5372:18:0","nodeType":"VariableDeclaration","scope":189,"src":"5364:26:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":170,"name":"address","nodeType":"ElementaryTypeName","src":"5364:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5349:42:0"},"returnParameters":{"id":173,"nodeType":"ParameterList","parameters":[],"src":"5407:0:0"},"scope":295,"src":"5328:245:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":216,"nodeType":"Block","src":"5771:174:0","statements":[{"assignments":[198],"declarations":[{"constant":false,"id":198,"mutability":"mutable","name":"previousAdminRole","nameLocation":"5789:17:0","nodeType":"VariableDeclaration","scope":216,"src":"5781:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":197,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5781:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":202,"initialValue":{"arguments":[{"id":200,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":192,"src":"5822:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":199,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":128,"src":"5809:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":201,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5809:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"5781:46:0"},{"expression":{"id":208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":203,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":26,"src":"5837:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":205,"indexExpression":{"id":204,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":192,"src":"5844:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5837:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$21_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":206,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5850:9:0","memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":20,"src":"5837:22:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":207,"name":"adminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":194,"src":"5862:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"5837:34:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":209,"nodeType":"ExpressionStatement","src":"5837:34:0"},{"eventCall":{"arguments":[{"id":211,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":192,"src":"5903:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":212,"name":"previousAdminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":198,"src":"5909:17:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":213,"name":"adminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":194,"src":"5928:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":210,"name":"RoleAdminChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":317,"src":"5886:16:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function (bytes32,bytes32,bytes32)"}},"id":214,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5886:52:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":215,"nodeType":"EmitStatement","src":"5881:57:0"}]},"documentation":{"id":190,"nodeType":"StructuredDocumentation","src":"5579:114:0","text":" @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."},"id":217,"implemented":true,"kind":"function","modifiers":[],"name":"_setRoleAdmin","nameLocation":"5707:13:0","nodeType":"FunctionDefinition","parameters":{"id":195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":192,"mutability":"mutable","name":"role","nameLocation":"5729:4:0","nodeType":"VariableDeclaration","scope":217,"src":"5721:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":191,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5721:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":194,"mutability":"mutable","name":"adminRole","nameLocation":"5743:9:0","nodeType":"VariableDeclaration","scope":217,"src":"5735:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":193,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5735:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5720:33:0"},"returnParameters":{"id":196,"nodeType":"ParameterList","parameters":[],"src":"5771:0:0"},"scope":295,"src":"5698:247:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":255,"nodeType":"Block","src":"6262:233:0","statements":[{"condition":{"id":231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6276:23:0","subExpression":{"arguments":[{"id":228,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":220,"src":"6285:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":229,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":222,"src":"6291:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":227,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":80,"src":"6277:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":230,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6277:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":253,"nodeType":"Block","src":"6452:37:0","statements":[{"expression":{"hexValue":"66616c7365","id":251,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6473:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":226,"id":252,"nodeType":"Return","src":"6466:12:0"}]},"id":254,"nodeType":"IfStatement","src":"6272:217:0","trueBody":{"id":250,"nodeType":"Block","src":"6301:145:0","statements":[{"expression":{"id":239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"id":232,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":26,"src":"6315:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":234,"indexExpression":{"id":233,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":220,"src":"6322:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6315:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$21_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":235,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6328:7:0","memberName":"hasRole","nodeType":"MemberAccess","referencedDeclaration":18,"src":"6315:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":237,"indexExpression":{"id":236,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":222,"src":"6336:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6315:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6347:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"6315:36:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":240,"nodeType":"ExpressionStatement","src":"6315:36:0"},{"eventCall":{"arguments":[{"id":242,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":220,"src":"6382:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":243,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":222,"src":"6388:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":244,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3078,"src":"6397:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":245,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6397:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":241,"name":"RoleGranted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":326,"src":"6370:11:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":246,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6370:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":247,"nodeType":"EmitStatement","src":"6365:45:0"},{"expression":{"hexValue":"74727565","id":248,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6431:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":226,"id":249,"nodeType":"Return","src":"6424:11:0"}]}}]},"documentation":{"id":218,"nodeType":"StructuredDocumentation","src":"5951:223:0","text":" @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n Internal function without access restriction.\n May emit a {RoleGranted} event."},"id":256,"implemented":true,"kind":"function","modifiers":[],"name":"_grantRole","nameLocation":"6188:10:0","nodeType":"FunctionDefinition","parameters":{"id":223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":220,"mutability":"mutable","name":"role","nameLocation":"6207:4:0","nodeType":"VariableDeclaration","scope":256,"src":"6199:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":219,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6199:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":222,"mutability":"mutable","name":"account","nameLocation":"6221:7:0","nodeType":"VariableDeclaration","scope":256,"src":"6213:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":221,"name":"address","nodeType":"ElementaryTypeName","src":"6213:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6198:31:0"},"returnParameters":{"id":226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":225,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":256,"src":"6256:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":224,"name":"bool","nodeType":"ElementaryTypeName","src":"6256:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6255:6:0"},"scope":295,"src":"6179:316:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":293,"nodeType":"Block","src":"6814:233:0","statements":[{"condition":{"arguments":[{"id":267,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":259,"src":"6836:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":268,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":261,"src":"6842:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":266,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":80,"src":"6828:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":269,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6828:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":291,"nodeType":"Block","src":"7004:37:0","statements":[{"expression":{"hexValue":"66616c7365","id":289,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7025:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":265,"id":290,"nodeType":"Return","src":"7018:12:0"}]},"id":292,"nodeType":"IfStatement","src":"6824:217:0","trueBody":{"id":288,"nodeType":"Block","src":"6852:146:0","statements":[{"expression":{"id":277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"id":270,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":26,"src":"6866:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":272,"indexExpression":{"id":271,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":259,"src":"6873:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6866:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$21_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":273,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6879:7:0","memberName":"hasRole","nodeType":"MemberAccess","referencedDeclaration":18,"src":"6866:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":275,"indexExpression":{"id":274,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":261,"src":"6887:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6866:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":276,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6898:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"6866:37:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":278,"nodeType":"ExpressionStatement","src":"6866:37:0"},{"eventCall":{"arguments":[{"id":280,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":259,"src":"6934:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":281,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":261,"src":"6940:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":282,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3078,"src":"6949:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":283,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6949:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":279,"name":"RoleRevoked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":335,"src":"6922:11:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":284,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6922:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":285,"nodeType":"EmitStatement","src":"6917:45:0"},{"expression":{"hexValue":"74727565","id":286,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6983:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":265,"id":287,"nodeType":"Return","src":"6976:11:0"}]}}]},"documentation":{"id":257,"nodeType":"StructuredDocumentation","src":"6501:224:0","text":" @dev Attempts to revoke `role` to `account` and returns a boolean indicating if `role` was revoked.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."},"id":294,"implemented":true,"kind":"function","modifiers":[],"name":"_revokeRole","nameLocation":"6739:11:0","nodeType":"FunctionDefinition","parameters":{"id":262,"nodeType":"ParameterList","parameters":[{"constant":false,"id":259,"mutability":"mutable","name":"role","nameLocation":"6759:4:0","nodeType":"VariableDeclaration","scope":294,"src":"6751:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":258,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6751:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":261,"mutability":"mutable","name":"account","nameLocation":"6773:7:0","nodeType":"VariableDeclaration","scope":294,"src":"6765:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":260,"name":"address","nodeType":"ElementaryTypeName","src":"6765:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6750:31:0"},"returnParameters":{"id":265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":264,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":294,"src":"6808:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":263,"name":"bool","nodeType":"ElementaryTypeName","src":"6808:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6807:6:0"},"scope":295,"src":"6730:317:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":296,"src":"1953:5096:0","usedErrors":[305,308],"usedEvents":[317,326,335]}],"src":"108:6942:0"},"id":0},"@openzeppelin/contracts/access/IAccessControl.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/IAccessControl.sol","exportedSymbols":{"IAccessControl":[378]},"id":379,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":297,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:1"},{"abstract":false,"baseContracts":[],"canonicalName":"IAccessControl","contractDependencies":[],"contractKind":"interface","documentation":{"id":298,"nodeType":"StructuredDocumentation","src":"135:90:1","text":" @dev External interface of AccessControl declared to support ERC-165 detection."},"fullyImplemented":false,"id":378,"linearizedBaseContracts":[378],"name":"IAccessControl","nameLocation":"236:14:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":299,"nodeType":"StructuredDocumentation","src":"257:56:1","text":" @dev The `account` is missing a role."},"errorSelector":"e2517d3f","id":305,"name":"AccessControlUnauthorizedAccount","nameLocation":"324:32:1","nodeType":"ErrorDefinition","parameters":{"id":304,"nodeType":"ParameterList","parameters":[{"constant":false,"id":301,"mutability":"mutable","name":"account","nameLocation":"365:7:1","nodeType":"VariableDeclaration","scope":305,"src":"357:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":300,"name":"address","nodeType":"ElementaryTypeName","src":"357:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":303,"mutability":"mutable","name":"neededRole","nameLocation":"382:10:1","nodeType":"VariableDeclaration","scope":305,"src":"374:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":302,"name":"bytes32","nodeType":"ElementaryTypeName","src":"374:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"356:37:1"},"src":"318:76:1"},{"documentation":{"id":306,"nodeType":"StructuredDocumentation","src":"400:148:1","text":" @dev The caller of a function is not the expected one.\n NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."},"errorSelector":"6697b232","id":308,"name":"AccessControlBadConfirmation","nameLocation":"559:28:1","nodeType":"ErrorDefinition","parameters":{"id":307,"nodeType":"ParameterList","parameters":[],"src":"587:2:1"},"src":"553:37:1"},{"anonymous":false,"documentation":{"id":309,"nodeType":"StructuredDocumentation","src":"596:254:1","text":" @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted signaling this."},"eventSelector":"bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff","id":317,"name":"RoleAdminChanged","nameLocation":"861:16:1","nodeType":"EventDefinition","parameters":{"id":316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":311,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"894:4:1","nodeType":"VariableDeclaration","scope":317,"src":"878:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":310,"name":"bytes32","nodeType":"ElementaryTypeName","src":"878:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":313,"indexed":true,"mutability":"mutable","name":"previousAdminRole","nameLocation":"916:17:1","nodeType":"VariableDeclaration","scope":317,"src":"900:33:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":312,"name":"bytes32","nodeType":"ElementaryTypeName","src":"900:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":315,"indexed":true,"mutability":"mutable","name":"newAdminRole","nameLocation":"951:12:1","nodeType":"VariableDeclaration","scope":317,"src":"935:28:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":314,"name":"bytes32","nodeType":"ElementaryTypeName","src":"935:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"877:87:1"},"src":"855:110:1"},{"anonymous":false,"documentation":{"id":318,"nodeType":"StructuredDocumentation","src":"971:295:1","text":" @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."},"eventSelector":"2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d","id":326,"name":"RoleGranted","nameLocation":"1277:11:1","nodeType":"EventDefinition","parameters":{"id":325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":320,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"1305:4:1","nodeType":"VariableDeclaration","scope":326,"src":"1289:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":319,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1289:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":322,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1327:7:1","nodeType":"VariableDeclaration","scope":326,"src":"1311:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":321,"name":"address","nodeType":"ElementaryTypeName","src":"1311:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":324,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1352:6:1","nodeType":"VariableDeclaration","scope":326,"src":"1336:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":323,"name":"address","nodeType":"ElementaryTypeName","src":"1336:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1288:71:1"},"src":"1271:89:1"},{"anonymous":false,"documentation":{"id":327,"nodeType":"StructuredDocumentation","src":"1366:275:1","text":" @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"},"eventSelector":"f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b","id":335,"name":"RoleRevoked","nameLocation":"1652:11:1","nodeType":"EventDefinition","parameters":{"id":334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":329,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"1680:4:1","nodeType":"VariableDeclaration","scope":335,"src":"1664:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":328,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1664:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":331,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1702:7:1","nodeType":"VariableDeclaration","scope":335,"src":"1686:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":330,"name":"address","nodeType":"ElementaryTypeName","src":"1686:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":333,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1727:6:1","nodeType":"VariableDeclaration","scope":335,"src":"1711:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":332,"name":"address","nodeType":"ElementaryTypeName","src":"1711:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1663:71:1"},"src":"1646:89:1"},{"documentation":{"id":336,"nodeType":"StructuredDocumentation","src":"1741:76:1","text":" @dev Returns `true` if `account` has been granted `role`."},"functionSelector":"91d14854","id":345,"implemented":false,"kind":"function","modifiers":[],"name":"hasRole","nameLocation":"1831:7:1","nodeType":"FunctionDefinition","parameters":{"id":341,"nodeType":"ParameterList","parameters":[{"constant":false,"id":338,"mutability":"mutable","name":"role","nameLocation":"1847:4:1","nodeType":"VariableDeclaration","scope":345,"src":"1839:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":337,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1839:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":340,"mutability":"mutable","name":"account","nameLocation":"1861:7:1","nodeType":"VariableDeclaration","scope":345,"src":"1853:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":339,"name":"address","nodeType":"ElementaryTypeName","src":"1853:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1838:31:1"},"returnParameters":{"id":344,"nodeType":"ParameterList","parameters":[{"constant":false,"id":343,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":345,"src":"1893:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":342,"name":"bool","nodeType":"ElementaryTypeName","src":"1893:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1892:6:1"},"scope":378,"src":"1822:77:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":346,"nodeType":"StructuredDocumentation","src":"1905:184:1","text":" @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."},"functionSelector":"248a9ca3","id":353,"implemented":false,"kind":"function","modifiers":[],"name":"getRoleAdmin","nameLocation":"2103:12:1","nodeType":"FunctionDefinition","parameters":{"id":349,"nodeType":"ParameterList","parameters":[{"constant":false,"id":348,"mutability":"mutable","name":"role","nameLocation":"2124:4:1","nodeType":"VariableDeclaration","scope":353,"src":"2116:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":347,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2116:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2115:14:1"},"returnParameters":{"id":352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":351,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":353,"src":"2153:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":350,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2153:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2152:9:1"},"scope":378,"src":"2094:68:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":354,"nodeType":"StructuredDocumentation","src":"2168:239:1","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"2f2ff15d","id":361,"implemented":false,"kind":"function","modifiers":[],"name":"grantRole","nameLocation":"2421:9:1","nodeType":"FunctionDefinition","parameters":{"id":359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":356,"mutability":"mutable","name":"role","nameLocation":"2439:4:1","nodeType":"VariableDeclaration","scope":361,"src":"2431:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":355,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2431:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":358,"mutability":"mutable","name":"account","nameLocation":"2453:7:1","nodeType":"VariableDeclaration","scope":361,"src":"2445:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":357,"name":"address","nodeType":"ElementaryTypeName","src":"2445:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2430:31:1"},"returnParameters":{"id":360,"nodeType":"ParameterList","parameters":[],"src":"2470:0:1"},"scope":378,"src":"2412:59:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":362,"nodeType":"StructuredDocumentation","src":"2477:223:1","text":" @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"d547741f","id":369,"implemented":false,"kind":"function","modifiers":[],"name":"revokeRole","nameLocation":"2714:10:1","nodeType":"FunctionDefinition","parameters":{"id":367,"nodeType":"ParameterList","parameters":[{"constant":false,"id":364,"mutability":"mutable","name":"role","nameLocation":"2733:4:1","nodeType":"VariableDeclaration","scope":369,"src":"2725:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":363,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2725:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":366,"mutability":"mutable","name":"account","nameLocation":"2747:7:1","nodeType":"VariableDeclaration","scope":369,"src":"2739:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":365,"name":"address","nodeType":"ElementaryTypeName","src":"2739:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2724:31:1"},"returnParameters":{"id":368,"nodeType":"ParameterList","parameters":[],"src":"2764:0:1"},"scope":378,"src":"2705:60:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":370,"nodeType":"StructuredDocumentation","src":"2771:491:1","text":" @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`."},"functionSelector":"36568abe","id":377,"implemented":false,"kind":"function","modifiers":[],"name":"renounceRole","nameLocation":"3276:12:1","nodeType":"FunctionDefinition","parameters":{"id":375,"nodeType":"ParameterList","parameters":[{"constant":false,"id":372,"mutability":"mutable","name":"role","nameLocation":"3297:4:1","nodeType":"VariableDeclaration","scope":377,"src":"3289:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":371,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3289:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":374,"mutability":"mutable","name":"callerConfirmation","nameLocation":"3311:18:1","nodeType":"VariableDeclaration","scope":377,"src":"3303:26:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":373,"name":"address","nodeType":"ElementaryTypeName","src":"3303:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3288:42:1"},"returnParameters":{"id":376,"nodeType":"ParameterList","parameters":[],"src":"3339:0:1"},"scope":378,"src":"3267:73:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":379,"src":"226:3116:1","usedErrors":[305,308],"usedEvents":[317,326,335]}],"src":"109:3234:1"},"id":1},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","exportedSymbols":{"IERC1155Errors":[515],"IERC20Errors":[420],"IERC721Errors":[468]},"id":516,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":380,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:2"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":381,"nodeType":"StructuredDocumentation","src":"138:141:2","text":" @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."},"fullyImplemented":true,"id":420,"linearizedBaseContracts":[420],"name":"IERC20Errors","nameLocation":"290:12:2","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":382,"nodeType":"StructuredDocumentation","src":"309:309:2","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"e450d38c","id":390,"name":"ERC20InsufficientBalance","nameLocation":"629:24:2","nodeType":"ErrorDefinition","parameters":{"id":389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":384,"mutability":"mutable","name":"sender","nameLocation":"662:6:2","nodeType":"VariableDeclaration","scope":390,"src":"654:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":383,"name":"address","nodeType":"ElementaryTypeName","src":"654:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":386,"mutability":"mutable","name":"balance","nameLocation":"678:7:2","nodeType":"VariableDeclaration","scope":390,"src":"670:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":385,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":388,"mutability":"mutable","name":"needed","nameLocation":"695:6:2","nodeType":"VariableDeclaration","scope":390,"src":"687:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":387,"name":"uint256","nodeType":"ElementaryTypeName","src":"687:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"653:49:2"},"src":"623:80:2"},{"documentation":{"id":391,"nodeType":"StructuredDocumentation","src":"709:152:2","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"96c6fd1e","id":395,"name":"ERC20InvalidSender","nameLocation":"872:18:2","nodeType":"ErrorDefinition","parameters":{"id":394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":393,"mutability":"mutable","name":"sender","nameLocation":"899:6:2","nodeType":"VariableDeclaration","scope":395,"src":"891:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":392,"name":"address","nodeType":"ElementaryTypeName","src":"891:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"890:16:2"},"src":"866:41:2"},{"documentation":{"id":396,"nodeType":"StructuredDocumentation","src":"913:159:2","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"ec442f05","id":400,"name":"ERC20InvalidReceiver","nameLocation":"1083:20:2","nodeType":"ErrorDefinition","parameters":{"id":399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":398,"mutability":"mutable","name":"receiver","nameLocation":"1112:8:2","nodeType":"VariableDeclaration","scope":400,"src":"1104:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":397,"name":"address","nodeType":"ElementaryTypeName","src":"1104:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1103:18:2"},"src":"1077:45:2"},{"documentation":{"id":401,"nodeType":"StructuredDocumentation","src":"1128:345:2","text":" @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"fb8f41b2","id":409,"name":"ERC20InsufficientAllowance","nameLocation":"1484:26:2","nodeType":"ErrorDefinition","parameters":{"id":408,"nodeType":"ParameterList","parameters":[{"constant":false,"id":403,"mutability":"mutable","name":"spender","nameLocation":"1519:7:2","nodeType":"VariableDeclaration","scope":409,"src":"1511:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":402,"name":"address","nodeType":"ElementaryTypeName","src":"1511:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":405,"mutability":"mutable","name":"allowance","nameLocation":"1536:9:2","nodeType":"VariableDeclaration","scope":409,"src":"1528:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":404,"name":"uint256","nodeType":"ElementaryTypeName","src":"1528:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":407,"mutability":"mutable","name":"needed","nameLocation":"1555:6:2","nodeType":"VariableDeclaration","scope":409,"src":"1547:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":406,"name":"uint256","nodeType":"ElementaryTypeName","src":"1547:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1510:52:2"},"src":"1478:85:2"},{"documentation":{"id":410,"nodeType":"StructuredDocumentation","src":"1569:174:2","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"e602df05","id":414,"name":"ERC20InvalidApprover","nameLocation":"1754:20:2","nodeType":"ErrorDefinition","parameters":{"id":413,"nodeType":"ParameterList","parameters":[{"constant":false,"id":412,"mutability":"mutable","name":"approver","nameLocation":"1783:8:2","nodeType":"VariableDeclaration","scope":414,"src":"1775:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":411,"name":"address","nodeType":"ElementaryTypeName","src":"1775:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1774:18:2"},"src":"1748:45:2"},{"documentation":{"id":415,"nodeType":"StructuredDocumentation","src":"1799:195:2","text":" @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"94280d62","id":419,"name":"ERC20InvalidSpender","nameLocation":"2005:19:2","nodeType":"ErrorDefinition","parameters":{"id":418,"nodeType":"ParameterList","parameters":[{"constant":false,"id":417,"mutability":"mutable","name":"spender","nameLocation":"2033:7:2","nodeType":"VariableDeclaration","scope":419,"src":"2025:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":416,"name":"address","nodeType":"ElementaryTypeName","src":"2025:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2024:17:2"},"src":"1999:43:2"}],"scope":516,"src":"280:1764:2","usedErrors":[390,395,400,409,414,419],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":421,"nodeType":"StructuredDocumentation","src":"2046:143:2","text":" @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."},"fullyImplemented":true,"id":468,"linearizedBaseContracts":[468],"name":"IERC721Errors","nameLocation":"2200:13:2","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":422,"nodeType":"StructuredDocumentation","src":"2220:219:2","text":" @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."},"errorSelector":"89c62b64","id":426,"name":"ERC721InvalidOwner","nameLocation":"2450:18:2","nodeType":"ErrorDefinition","parameters":{"id":425,"nodeType":"ParameterList","parameters":[{"constant":false,"id":424,"mutability":"mutable","name":"owner","nameLocation":"2477:5:2","nodeType":"VariableDeclaration","scope":426,"src":"2469:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":423,"name":"address","nodeType":"ElementaryTypeName","src":"2469:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2468:15:2"},"src":"2444:40:2"},{"documentation":{"id":427,"nodeType":"StructuredDocumentation","src":"2490:132:2","text":" @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."},"errorSelector":"7e273289","id":431,"name":"ERC721NonexistentToken","nameLocation":"2633:22:2","nodeType":"ErrorDefinition","parameters":{"id":430,"nodeType":"ParameterList","parameters":[{"constant":false,"id":429,"mutability":"mutable","name":"tokenId","nameLocation":"2664:7:2","nodeType":"VariableDeclaration","scope":431,"src":"2656:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":428,"name":"uint256","nodeType":"ElementaryTypeName","src":"2656:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2655:17:2"},"src":"2627:46:2"},{"documentation":{"id":432,"nodeType":"StructuredDocumentation","src":"2679:289:2","text":" @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."},"errorSelector":"64283d7b","id":440,"name":"ERC721IncorrectOwner","nameLocation":"2979:20:2","nodeType":"ErrorDefinition","parameters":{"id":439,"nodeType":"ParameterList","parameters":[{"constant":false,"id":434,"mutability":"mutable","name":"sender","nameLocation":"3008:6:2","nodeType":"VariableDeclaration","scope":440,"src":"3000:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":433,"name":"address","nodeType":"ElementaryTypeName","src":"3000:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":436,"mutability":"mutable","name":"tokenId","nameLocation":"3024:7:2","nodeType":"VariableDeclaration","scope":440,"src":"3016:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":435,"name":"uint256","nodeType":"ElementaryTypeName","src":"3016:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":438,"mutability":"mutable","name":"owner","nameLocation":"3041:5:2","nodeType":"VariableDeclaration","scope":440,"src":"3033:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":437,"name":"address","nodeType":"ElementaryTypeName","src":"3033:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2999:48:2"},"src":"2973:75:2"},{"documentation":{"id":441,"nodeType":"StructuredDocumentation","src":"3054:152:2","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"73c6ac6e","id":445,"name":"ERC721InvalidSender","nameLocation":"3217:19:2","nodeType":"ErrorDefinition","parameters":{"id":444,"nodeType":"ParameterList","parameters":[{"constant":false,"id":443,"mutability":"mutable","name":"sender","nameLocation":"3245:6:2","nodeType":"VariableDeclaration","scope":445,"src":"3237:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":442,"name":"address","nodeType":"ElementaryTypeName","src":"3237:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3236:16:2"},"src":"3211:42:2"},{"documentation":{"id":446,"nodeType":"StructuredDocumentation","src":"3259:159:2","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"64a0ae92","id":450,"name":"ERC721InvalidReceiver","nameLocation":"3429:21:2","nodeType":"ErrorDefinition","parameters":{"id":449,"nodeType":"ParameterList","parameters":[{"constant":false,"id":448,"mutability":"mutable","name":"receiver","nameLocation":"3459:8:2","nodeType":"VariableDeclaration","scope":450,"src":"3451:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":447,"name":"address","nodeType":"ElementaryTypeName","src":"3451:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3450:18:2"},"src":"3423:46:2"},{"documentation":{"id":451,"nodeType":"StructuredDocumentation","src":"3475:247:2","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."},"errorSelector":"177e802f","id":457,"name":"ERC721InsufficientApproval","nameLocation":"3733:26:2","nodeType":"ErrorDefinition","parameters":{"id":456,"nodeType":"ParameterList","parameters":[{"constant":false,"id":453,"mutability":"mutable","name":"operator","nameLocation":"3768:8:2","nodeType":"VariableDeclaration","scope":457,"src":"3760:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":452,"name":"address","nodeType":"ElementaryTypeName","src":"3760:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":455,"mutability":"mutable","name":"tokenId","nameLocation":"3786:7:2","nodeType":"VariableDeclaration","scope":457,"src":"3778:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":454,"name":"uint256","nodeType":"ElementaryTypeName","src":"3778:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3759:35:2"},"src":"3727:68:2"},{"documentation":{"id":458,"nodeType":"StructuredDocumentation","src":"3801:174:2","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"a9fbf51f","id":462,"name":"ERC721InvalidApprover","nameLocation":"3986:21:2","nodeType":"ErrorDefinition","parameters":{"id":461,"nodeType":"ParameterList","parameters":[{"constant":false,"id":460,"mutability":"mutable","name":"approver","nameLocation":"4016:8:2","nodeType":"VariableDeclaration","scope":462,"src":"4008:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":459,"name":"address","nodeType":"ElementaryTypeName","src":"4008:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4007:18:2"},"src":"3980:46:2"},{"documentation":{"id":463,"nodeType":"StructuredDocumentation","src":"4032:197:2","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"5b08ba18","id":467,"name":"ERC721InvalidOperator","nameLocation":"4240:21:2","nodeType":"ErrorDefinition","parameters":{"id":466,"nodeType":"ParameterList","parameters":[{"constant":false,"id":465,"mutability":"mutable","name":"operator","nameLocation":"4270:8:2","nodeType":"VariableDeclaration","scope":467,"src":"4262:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":464,"name":"address","nodeType":"ElementaryTypeName","src":"4262:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4261:18:2"},"src":"4234:46:2"}],"scope":516,"src":"2190:2092:2","usedErrors":[426,431,440,445,450,457,462,467],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1155Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":469,"nodeType":"StructuredDocumentation","src":"4284:145:2","text":" @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."},"fullyImplemented":true,"id":515,"linearizedBaseContracts":[515],"name":"IERC1155Errors","nameLocation":"4440:14:2","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":470,"nodeType":"StructuredDocumentation","src":"4461:361:2","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."},"errorSelector":"03dee4c5","id":480,"name":"ERC1155InsufficientBalance","nameLocation":"4833:26:2","nodeType":"ErrorDefinition","parameters":{"id":479,"nodeType":"ParameterList","parameters":[{"constant":false,"id":472,"mutability":"mutable","name":"sender","nameLocation":"4868:6:2","nodeType":"VariableDeclaration","scope":480,"src":"4860:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":471,"name":"address","nodeType":"ElementaryTypeName","src":"4860:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":474,"mutability":"mutable","name":"balance","nameLocation":"4884:7:2","nodeType":"VariableDeclaration","scope":480,"src":"4876:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":473,"name":"uint256","nodeType":"ElementaryTypeName","src":"4876:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":476,"mutability":"mutable","name":"needed","nameLocation":"4901:6:2","nodeType":"VariableDeclaration","scope":480,"src":"4893:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":475,"name":"uint256","nodeType":"ElementaryTypeName","src":"4893:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":478,"mutability":"mutable","name":"tokenId","nameLocation":"4917:7:2","nodeType":"VariableDeclaration","scope":480,"src":"4909:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":477,"name":"uint256","nodeType":"ElementaryTypeName","src":"4909:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4859:66:2"},"src":"4827:99:2"},{"documentation":{"id":481,"nodeType":"StructuredDocumentation","src":"4932:152:2","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"01a83514","id":485,"name":"ERC1155InvalidSender","nameLocation":"5095:20:2","nodeType":"ErrorDefinition","parameters":{"id":484,"nodeType":"ParameterList","parameters":[{"constant":false,"id":483,"mutability":"mutable","name":"sender","nameLocation":"5124:6:2","nodeType":"VariableDeclaration","scope":485,"src":"5116:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":482,"name":"address","nodeType":"ElementaryTypeName","src":"5116:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5115:16:2"},"src":"5089:43:2"},{"documentation":{"id":486,"nodeType":"StructuredDocumentation","src":"5138:159:2","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"57f447ce","id":490,"name":"ERC1155InvalidReceiver","nameLocation":"5308:22:2","nodeType":"ErrorDefinition","parameters":{"id":489,"nodeType":"ParameterList","parameters":[{"constant":false,"id":488,"mutability":"mutable","name":"receiver","nameLocation":"5339:8:2","nodeType":"VariableDeclaration","scope":490,"src":"5331:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":487,"name":"address","nodeType":"ElementaryTypeName","src":"5331:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5330:18:2"},"src":"5302:47:2"},{"documentation":{"id":491,"nodeType":"StructuredDocumentation","src":"5355:256:2","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."},"errorSelector":"e237d922","id":497,"name":"ERC1155MissingApprovalForAll","nameLocation":"5622:28:2","nodeType":"ErrorDefinition","parameters":{"id":496,"nodeType":"ParameterList","parameters":[{"constant":false,"id":493,"mutability":"mutable","name":"operator","nameLocation":"5659:8:2","nodeType":"VariableDeclaration","scope":497,"src":"5651:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":492,"name":"address","nodeType":"ElementaryTypeName","src":"5651:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":495,"mutability":"mutable","name":"owner","nameLocation":"5677:5:2","nodeType":"VariableDeclaration","scope":497,"src":"5669:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":494,"name":"address","nodeType":"ElementaryTypeName","src":"5669:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5650:33:2"},"src":"5616:68:2"},{"documentation":{"id":498,"nodeType":"StructuredDocumentation","src":"5690:174:2","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"3e31884e","id":502,"name":"ERC1155InvalidApprover","nameLocation":"5875:22:2","nodeType":"ErrorDefinition","parameters":{"id":501,"nodeType":"ParameterList","parameters":[{"constant":false,"id":500,"mutability":"mutable","name":"approver","nameLocation":"5906:8:2","nodeType":"VariableDeclaration","scope":502,"src":"5898:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":499,"name":"address","nodeType":"ElementaryTypeName","src":"5898:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5897:18:2"},"src":"5869:47:2"},{"documentation":{"id":503,"nodeType":"StructuredDocumentation","src":"5922:197:2","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"ced3e100","id":507,"name":"ERC1155InvalidOperator","nameLocation":"6130:22:2","nodeType":"ErrorDefinition","parameters":{"id":506,"nodeType":"ParameterList","parameters":[{"constant":false,"id":505,"mutability":"mutable","name":"operator","nameLocation":"6161:8:2","nodeType":"VariableDeclaration","scope":507,"src":"6153:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":504,"name":"address","nodeType":"ElementaryTypeName","src":"6153:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6152:18:2"},"src":"6124:47:2"},{"documentation":{"id":508,"nodeType":"StructuredDocumentation","src":"6177:280:2","text":" @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"},"errorSelector":"5b059991","id":514,"name":"ERC1155InvalidArrayLength","nameLocation":"6468:25:2","nodeType":"ErrorDefinition","parameters":{"id":513,"nodeType":"ParameterList","parameters":[{"constant":false,"id":510,"mutability":"mutable","name":"idsLength","nameLocation":"6502:9:2","nodeType":"VariableDeclaration","scope":514,"src":"6494:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":509,"name":"uint256","nodeType":"ElementaryTypeName","src":"6494:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":512,"mutability":"mutable","name":"valuesLength","nameLocation":"6521:12:2","nodeType":"VariableDeclaration","scope":514,"src":"6513:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":511,"name":"uint256","nodeType":"ElementaryTypeName","src":"6513:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6493:41:2"},"src":"6462:73:2"}],"scope":516,"src":"4430:2107:2","usedErrors":[480,485,490,497,502,507,514],"usedEvents":[]}],"src":"112:6426:2"},"id":2},"@openzeppelin/contracts/token/ERC1155/ERC1155.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/ERC1155.sol","exportedSymbols":{"Arrays":[3034],"Context":[3096],"ERC1155":[1432],"ERC1155Utils":[2156],"ERC165":[4743],"IERC1155":[1555],"IERC1155Errors":[515],"IERC1155MetadataURI":[2002],"IERC165":[4755]},"id":1433,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":517,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:3"},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155.sol","file":"./IERC1155.sol","id":519,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1433,"sourceUnit":1556,"src":"135:40:3","symbolAliases":[{"foreign":{"id":518,"name":"IERC1155","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1555,"src":"143:8:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol","file":"./extensions/IERC1155MetadataURI.sol","id":521,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1433,"sourceUnit":2003,"src":"176:73:3","symbolAliases":[{"foreign":{"id":520,"name":"IERC1155MetadataURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2002,"src":"184:19:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol","file":"./utils/ERC1155Utils.sol","id":523,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1433,"sourceUnit":2157,"src":"250:54:3","symbolAliases":[{"foreign":{"id":522,"name":"ERC1155Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2156,"src":"258:12:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":525,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1433,"sourceUnit":3097,"src":"305:48:3","symbolAliases":[{"foreign":{"id":524,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3096,"src":"313:7:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"../../utils/introspection/ERC165.sol","id":528,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1433,"sourceUnit":4744,"src":"354:69:3","symbolAliases":[{"foreign":{"id":526,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4755,"src":"362:7:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":527,"name":"ERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4743,"src":"371:6:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Arrays.sol","file":"../../utils/Arrays.sol","id":530,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1433,"sourceUnit":3035,"src":"424:46:3","symbolAliases":[{"foreign":{"id":529,"name":"Arrays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3034,"src":"432:6:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../interfaces/draft-IERC6093.sol","id":532,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1433,"sourceUnit":516,"src":"471:67:3","symbolAliases":[{"foreign":{"id":531,"name":"IERC1155Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":515,"src":"479:14:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":534,"name":"Context","nameLocations":["754:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":3096,"src":"754:7:3"},"id":535,"nodeType":"InheritanceSpecifier","src":"754:7:3"},{"baseName":{"id":536,"name":"ERC165","nameLocations":["763:6:3"],"nodeType":"IdentifierPath","referencedDeclaration":4743,"src":"763:6:3"},"id":537,"nodeType":"InheritanceSpecifier","src":"763:6:3"},{"baseName":{"id":538,"name":"IERC1155","nameLocations":["771:8:3"],"nodeType":"IdentifierPath","referencedDeclaration":1555,"src":"771:8:3"},"id":539,"nodeType":"InheritanceSpecifier","src":"771:8:3"},{"baseName":{"id":540,"name":"IERC1155MetadataURI","nameLocations":["781:19:3"],"nodeType":"IdentifierPath","referencedDeclaration":2002,"src":"781:19:3"},"id":541,"nodeType":"InheritanceSpecifier","src":"781:19:3"},{"baseName":{"id":542,"name":"IERC1155Errors","nameLocations":["802:14:3"],"nodeType":"IdentifierPath","referencedDeclaration":515,"src":"802:14:3"},"id":543,"nodeType":"InheritanceSpecifier","src":"802:14:3"}],"canonicalName":"ERC1155","contractDependencies":[],"contractKind":"contract","documentation":{"id":533,"nodeType":"StructuredDocumentation","src":"540:184:3","text":" @dev Implementation of the basic standard multi-token.\n See https://eips.ethereum.org/EIPS/eip-1155\n Originally based on code by Enjin: https://github.com/enjin/erc-1155"},"fullyImplemented":true,"id":1432,"linearizedBaseContracts":[1432,515,2002,1555,4743,4755,3096],"name":"ERC1155","nameLocation":"743:7:3","nodeType":"ContractDefinition","nodes":[{"global":false,"id":547,"libraryName":{"id":544,"name":"Arrays","nameLocations":["829:6:3"],"nodeType":"IdentifierPath","referencedDeclaration":3034,"src":"829:6:3"},"nodeType":"UsingForDirective","src":"823:27:3","typeName":{"baseType":{"id":545,"name":"uint256","nodeType":"ElementaryTypeName","src":"840:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":546,"nodeType":"ArrayTypeName","src":"840:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},{"global":false,"id":551,"libraryName":{"id":548,"name":"Arrays","nameLocations":["861:6:3"],"nodeType":"IdentifierPath","referencedDeclaration":3034,"src":"861:6:3"},"nodeType":"UsingForDirective","src":"855:27:3","typeName":{"baseType":{"id":549,"name":"address","nodeType":"ElementaryTypeName","src":"872:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":550,"nodeType":"ArrayTypeName","src":"872:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},{"constant":false,"id":557,"mutability":"mutable","name":"_balances","nameLocation":"955:9:3","nodeType":"VariableDeclaration","scope":1432,"src":"888:76:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"},"typeName":{"id":556,"keyName":"id","keyNameLocation":"904:2:3","keyType":{"id":552,"name":"uint256","nodeType":"ElementaryTypeName","src":"896:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"888:58:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":555,"keyName":"account","keyNameLocation":"926:7:3","keyType":{"id":553,"name":"address","nodeType":"ElementaryTypeName","src":"918:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"910:35:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":554,"name":"uint256","nodeType":"ElementaryTypeName","src":"937:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":563,"mutability":"mutable","name":"_operatorApprovals","nameLocation":"1041:18:3","nodeType":"VariableDeclaration","scope":1432,"src":"971:88:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"typeName":{"id":562,"keyName":"account","keyNameLocation":"987:7:3","keyType":{"id":558,"name":"address","nodeType":"ElementaryTypeName","src":"979:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"971:61:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":561,"keyName":"operator","keyNameLocation":"1014:8:3","keyType":{"id":559,"name":"address","nodeType":"ElementaryTypeName","src":"1006:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"998:33:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":560,"name":"bool","nodeType":"ElementaryTypeName","src":"1026:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"visibility":"private"},{"constant":false,"id":565,"mutability":"mutable","name":"_uri","nameLocation":"1195:4:3","nodeType":"VariableDeclaration","scope":1432,"src":"1180:19:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":564,"name":"string","nodeType":"ElementaryTypeName","src":"1180:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":575,"nodeType":"Block","src":"1281:30:3","statements":[{"expression":{"arguments":[{"id":572,"name":"uri_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":568,"src":"1299:4:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":571,"name":"_setURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1193,"src":"1291:7:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory)"}},"id":573,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1291:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":574,"nodeType":"ExpressionStatement","src":"1291:13:3"}]},"documentation":{"id":566,"nodeType":"StructuredDocumentation","src":"1206:38:3","text":" @dev See {_setURI}."},"id":576,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":569,"nodeType":"ParameterList","parameters":[{"constant":false,"id":568,"mutability":"mutable","name":"uri_","nameLocation":"1275:4:3","nodeType":"VariableDeclaration","scope":576,"src":"1261:18:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":567,"name":"string","nodeType":"ElementaryTypeName","src":"1261:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1260:20:3"},"returnParameters":{"id":570,"nodeType":"ParameterList","parameters":[],"src":"1281:0:3"},"scope":1432,"src":"1249:62:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[4742,4754],"body":{"id":606,"nodeType":"Block","src":"1486:197:3","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":587,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":579,"src":"1515:11:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":589,"name":"IERC1155","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1555,"src":"1535:8:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155_$1555_$","typeString":"type(contract IERC1155)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC1155_$1555_$","typeString":"type(contract IERC1155)"}],"id":588,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1530:4:3","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":590,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1530:14:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC1155_$1555","typeString":"type(contract IERC1155)"}},"id":591,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1545:11:3","memberName":"interfaceId","nodeType":"MemberAccess","src":"1530:26:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1515:41:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":593,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":579,"src":"1572:11:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":595,"name":"IERC1155MetadataURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2002,"src":"1592:19:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155MetadataURI_$2002_$","typeString":"type(contract IERC1155MetadataURI)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC1155MetadataURI_$2002_$","typeString":"type(contract IERC1155MetadataURI)"}],"id":594,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1587:4:3","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":596,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1587:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC1155MetadataURI_$2002","typeString":"type(contract IERC1155MetadataURI)"}},"id":597,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1613:11:3","memberName":"interfaceId","nodeType":"MemberAccess","src":"1587:37:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1572:52:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1515:109:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":602,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":579,"src":"1664:11:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":600,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1640:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC1155_$1432_$","typeString":"type(contract super ERC1155)"}},"id":601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1646:17:3","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":4742,"src":"1640:23:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":603,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1640:36:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1515:161:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":586,"id":605,"nodeType":"Return","src":"1496:180:3"}]},"documentation":{"id":577,"nodeType":"StructuredDocumentation","src":"1317:56:3","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":607,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1387:17:3","nodeType":"FunctionDefinition","overrides":{"id":583,"nodeType":"OverrideSpecifier","overrides":[{"id":581,"name":"ERC165","nameLocations":["1454:6:3"],"nodeType":"IdentifierPath","referencedDeclaration":4743,"src":"1454:6:3"},{"id":582,"name":"IERC165","nameLocations":["1462:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":4755,"src":"1462:7:3"}],"src":"1445:25:3"},"parameters":{"id":580,"nodeType":"ParameterList","parameters":[{"constant":false,"id":579,"mutability":"mutable","name":"interfaceId","nameLocation":"1412:11:3","nodeType":"VariableDeclaration","scope":607,"src":"1405:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":578,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1405:6:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1404:20:3"},"returnParameters":{"id":586,"nodeType":"ParameterList","parameters":[{"constant":false,"id":585,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":607,"src":"1480:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":584,"name":"bool","nodeType":"ElementaryTypeName","src":"1480:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1479:6:3"},"scope":1432,"src":"1378:305:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2001],"body":{"id":617,"nodeType":"Block","src":"2157:28:3","statements":[{"expression":{"id":615,"name":"_uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":565,"src":"2174:4:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":614,"id":616,"nodeType":"Return","src":"2167:11:3"}]},"documentation":{"id":608,"nodeType":"StructuredDocumentation","src":"1689:388:3","text":" @dev See {IERC1155MetadataURI-uri}.\n This implementation returns the same URI for *all* token types. It relies\n on the token type ID substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the ERC].\n Clients calling this function must replace the `\\{id\\}` substring with the\n actual token type ID."},"functionSelector":"0e89341c","id":618,"implemented":true,"kind":"function","modifiers":[],"name":"uri","nameLocation":"2091:3:3","nodeType":"FunctionDefinition","parameters":{"id":611,"nodeType":"ParameterList","parameters":[{"constant":false,"id":610,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":618,"src":"2095:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":609,"name":"uint256","nodeType":"ElementaryTypeName","src":"2095:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2094:18:3"},"returnParameters":{"id":614,"nodeType":"ParameterList","parameters":[{"constant":false,"id":613,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":618,"src":"2142:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":612,"name":"string","nodeType":"ElementaryTypeName","src":"2142:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2141:15:3"},"scope":1432,"src":"2082:103:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1493],"body":{"id":634,"nodeType":"Block","src":"2331:46:3","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":628,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":557,"src":"2348:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":630,"indexExpression":{"id":629,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":623,"src":"2358:2:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2348:13:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":632,"indexExpression":{"id":631,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":621,"src":"2362:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2348:22:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":627,"id":633,"nodeType":"Return","src":"2341:29:3"}]},"documentation":{"id":619,"nodeType":"StructuredDocumentation","src":"2191:49:3","text":" @dev See {IERC1155-balanceOf}."},"functionSelector":"00fdd58e","id":635,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"2254:9:3","nodeType":"FunctionDefinition","parameters":{"id":624,"nodeType":"ParameterList","parameters":[{"constant":false,"id":621,"mutability":"mutable","name":"account","nameLocation":"2272:7:3","nodeType":"VariableDeclaration","scope":635,"src":"2264:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":620,"name":"address","nodeType":"ElementaryTypeName","src":"2264:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":623,"mutability":"mutable","name":"id","nameLocation":"2289:2:3","nodeType":"VariableDeclaration","scope":635,"src":"2281:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":622,"name":"uint256","nodeType":"ElementaryTypeName","src":"2281:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2263:29:3"},"returnParameters":{"id":627,"nodeType":"ParameterList","parameters":[{"constant":false,"id":626,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":635,"src":"2322:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":625,"name":"uint256","nodeType":"ElementaryTypeName","src":"2322:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2321:9:3"},"scope":1432,"src":"2245:132:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1506],"body":{"id":704,"nodeType":"Block","src":"2676:410:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":648,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":639,"src":"2690:8:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2699:6:3","memberName":"length","nodeType":"MemberAccess","src":"2690:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":650,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":642,"src":"2709:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2713:6:3","memberName":"length","nodeType":"MemberAccess","src":"2709:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2690:29:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":661,"nodeType":"IfStatement","src":"2686:121:3","trueBody":{"id":660,"nodeType":"Block","src":"2721:86:3","statements":[{"errorCall":{"arguments":[{"expression":{"id":654,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":642,"src":"2768:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2772:6:3","memberName":"length","nodeType":"MemberAccess","src":"2768:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":656,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":639,"src":"2780:8:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2789:6:3","memberName":"length","nodeType":"MemberAccess","src":"2780:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":653,"name":"ERC1155InvalidArrayLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":514,"src":"2742:25:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":658,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2742:54:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":659,"nodeType":"RevertStatement","src":"2735:61:3"}]}},{"assignments":[666],"declarations":[{"constant":false,"id":666,"mutability":"mutable","name":"batchBalances","nameLocation":"2834:13:3","nodeType":"VariableDeclaration","scope":704,"src":"2817:30:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":664,"name":"uint256","nodeType":"ElementaryTypeName","src":"2817:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":665,"nodeType":"ArrayTypeName","src":"2817:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":673,"initialValue":{"arguments":[{"expression":{"id":670,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":639,"src":"2864:8:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2873:6:3","memberName":"length","nodeType":"MemberAccess","src":"2864:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":669,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2850:13:3","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":667,"name":"uint256","nodeType":"ElementaryTypeName","src":"2854:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":668,"nodeType":"ArrayTypeName","src":"2854:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":672,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2850:30:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"2817:63:3"},{"body":{"id":700,"nodeType":"Block","src":"2937:112:3","statements":[{"expression":{"id":698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":685,"name":"batchBalances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":666,"src":"2951:13:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":687,"indexExpression":{"id":686,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":675,"src":"2965:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2951:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":691,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":675,"src":"3008:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":689,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":639,"src":"2980:8:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2989:18:3","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":2974,"src":"2980:27:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_address_$dyn_memory_ptr_$_t_uint256_$returns$_t_address_$attached_to$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (address[] memory,uint256) pure returns (address)"}},"id":692,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2980:30:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":695,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":675,"src":"3035:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":693,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":642,"src":"3012:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3016:18:3","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":3000,"src":"3012:22:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":696,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3012:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":688,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":635,"src":"2970:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256) view returns (uint256)"}},"id":697,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2970:68:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2951:87:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":699,"nodeType":"ExpressionStatement","src":"2951:87:3"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":678,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":675,"src":"2911:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":679,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":639,"src":"2915:8:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2924:6:3","memberName":"length","nodeType":"MemberAccess","src":"2915:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2911:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":701,"initializationExpression":{"assignments":[675],"declarations":[{"constant":false,"id":675,"mutability":"mutable","name":"i","nameLocation":"2904:1:3","nodeType":"VariableDeclaration","scope":701,"src":"2896:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":674,"name":"uint256","nodeType":"ElementaryTypeName","src":"2896:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":677,"initialValue":{"hexValue":"30","id":676,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2908:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2896:13:3"},"loopExpression":{"expression":{"id":683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"2932:3:3","subExpression":{"id":682,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":675,"src":"2934:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":684,"nodeType":"ExpressionStatement","src":"2932:3:3"},"nodeType":"ForStatement","src":"2891:158:3"},{"expression":{"id":702,"name":"batchBalances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":666,"src":"3066:13:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":647,"id":703,"nodeType":"Return","src":"3059:20:3"}]},"documentation":{"id":636,"nodeType":"StructuredDocumentation","src":"2383:146:3","text":" @dev See {IERC1155-balanceOfBatch}.\n Requirements:\n - `accounts` and `ids` must have the same length."},"functionSelector":"4e1273f4","id":705,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOfBatch","nameLocation":"2543:14:3","nodeType":"FunctionDefinition","parameters":{"id":643,"nodeType":"ParameterList","parameters":[{"constant":false,"id":639,"mutability":"mutable","name":"accounts","nameLocation":"2584:8:3","nodeType":"VariableDeclaration","scope":705,"src":"2567:25:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":637,"name":"address","nodeType":"ElementaryTypeName","src":"2567:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":638,"nodeType":"ArrayTypeName","src":"2567:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":642,"mutability":"mutable","name":"ids","nameLocation":"2619:3:3","nodeType":"VariableDeclaration","scope":705,"src":"2602:20:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":640,"name":"uint256","nodeType":"ElementaryTypeName","src":"2602:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":641,"nodeType":"ArrayTypeName","src":"2602:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2557:71:3"},"returnParameters":{"id":647,"nodeType":"ParameterList","parameters":[{"constant":false,"id":646,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":705,"src":"2658:16:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":644,"name":"uint256","nodeType":"ElementaryTypeName","src":"2658:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":645,"nodeType":"ArrayTypeName","src":"2658:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2657:18:3"},"scope":1432,"src":"2534:552:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1514],"body":{"id":720,"nodeType":"Block","src":"3229:69:3","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":714,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3078,"src":"3258:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":715,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3258:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":716,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":708,"src":"3272:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":717,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":710,"src":"3282:8:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":713,"name":"_setApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1415,"src":"3239:18:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":718,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3239:52:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":719,"nodeType":"ExpressionStatement","src":"3239:52:3"}]},"documentation":{"id":706,"nodeType":"StructuredDocumentation","src":"3092:57:3","text":" @dev See {IERC1155-setApprovalForAll}."},"functionSelector":"a22cb465","id":721,"implemented":true,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"3163:17:3","nodeType":"FunctionDefinition","parameters":{"id":711,"nodeType":"ParameterList","parameters":[{"constant":false,"id":708,"mutability":"mutable","name":"operator","nameLocation":"3189:8:3","nodeType":"VariableDeclaration","scope":721,"src":"3181:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":707,"name":"address","nodeType":"ElementaryTypeName","src":"3181:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":710,"mutability":"mutable","name":"approved","nameLocation":"3204:8:3","nodeType":"VariableDeclaration","scope":721,"src":"3199:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":709,"name":"bool","nodeType":"ElementaryTypeName","src":"3199:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3180:33:3"},"returnParameters":{"id":712,"nodeType":"ParameterList","parameters":[],"src":"3229:0:3"},"scope":1432,"src":"3154:144:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1524],"body":{"id":737,"nodeType":"Block","src":"3461:61:3","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":731,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":563,"src":"3478:18:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":733,"indexExpression":{"id":732,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":724,"src":"3497:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3478:27:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":735,"indexExpression":{"id":734,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":726,"src":"3506:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3478:37:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":730,"id":736,"nodeType":"Return","src":"3471:44:3"}]},"documentation":{"id":722,"nodeType":"StructuredDocumentation","src":"3304:56:3","text":" @dev See {IERC1155-isApprovedForAll}."},"functionSelector":"e985e9c5","id":738,"implemented":true,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"3374:16:3","nodeType":"FunctionDefinition","parameters":{"id":727,"nodeType":"ParameterList","parameters":[{"constant":false,"id":724,"mutability":"mutable","name":"account","nameLocation":"3399:7:3","nodeType":"VariableDeclaration","scope":738,"src":"3391:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":723,"name":"address","nodeType":"ElementaryTypeName","src":"3391:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":726,"mutability":"mutable","name":"operator","nameLocation":"3416:8:3","nodeType":"VariableDeclaration","scope":738,"src":"3408:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":725,"name":"address","nodeType":"ElementaryTypeName","src":"3408:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3390:35:3"},"returnParameters":{"id":730,"nodeType":"ParameterList","parameters":[{"constant":false,"id":729,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":738,"src":"3455:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":728,"name":"bool","nodeType":"ElementaryTypeName","src":"3455:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3454:6:3"},"scope":1432,"src":"3365:157:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1538],"body":{"id":781,"nodeType":"Block","src":"3702:238:3","statements":[{"assignments":[753],"declarations":[{"constant":false,"id":753,"mutability":"mutable","name":"sender","nameLocation":"3720:6:3","nodeType":"VariableDeclaration","scope":781,"src":"3712:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":752,"name":"address","nodeType":"ElementaryTypeName","src":"3712:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":756,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":754,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3078,"src":"3729:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":755,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3729:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3712:29:3"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":757,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":741,"src":"3755:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":758,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":753,"src":"3763:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3755:14:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3773:31:3","subExpression":{"arguments":[{"id":761,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":741,"src":"3791:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":762,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":753,"src":"3797:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":760,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":738,"src":"3774:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":763,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3774:30:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3755:49:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":772,"nodeType":"IfStatement","src":"3751:129:3","trueBody":{"id":771,"nodeType":"Block","src":"3806:74:3","statements":[{"errorCall":{"arguments":[{"id":767,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":753,"src":"3856:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":768,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":741,"src":"3864:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":766,"name":"ERC1155MissingApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":497,"src":"3827:28:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_address_$returns$__$","typeString":"function (address,address) pure"}},"id":769,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3827:42:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":770,"nodeType":"RevertStatement","src":"3820:49:3"}]}},{"expression":{"arguments":[{"id":774,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":741,"src":"3907:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":775,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":743,"src":"3913:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":776,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":745,"src":"3917:2:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":777,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":747,"src":"3921:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":778,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":749,"src":"3928:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":773,"name":"_safeTransferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1127,"src":"3889:17:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,uint256,bytes memory)"}},"id":779,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3889:44:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":780,"nodeType":"ExpressionStatement","src":"3889:44:3"}]},"documentation":{"id":739,"nodeType":"StructuredDocumentation","src":"3528:56:3","text":" @dev See {IERC1155-safeTransferFrom}."},"functionSelector":"f242432a","id":782,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"3598:16:3","nodeType":"FunctionDefinition","parameters":{"id":750,"nodeType":"ParameterList","parameters":[{"constant":false,"id":741,"mutability":"mutable","name":"from","nameLocation":"3623:4:3","nodeType":"VariableDeclaration","scope":782,"src":"3615:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":740,"name":"address","nodeType":"ElementaryTypeName","src":"3615:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":743,"mutability":"mutable","name":"to","nameLocation":"3637:2:3","nodeType":"VariableDeclaration","scope":782,"src":"3629:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":742,"name":"address","nodeType":"ElementaryTypeName","src":"3629:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":745,"mutability":"mutable","name":"id","nameLocation":"3649:2:3","nodeType":"VariableDeclaration","scope":782,"src":"3641:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":744,"name":"uint256","nodeType":"ElementaryTypeName","src":"3641:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":747,"mutability":"mutable","name":"value","nameLocation":"3661:5:3","nodeType":"VariableDeclaration","scope":782,"src":"3653:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":746,"name":"uint256","nodeType":"ElementaryTypeName","src":"3653:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":749,"mutability":"mutable","name":"data","nameLocation":"3681:4:3","nodeType":"VariableDeclaration","scope":782,"src":"3668:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":748,"name":"bytes","nodeType":"ElementaryTypeName","src":"3668:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3614:72:3"},"returnParameters":{"id":751,"nodeType":"ParameterList","parameters":[],"src":"3702:0:3"},"scope":1432,"src":"3589:351:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1554],"body":{"id":827,"nodeType":"Block","src":"4196:245:3","statements":[{"assignments":[799],"declarations":[{"constant":false,"id":799,"mutability":"mutable","name":"sender","nameLocation":"4214:6:3","nodeType":"VariableDeclaration","scope":827,"src":"4206:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":798,"name":"address","nodeType":"ElementaryTypeName","src":"4206:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":802,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":800,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3078,"src":"4223:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":801,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4223:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4206:29:3"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":803,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":785,"src":"4249:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":804,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":799,"src":"4257:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4249:14:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4267:31:3","subExpression":{"arguments":[{"id":807,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":785,"src":"4285:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":808,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":799,"src":"4291:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":806,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":738,"src":"4268:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":809,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4268:30:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4249:49:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":818,"nodeType":"IfStatement","src":"4245:129:3","trueBody":{"id":817,"nodeType":"Block","src":"4300:74:3","statements":[{"errorCall":{"arguments":[{"id":813,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":799,"src":"4350:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":814,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":785,"src":"4358:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":812,"name":"ERC1155MissingApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":497,"src":"4321:28:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_address_$returns$__$","typeString":"function (address,address) pure"}},"id":815,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4321:42:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":816,"nodeType":"RevertStatement","src":"4314:49:3"}]}},{"expression":{"arguments":[{"id":820,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":785,"src":"4406:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":821,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":787,"src":"4412:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":822,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":790,"src":"4416:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":823,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":793,"src":"4421:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":824,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":795,"src":"4429:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":819,"name":"_safeBatchTransferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1182,"src":"4383:22:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":825,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4383:51:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":826,"nodeType":"ExpressionStatement","src":"4383:51:3"}]},"documentation":{"id":783,"nodeType":"StructuredDocumentation","src":"3946:61:3","text":" @dev See {IERC1155-safeBatchTransferFrom}."},"functionSelector":"2eb2c2d6","id":828,"implemented":true,"kind":"function","modifiers":[],"name":"safeBatchTransferFrom","nameLocation":"4021:21:3","nodeType":"FunctionDefinition","parameters":{"id":796,"nodeType":"ParameterList","parameters":[{"constant":false,"id":785,"mutability":"mutable","name":"from","nameLocation":"4060:4:3","nodeType":"VariableDeclaration","scope":828,"src":"4052:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":784,"name":"address","nodeType":"ElementaryTypeName","src":"4052:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":787,"mutability":"mutable","name":"to","nameLocation":"4082:2:3","nodeType":"VariableDeclaration","scope":828,"src":"4074:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":786,"name":"address","nodeType":"ElementaryTypeName","src":"4074:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":790,"mutability":"mutable","name":"ids","nameLocation":"4111:3:3","nodeType":"VariableDeclaration","scope":828,"src":"4094:20:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":788,"name":"uint256","nodeType":"ElementaryTypeName","src":"4094:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":789,"nodeType":"ArrayTypeName","src":"4094:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":793,"mutability":"mutable","name":"values","nameLocation":"4141:6:3","nodeType":"VariableDeclaration","scope":828,"src":"4124:23:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":791,"name":"uint256","nodeType":"ElementaryTypeName","src":"4124:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":792,"nodeType":"ArrayTypeName","src":"4124:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":795,"mutability":"mutable","name":"data","nameLocation":"4170:4:3","nodeType":"VariableDeclaration","scope":828,"src":"4157:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":794,"name":"bytes","nodeType":"ElementaryTypeName","src":"4157:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4042:138:3"},"returnParameters":{"id":797,"nodeType":"ParameterList","parameters":[],"src":"4196:0:3"},"scope":1432,"src":"4012:429:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":980,"nodeType":"Block","src":"5249:1174:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":842,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":836,"src":"5263:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5267:6:3","memberName":"length","nodeType":"MemberAccess","src":"5263:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":844,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":839,"src":"5277:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5284:6:3","memberName":"length","nodeType":"MemberAccess","src":"5277:13:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5263:27:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":855,"nodeType":"IfStatement","src":"5259:117:3","trueBody":{"id":854,"nodeType":"Block","src":"5292:84:3","statements":[{"errorCall":{"arguments":[{"expression":{"id":848,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":836,"src":"5339:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5343:6:3","memberName":"length","nodeType":"MemberAccess","src":"5339:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":850,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":839,"src":"5351:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5358:6:3","memberName":"length","nodeType":"MemberAccess","src":"5351:13:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":847,"name":"ERC1155InvalidArrayLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":514,"src":"5313:25:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":852,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5313:52:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":853,"nodeType":"RevertStatement","src":"5306:59:3"}]}},{"assignments":[857],"declarations":[{"constant":false,"id":857,"mutability":"mutable","name":"operator","nameLocation":"5394:8:3","nodeType":"VariableDeclaration","scope":980,"src":"5386:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":856,"name":"address","nodeType":"ElementaryTypeName","src":"5386:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":860,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":858,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3078,"src":"5405:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":859,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5405:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5386:31:3"},{"body":{"id":941,"nodeType":"Block","src":"5469:650:3","statements":[{"assignments":[873],"declarations":[{"constant":false,"id":873,"mutability":"mutable","name":"id","nameLocation":"5491:2:3","nodeType":"VariableDeclaration","scope":941,"src":"5483:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":872,"name":"uint256","nodeType":"ElementaryTypeName","src":"5483:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":878,"initialValue":{"arguments":[{"id":876,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":862,"src":"5519:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":874,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":836,"src":"5496:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5500:18:3","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":3000,"src":"5496:22:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":877,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5496:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5483:38:3"},{"assignments":[880],"declarations":[{"constant":false,"id":880,"mutability":"mutable","name":"value","nameLocation":"5543:5:3","nodeType":"VariableDeclaration","scope":941,"src":"5535:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":879,"name":"uint256","nodeType":"ElementaryTypeName","src":"5535:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":885,"initialValue":{"arguments":[{"id":883,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":862,"src":"5577:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":881,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":839,"src":"5551:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5558:18:3","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":3000,"src":"5551:25:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":884,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5551:28:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5535:44:3"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":886,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":831,"src":"5598:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":889,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5614:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":888,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5606:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":887,"name":"address","nodeType":"ElementaryTypeName","src":"5606:7:3","typeDescriptions":{}}},"id":890,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5606:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5598:18:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":924,"nodeType":"IfStatement","src":"5594:420:3","trueBody":{"id":923,"nodeType":"Block","src":"5618:396:3","statements":[{"assignments":[893],"declarations":[{"constant":false,"id":893,"mutability":"mutable","name":"fromBalance","nameLocation":"5644:11:3","nodeType":"VariableDeclaration","scope":923,"src":"5636:19:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":892,"name":"uint256","nodeType":"ElementaryTypeName","src":"5636:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":899,"initialValue":{"baseExpression":{"baseExpression":{"id":894,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":557,"src":"5658:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":896,"indexExpression":{"id":895,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":873,"src":"5668:2:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5658:13:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":898,"indexExpression":{"id":897,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":831,"src":"5672:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5658:19:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5636:41:3"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":900,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":893,"src":"5699:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":901,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":880,"src":"5713:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5699:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":911,"nodeType":"IfStatement","src":"5695:129:3","trueBody":{"id":910,"nodeType":"Block","src":"5720:104:3","statements":[{"errorCall":{"arguments":[{"id":904,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":831,"src":"5776:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":905,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":893,"src":"5782:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":906,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":880,"src":"5795:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":907,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":873,"src":"5802:2:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":903,"name":"ERC1155InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":480,"src":"5749:26:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256,uint256) pure"}},"id":908,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5749:56:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":909,"nodeType":"RevertStatement","src":"5742:63:3"}]}},{"id":922,"nodeType":"UncheckedBlock","src":"5841:159:3","statements":[{"expression":{"id":920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":912,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":557,"src":"5940:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":915,"indexExpression":{"id":913,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":873,"src":"5950:2:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5940:13:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":916,"indexExpression":{"id":914,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":831,"src":"5954:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5940:19:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":917,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":893,"src":"5962:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":918,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":880,"src":"5976:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5962:19:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5940:41:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":921,"nodeType":"ExpressionStatement","src":"5940:41:3"}]}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":925,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":833,"src":"6032:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":928,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6046:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":927,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6038:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":926,"name":"address","nodeType":"ElementaryTypeName","src":"6038:7:3","typeDescriptions":{}}},"id":929,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6038:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6032:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":940,"nodeType":"IfStatement","src":"6028:81:3","trueBody":{"id":939,"nodeType":"Block","src":"6050:59:3","statements":[{"expression":{"id":937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":931,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":557,"src":"6068:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":934,"indexExpression":{"id":932,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":873,"src":"6078:2:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6068:13:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":935,"indexExpression":{"id":933,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":833,"src":"6082:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6068:17:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":936,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":880,"src":"6089:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6068:26:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":938,"nodeType":"ExpressionStatement","src":"6068:26:3"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":865,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":862,"src":"5448:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":866,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":836,"src":"5452:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5456:6:3","memberName":"length","nodeType":"MemberAccess","src":"5452:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5448:14:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":942,"initializationExpression":{"assignments":[862],"declarations":[{"constant":false,"id":862,"mutability":"mutable","name":"i","nameLocation":"5441:1:3","nodeType":"VariableDeclaration","scope":942,"src":"5433:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":861,"name":"uint256","nodeType":"ElementaryTypeName","src":"5433:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":864,"initialValue":{"hexValue":"30","id":863,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5445:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5433:13:3"},"loopExpression":{"expression":{"id":870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"5464:3:3","subExpression":{"id":869,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":862,"src":"5466:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":871,"nodeType":"ExpressionStatement","src":"5464:3:3"},"nodeType":"ForStatement","src":"5428:691:3"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":943,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":836,"src":"6133:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6137:6:3","memberName":"length","nodeType":"MemberAccess","src":"6133:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":945,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6147:1:3","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6133:15:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":978,"nodeType":"Block","src":"6341:76:3","statements":[{"eventCall":{"arguments":[{"id":971,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":857,"src":"6374:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":972,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":831,"src":"6384:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":973,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":833,"src":"6390:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":974,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":836,"src":"6394:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":975,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":839,"src":"6399:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":970,"name":"TransferBatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1467,"src":"6360:13:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory)"}},"id":976,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6360:46:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":977,"nodeType":"EmitStatement","src":"6355:51:3"}]},"id":979,"nodeType":"IfStatement","src":"6129:288:3","trueBody":{"id":969,"nodeType":"Block","src":"6150:185:3","statements":[{"assignments":[948],"declarations":[{"constant":false,"id":948,"mutability":"mutable","name":"id","nameLocation":"6172:2:3","nodeType":"VariableDeclaration","scope":969,"src":"6164:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":947,"name":"uint256","nodeType":"ElementaryTypeName","src":"6164:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":953,"initialValue":{"arguments":[{"hexValue":"30","id":951,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6200:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":949,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":836,"src":"6177:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6181:18:3","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":3000,"src":"6177:22:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":952,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6177:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6164:38:3"},{"assignments":[955],"declarations":[{"constant":false,"id":955,"mutability":"mutable","name":"value","nameLocation":"6224:5:3","nodeType":"VariableDeclaration","scope":969,"src":"6216:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":954,"name":"uint256","nodeType":"ElementaryTypeName","src":"6216:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":960,"initialValue":{"arguments":[{"hexValue":"30","id":958,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6258:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":956,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":839,"src":"6232:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6239:18:3","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":3000,"src":"6232:25:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":959,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6232:28:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6216:44:3"},{"eventCall":{"arguments":[{"id":962,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":857,"src":"6294:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":963,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":831,"src":"6304:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":964,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":833,"src":"6310:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":965,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":948,"src":"6314:2:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":966,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":955,"src":"6318:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":961,"name":"TransferSingle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1452,"src":"6279:14:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,address,uint256,uint256)"}},"id":967,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6279:45:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":968,"nodeType":"EmitStatement","src":"6274:50:3"}]}}]},"documentation":{"id":829,"nodeType":"StructuredDocumentation","src":"4447:690:3","text":" @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`. Will mint (or burn) if `from`\n (or `to`) is the zero address.\n Emits a {TransferSingle} event if the arrays contain one element, and {TransferBatch} otherwise.\n Requirements:\n - If `to` refers to a smart contract, it must implement either {IERC1155Receiver-onERC1155Received}\n   or {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\n - `ids` and `values` must have the same length.\n NOTE: The ERC-1155 acceptance check is not performed in this function. See {_updateWithAcceptanceCheck} instead."},"id":981,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"5151:7:3","nodeType":"FunctionDefinition","parameters":{"id":840,"nodeType":"ParameterList","parameters":[{"constant":false,"id":831,"mutability":"mutable","name":"from","nameLocation":"5167:4:3","nodeType":"VariableDeclaration","scope":981,"src":"5159:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":830,"name":"address","nodeType":"ElementaryTypeName","src":"5159:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":833,"mutability":"mutable","name":"to","nameLocation":"5181:2:3","nodeType":"VariableDeclaration","scope":981,"src":"5173:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":832,"name":"address","nodeType":"ElementaryTypeName","src":"5173:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":836,"mutability":"mutable","name":"ids","nameLocation":"5202:3:3","nodeType":"VariableDeclaration","scope":981,"src":"5185:20:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":834,"name":"uint256","nodeType":"ElementaryTypeName","src":"5185:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":835,"nodeType":"ArrayTypeName","src":"5185:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":839,"mutability":"mutable","name":"values","nameLocation":"5224:6:3","nodeType":"VariableDeclaration","scope":981,"src":"5207:23:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":837,"name":"uint256","nodeType":"ElementaryTypeName","src":"5207:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":838,"nodeType":"ArrayTypeName","src":"5207:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"5158:73:3"},"returnParameters":{"id":841,"nodeType":"ParameterList","parameters":[],"src":"5249:0:3"},"scope":1432,"src":"5142:1281:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1060,"nodeType":"Block","src":"7193:509:3","statements":[{"expression":{"arguments":[{"id":998,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":984,"src":"7211:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":999,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":986,"src":"7217:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1000,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":989,"src":"7221:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1001,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":992,"src":"7226:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":997,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":981,"src":"7203:7:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory)"}},"id":1002,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7203:30:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1003,"nodeType":"ExpressionStatement","src":"7203:30:3"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1004,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":986,"src":"7247:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1007,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7261:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1006,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7253:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1005,"name":"address","nodeType":"ElementaryTypeName","src":"7253:7:3","typeDescriptions":{}}},"id":1008,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7253:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7247:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1059,"nodeType":"IfStatement","src":"7243:453:3","trueBody":{"id":1058,"nodeType":"Block","src":"7265:431:3","statements":[{"assignments":[1011],"declarations":[{"constant":false,"id":1011,"mutability":"mutable","name":"operator","nameLocation":"7287:8:3","nodeType":"VariableDeclaration","scope":1058,"src":"7279:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1010,"name":"address","nodeType":"ElementaryTypeName","src":"7279:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1014,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1012,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3078,"src":"7298:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1013,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7298:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"7279:31:3"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1015,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":989,"src":"7328:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7332:6:3","memberName":"length","nodeType":"MemberAccess","src":"7328:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":1017,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7342:1:3","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7328:15:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1056,"nodeType":"Block","src":"7574:112:3","statements":[{"expression":{"arguments":[{"id":1048,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1011,"src":"7633:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1049,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":984,"src":"7643:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1050,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":986,"src":"7649:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1051,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":989,"src":"7653:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1052,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":992,"src":"7658:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1053,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":994,"src":"7666:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1045,"name":"ERC1155Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2156,"src":"7592:12:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1155Utils_$2156_$","typeString":"type(library ERC1155Utils)"}},"id":1047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7605:27:3","memberName":"checkOnERC1155BatchReceived","nodeType":"MemberAccess","referencedDeclaration":2155,"src":"7592:40:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":1054,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7592:79:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1055,"nodeType":"ExpressionStatement","src":"7592:79:3"}]},"id":1057,"nodeType":"IfStatement","src":"7324:362:3","trueBody":{"id":1044,"nodeType":"Block","src":"7345:223:3","statements":[{"assignments":[1020],"declarations":[{"constant":false,"id":1020,"mutability":"mutable","name":"id","nameLocation":"7371:2:3","nodeType":"VariableDeclaration","scope":1044,"src":"7363:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1019,"name":"uint256","nodeType":"ElementaryTypeName","src":"7363:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1025,"initialValue":{"arguments":[{"hexValue":"30","id":1023,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7399:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":1021,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":989,"src":"7376:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7380:18:3","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":3000,"src":"7376:22:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":1024,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7376:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7363:38:3"},{"assignments":[1027],"declarations":[{"constant":false,"id":1027,"mutability":"mutable","name":"value","nameLocation":"7427:5:3","nodeType":"VariableDeclaration","scope":1044,"src":"7419:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1026,"name":"uint256","nodeType":"ElementaryTypeName","src":"7419:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1032,"initialValue":{"arguments":[{"hexValue":"30","id":1030,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7461:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":1028,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":992,"src":"7435:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1029,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7442:18:3","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":3000,"src":"7435:25:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":1031,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7435:28:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7419:44:3"},{"expression":{"arguments":[{"id":1036,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1011,"src":"7517:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1037,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":984,"src":"7527:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1038,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":986,"src":"7533:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1039,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1020,"src":"7537:2:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1040,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1027,"src":"7541:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1041,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":994,"src":"7548:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1033,"name":"ERC1155Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2156,"src":"7481:12:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1155Utils_$2156_$","typeString":"type(library ERC1155Utils)"}},"id":1035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7494:22:3","memberName":"checkOnERC1155Received","nodeType":"MemberAccess","referencedDeclaration":2081,"src":"7481:35:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,uint256,bytes memory)"}},"id":1042,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7481:72:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1043,"nodeType":"ExpressionStatement","src":"7481:72:3"}]}}]}}]},"documentation":{"id":982,"nodeType":"StructuredDocumentation","src":"6429:568:3","text":" @dev Version of {_update} that performs the token acceptance check by calling\n {IERC1155Receiver-onERC1155Received} or {IERC1155Receiver-onERC1155BatchReceived} on the receiver address if it\n contains code (eg. is a smart contract at the moment of execution).\n IMPORTANT: Overriding this function is discouraged because it poses a reentrancy risk from the receiver. So any\n update to the contract state after this function would break the check-effect-interaction pattern. Consider\n overriding {_update} instead."},"id":1061,"implemented":true,"kind":"function","modifiers":[],"name":"_updateWithAcceptanceCheck","nameLocation":"7011:26:3","nodeType":"FunctionDefinition","parameters":{"id":995,"nodeType":"ParameterList","parameters":[{"constant":false,"id":984,"mutability":"mutable","name":"from","nameLocation":"7055:4:3","nodeType":"VariableDeclaration","scope":1061,"src":"7047:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":983,"name":"address","nodeType":"ElementaryTypeName","src":"7047:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":986,"mutability":"mutable","name":"to","nameLocation":"7077:2:3","nodeType":"VariableDeclaration","scope":1061,"src":"7069:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":985,"name":"address","nodeType":"ElementaryTypeName","src":"7069:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":989,"mutability":"mutable","name":"ids","nameLocation":"7106:3:3","nodeType":"VariableDeclaration","scope":1061,"src":"7089:20:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":987,"name":"uint256","nodeType":"ElementaryTypeName","src":"7089:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":988,"nodeType":"ArrayTypeName","src":"7089:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":992,"mutability":"mutable","name":"values","nameLocation":"7136:6:3","nodeType":"VariableDeclaration","scope":1061,"src":"7119:23:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":990,"name":"uint256","nodeType":"ElementaryTypeName","src":"7119:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":991,"nodeType":"ArrayTypeName","src":"7119:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":994,"mutability":"mutable","name":"data","nameLocation":"7165:4:3","nodeType":"VariableDeclaration","scope":1061,"src":"7152:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":993,"name":"bytes","nodeType":"ElementaryTypeName","src":"7152:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7037:138:3"},"returnParameters":{"id":996,"nodeType":"ParameterList","parameters":[],"src":"7193:0:3"},"scope":1432,"src":"7002:700:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1126,"nodeType":"Block","src":"8267:355:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1075,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1066,"src":"8281:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1078,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8295:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1077,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8287:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1076,"name":"address","nodeType":"ElementaryTypeName","src":"8287:7:3","typeDescriptions":{}}},"id":1079,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8287:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8281:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1089,"nodeType":"IfStatement","src":"8277:88:3","trueBody":{"id":1088,"nodeType":"Block","src":"8299:66:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1084,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8351:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1083,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8343:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1082,"name":"address","nodeType":"ElementaryTypeName","src":"8343:7:3","typeDescriptions":{}}},"id":1085,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8343:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1081,"name":"ERC1155InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":490,"src":"8320:22:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1086,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8320:34:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1087,"nodeType":"RevertStatement","src":"8313:41:3"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1090,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1064,"src":"8378:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1093,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8394:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1092,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8386:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1091,"name":"address","nodeType":"ElementaryTypeName","src":"8386:7:3","typeDescriptions":{}}},"id":1094,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8386:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8378:18:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1104,"nodeType":"IfStatement","src":"8374:88:3","trueBody":{"id":1103,"nodeType":"Block","src":"8398:64:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1099,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8448:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1098,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8440:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1097,"name":"address","nodeType":"ElementaryTypeName","src":"8440:7:3","typeDescriptions":{}}},"id":1100,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8440:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1096,"name":"ERC1155InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":485,"src":"8419:20:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1101,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8419:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1102,"nodeType":"RevertStatement","src":"8412:39:3"}]}},{"assignments":[1109,1112],"declarations":[{"constant":false,"id":1109,"mutability":"mutable","name":"ids","nameLocation":"8489:3:3","nodeType":"VariableDeclaration","scope":1126,"src":"8472:20:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1107,"name":"uint256","nodeType":"ElementaryTypeName","src":"8472:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1108,"nodeType":"ArrayTypeName","src":"8472:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1112,"mutability":"mutable","name":"values","nameLocation":"8511:6:3","nodeType":"VariableDeclaration","scope":1126,"src":"8494:23:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1110,"name":"uint256","nodeType":"ElementaryTypeName","src":"8494:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1111,"nodeType":"ArrayTypeName","src":"8494:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":1117,"initialValue":{"arguments":[{"id":1114,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1068,"src":"8540:2:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1115,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1070,"src":"8544:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1113,"name":"_asSingletonArrays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1431,"src":"8521:18:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (uint256[] memory,uint256[] memory)"}},"id":1116,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8521:29:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256[] memory,uint256[] memory)"}},"nodeType":"VariableDeclarationStatement","src":"8471:79:3"},{"expression":{"arguments":[{"id":1119,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1064,"src":"8587:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1120,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1066,"src":"8593:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1121,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1109,"src":"8597:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1122,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1112,"src":"8602:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1123,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1072,"src":"8610:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1118,"name":"_updateWithAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1061,"src":"8560:26:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":1124,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8560:55:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1125,"nodeType":"ExpressionStatement","src":"8560:55:3"}]},"documentation":{"id":1062,"nodeType":"StructuredDocumentation","src":"7708:446:3","text":" @dev Transfers a `value` tokens of token type `id` from `from` to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - `from` must have a balance of tokens of type `id` of at least `value` amount.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."},"id":1127,"implemented":true,"kind":"function","modifiers":[],"name":"_safeTransferFrom","nameLocation":"8168:17:3","nodeType":"FunctionDefinition","parameters":{"id":1073,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1064,"mutability":"mutable","name":"from","nameLocation":"8194:4:3","nodeType":"VariableDeclaration","scope":1127,"src":"8186:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1063,"name":"address","nodeType":"ElementaryTypeName","src":"8186:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1066,"mutability":"mutable","name":"to","nameLocation":"8208:2:3","nodeType":"VariableDeclaration","scope":1127,"src":"8200:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1065,"name":"address","nodeType":"ElementaryTypeName","src":"8200:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1068,"mutability":"mutable","name":"id","nameLocation":"8220:2:3","nodeType":"VariableDeclaration","scope":1127,"src":"8212:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1067,"name":"uint256","nodeType":"ElementaryTypeName","src":"8212:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1070,"mutability":"mutable","name":"value","nameLocation":"8232:5:3","nodeType":"VariableDeclaration","scope":1127,"src":"8224:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1069,"name":"uint256","nodeType":"ElementaryTypeName","src":"8224:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1072,"mutability":"mutable","name":"data","nameLocation":"8252:4:3","nodeType":"VariableDeclaration","scope":1127,"src":"8239:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1071,"name":"bytes","nodeType":"ElementaryTypeName","src":"8239:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8185:72:3"},"returnParameters":{"id":1074,"nodeType":"ParameterList","parameters":[],"src":"8267:0:3"},"scope":1432,"src":"8159:463:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1181,"nodeType":"Block","src":"9202:266:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1143,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1132,"src":"9216:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1146,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9230:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1145,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9222:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1144,"name":"address","nodeType":"ElementaryTypeName","src":"9222:7:3","typeDescriptions":{}}},"id":1147,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9222:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9216:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1157,"nodeType":"IfStatement","src":"9212:88:3","trueBody":{"id":1156,"nodeType":"Block","src":"9234:66:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1152,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9286:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1151,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9278:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1150,"name":"address","nodeType":"ElementaryTypeName","src":"9278:7:3","typeDescriptions":{}}},"id":1153,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9278:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1149,"name":"ERC1155InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":490,"src":"9255:22:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1154,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9255:34:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1155,"nodeType":"RevertStatement","src":"9248:41:3"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1158,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1130,"src":"9313:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1161,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9329:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1160,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9321:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1159,"name":"address","nodeType":"ElementaryTypeName","src":"9321:7:3","typeDescriptions":{}}},"id":1162,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9321:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9313:18:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1172,"nodeType":"IfStatement","src":"9309:88:3","trueBody":{"id":1171,"nodeType":"Block","src":"9333:64:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1167,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9383:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1166,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9375:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1165,"name":"address","nodeType":"ElementaryTypeName","src":"9375:7:3","typeDescriptions":{}}},"id":1168,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9375:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1164,"name":"ERC1155InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":485,"src":"9354:20:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1169,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9354:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1170,"nodeType":"RevertStatement","src":"9347:39:3"}]}},{"expression":{"arguments":[{"id":1174,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1130,"src":"9433:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1175,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1132,"src":"9439:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1176,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1135,"src":"9443:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1177,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1138,"src":"9448:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1178,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1140,"src":"9456:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1173,"name":"_updateWithAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1061,"src":"9406:26:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":1179,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9406:55:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1180,"nodeType":"ExpressionStatement","src":"9406:55:3"}]},"documentation":{"id":1128,"nodeType":"StructuredDocumentation","src":"8628:390:3","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\n Emits a {TransferBatch} event.\n Requirements:\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value.\n - `ids` and `values` must have the same length."},"id":1182,"implemented":true,"kind":"function","modifiers":[],"name":"_safeBatchTransferFrom","nameLocation":"9032:22:3","nodeType":"FunctionDefinition","parameters":{"id":1141,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1130,"mutability":"mutable","name":"from","nameLocation":"9072:4:3","nodeType":"VariableDeclaration","scope":1182,"src":"9064:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1129,"name":"address","nodeType":"ElementaryTypeName","src":"9064:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1132,"mutability":"mutable","name":"to","nameLocation":"9094:2:3","nodeType":"VariableDeclaration","scope":1182,"src":"9086:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1131,"name":"address","nodeType":"ElementaryTypeName","src":"9086:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1135,"mutability":"mutable","name":"ids","nameLocation":"9123:3:3","nodeType":"VariableDeclaration","scope":1182,"src":"9106:20:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1133,"name":"uint256","nodeType":"ElementaryTypeName","src":"9106:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1134,"nodeType":"ArrayTypeName","src":"9106:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1138,"mutability":"mutable","name":"values","nameLocation":"9153:6:3","nodeType":"VariableDeclaration","scope":1182,"src":"9136:23:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1136,"name":"uint256","nodeType":"ElementaryTypeName","src":"9136:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1137,"nodeType":"ArrayTypeName","src":"9136:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1140,"mutability":"mutable","name":"data","nameLocation":"9182:4:3","nodeType":"VariableDeclaration","scope":1182,"src":"9169:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1139,"name":"bytes","nodeType":"ElementaryTypeName","src":"9169:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"9054:138:3"},"returnParameters":{"id":1142,"nodeType":"ParameterList","parameters":[],"src":"9202:0:3"},"scope":1432,"src":"9023:445:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1192,"nodeType":"Block","src":"10346:30:3","statements":[{"expression":{"id":1190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1188,"name":"_uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":565,"src":"10356:4:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1189,"name":"newuri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1185,"src":"10363:6:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"10356:13:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1191,"nodeType":"ExpressionStatement","src":"10356:13:3"}]},"documentation":{"id":1183,"nodeType":"StructuredDocumentation","src":"9474:811:3","text":" @dev Sets a new URI for all token types, by relying on the token type ID\n substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the ERC].\n By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n URI or any of the values in the JSON file at said URI will be replaced by\n clients with the token type ID.\n For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n interpreted by clients as\n `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n for token type ID 0x4cce0.\n See {uri}.\n Because these URIs cannot be meaningfully represented by the {URI} event,\n this function emits no events."},"id":1193,"implemented":true,"kind":"function","modifiers":[],"name":"_setURI","nameLocation":"10299:7:3","nodeType":"FunctionDefinition","parameters":{"id":1186,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1185,"mutability":"mutable","name":"newuri","nameLocation":"10321:6:3","nodeType":"VariableDeclaration","scope":1193,"src":"10307:20:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1184,"name":"string","nodeType":"ElementaryTypeName","src":"10307:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10306:22:3"},"returnParameters":{"id":1187,"nodeType":"ParameterList","parameters":[],"src":"10346:0:3"},"scope":1432,"src":"10290:86:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1244,"nodeType":"Block","src":"10836:264:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1205,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1196,"src":"10850:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1208,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10864:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1207,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10856:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1206,"name":"address","nodeType":"ElementaryTypeName","src":"10856:7:3","typeDescriptions":{}}},"id":1209,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10856:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10850:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1219,"nodeType":"IfStatement","src":"10846:88:3","trueBody":{"id":1218,"nodeType":"Block","src":"10868:66:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1214,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10920:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1213,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10912:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1212,"name":"address","nodeType":"ElementaryTypeName","src":"10912:7:3","typeDescriptions":{}}},"id":1215,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10912:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1211,"name":"ERC1155InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":490,"src":"10889:22:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1216,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10889:34:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1217,"nodeType":"RevertStatement","src":"10882:41:3"}]}},{"assignments":[1224,1227],"declarations":[{"constant":false,"id":1224,"mutability":"mutable","name":"ids","nameLocation":"10961:3:3","nodeType":"VariableDeclaration","scope":1244,"src":"10944:20:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1222,"name":"uint256","nodeType":"ElementaryTypeName","src":"10944:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1223,"nodeType":"ArrayTypeName","src":"10944:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1227,"mutability":"mutable","name":"values","nameLocation":"10983:6:3","nodeType":"VariableDeclaration","scope":1244,"src":"10966:23:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1225,"name":"uint256","nodeType":"ElementaryTypeName","src":"10966:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1226,"nodeType":"ArrayTypeName","src":"10966:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":1232,"initialValue":{"arguments":[{"id":1229,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1198,"src":"11012:2:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1230,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1200,"src":"11016:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1228,"name":"_asSingletonArrays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1431,"src":"10993:18:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (uint256[] memory,uint256[] memory)"}},"id":1231,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10993:29:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256[] memory,uint256[] memory)"}},"nodeType":"VariableDeclarationStatement","src":"10943:79:3"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1236,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11067:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1235,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11059:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1234,"name":"address","nodeType":"ElementaryTypeName","src":"11059:7:3","typeDescriptions":{}}},"id":1237,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11059:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1238,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1196,"src":"11071:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1239,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1224,"src":"11075:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1240,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1227,"src":"11080:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1241,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1202,"src":"11088:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1233,"name":"_updateWithAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1061,"src":"11032:26:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":1242,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11032:61:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1243,"nodeType":"ExpressionStatement","src":"11032:61:3"}]},"documentation":{"id":1194,"nodeType":"StructuredDocumentation","src":"10382:367:3","text":" @dev Creates a `value` amount of tokens of type `id`, and assigns them to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."},"id":1245,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"10763:5:3","nodeType":"FunctionDefinition","parameters":{"id":1203,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1196,"mutability":"mutable","name":"to","nameLocation":"10777:2:3","nodeType":"VariableDeclaration","scope":1245,"src":"10769:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1195,"name":"address","nodeType":"ElementaryTypeName","src":"10769:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1198,"mutability":"mutable","name":"id","nameLocation":"10789:2:3","nodeType":"VariableDeclaration","scope":1245,"src":"10781:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1197,"name":"uint256","nodeType":"ElementaryTypeName","src":"10781:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1200,"mutability":"mutable","name":"value","nameLocation":"10801:5:3","nodeType":"VariableDeclaration","scope":1245,"src":"10793:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1199,"name":"uint256","nodeType":"ElementaryTypeName","src":"10793:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1202,"mutability":"mutable","name":"data","nameLocation":"10821:4:3","nodeType":"VariableDeclaration","scope":1245,"src":"10808:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1201,"name":"bytes","nodeType":"ElementaryTypeName","src":"10808:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"10768:58:3"},"returnParameters":{"id":1204,"nodeType":"ParameterList","parameters":[],"src":"10836:0:3"},"scope":1432,"src":"10754:346:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1285,"nodeType":"Block","src":"11638:175:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1259,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1248,"src":"11652:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1262,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11666:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1261,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11658:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1260,"name":"address","nodeType":"ElementaryTypeName","src":"11658:7:3","typeDescriptions":{}}},"id":1263,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11658:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11652:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1273,"nodeType":"IfStatement","src":"11648:88:3","trueBody":{"id":1272,"nodeType":"Block","src":"11670:66:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1268,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11722:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1267,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11714:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1266,"name":"address","nodeType":"ElementaryTypeName","src":"11714:7:3","typeDescriptions":{}}},"id":1269,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11714:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1265,"name":"ERC1155InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":490,"src":"11691:22:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1270,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11691:34:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1271,"nodeType":"RevertStatement","src":"11684:41:3"}]}},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1277,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11780:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1276,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11772:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1275,"name":"address","nodeType":"ElementaryTypeName","src":"11772:7:3","typeDescriptions":{}}},"id":1278,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11772:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1279,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1248,"src":"11784:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1280,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1251,"src":"11788:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1281,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1254,"src":"11793:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1282,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1256,"src":"11801:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1274,"name":"_updateWithAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1061,"src":"11745:26:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":1283,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11745:61:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1284,"nodeType":"ExpressionStatement","src":"11745:61:3"}]},"documentation":{"id":1246,"nodeType":"StructuredDocumentation","src":"11106:420:3","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n Emits a {TransferBatch} event.\n Requirements:\n - `ids` and `values` must have the same length.\n - `to` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."},"id":1286,"implemented":true,"kind":"function","modifiers":[],"name":"_mintBatch","nameLocation":"11540:10:3","nodeType":"FunctionDefinition","parameters":{"id":1257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1248,"mutability":"mutable","name":"to","nameLocation":"11559:2:3","nodeType":"VariableDeclaration","scope":1286,"src":"11551:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1247,"name":"address","nodeType":"ElementaryTypeName","src":"11551:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1251,"mutability":"mutable","name":"ids","nameLocation":"11580:3:3","nodeType":"VariableDeclaration","scope":1286,"src":"11563:20:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1249,"name":"uint256","nodeType":"ElementaryTypeName","src":"11563:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1250,"nodeType":"ArrayTypeName","src":"11563:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1254,"mutability":"mutable","name":"values","nameLocation":"11602:6:3","nodeType":"VariableDeclaration","scope":1286,"src":"11585:23:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1252,"name":"uint256","nodeType":"ElementaryTypeName","src":"11585:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1253,"nodeType":"ArrayTypeName","src":"11585:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1256,"mutability":"mutable","name":"data","nameLocation":"11623:4:3","nodeType":"VariableDeclaration","scope":1286,"src":"11610:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1255,"name":"bytes","nodeType":"ElementaryTypeName","src":"11610:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"11550:78:3"},"returnParameters":{"id":1258,"nodeType":"ParameterList","parameters":[],"src":"11638:0:3"},"scope":1432,"src":"11531:282:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1335,"nodeType":"Block","src":"12172:264:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1296,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1289,"src":"12186:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1299,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12202:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1298,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12194:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1297,"name":"address","nodeType":"ElementaryTypeName","src":"12194:7:3","typeDescriptions":{}}},"id":1300,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12194:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12186:18:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1310,"nodeType":"IfStatement","src":"12182:88:3","trueBody":{"id":1309,"nodeType":"Block","src":"12206:64:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1305,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12256:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1304,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12248:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1303,"name":"address","nodeType":"ElementaryTypeName","src":"12248:7:3","typeDescriptions":{}}},"id":1306,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12248:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1302,"name":"ERC1155InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":485,"src":"12227:20:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1307,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12227:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1308,"nodeType":"RevertStatement","src":"12220:39:3"}]}},{"assignments":[1315,1318],"declarations":[{"constant":false,"id":1315,"mutability":"mutable","name":"ids","nameLocation":"12297:3:3","nodeType":"VariableDeclaration","scope":1335,"src":"12280:20:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1313,"name":"uint256","nodeType":"ElementaryTypeName","src":"12280:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1314,"nodeType":"ArrayTypeName","src":"12280:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1318,"mutability":"mutable","name":"values","nameLocation":"12319:6:3","nodeType":"VariableDeclaration","scope":1335,"src":"12302:23:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1316,"name":"uint256","nodeType":"ElementaryTypeName","src":"12302:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1317,"nodeType":"ArrayTypeName","src":"12302:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":1323,"initialValue":{"arguments":[{"id":1320,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1291,"src":"12348:2:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1321,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1293,"src":"12352:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1319,"name":"_asSingletonArrays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1431,"src":"12329:18:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (uint256[] memory,uint256[] memory)"}},"id":1322,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12329:29:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256[] memory,uint256[] memory)"}},"nodeType":"VariableDeclarationStatement","src":"12279:79:3"},{"expression":{"arguments":[{"id":1325,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1289,"src":"12395:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1328,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12409:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1327,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12401:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1326,"name":"address","nodeType":"ElementaryTypeName","src":"12401:7:3","typeDescriptions":{}}},"id":1329,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12401:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1330,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1315,"src":"12413:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1331,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1318,"src":"12418:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"hexValue":"","id":1332,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12426:2:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1324,"name":"_updateWithAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1061,"src":"12368:26:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":1333,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12368:61:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1334,"nodeType":"ExpressionStatement","src":"12368:61:3"}]},"documentation":{"id":1287,"nodeType":"StructuredDocumentation","src":"11819:283:3","text":" @dev Destroys a `value` amount of tokens of type `id` from `from`\n Emits a {TransferSingle} event.\n Requirements:\n - `from` cannot be the zero address.\n - `from` must have at least `value` amount of tokens of type `id`."},"id":1336,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"12116:5:3","nodeType":"FunctionDefinition","parameters":{"id":1294,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1289,"mutability":"mutable","name":"from","nameLocation":"12130:4:3","nodeType":"VariableDeclaration","scope":1336,"src":"12122:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1288,"name":"address","nodeType":"ElementaryTypeName","src":"12122:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1291,"mutability":"mutable","name":"id","nameLocation":"12144:2:3","nodeType":"VariableDeclaration","scope":1336,"src":"12136:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1290,"name":"uint256","nodeType":"ElementaryTypeName","src":"12136:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1293,"mutability":"mutable","name":"value","nameLocation":"12156:5:3","nodeType":"VariableDeclaration","scope":1336,"src":"12148:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1292,"name":"uint256","nodeType":"ElementaryTypeName","src":"12148:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12121:41:3"},"returnParameters":{"id":1295,"nodeType":"ParameterList","parameters":[],"src":"12172:0:3"},"scope":1432,"src":"12107:329:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1374,"nodeType":"Block","src":"12882:175:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1348,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1339,"src":"12896:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1351,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12912:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1350,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12904:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1349,"name":"address","nodeType":"ElementaryTypeName","src":"12904:7:3","typeDescriptions":{}}},"id":1352,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12904:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12896:18:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1362,"nodeType":"IfStatement","src":"12892:88:3","trueBody":{"id":1361,"nodeType":"Block","src":"12916:64:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1357,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12966:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1356,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12958:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1355,"name":"address","nodeType":"ElementaryTypeName","src":"12958:7:3","typeDescriptions":{}}},"id":1358,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12958:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1354,"name":"ERC1155InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":485,"src":"12937:20:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1359,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12937:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1360,"nodeType":"RevertStatement","src":"12930:39:3"}]}},{"expression":{"arguments":[{"id":1364,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1339,"src":"13016:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1367,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13030:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1366,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13022:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1365,"name":"address","nodeType":"ElementaryTypeName","src":"13022:7:3","typeDescriptions":{}}},"id":1368,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13022:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1369,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1342,"src":"13034:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1370,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1345,"src":"13039:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"hexValue":"","id":1371,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13047:2:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1363,"name":"_updateWithAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1061,"src":"12989:26:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":1372,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12989:61:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1373,"nodeType":"ExpressionStatement","src":"12989:61:3"}]},"documentation":{"id":1337,"nodeType":"StructuredDocumentation","src":"12442:345:3","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n Emits a {TransferBatch} event.\n Requirements:\n - `from` cannot be the zero address.\n - `from` must have at least `value` amount of tokens of type `id`.\n - `ids` and `values` must have the same length."},"id":1375,"implemented":true,"kind":"function","modifiers":[],"name":"_burnBatch","nameLocation":"12801:10:3","nodeType":"FunctionDefinition","parameters":{"id":1346,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1339,"mutability":"mutable","name":"from","nameLocation":"12820:4:3","nodeType":"VariableDeclaration","scope":1375,"src":"12812:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1338,"name":"address","nodeType":"ElementaryTypeName","src":"12812:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1342,"mutability":"mutable","name":"ids","nameLocation":"12843:3:3","nodeType":"VariableDeclaration","scope":1375,"src":"12826:20:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1340,"name":"uint256","nodeType":"ElementaryTypeName","src":"12826:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1341,"nodeType":"ArrayTypeName","src":"12826:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1345,"mutability":"mutable","name":"values","nameLocation":"12865:6:3","nodeType":"VariableDeclaration","scope":1375,"src":"12848:23:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1343,"name":"uint256","nodeType":"ElementaryTypeName","src":"12848:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1344,"nodeType":"ArrayTypeName","src":"12848:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"12811:61:3"},"returnParameters":{"id":1347,"nodeType":"ParameterList","parameters":[],"src":"12882:0:3"},"scope":1432,"src":"12792:265:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1414,"nodeType":"Block","src":"13369:222:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1385,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1380,"src":"13383:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1388,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13403:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1387,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13395:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1386,"name":"address","nodeType":"ElementaryTypeName","src":"13395:7:3","typeDescriptions":{}}},"id":1389,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13395:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13383:22:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1399,"nodeType":"IfStatement","src":"13379:94:3","trueBody":{"id":1398,"nodeType":"Block","src":"13407:66:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1394,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13459:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1393,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13451:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1392,"name":"address","nodeType":"ElementaryTypeName","src":"13451:7:3","typeDescriptions":{}}},"id":1395,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13451:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1391,"name":"ERC1155InvalidOperator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":507,"src":"13428:22:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1396,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13428:34:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1397,"nodeType":"RevertStatement","src":"13421:41:3"}]}},{"expression":{"id":1406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1400,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":563,"src":"13482:18:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":1403,"indexExpression":{"id":1401,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1378,"src":"13501:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13482:25:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1404,"indexExpression":{"id":1402,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1380,"src":"13508:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13482:35:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1405,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1382,"src":"13520:8:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"13482:46:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1407,"nodeType":"ExpressionStatement","src":"13482:46:3"},{"eventCall":{"arguments":[{"id":1409,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1378,"src":"13558:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1410,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1380,"src":"13565:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1411,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1382,"src":"13575:8:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1408,"name":"ApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1476,"src":"13543:14:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":1412,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13543:41:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1413,"nodeType":"EmitStatement","src":"13538:46:3"}]},"documentation":{"id":1376,"nodeType":"StructuredDocumentation","src":"13063:208:3","text":" @dev Approve `operator` to operate on all of `owner` tokens\n Emits an {ApprovalForAll} event.\n Requirements:\n - `operator` cannot be the zero address."},"id":1415,"implemented":true,"kind":"function","modifiers":[],"name":"_setApprovalForAll","nameLocation":"13285:18:3","nodeType":"FunctionDefinition","parameters":{"id":1383,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1378,"mutability":"mutable","name":"owner","nameLocation":"13312:5:3","nodeType":"VariableDeclaration","scope":1415,"src":"13304:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1377,"name":"address","nodeType":"ElementaryTypeName","src":"13304:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1380,"mutability":"mutable","name":"operator","nameLocation":"13327:8:3","nodeType":"VariableDeclaration","scope":1415,"src":"13319:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1379,"name":"address","nodeType":"ElementaryTypeName","src":"13319:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1382,"mutability":"mutable","name":"approved","nameLocation":"13342:8:3","nodeType":"VariableDeclaration","scope":1415,"src":"13337:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1381,"name":"bool","nodeType":"ElementaryTypeName","src":"13337:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"13303:48:3"},"returnParameters":{"id":1384,"nodeType":"ParameterList","parameters":[],"src":"13369:0:3"},"scope":1432,"src":"13276:315:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1430,"nodeType":"Block","src":"13865:664:3","statements":[{"AST":{"nodeType":"YulBlock","src":"13900:623:3","statements":[{"nodeType":"YulAssignment","src":"13958:21:3","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13974:4:3","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13968:5:3"},"nodeType":"YulFunctionCall","src":"13968:11:3"},"variableNames":[{"name":"array1","nodeType":"YulIdentifier","src":"13958:6:3"}]},{"expression":{"arguments":[{"name":"array1","nodeType":"YulIdentifier","src":"14036:6:3"},{"kind":"number","nodeType":"YulLiteral","src":"14044:1:3","type":"","value":"1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14029:6:3"},"nodeType":"YulFunctionCall","src":"14029:17:3"},"nodeType":"YulExpressionStatement","src":"14029:17:3"},{"expression":{"arguments":[{"arguments":[{"name":"array1","nodeType":"YulIdentifier","src":"14167:6:3"},{"kind":"number","nodeType":"YulLiteral","src":"14175:4:3","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14163:3:3"},"nodeType":"YulFunctionCall","src":"14163:17:3"},{"name":"element1","nodeType":"YulIdentifier","src":"14182:8:3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14156:6:3"},"nodeType":"YulFunctionCall","src":"14156:35:3"},"nodeType":"YulExpressionStatement","src":"14156:35:3"},{"nodeType":"YulAssignment","src":"14282:27:3","value":{"arguments":[{"name":"array1","nodeType":"YulIdentifier","src":"14296:6:3"},{"kind":"number","nodeType":"YulLiteral","src":"14304:4:3","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14292:3:3"},"nodeType":"YulFunctionCall","src":"14292:17:3"},"variableNames":[{"name":"array2","nodeType":"YulIdentifier","src":"14282:6:3"}]},{"expression":{"arguments":[{"name":"array2","nodeType":"YulIdentifier","src":"14329:6:3"},{"kind":"number","nodeType":"YulLiteral","src":"14337:1:3","type":"","value":"1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14322:6:3"},"nodeType":"YulFunctionCall","src":"14322:17:3"},"nodeType":"YulExpressionStatement","src":"14322:17:3"},{"expression":{"arguments":[{"arguments":[{"name":"array2","nodeType":"YulIdentifier","src":"14363:6:3"},{"kind":"number","nodeType":"YulLiteral","src":"14371:4:3","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14359:3:3"},"nodeType":"YulFunctionCall","src":"14359:17:3"},{"name":"element2","nodeType":"YulIdentifier","src":"14378:8:3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14352:6:3"},"nodeType":"YulFunctionCall","src":"14352:35:3"},"nodeType":"YulExpressionStatement","src":"14352:35:3"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14489:4:3","type":"","value":"0x40"},{"arguments":[{"name":"array2","nodeType":"YulIdentifier","src":"14499:6:3"},{"kind":"number","nodeType":"YulLiteral","src":"14507:4:3","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14495:3:3"},"nodeType":"YulFunctionCall","src":"14495:17:3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14482:6:3"},"nodeType":"YulFunctionCall","src":"14482:31:3"},"nodeType":"YulExpressionStatement","src":"14482:31:3"}]},"evmVersion":"paris","externalReferences":[{"declaration":1424,"isOffset":false,"isSlot":false,"src":"13958:6:3","valueSize":1},{"declaration":1424,"isOffset":false,"isSlot":false,"src":"14036:6:3","valueSize":1},{"declaration":1424,"isOffset":false,"isSlot":false,"src":"14167:6:3","valueSize":1},{"declaration":1424,"isOffset":false,"isSlot":false,"src":"14296:6:3","valueSize":1},{"declaration":1427,"isOffset":false,"isSlot":false,"src":"14282:6:3","valueSize":1},{"declaration":1427,"isOffset":false,"isSlot":false,"src":"14329:6:3","valueSize":1},{"declaration":1427,"isOffset":false,"isSlot":false,"src":"14363:6:3","valueSize":1},{"declaration":1427,"isOffset":false,"isSlot":false,"src":"14499:6:3","valueSize":1},{"declaration":1418,"isOffset":false,"isSlot":false,"src":"14182:8:3","valueSize":1},{"declaration":1420,"isOffset":false,"isSlot":false,"src":"14378:8:3","valueSize":1}],"flags":["memory-safe"],"id":1429,"nodeType":"InlineAssembly","src":"13875:648:3"}]},"documentation":{"id":1416,"nodeType":"StructuredDocumentation","src":"13597:105:3","text":" @dev Creates an array in memory with only one value for each of the elements provided."},"id":1431,"implemented":true,"kind":"function","modifiers":[],"name":"_asSingletonArrays","nameLocation":"13716:18:3","nodeType":"FunctionDefinition","parameters":{"id":1421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1418,"mutability":"mutable","name":"element1","nameLocation":"13752:8:3","nodeType":"VariableDeclaration","scope":1431,"src":"13744:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1417,"name":"uint256","nodeType":"ElementaryTypeName","src":"13744:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1420,"mutability":"mutable","name":"element2","nameLocation":"13778:8:3","nodeType":"VariableDeclaration","scope":1431,"src":"13770:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1419,"name":"uint256","nodeType":"ElementaryTypeName","src":"13770:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13734:58:3"},"returnParameters":{"id":1428,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1424,"mutability":"mutable","name":"array1","nameLocation":"13832:6:3","nodeType":"VariableDeclaration","scope":1431,"src":"13815:23:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1422,"name":"uint256","nodeType":"ElementaryTypeName","src":"13815:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1423,"nodeType":"ArrayTypeName","src":"13815:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1427,"mutability":"mutable","name":"array2","nameLocation":"13857:6:3","nodeType":"VariableDeclaration","scope":1431,"src":"13840:23:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1425,"name":"uint256","nodeType":"ElementaryTypeName","src":"13840:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1426,"nodeType":"ArrayTypeName","src":"13840:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"13814:50:3"},"scope":1432,"src":"13707:822:3","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":1433,"src":"725:13806:3","usedErrors":[480,485,490,497,502,507,514],"usedEvents":[1452,1467,1476,1483]}],"src":"109:14423:3"},"id":3},"@openzeppelin/contracts/token/ERC1155/IERC1155.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155.sol","exportedSymbols":{"IERC1155":[1555],"IERC165":[4755]},"id":1556,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1434,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"110:24:4"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":1436,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1556,"sourceUnit":4756,"src":"136:62:4","symbolAliases":[{"foreign":{"id":1435,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4755,"src":"144:7:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1438,"name":"IERC165","nameLocations":["359:7:4"],"nodeType":"IdentifierPath","referencedDeclaration":4755,"src":"359:7:4"},"id":1439,"nodeType":"InheritanceSpecifier","src":"359:7:4"}],"canonicalName":"IERC1155","contractDependencies":[],"contractKind":"interface","documentation":{"id":1437,"nodeType":"StructuredDocumentation","src":"200:136:4","text":" @dev Required interface of an ERC-1155 compliant contract, as defined in the\n https://eips.ethereum.org/EIPS/eip-1155[ERC]."},"fullyImplemented":false,"id":1555,"linearizedBaseContracts":[1555,4755],"name":"IERC1155","nameLocation":"347:8:4","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1440,"nodeType":"StructuredDocumentation","src":"373:125:4","text":" @dev Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`."},"eventSelector":"c3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62","id":1452,"name":"TransferSingle","nameLocation":"509:14:4","nodeType":"EventDefinition","parameters":{"id":1451,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1442,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"540:8:4","nodeType":"VariableDeclaration","scope":1452,"src":"524:24:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1441,"name":"address","nodeType":"ElementaryTypeName","src":"524:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1444,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"566:4:4","nodeType":"VariableDeclaration","scope":1452,"src":"550:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1443,"name":"address","nodeType":"ElementaryTypeName","src":"550:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1446,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"588:2:4","nodeType":"VariableDeclaration","scope":1452,"src":"572:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1445,"name":"address","nodeType":"ElementaryTypeName","src":"572:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1448,"indexed":false,"mutability":"mutable","name":"id","nameLocation":"600:2:4","nodeType":"VariableDeclaration","scope":1452,"src":"592:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1447,"name":"uint256","nodeType":"ElementaryTypeName","src":"592:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1450,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"612:5:4","nodeType":"VariableDeclaration","scope":1452,"src":"604:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1449,"name":"uint256","nodeType":"ElementaryTypeName","src":"604:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"523:95:4"},"src":"503:116:4"},{"anonymous":false,"documentation":{"id":1453,"nodeType":"StructuredDocumentation","src":"625:144:4","text":" @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n transfers."},"eventSelector":"4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb","id":1467,"name":"TransferBatch","nameLocation":"780:13:4","nodeType":"EventDefinition","parameters":{"id":1466,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1455,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"819:8:4","nodeType":"VariableDeclaration","scope":1467,"src":"803:24:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1454,"name":"address","nodeType":"ElementaryTypeName","src":"803:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1457,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"853:4:4","nodeType":"VariableDeclaration","scope":1467,"src":"837:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1456,"name":"address","nodeType":"ElementaryTypeName","src":"837:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1459,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"883:2:4","nodeType":"VariableDeclaration","scope":1467,"src":"867:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1458,"name":"address","nodeType":"ElementaryTypeName","src":"867:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1462,"indexed":false,"mutability":"mutable","name":"ids","nameLocation":"905:3:4","nodeType":"VariableDeclaration","scope":1467,"src":"895:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1460,"name":"uint256","nodeType":"ElementaryTypeName","src":"895:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1461,"nodeType":"ArrayTypeName","src":"895:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1465,"indexed":false,"mutability":"mutable","name":"values","nameLocation":"928:6:4","nodeType":"VariableDeclaration","scope":1467,"src":"918:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1463,"name":"uint256","nodeType":"ElementaryTypeName","src":"918:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1464,"nodeType":"ArrayTypeName","src":"918:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"793:147:4"},"src":"774:167:4"},{"anonymous":false,"documentation":{"id":1468,"nodeType":"StructuredDocumentation","src":"947:147:4","text":" @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n `approved`."},"eventSelector":"17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31","id":1476,"name":"ApprovalForAll","nameLocation":"1105:14:4","nodeType":"EventDefinition","parameters":{"id":1475,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1470,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1136:7:4","nodeType":"VariableDeclaration","scope":1476,"src":"1120:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1469,"name":"address","nodeType":"ElementaryTypeName","src":"1120:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1472,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"1161:8:4","nodeType":"VariableDeclaration","scope":1476,"src":"1145:24:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1471,"name":"address","nodeType":"ElementaryTypeName","src":"1145:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1474,"indexed":false,"mutability":"mutable","name":"approved","nameLocation":"1176:8:4","nodeType":"VariableDeclaration","scope":1476,"src":"1171:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1473,"name":"bool","nodeType":"ElementaryTypeName","src":"1171:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1119:66:4"},"src":"1099:87:4"},{"anonymous":false,"documentation":{"id":1477,"nodeType":"StructuredDocumentation","src":"1192:343:4","text":" @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n If an {URI} event was emitted for `id`, the standard\n https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n returned by {IERC1155MetadataURI-uri}."},"eventSelector":"6bb7ff708619ba0610cba295a58592e0451dee2622938c8755667688daf3529b","id":1483,"name":"URI","nameLocation":"1546:3:4","nodeType":"EventDefinition","parameters":{"id":1482,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1479,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"1557:5:4","nodeType":"VariableDeclaration","scope":1483,"src":"1550:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1478,"name":"string","nodeType":"ElementaryTypeName","src":"1550:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1481,"indexed":true,"mutability":"mutable","name":"id","nameLocation":"1580:2:4","nodeType":"VariableDeclaration","scope":1483,"src":"1564:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1480,"name":"uint256","nodeType":"ElementaryTypeName","src":"1564:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1549:34:4"},"src":"1540:44:4"},{"documentation":{"id":1484,"nodeType":"StructuredDocumentation","src":"1590:90:4","text":" @dev Returns the value of tokens of token type `id` owned by `account`."},"functionSelector":"00fdd58e","id":1493,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"1694:9:4","nodeType":"FunctionDefinition","parameters":{"id":1489,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1486,"mutability":"mutable","name":"account","nameLocation":"1712:7:4","nodeType":"VariableDeclaration","scope":1493,"src":"1704:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1485,"name":"address","nodeType":"ElementaryTypeName","src":"1704:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1488,"mutability":"mutable","name":"id","nameLocation":"1729:2:4","nodeType":"VariableDeclaration","scope":1493,"src":"1721:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1487,"name":"uint256","nodeType":"ElementaryTypeName","src":"1721:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1703:29:4"},"returnParameters":{"id":1492,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1491,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1493,"src":"1756:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1490,"name":"uint256","nodeType":"ElementaryTypeName","src":"1756:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1755:9:4"},"scope":1555,"src":"1685:80:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1494,"nodeType":"StructuredDocumentation","src":"1771:188:4","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n Requirements:\n - `accounts` and `ids` must have the same length."},"functionSelector":"4e1273f4","id":1506,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOfBatch","nameLocation":"1973:14:4","nodeType":"FunctionDefinition","parameters":{"id":1501,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1497,"mutability":"mutable","name":"accounts","nameLocation":"2016:8:4","nodeType":"VariableDeclaration","scope":1506,"src":"1997:27:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1495,"name":"address","nodeType":"ElementaryTypeName","src":"1997:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1496,"nodeType":"ArrayTypeName","src":"1997:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":1500,"mutability":"mutable","name":"ids","nameLocation":"2053:3:4","nodeType":"VariableDeclaration","scope":1506,"src":"2034:22:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1498,"name":"uint256","nodeType":"ElementaryTypeName","src":"2034:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1499,"nodeType":"ArrayTypeName","src":"2034:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1987:75:4"},"returnParameters":{"id":1505,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1504,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1506,"src":"2086:16:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1502,"name":"uint256","nodeType":"ElementaryTypeName","src":"2086:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1503,"nodeType":"ArrayTypeName","src":"2086:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2085:18:4"},"scope":1555,"src":"1964:140:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1507,"nodeType":"StructuredDocumentation","src":"2110:254:4","text":" @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n Emits an {ApprovalForAll} event.\n Requirements:\n - `operator` cannot be the zero address."},"functionSelector":"a22cb465","id":1514,"implemented":false,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"2378:17:4","nodeType":"FunctionDefinition","parameters":{"id":1512,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1509,"mutability":"mutable","name":"operator","nameLocation":"2404:8:4","nodeType":"VariableDeclaration","scope":1514,"src":"2396:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1508,"name":"address","nodeType":"ElementaryTypeName","src":"2396:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1511,"mutability":"mutable","name":"approved","nameLocation":"2419:8:4","nodeType":"VariableDeclaration","scope":1514,"src":"2414:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1510,"name":"bool","nodeType":"ElementaryTypeName","src":"2414:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2395:33:4"},"returnParameters":{"id":1513,"nodeType":"ParameterList","parameters":[],"src":"2437:0:4"},"scope":1555,"src":"2369:69:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1515,"nodeType":"StructuredDocumentation","src":"2444:135:4","text":" @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n See {setApprovalForAll}."},"functionSelector":"e985e9c5","id":1524,"implemented":false,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"2593:16:4","nodeType":"FunctionDefinition","parameters":{"id":1520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1517,"mutability":"mutable","name":"account","nameLocation":"2618:7:4","nodeType":"VariableDeclaration","scope":1524,"src":"2610:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1516,"name":"address","nodeType":"ElementaryTypeName","src":"2610:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1519,"mutability":"mutable","name":"operator","nameLocation":"2635:8:4","nodeType":"VariableDeclaration","scope":1524,"src":"2627:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1518,"name":"address","nodeType":"ElementaryTypeName","src":"2627:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2609:35:4"},"returnParameters":{"id":1523,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1522,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1524,"src":"2668:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1521,"name":"bool","nodeType":"ElementaryTypeName","src":"2668:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2667:6:4"},"scope":1555,"src":"2584:90:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1525,"nodeType":"StructuredDocumentation","src":"2680:910:4","text":" @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`.\n WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n to an untrusted contract, when invoking {onERC1155Received} on the receiver.\n Ensure to follow the checks-effects-interactions pattern and consider employing\n reentrancy guards when interacting with untrusted contracts.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n - `from` must have a balance of tokens of type `id` of at least `value` amount.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."},"functionSelector":"f242432a","id":1538,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"3604:16:4","nodeType":"FunctionDefinition","parameters":{"id":1536,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1527,"mutability":"mutable","name":"from","nameLocation":"3629:4:4","nodeType":"VariableDeclaration","scope":1538,"src":"3621:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1526,"name":"address","nodeType":"ElementaryTypeName","src":"3621:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1529,"mutability":"mutable","name":"to","nameLocation":"3643:2:4","nodeType":"VariableDeclaration","scope":1538,"src":"3635:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1528,"name":"address","nodeType":"ElementaryTypeName","src":"3635:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1531,"mutability":"mutable","name":"id","nameLocation":"3655:2:4","nodeType":"VariableDeclaration","scope":1538,"src":"3647:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1530,"name":"uint256","nodeType":"ElementaryTypeName","src":"3647:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1533,"mutability":"mutable","name":"value","nameLocation":"3667:5:4","nodeType":"VariableDeclaration","scope":1538,"src":"3659:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1532,"name":"uint256","nodeType":"ElementaryTypeName","src":"3659:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1535,"mutability":"mutable","name":"data","nameLocation":"3689:4:4","nodeType":"VariableDeclaration","scope":1538,"src":"3674:19:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1534,"name":"bytes","nodeType":"ElementaryTypeName","src":"3674:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3620:74:4"},"returnParameters":{"id":1537,"nodeType":"ParameterList","parameters":[],"src":"3703:0:4"},"scope":1555,"src":"3595:109:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1539,"nodeType":"StructuredDocumentation","src":"3710:814:4","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver.\n Ensure to follow the checks-effects-interactions pattern and consider employing\n reentrancy guards when interacting with untrusted contracts.\n Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments.\n Requirements:\n - `ids` and `values` must have the same length.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."},"functionSelector":"2eb2c2d6","id":1554,"implemented":false,"kind":"function","modifiers":[],"name":"safeBatchTransferFrom","nameLocation":"4538:21:4","nodeType":"FunctionDefinition","parameters":{"id":1552,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1541,"mutability":"mutable","name":"from","nameLocation":"4577:4:4","nodeType":"VariableDeclaration","scope":1554,"src":"4569:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1540,"name":"address","nodeType":"ElementaryTypeName","src":"4569:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1543,"mutability":"mutable","name":"to","nameLocation":"4599:2:4","nodeType":"VariableDeclaration","scope":1554,"src":"4591:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1542,"name":"address","nodeType":"ElementaryTypeName","src":"4591:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1546,"mutability":"mutable","name":"ids","nameLocation":"4630:3:4","nodeType":"VariableDeclaration","scope":1554,"src":"4611:22:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1544,"name":"uint256","nodeType":"ElementaryTypeName","src":"4611:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1545,"nodeType":"ArrayTypeName","src":"4611:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1549,"mutability":"mutable","name":"values","nameLocation":"4662:6:4","nodeType":"VariableDeclaration","scope":1554,"src":"4643:25:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1547,"name":"uint256","nodeType":"ElementaryTypeName","src":"4643:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1548,"nodeType":"ArrayTypeName","src":"4643:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1551,"mutability":"mutable","name":"data","nameLocation":"4693:4:4","nodeType":"VariableDeclaration","scope":1554,"src":"4678:19:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1550,"name":"bytes","nodeType":"ElementaryTypeName","src":"4678:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4559:144:4"},"returnParameters":{"id":1553,"nodeType":"ParameterList","parameters":[],"src":"4712:0:4"},"scope":1555,"src":"4529:184:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1556,"src":"337:4378:4","usedErrors":[],"usedEvents":[1452,1467,1476,1483]}],"src":"110:4606:4"},"id":4},"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol","exportedSymbols":{"IERC1155Receiver":[1597],"IERC165":[4755]},"id":1598,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1557,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"118:24:5"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":1559,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1598,"sourceUnit":4756,"src":"144:62:5","symbolAliases":[{"foreign":{"id":1558,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4755,"src":"152:7:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1561,"name":"IERC165","nameLocations":["357:7:5"],"nodeType":"IdentifierPath","referencedDeclaration":4755,"src":"357:7:5"},"id":1562,"nodeType":"InheritanceSpecifier","src":"357:7:5"}],"canonicalName":"IERC1155Receiver","contractDependencies":[],"contractKind":"interface","documentation":{"id":1560,"nodeType":"StructuredDocumentation","src":"208:118:5","text":" @dev Interface that must be implemented by smart contracts in order to receive\n ERC-1155 token transfers."},"fullyImplemented":false,"id":1597,"linearizedBaseContracts":[1597,4755],"name":"IERC1155Receiver","nameLocation":"337:16:5","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1563,"nodeType":"StructuredDocumentation","src":"371:827:5","text":" @dev Handles the receipt of a single ERC-1155 token type. This function is\n called at the end of a `safeTransferFrom` after the balance has been updated.\n NOTE: To accept the transfer, this must return\n `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n (i.e. 0xf23a6e61, or its own function selector).\n @param operator The address which initiated the transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param id The ID of the token being transferred\n @param value The amount of tokens being transferred\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"},"functionSelector":"f23a6e61","id":1578,"implemented":false,"kind":"function","modifiers":[],"name":"onERC1155Received","nameLocation":"1212:17:5","nodeType":"FunctionDefinition","parameters":{"id":1574,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1565,"mutability":"mutable","name":"operator","nameLocation":"1247:8:5","nodeType":"VariableDeclaration","scope":1578,"src":"1239:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1564,"name":"address","nodeType":"ElementaryTypeName","src":"1239:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1567,"mutability":"mutable","name":"from","nameLocation":"1273:4:5","nodeType":"VariableDeclaration","scope":1578,"src":"1265:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1566,"name":"address","nodeType":"ElementaryTypeName","src":"1265:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1569,"mutability":"mutable","name":"id","nameLocation":"1295:2:5","nodeType":"VariableDeclaration","scope":1578,"src":"1287:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1568,"name":"uint256","nodeType":"ElementaryTypeName","src":"1287:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1571,"mutability":"mutable","name":"value","nameLocation":"1315:5:5","nodeType":"VariableDeclaration","scope":1578,"src":"1307:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1570,"name":"uint256","nodeType":"ElementaryTypeName","src":"1307:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1573,"mutability":"mutable","name":"data","nameLocation":"1345:4:5","nodeType":"VariableDeclaration","scope":1578,"src":"1330:19:5","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1572,"name":"bytes","nodeType":"ElementaryTypeName","src":"1330:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1229:126:5"},"returnParameters":{"id":1577,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1576,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1578,"src":"1374:6:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1575,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1374:6:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1373:8:5"},"scope":1597,"src":"1203:179:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1579,"nodeType":"StructuredDocumentation","src":"1388:995:5","text":" @dev Handles the receipt of a multiple ERC-1155 token types. This function\n is called at the end of a `safeBatchTransferFrom` after the balances have\n been updated.\n NOTE: To accept the transfer(s), this must return\n `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n (i.e. 0xbc197c81, or its own function selector).\n @param operator The address which initiated the batch transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param ids An array containing ids of each token being transferred (order and length must match values array)\n @param values An array containing amounts of each token being transferred (order and length must match ids array)\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"},"functionSelector":"bc197c81","id":1596,"implemented":false,"kind":"function","modifiers":[],"name":"onERC1155BatchReceived","nameLocation":"2397:22:5","nodeType":"FunctionDefinition","parameters":{"id":1592,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1581,"mutability":"mutable","name":"operator","nameLocation":"2437:8:5","nodeType":"VariableDeclaration","scope":1596,"src":"2429:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1580,"name":"address","nodeType":"ElementaryTypeName","src":"2429:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1583,"mutability":"mutable","name":"from","nameLocation":"2463:4:5","nodeType":"VariableDeclaration","scope":1596,"src":"2455:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1582,"name":"address","nodeType":"ElementaryTypeName","src":"2455:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1586,"mutability":"mutable","name":"ids","nameLocation":"2496:3:5","nodeType":"VariableDeclaration","scope":1596,"src":"2477:22:5","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1584,"name":"uint256","nodeType":"ElementaryTypeName","src":"2477:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1585,"nodeType":"ArrayTypeName","src":"2477:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1589,"mutability":"mutable","name":"values","nameLocation":"2528:6:5","nodeType":"VariableDeclaration","scope":1596,"src":"2509:25:5","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1587,"name":"uint256","nodeType":"ElementaryTypeName","src":"2509:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1588,"nodeType":"ArrayTypeName","src":"2509:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1591,"mutability":"mutable","name":"data","nameLocation":"2559:4:5","nodeType":"VariableDeclaration","scope":1596,"src":"2544:19:5","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1590,"name":"bytes","nodeType":"ElementaryTypeName","src":"2544:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2419:150:5"},"returnParameters":{"id":1595,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1594,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1596,"src":"2588:6:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1593,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2588:6:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2587:8:5"},"scope":1597,"src":"2388:208:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1598,"src":"327:2271:5","usedErrors":[],"usedEvents":[]}],"src":"118:2481:5"},"id":5},"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol","exportedSymbols":{"ERC1155":[1432],"ERC1155Burnable":[1677]},"id":1678,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1599,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"128:24:6"},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/ERC1155.sol","file":"../ERC1155.sol","id":1601,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1678,"sourceUnit":1433,"src":"154:39:6","symbolAliases":[{"foreign":{"id":1600,"name":"ERC1155","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1432,"src":"162:7:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1603,"name":"ERC1155","nameLocations":["380:7:6"],"nodeType":"IdentifierPath","referencedDeclaration":1432,"src":"380:7:6"},"id":1604,"nodeType":"InheritanceSpecifier","src":"380:7:6"}],"canonicalName":"ERC1155Burnable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1602,"nodeType":"StructuredDocumentation","src":"195:147:6","text":" @dev Extension of {ERC1155} that allows token holders to destroy both their\n own tokens and those that they have been approved to use."},"fullyImplemented":true,"id":1677,"linearizedBaseContracts":[1677,1432,515,2002,1555,4743,4755,3096],"name":"ERC1155Burnable","nameLocation":"361:15:6","nodeType":"ContractDefinition","nodes":[{"body":{"id":1638,"nodeType":"Block","src":"467:208:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1613,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1606,"src":"481:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1614,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3078,"src":"492:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1615,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"492:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"481:23:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":1622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"508:40:6","subExpression":{"arguments":[{"id":1618,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1606,"src":"526:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":1619,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3078,"src":"535:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1620,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"535:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1617,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":738,"src":"509:16:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":1621,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"509:39:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"481:67:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1631,"nodeType":"IfStatement","src":"477:156:6","trueBody":{"id":1630,"nodeType":"Block","src":"550:83:6","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1625,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3078,"src":"600:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1626,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"600:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1627,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1606,"src":"614:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1624,"name":"ERC1155MissingApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":497,"src":"571:28:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_address_$returns$__$","typeString":"function (address,address) pure"}},"id":1628,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"571:51:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1629,"nodeType":"RevertStatement","src":"564:58:6"}]}},{"expression":{"arguments":[{"id":1633,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1606,"src":"649:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1634,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1608,"src":"658:2:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1635,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1610,"src":"662:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1632,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1336,"src":"643:5:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":1636,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"643:25:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1637,"nodeType":"ExpressionStatement","src":"643:25:6"}]},"functionSelector":"f5298aca","id":1639,"implemented":true,"kind":"function","modifiers":[],"name":"burn","nameLocation":"403:4:6","nodeType":"FunctionDefinition","parameters":{"id":1611,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1606,"mutability":"mutable","name":"account","nameLocation":"416:7:6","nodeType":"VariableDeclaration","scope":1639,"src":"408:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1605,"name":"address","nodeType":"ElementaryTypeName","src":"408:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1608,"mutability":"mutable","name":"id","nameLocation":"433:2:6","nodeType":"VariableDeclaration","scope":1639,"src":"425:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1607,"name":"uint256","nodeType":"ElementaryTypeName","src":"425:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1610,"mutability":"mutable","name":"value","nameLocation":"445:5:6","nodeType":"VariableDeclaration","scope":1639,"src":"437:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1609,"name":"uint256","nodeType":"ElementaryTypeName","src":"437:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"407:44:6"},"returnParameters":{"id":1612,"nodeType":"ParameterList","parameters":[],"src":"467:0:6"},"scope":1677,"src":"394:281:6","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1675,"nodeType":"Block","src":"779:215:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1650,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1641,"src":"793:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1651,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3078,"src":"804:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1652,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"804:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"793:23:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":1659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"820:40:6","subExpression":{"arguments":[{"id":1655,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1641,"src":"838:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":1656,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3078,"src":"847:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1657,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"847:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1654,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":738,"src":"821:16:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":1658,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"821:39:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"793:67:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1668,"nodeType":"IfStatement","src":"789:156:6","trueBody":{"id":1667,"nodeType":"Block","src":"862:83:6","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1662,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3078,"src":"912:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1663,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"912:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1664,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1641,"src":"926:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1661,"name":"ERC1155MissingApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":497,"src":"883:28:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_address_$returns$__$","typeString":"function (address,address) pure"}},"id":1665,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"883:51:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1666,"nodeType":"RevertStatement","src":"876:58:6"}]}},{"expression":{"arguments":[{"id":1670,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1641,"src":"966:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1671,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1644,"src":"975:3:6","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1672,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1647,"src":"980:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":1669,"name":"_burnBatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1375,"src":"955:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (address,uint256[] memory,uint256[] memory)"}},"id":1673,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"955:32:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1674,"nodeType":"ExpressionStatement","src":"955:32:6"}]},"functionSelector":"6b20c454","id":1676,"implemented":true,"kind":"function","modifiers":[],"name":"burnBatch","nameLocation":"690:9:6","nodeType":"FunctionDefinition","parameters":{"id":1648,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1641,"mutability":"mutable","name":"account","nameLocation":"708:7:6","nodeType":"VariableDeclaration","scope":1676,"src":"700:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1640,"name":"address","nodeType":"ElementaryTypeName","src":"700:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1644,"mutability":"mutable","name":"ids","nameLocation":"734:3:6","nodeType":"VariableDeclaration","scope":1676,"src":"717:20:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1642,"name":"uint256","nodeType":"ElementaryTypeName","src":"717:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1643,"nodeType":"ArrayTypeName","src":"717:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1647,"mutability":"mutable","name":"values","nameLocation":"756:6:6","nodeType":"VariableDeclaration","scope":1676,"src":"739:23:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1645,"name":"uint256","nodeType":"ElementaryTypeName","src":"739:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1646,"nodeType":"ArrayTypeName","src":"739:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"699:64:6"},"returnParameters":{"id":1649,"nodeType":"ParameterList","parameters":[],"src":"779:0:6"},"scope":1677,"src":"681:313:6","stateMutability":"nonpayable","virtual":true,"visibility":"public"}],"scope":1678,"src":"343:653:6","usedErrors":[480,485,490,497,502,507,514],"usedEvents":[1452,1467,1476,1483]}],"src":"128:869:6"},"id":6},"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Pausable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Pausable.sol","exportedSymbols":{"ERC1155":[1432],"ERC1155Pausable":[1716],"Pausable":[3265]},"id":1717,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1679,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"128:24:7"},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/ERC1155.sol","file":"../ERC1155.sol","id":1681,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1717,"sourceUnit":1433,"src":"154:39:7","symbolAliases":[{"foreign":{"id":1680,"name":"ERC1155","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1432,"src":"162:7:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Pausable.sol","file":"../../../utils/Pausable.sol","id":1683,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1717,"sourceUnit":3266,"src":"194:53:7","symbolAliases":[{"foreign":{"id":1682,"name":"Pausable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3265,"src":"202:8:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1685,"name":"ERC1155","nameLocations":["977:7:7"],"nodeType":"IdentifierPath","referencedDeclaration":1432,"src":"977:7:7"},"id":1686,"nodeType":"InheritanceSpecifier","src":"977:7:7"},{"baseName":{"id":1687,"name":"Pausable","nameLocations":["986:8:7"],"nodeType":"IdentifierPath","referencedDeclaration":3265,"src":"986:8:7"},"id":1688,"nodeType":"InheritanceSpecifier","src":"986:8:7"}],"canonicalName":"ERC1155Pausable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1684,"nodeType":"StructuredDocumentation","src":"249:690:7","text":" @dev ERC-1155 token with pausable token transfers, minting and burning.\n Useful for scenarios such as preventing trades until the end of an evaluation\n period, or having an emergency switch for freezing all token transfers in the\n event of a large bug.\n IMPORTANT: This contract does not include public pause and unpause functions. In\n addition to inheriting this contract, you must define both functions, invoking the\n {Pausable-_pause} and {Pausable-_unpause} internal functions, with appropriate\n access control, e.g. using {AccessControl} or {Ownable}. Not doing so will\n make the contract pause mechanism of the contract unreachable, and thus unusable."},"fullyImplemented":true,"id":1716,"linearizedBaseContracts":[1716,3265,1432,515,2002,1555,4743,4755,3096],"name":"ERC1155Pausable","nameLocation":"958:15:7","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[981],"body":{"id":1714,"nodeType":"Block","src":"1297:53:7","statements":[{"expression":{"arguments":[{"id":1708,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1691,"src":"1321:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1709,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1693,"src":"1327:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1710,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1696,"src":"1331:3:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1711,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1699,"src":"1336:6:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"expression":{"id":1705,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1307:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC1155Pausable_$1716_$","typeString":"type(contract super ERC1155Pausable)"}},"id":1707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1313:7:7","memberName":"_update","nodeType":"MemberAccess","referencedDeclaration":981,"src":"1307:13:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory)"}},"id":1712,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1307:36:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1713,"nodeType":"ExpressionStatement","src":"1307:36:7"}]},"documentation":{"id":1689,"nodeType":"StructuredDocumentation","src":"1001:123:7","text":" @dev See {ERC1155-_update}.\n Requirements:\n - the contract must not be paused."},"id":1715,"implemented":true,"kind":"function","modifiers":[{"id":1703,"kind":"modifierInvocation","modifierName":{"id":1702,"name":"whenNotPaused","nameLocations":["1283:13:7"],"nodeType":"IdentifierPath","referencedDeclaration":3190,"src":"1283:13:7"},"nodeType":"ModifierInvocation","src":"1283:13:7"}],"name":"_update","nameLocation":"1138:7:7","nodeType":"FunctionDefinition","overrides":{"id":1701,"nodeType":"OverrideSpecifier","overrides":[],"src":"1274:8:7"},"parameters":{"id":1700,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1691,"mutability":"mutable","name":"from","nameLocation":"1163:4:7","nodeType":"VariableDeclaration","scope":1715,"src":"1155:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1690,"name":"address","nodeType":"ElementaryTypeName","src":"1155:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1693,"mutability":"mutable","name":"to","nameLocation":"1185:2:7","nodeType":"VariableDeclaration","scope":1715,"src":"1177:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1692,"name":"address","nodeType":"ElementaryTypeName","src":"1177:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1696,"mutability":"mutable","name":"ids","nameLocation":"1214:3:7","nodeType":"VariableDeclaration","scope":1715,"src":"1197:20:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1694,"name":"uint256","nodeType":"ElementaryTypeName","src":"1197:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1695,"nodeType":"ArrayTypeName","src":"1197:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1699,"mutability":"mutable","name":"values","nameLocation":"1244:6:7","nodeType":"VariableDeclaration","scope":1715,"src":"1227:23:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1697,"name":"uint256","nodeType":"ElementaryTypeName","src":"1227:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1698,"nodeType":"ArrayTypeName","src":"1227:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1145:111:7"},"returnParameters":{"id":1704,"nodeType":"ParameterList","parameters":[],"src":"1297:0:7"},"scope":1716,"src":"1129:221:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1717,"src":"940:412:7","usedErrors":[480,485,490,497,502,507,514,3170,3173],"usedEvents":[1452,1467,1476,1483,3162,3167]}],"src":"128:1225:7"},"id":7},"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol","exportedSymbols":{"Arrays":[3034],"ERC1155":[1432],"ERC1155Supply":[1898]},"id":1899,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1718,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"126:24:8"},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/ERC1155.sol","file":"../ERC1155.sol","id":1720,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1899,"sourceUnit":1433,"src":"152:39:8","symbolAliases":[{"foreign":{"id":1719,"name":"ERC1155","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1432,"src":"160:7:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Arrays.sol","file":"../../../utils/Arrays.sol","id":1722,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1899,"sourceUnit":3035,"src":"192:49:8","symbolAliases":[{"foreign":{"id":1721,"name":"Arrays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3034,"src":"200:6:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1724,"name":"ERC1155","nameLocations":["831:7:8"],"nodeType":"IdentifierPath","referencedDeclaration":1432,"src":"831:7:8"},"id":1725,"nodeType":"InheritanceSpecifier","src":"831:7:8"}],"canonicalName":"ERC1155Supply","contractDependencies":[],"contractKind":"contract","documentation":{"id":1723,"nodeType":"StructuredDocumentation","src":"243:552:8","text":" @dev Extension of ERC-1155 that adds tracking of total supply per id.\n Useful for scenarios where Fungible and Non-fungible tokens have to be\n clearly identified. Note: While a totalSupply of 1 might mean the\n corresponding is an NFT, there is no guarantees that no other token with the\n same id are not going to be minted.\n NOTE: This contract implies a global limit of 2**256 - 1 to the number of tokens\n that can be minted.\n CAUTION: This extension should not be added in an upgrade to an already deployed contract."},"fullyImplemented":true,"id":1898,"linearizedBaseContracts":[1898,1432,515,2002,1555,4743,4755,3096],"name":"ERC1155Supply","nameLocation":"814:13:8","nodeType":"ContractDefinition","nodes":[{"global":false,"id":1729,"libraryName":{"id":1726,"name":"Arrays","nameLocations":["851:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":3034,"src":"851:6:8"},"nodeType":"UsingForDirective","src":"845:27:8","typeName":{"baseType":{"id":1727,"name":"uint256","nodeType":"ElementaryTypeName","src":"862:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1728,"nodeType":"ArrayTypeName","src":"862:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},{"constant":false,"id":1733,"mutability":"mutable","name":"_totalSupply","nameLocation":"917:12:8","nodeType":"VariableDeclaration","scope":1898,"src":"878:51:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"typeName":{"id":1732,"keyName":"id","keyNameLocation":"894:2:8","keyType":{"id":1730,"name":"uint256","nodeType":"ElementaryTypeName","src":"886:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"878:30:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1731,"name":"uint256","nodeType":"ElementaryTypeName","src":"900:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":1735,"mutability":"mutable","name":"_totalSupplyAll","nameLocation":"951:15:8","nodeType":"VariableDeclaration","scope":1898,"src":"935:31:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1734,"name":"uint256","nodeType":"ElementaryTypeName","src":"935:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"body":{"id":1747,"nodeType":"Block","src":"1114:40:8","statements":[{"expression":{"baseExpression":{"id":1743,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1733,"src":"1131:12:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":1745,"indexExpression":{"id":1744,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1738,"src":"1144:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1131:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1742,"id":1746,"nodeType":"Return","src":"1124:23:8"}]},"documentation":{"id":1736,"nodeType":"StructuredDocumentation","src":"973:65:8","text":" @dev Total value of tokens in with a given id."},"functionSelector":"bd85b039","id":1748,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"1052:11:8","nodeType":"FunctionDefinition","parameters":{"id":1739,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1738,"mutability":"mutable","name":"id","nameLocation":"1072:2:8","nodeType":"VariableDeclaration","scope":1748,"src":"1064:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1737,"name":"uint256","nodeType":"ElementaryTypeName","src":"1064:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1063:12:8"},"returnParameters":{"id":1742,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1741,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1748,"src":"1105:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1740,"name":"uint256","nodeType":"ElementaryTypeName","src":"1105:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1104:9:8"},"scope":1898,"src":"1043:111:8","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1756,"nodeType":"Block","src":"1272:39:8","statements":[{"expression":{"id":1754,"name":"_totalSupplyAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1735,"src":"1289:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1753,"id":1755,"nodeType":"Return","src":"1282:22:8"}]},"documentation":{"id":1749,"nodeType":"StructuredDocumentation","src":"1160:46:8","text":" @dev Total value of tokens."},"functionSelector":"18160ddd","id":1757,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"1220:11:8","nodeType":"FunctionDefinition","parameters":{"id":1750,"nodeType":"ParameterList","parameters":[],"src":"1231:2:8"},"returnParameters":{"id":1753,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1752,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1757,"src":"1263:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1751,"name":"uint256","nodeType":"ElementaryTypeName","src":"1263:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1262:9:8"},"scope":1898,"src":"1211:100:8","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1771,"nodeType":"Block","src":"1467:43:8","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1766,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1760,"src":"1496:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1765,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[1748,1757],"referencedDeclaration":1748,"src":"1484:11:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":1767,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1484:15:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1768,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1502:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1484:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1764,"id":1770,"nodeType":"Return","src":"1477:26:8"}]},"documentation":{"id":1758,"nodeType":"StructuredDocumentation","src":"1317:82:8","text":" @dev Indicates whether any token exist with a given id, or not."},"functionSelector":"4f558e79","id":1772,"implemented":true,"kind":"function","modifiers":[],"name":"exists","nameLocation":"1413:6:8","nodeType":"FunctionDefinition","parameters":{"id":1761,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1760,"mutability":"mutable","name":"id","nameLocation":"1428:2:8","nodeType":"VariableDeclaration","scope":1772,"src":"1420:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1759,"name":"uint256","nodeType":"ElementaryTypeName","src":"1420:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1419:12:8"},"returnParameters":{"id":1764,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1763,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1772,"src":"1461:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1762,"name":"bool","nodeType":"ElementaryTypeName","src":"1461:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1460:6:8"},"scope":1898,"src":"1404:106:8","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[981],"body":{"id":1896,"nodeType":"Block","src":"1721:1440:8","statements":[{"expression":{"arguments":[{"id":1790,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1775,"src":"1745:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1791,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1777,"src":"1751:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1792,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1780,"src":"1755:3:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1793,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1783,"src":"1760:6:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"expression":{"id":1787,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1731:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC1155Supply_$1898_$","typeString":"type(contract super ERC1155Supply)"}},"id":1789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1737:7:8","memberName":"_update","nodeType":"MemberAccess","referencedDeclaration":981,"src":"1731:13:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory)"}},"id":1794,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1731:36:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1795,"nodeType":"ExpressionStatement","src":"1731:36:8"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1796,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1775,"src":"1782:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1799,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1798:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1798,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1790:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1797,"name":"address","nodeType":"ElementaryTypeName","src":"1790:7:8","typeDescriptions":{}}},"id":1800,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1790:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1782:18:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1844,"nodeType":"IfStatement","src":"1778:571:8","trueBody":{"id":1843,"nodeType":"Block","src":"1802:547:8","statements":[{"assignments":[1803],"declarations":[{"constant":false,"id":1803,"mutability":"mutable","name":"totalMintValue","nameLocation":"1824:14:8","nodeType":"VariableDeclaration","scope":1843,"src":"1816:22:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1802,"name":"uint256","nodeType":"ElementaryTypeName","src":"1816:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1805,"initialValue":{"hexValue":"30","id":1804,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1841:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"1816:26:8"},{"body":{"id":1837,"nodeType":"Block","src":"1897:290:8","statements":[{"assignments":[1818],"declarations":[{"constant":false,"id":1818,"mutability":"mutable","name":"value","nameLocation":"1923:5:8","nodeType":"VariableDeclaration","scope":1837,"src":"1915:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1817,"name":"uint256","nodeType":"ElementaryTypeName","src":"1915:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1823,"initialValue":{"arguments":[{"id":1821,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1807,"src":"1957:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1819,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1783,"src":"1931:6:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1938:18:8","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":3000,"src":"1931:25:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":1822,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1931:28:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1915:44:8"},{"expression":{"id":1831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1824,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1733,"src":"2083:12:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":1829,"indexExpression":{"arguments":[{"id":1827,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1807,"src":"2119:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1825,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1780,"src":"2096:3:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2100:18:8","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":3000,"src":"2096:22:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":1828,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2096:25:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2083:39:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1830,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1818,"src":"2126:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2083:48:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1832,"nodeType":"ExpressionStatement","src":"2083:48:8"},{"expression":{"id":1835,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1833,"name":"totalMintValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1803,"src":"2149:14:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1834,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1818,"src":"2167:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2149:23:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1836,"nodeType":"ExpressionStatement","src":"2149:23:8"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1810,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1807,"src":"1876:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1811,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1780,"src":"1880:3:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1884:6:8","memberName":"length","nodeType":"MemberAccess","src":"1880:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1876:14:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1838,"initializationExpression":{"assignments":[1807],"declarations":[{"constant":false,"id":1807,"mutability":"mutable","name":"i","nameLocation":"1869:1:8","nodeType":"VariableDeclaration","scope":1838,"src":"1861:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1806,"name":"uint256","nodeType":"ElementaryTypeName","src":"1861:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1809,"initialValue":{"hexValue":"30","id":1808,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1873:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"1861:13:8"},"loopExpression":{"expression":{"id":1815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"1892:3:8","subExpression":{"id":1814,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1807,"src":"1894:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1816,"nodeType":"ExpressionStatement","src":"1892:3:8"},"nodeType":"ForStatement","src":"1856:331:8"},{"expression":{"id":1841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1839,"name":"_totalSupplyAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1735,"src":"2305:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1840,"name":"totalMintValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1803,"src":"2324:14:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2305:33:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1842,"nodeType":"ExpressionStatement","src":"2305:33:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1850,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1845,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1777,"src":"2363:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1848,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2377:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1847,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2369:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1846,"name":"address","nodeType":"ElementaryTypeName","src":"2369:7:8","typeDescriptions":{}}},"id":1849,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2369:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2363:16:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1895,"nodeType":"IfStatement","src":"2359:796:8","trueBody":{"id":1894,"nodeType":"Block","src":"2381:774:8","statements":[{"assignments":[1852],"declarations":[{"constant":false,"id":1852,"mutability":"mutable","name":"totalBurnValue","nameLocation":"2403:14:8","nodeType":"VariableDeclaration","scope":1894,"src":"2395:22:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1851,"name":"uint256","nodeType":"ElementaryTypeName","src":"2395:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1854,"initialValue":{"hexValue":"30","id":1853,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2420:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2395:26:8"},{"body":{"id":1887,"nodeType":"Block","src":"2476:456:8","statements":[{"assignments":[1867],"declarations":[{"constant":false,"id":1867,"mutability":"mutable","name":"value","nameLocation":"2502:5:8","nodeType":"VariableDeclaration","scope":1887,"src":"2494:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1866,"name":"uint256","nodeType":"ElementaryTypeName","src":"2494:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1872,"initialValue":{"arguments":[{"id":1870,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1856,"src":"2536:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1868,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1783,"src":"2510:6:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1869,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2517:18:8","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":3000,"src":"2510:25:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":1871,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2510:28:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2494:44:8"},{"id":1886,"nodeType":"UncheckedBlock","src":"2557:361:8","statements":[{"expression":{"id":1880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1873,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1733,"src":"2695:12:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":1878,"indexExpression":{"arguments":[{"id":1876,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1856,"src":"2731:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1874,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1780,"src":"2708:3:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2712:18:8","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":3000,"src":"2708:22:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":1877,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2708:25:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2695:39:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":1879,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1867,"src":"2738:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2695:48:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1881,"nodeType":"ExpressionStatement","src":"2695:48:8"},{"expression":{"id":1884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1882,"name":"totalBurnValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1852,"src":"2876:14:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1883,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1867,"src":"2894:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2876:23:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1885,"nodeType":"ExpressionStatement","src":"2876:23:8"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1859,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1856,"src":"2455:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1860,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1780,"src":"2459:3:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1861,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2463:6:8","memberName":"length","nodeType":"MemberAccess","src":"2459:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2455:14:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1888,"initializationExpression":{"assignments":[1856],"declarations":[{"constant":false,"id":1856,"mutability":"mutable","name":"i","nameLocation":"2448:1:8","nodeType":"VariableDeclaration","scope":1888,"src":"2440:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1855,"name":"uint256","nodeType":"ElementaryTypeName","src":"2440:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1858,"initialValue":{"hexValue":"30","id":1857,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2452:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2440:13:8"},"loopExpression":{"expression":{"id":1864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"2471:3:8","subExpression":{"id":1863,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1856,"src":"2473:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1865,"nodeType":"ExpressionStatement","src":"2471:3:8"},"nodeType":"ForStatement","src":"2435:497:8"},{"id":1893,"nodeType":"UncheckedBlock","src":"2945:200:8","statements":[{"expression":{"id":1891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1889,"name":"_totalSupplyAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1735,"src":"3097:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":1890,"name":"totalBurnValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1852,"src":"3116:14:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3097:33:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1892,"nodeType":"ExpressionStatement","src":"3097:33:8"}]}]}}]},"documentation":{"id":1773,"nodeType":"StructuredDocumentation","src":"1516:46:8","text":" @dev See {ERC1155-_update}."},"id":1897,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"1576:7:8","nodeType":"FunctionDefinition","overrides":{"id":1785,"nodeType":"OverrideSpecifier","overrides":[],"src":"1712:8:8"},"parameters":{"id":1784,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1775,"mutability":"mutable","name":"from","nameLocation":"1601:4:8","nodeType":"VariableDeclaration","scope":1897,"src":"1593:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1774,"name":"address","nodeType":"ElementaryTypeName","src":"1593:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1777,"mutability":"mutable","name":"to","nameLocation":"1623:2:8","nodeType":"VariableDeclaration","scope":1897,"src":"1615:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1776,"name":"address","nodeType":"ElementaryTypeName","src":"1615:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1780,"mutability":"mutable","name":"ids","nameLocation":"1652:3:8","nodeType":"VariableDeclaration","scope":1897,"src":"1635:20:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1778,"name":"uint256","nodeType":"ElementaryTypeName","src":"1635:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1779,"nodeType":"ArrayTypeName","src":"1635:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1783,"mutability":"mutable","name":"values","nameLocation":"1682:6:8","nodeType":"VariableDeclaration","scope":1897,"src":"1665:23:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1781,"name":"uint256","nodeType":"ElementaryTypeName","src":"1665:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1782,"nodeType":"ArrayTypeName","src":"1665:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1583:111:8"},"returnParameters":{"id":1786,"nodeType":"ParameterList","parameters":[],"src":"1721:0:8"},"scope":1898,"src":"1567:1594:8","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1899,"src":"796:2367:8","usedErrors":[480,485,490,497,502,507,514],"usedEvents":[1452,1467,1476,1483]}],"src":"126:3038:8"},"id":8},"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155URIStorage.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155URIStorage.sol","exportedSymbols":{"ERC1155":[1432],"ERC1155URIStorage":[1986],"Strings":[4719]},"id":1987,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1900,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"130:24:9"},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../../../utils/Strings.sol","id":1902,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1987,"sourceUnit":4720,"src":"156:51:9","symbolAliases":[{"foreign":{"id":1901,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4719,"src":"164:7:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/ERC1155.sol","file":"../ERC1155.sol","id":1904,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1987,"sourceUnit":1433,"src":"208:39:9","symbolAliases":[{"foreign":{"id":1903,"name":"ERC1155","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1432,"src":"216:7:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1906,"name":"ERC1155","nameLocations":["408:7:9"],"nodeType":"IdentifierPath","referencedDeclaration":1432,"src":"408:7:9"},"id":1907,"nodeType":"InheritanceSpecifier","src":"408:7:9"}],"canonicalName":"ERC1155URIStorage","contractDependencies":[],"contractKind":"contract","documentation":{"id":1905,"nodeType":"StructuredDocumentation","src":"249:119:9","text":" @dev ERC-1155 token with storage based token URI management.\n Inspired by the {ERC721URIStorage} extension"},"fullyImplemented":true,"id":1986,"linearizedBaseContracts":[1986,1432,515,2002,1555,4743,4755,3096],"name":"ERC1155URIStorage","nameLocation":"387:17:9","nodeType":"ContractDefinition","nodes":[{"global":false,"id":1910,"libraryName":{"id":1908,"name":"Strings","nameLocations":["428:7:9"],"nodeType":"IdentifierPath","referencedDeclaration":4719,"src":"428:7:9"},"nodeType":"UsingForDirective","src":"422:26:9","typeName":{"id":1909,"name":"uint256","nodeType":"ElementaryTypeName","src":"440:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":false,"id":1913,"mutability":"mutable","name":"_baseURI","nameLocation":"494:8:9","nodeType":"VariableDeclaration","scope":1986,"src":"479:28:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":1911,"name":"string","nodeType":"ElementaryTypeName","src":"479:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"","id":1912,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"505:2:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"visibility":"private"},{"constant":false,"id":1917,"mutability":"mutable","name":"_tokenURIs","nameLocation":"596:10:9","nodeType":"VariableDeclaration","scope":1986,"src":"553:53:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string)"},"typeName":{"id":1916,"keyName":"tokenId","keyNameLocation":"569:7:9","keyType":{"id":1914,"name":"uint256","nodeType":"ElementaryTypeName","src":"561:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"553:34:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1915,"name":"string","nodeType":"ElementaryTypeName","src":"580:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"visibility":"private"},{"baseFunctions":[618],"body":{"id":1951,"nodeType":"Block","src":"1417:249:9","statements":[{"assignments":[1927],"declarations":[{"constant":false,"id":1927,"mutability":"mutable","name":"tokenURI","nameLocation":"1441:8:9","nodeType":"VariableDeclaration","scope":1951,"src":"1427:22:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1926,"name":"string","nodeType":"ElementaryTypeName","src":"1427:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1931,"initialValue":{"baseExpression":{"id":1928,"name":"_tokenURIs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1917,"src":"1452:10:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string storage ref)"}},"id":1930,"indexExpression":{"id":1929,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1920,"src":"1463:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1452:19:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"VariableDeclarationStatement","src":"1427:44:9"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1938,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1934,"name":"tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1927,"src":"1582:8:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1933,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1576:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1932,"name":"bytes","nodeType":"ElementaryTypeName","src":"1576:5:9","typeDescriptions":{}}},"id":1935,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1576:15:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1592:6:9","memberName":"length","nodeType":"MemberAccess","src":"1576:22:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1937,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1601:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1576:26:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":1947,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1920,"src":"1651:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1945,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1641:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC1155URIStorage_$1986_$","typeString":"type(contract super ERC1155URIStorage)"}},"id":1946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1647:3:9","memberName":"uri","nodeType":"MemberAccess","referencedDeclaration":618,"src":"1641:9:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) view returns (string memory)"}},"id":1948,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1641:18:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":1949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1576:83:9","trueExpression":{"arguments":[{"id":1942,"name":"_baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1913,"src":"1619:8:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},{"id":1943,"name":"tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1927,"src":"1629:8:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":1940,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1605:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1939,"name":"string","nodeType":"ElementaryTypeName","src":"1605:6:9","typeDescriptions":{}}},"id":1941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1612:6:9","memberName":"concat","nodeType":"MemberAccess","src":"1605:13:9","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":1944,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1605:33:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1925,"id":1950,"nodeType":"Return","src":"1569:90:9"}]},"documentation":{"id":1918,"nodeType":"StructuredDocumentation","src":"613:716:9","text":" @dev See {IERC1155MetadataURI-uri}.\n This implementation returns the concatenation of the `_baseURI`\n and the token-specific uri if the latter is set\n This enables the following behaviors:\n - if `_tokenURIs[tokenId]` is set, then the result is the concatenation\n   of `_baseURI` and `_tokenURIs[tokenId]` (keep in mind that `_baseURI`\n   is empty per default);\n - if `_tokenURIs[tokenId]` is NOT set then we fallback to `super.uri()`\n   which in most cases will contain `ERC1155._uri`;\n - if `_tokenURIs[tokenId]` is NOT set, and if the parents do not have a\n   uri value set, then the result is empty."},"functionSelector":"0e89341c","id":1952,"implemented":true,"kind":"function","modifiers":[],"name":"uri","nameLocation":"1343:3:9","nodeType":"FunctionDefinition","overrides":{"id":1922,"nodeType":"OverrideSpecifier","overrides":[],"src":"1384:8:9"},"parameters":{"id":1921,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1920,"mutability":"mutable","name":"tokenId","nameLocation":"1355:7:9","nodeType":"VariableDeclaration","scope":1952,"src":"1347:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1919,"name":"uint256","nodeType":"ElementaryTypeName","src":"1347:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1346:17:9"},"returnParameters":{"id":1925,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1924,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1952,"src":"1402:13:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1923,"name":"string","nodeType":"ElementaryTypeName","src":"1402:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1401:15:9"},"scope":1986,"src":"1334:332:9","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1973,"nodeType":"Block","src":"1821:88:9","statements":[{"expression":{"id":1964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1960,"name":"_tokenURIs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1917,"src":"1831:10:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string storage ref)"}},"id":1962,"indexExpression":{"id":1961,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1955,"src":"1842:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1831:19:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1963,"name":"tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1957,"src":"1853:8:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1831:30:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1965,"nodeType":"ExpressionStatement","src":"1831:30:9"},{"eventCall":{"arguments":[{"arguments":[{"id":1968,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1955,"src":"1884:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1967,"name":"uri","nodeType":"Identifier","overloadedDeclarations":[1952],"referencedDeclaration":1952,"src":"1880:3:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) view returns (string memory)"}},"id":1969,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1880:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1970,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1955,"src":"1894:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1966,"name":"URI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1483,"src":"1876:3:9","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$returns$__$","typeString":"function (string memory,uint256)"}},"id":1971,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1876:26:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1972,"nodeType":"EmitStatement","src":"1871:31:9"}]},"documentation":{"id":1953,"nodeType":"StructuredDocumentation","src":"1672:69:9","text":" @dev Sets `tokenURI` as the tokenURI of `tokenId`."},"id":1974,"implemented":true,"kind":"function","modifiers":[],"name":"_setURI","nameLocation":"1755:7:9","nodeType":"FunctionDefinition","parameters":{"id":1958,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1955,"mutability":"mutable","name":"tokenId","nameLocation":"1771:7:9","nodeType":"VariableDeclaration","scope":1974,"src":"1763:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1954,"name":"uint256","nodeType":"ElementaryTypeName","src":"1763:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1957,"mutability":"mutable","name":"tokenURI","nameLocation":"1794:8:9","nodeType":"VariableDeclaration","scope":1974,"src":"1780:22:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1956,"name":"string","nodeType":"ElementaryTypeName","src":"1780:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1762:41:9"},"returnParameters":{"id":1959,"nodeType":"ParameterList","parameters":[],"src":"1821:0:9"},"scope":1986,"src":"1746:163:9","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1984,"nodeType":"Block","src":"2052:35:9","statements":[{"expression":{"id":1982,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1980,"name":"_baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1913,"src":"2062:8:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1981,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1977,"src":"2073:7:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2062:18:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1983,"nodeType":"ExpressionStatement","src":"2062:18:9"}]},"documentation":{"id":1975,"nodeType":"StructuredDocumentation","src":"1915:71:9","text":" @dev Sets `baseURI` as the `_baseURI` for all tokens"},"id":1985,"implemented":true,"kind":"function","modifiers":[],"name":"_setBaseURI","nameLocation":"2000:11:9","nodeType":"FunctionDefinition","parameters":{"id":1978,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1977,"mutability":"mutable","name":"baseURI","nameLocation":"2026:7:9","nodeType":"VariableDeclaration","scope":1985,"src":"2012:21:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1976,"name":"string","nodeType":"ElementaryTypeName","src":"2012:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2011:23:9"},"returnParameters":{"id":1979,"nodeType":"ParameterList","parameters":[],"src":"2052:0:9"},"scope":1986,"src":"1991:96:9","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1987,"src":"369:1720:9","usedErrors":[480,485,490,497,502,507,514],"usedEvents":[1452,1467,1476,1483]}],"src":"130:1960:9"},"id":9},"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol","exportedSymbols":{"IERC1155":[1555],"IERC1155MetadataURI":[2002]},"id":2003,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1988,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"132:24:10"},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155.sol","file":"../IERC1155.sol","id":1990,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2003,"sourceUnit":1556,"src":"158:41:10","symbolAliases":[{"foreign":{"id":1989,"name":"IERC1155","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1555,"src":"166:8:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1992,"name":"IERC1155","nameLocations":["399:8:10"],"nodeType":"IdentifierPath","referencedDeclaration":1555,"src":"399:8:10"},"id":1993,"nodeType":"InheritanceSpecifier","src":"399:8:10"}],"canonicalName":"IERC1155MetadataURI","contractDependencies":[],"contractKind":"interface","documentation":{"id":1991,"nodeType":"StructuredDocumentation","src":"201:164:10","text":" @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[ERC]."},"fullyImplemented":false,"id":2002,"linearizedBaseContracts":[2002,1555,4755],"name":"IERC1155MetadataURI","nameLocation":"376:19:10","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1994,"nodeType":"StructuredDocumentation","src":"414:192:10","text":" @dev Returns the URI for token type `id`.\n If the `\\{id\\}` substring is present in the URI, it must be replaced by\n clients with the actual token type ID."},"functionSelector":"0e89341c","id":2001,"implemented":false,"kind":"function","modifiers":[],"name":"uri","nameLocation":"620:3:10","nodeType":"FunctionDefinition","parameters":{"id":1997,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1996,"mutability":"mutable","name":"id","nameLocation":"632:2:10","nodeType":"VariableDeclaration","scope":2001,"src":"624:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1995,"name":"uint256","nodeType":"ElementaryTypeName","src":"624:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"623:12:10"},"returnParameters":{"id":2000,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1999,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2001,"src":"659:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1998,"name":"string","nodeType":"ElementaryTypeName","src":"659:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"658:15:10"},"scope":2002,"src":"611:63:10","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2003,"src":"366:310:10","usedErrors":[],"usedEvents":[1452,1467,1476,1483]}],"src":"132:545:10"},"id":10},"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol","exportedSymbols":{"ERC1155Utils":[2156],"IERC1155Errors":[515],"IERC1155Receiver":[1597]},"id":2157,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2004,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"120:24:11"},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol","file":"../IERC1155Receiver.sol","id":2006,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2157,"sourceUnit":1598,"src":"146:57:11","symbolAliases":[{"foreign":{"id":2005,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1597,"src":"154:16:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../../interfaces/draft-IERC6093.sol","id":2008,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2157,"sourceUnit":516,"src":"204:70:11","symbolAliases":[{"foreign":{"id":2007,"name":"IERC1155Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":515,"src":"212:14:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ERC1155Utils","contractDependencies":[],"contractKind":"library","documentation":{"id":2009,"nodeType":"StructuredDocumentation","src":"276:162:11","text":" @dev Library that provide common ERC-1155 utility functions.\n See https://eips.ethereum.org/EIPS/eip-1155[ERC-1155].\n _Available since v5.1._"},"fullyImplemented":true,"id":2156,"linearizedBaseContracts":[2156],"name":"ERC1155Utils","nameLocation":"447:12:11","nodeType":"ContractDefinition","nodes":[{"body":{"id":2080,"nodeType":"Block","src":"1183:774:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2029,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":2025,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2016,"src":"1197:2:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1200:4:11","memberName":"code","nodeType":"MemberAccess","src":"1197:7:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1205:6:11","memberName":"length","nodeType":"MemberAccess","src":"1197:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2028,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1214:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1197:18:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2079,"nodeType":"IfStatement","src":"1193:758:11","trueBody":{"id":2078,"nodeType":"Block","src":"1217:734:11","statements":[{"clauses":[{"block":{"id":2056,"nodeType":"Block","src":"1333:221:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":2047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2043,"name":"response","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2041,"src":"1355:8:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"expression":{"id":2044,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1597,"src":"1367:16:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Receiver_$1597_$","typeString":"type(contract IERC1155Receiver)"}},"id":2045,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1384:17:11","memberName":"onERC1155Received","nodeType":"MemberAccess","referencedDeclaration":1578,"src":"1367:34:11","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$","typeString":"function IERC1155Receiver.onERC1155Received(address,address,uint256,uint256,bytes calldata) returns (bytes4)"}},"id":2046,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1402:8:11","memberName":"selector","nodeType":"MemberAccess","src":"1367:43:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1355:55:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2055,"nodeType":"IfStatement","src":"1351:189:11","trueBody":{"id":2054,"nodeType":"Block","src":"1412:128:11","statements":[{"errorCall":{"arguments":[{"id":2051,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2016,"src":"1518:2:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2048,"name":"IERC1155Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":515,"src":"1480:14:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Errors_$515_$","typeString":"type(contract IERC1155Errors)"}},"id":2050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1495:22:11","memberName":"ERC1155InvalidReceiver","nodeType":"MemberAccess","referencedDeclaration":490,"src":"1480:37:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2052,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1480:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2053,"nodeType":"RevertStatement","src":"1473:48:11"}]}}]},"errorName":"","id":2057,"nodeType":"TryCatchClause","parameters":{"id":2042,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2041,"mutability":"mutable","name":"response","nameLocation":"1323:8:11","nodeType":"VariableDeclaration","scope":2057,"src":"1316:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2040,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1316:6:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1315:17:11"},"src":"1307:247:11"},{"block":{"id":2075,"nodeType":"Block","src":"1583:358:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2061,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2059,"src":"1605:6:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1612:6:11","memberName":"length","nodeType":"MemberAccess","src":"1605:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2063,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1622:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1605:18:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2073,"nodeType":"Block","src":"1776:151:11","statements":[{"AST":{"nodeType":"YulBlock","src":"1823:86:11","statements":[{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1860:2:11","type":"","value":"32"},{"name":"reason","nodeType":"YulIdentifier","src":"1864:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1856:3:11"},"nodeType":"YulFunctionCall","src":"1856:15:11"},{"arguments":[{"name":"reason","nodeType":"YulIdentifier","src":"1879:6:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1873:5:11"},"nodeType":"YulFunctionCall","src":"1873:13:11"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1849:6:11"},"nodeType":"YulFunctionCall","src":"1849:38:11"},"nodeType":"YulExpressionStatement","src":"1849:38:11"}]},"evmVersion":"paris","externalReferences":[{"declaration":2059,"isOffset":false,"isSlot":false,"src":"1864:6:11","valueSize":1},{"declaration":2059,"isOffset":false,"isSlot":false,"src":"1879:6:11","valueSize":1}],"flags":["memory-safe"],"id":2072,"nodeType":"InlineAssembly","src":"1798:111:11"}]},"id":2074,"nodeType":"IfStatement","src":"1601:326:11","trueBody":{"id":2071,"nodeType":"Block","src":"1625:145:11","statements":[{"errorCall":{"arguments":[{"id":2068,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2016,"src":"1748:2:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2065,"name":"IERC1155Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":515,"src":"1710:14:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Errors_$515_$","typeString":"type(contract IERC1155Errors)"}},"id":2067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1725:22:11","memberName":"ERC1155InvalidReceiver","nodeType":"MemberAccess","referencedDeclaration":490,"src":"1710:37:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2069,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1710:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2070,"nodeType":"RevertStatement","src":"1703:48:11"}]}}]},"errorName":"","id":2076,"nodeType":"TryCatchClause","parameters":{"id":2060,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2059,"mutability":"mutable","name":"reason","nameLocation":"1575:6:11","nodeType":"VariableDeclaration","scope":2076,"src":"1562:19:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2058,"name":"bytes","nodeType":"ElementaryTypeName","src":"1562:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1561:21:11"},"src":"1555:386:11"}],"externalCall":{"arguments":[{"id":2034,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2012,"src":"1274:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2035,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2014,"src":"1284:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2036,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2018,"src":"1290:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2037,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2020,"src":"1294:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2038,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2022,"src":"1301:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":2031,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2016,"src":"1252:2:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2030,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1597,"src":"1235:16:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Receiver_$1597_$","typeString":"type(contract IERC1155Receiver)"}},"id":2032,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1235:20:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC1155Receiver_$1597","typeString":"contract IERC1155Receiver"}},"id":2033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1256:17:11","memberName":"onERC1155Received","nodeType":"MemberAccess","referencedDeclaration":1578,"src":"1235:38:11","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256,uint256,bytes memory) external returns (bytes4)"}},"id":2039,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1235:71:11","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":2077,"nodeType":"TryStatement","src":"1231:710:11"}]}}]},"documentation":{"id":2010,"nodeType":"StructuredDocumentation","src":"466:527:11","text":" @dev Performs an acceptance check for the provided `operator` by calling {IERC1155-onERC1155Received}\n on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n Otherwise, the recipient must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value to accept\n the transfer."},"id":2081,"implemented":true,"kind":"function","modifiers":[],"name":"checkOnERC1155Received","nameLocation":"1007:22:11","nodeType":"FunctionDefinition","parameters":{"id":2023,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2012,"mutability":"mutable","name":"operator","nameLocation":"1047:8:11","nodeType":"VariableDeclaration","scope":2081,"src":"1039:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2011,"name":"address","nodeType":"ElementaryTypeName","src":"1039:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2014,"mutability":"mutable","name":"from","nameLocation":"1073:4:11","nodeType":"VariableDeclaration","scope":2081,"src":"1065:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2013,"name":"address","nodeType":"ElementaryTypeName","src":"1065:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2016,"mutability":"mutable","name":"to","nameLocation":"1095:2:11","nodeType":"VariableDeclaration","scope":2081,"src":"1087:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2015,"name":"address","nodeType":"ElementaryTypeName","src":"1087:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2018,"mutability":"mutable","name":"id","nameLocation":"1115:2:11","nodeType":"VariableDeclaration","scope":2081,"src":"1107:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2017,"name":"uint256","nodeType":"ElementaryTypeName","src":"1107:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2020,"mutability":"mutable","name":"value","nameLocation":"1135:5:11","nodeType":"VariableDeclaration","scope":2081,"src":"1127:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2019,"name":"uint256","nodeType":"ElementaryTypeName","src":"1127:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2022,"mutability":"mutable","name":"data","nameLocation":"1163:4:11","nodeType":"VariableDeclaration","scope":2081,"src":"1150:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2021,"name":"bytes","nodeType":"ElementaryTypeName","src":"1150:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1029:144:11"},"returnParameters":{"id":2024,"nodeType":"ParameterList","parameters":[],"src":"1183:0:11"},"scope":2156,"src":"998:959:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2154,"nodeType":"Block","src":"2715:816:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":2099,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2088,"src":"2729:2:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2732:4:11","memberName":"code","nodeType":"MemberAccess","src":"2729:7:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2737:6:11","memberName":"length","nodeType":"MemberAccess","src":"2729:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2102,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2746:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2729:18:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2153,"nodeType":"IfStatement","src":"2725:800:11","trueBody":{"id":2152,"nodeType":"Block","src":"2749:776:11","statements":[{"clauses":[{"block":{"id":2130,"nodeType":"Block","src":"2902:226:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":2121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2117,"name":"response","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2115,"src":"2924:8:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"expression":{"id":2118,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1597,"src":"2936:16:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Receiver_$1597_$","typeString":"type(contract IERC1155Receiver)"}},"id":2119,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2953:22:11","memberName":"onERC1155BatchReceived","nodeType":"MemberAccess","referencedDeclaration":1596,"src":"2936:39:11","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$","typeString":"function IERC1155Receiver.onERC1155BatchReceived(address,address,uint256[] calldata,uint256[] calldata,bytes calldata) returns (bytes4)"}},"id":2120,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2976:8:11","memberName":"selector","nodeType":"MemberAccess","src":"2936:48:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"2924:60:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2129,"nodeType":"IfStatement","src":"2920:194:11","trueBody":{"id":2128,"nodeType":"Block","src":"2986:128:11","statements":[{"errorCall":{"arguments":[{"id":2125,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2088,"src":"3092:2:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2122,"name":"IERC1155Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":515,"src":"3054:14:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Errors_$515_$","typeString":"type(contract IERC1155Errors)"}},"id":2124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3069:22:11","memberName":"ERC1155InvalidReceiver","nodeType":"MemberAccess","referencedDeclaration":490,"src":"3054:37:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2126,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3054:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2127,"nodeType":"RevertStatement","src":"3047:48:11"}]}}]},"errorName":"","id":2131,"nodeType":"TryCatchClause","parameters":{"id":2116,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2115,"mutability":"mutable","name":"response","nameLocation":"2879:8:11","nodeType":"VariableDeclaration","scope":2131,"src":"2872:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2114,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2872:6:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2854:47:11"},"src":"2846:282:11"},{"block":{"id":2149,"nodeType":"Block","src":"3157:358:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2135,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2133,"src":"3179:6:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3186:6:11","memberName":"length","nodeType":"MemberAccess","src":"3179:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2137,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3196:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3179:18:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2147,"nodeType":"Block","src":"3350:151:11","statements":[{"AST":{"nodeType":"YulBlock","src":"3397:86:11","statements":[{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3434:2:11","type":"","value":"32"},{"name":"reason","nodeType":"YulIdentifier","src":"3438:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3430:3:11"},"nodeType":"YulFunctionCall","src":"3430:15:11"},{"arguments":[{"name":"reason","nodeType":"YulIdentifier","src":"3453:6:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3447:5:11"},"nodeType":"YulFunctionCall","src":"3447:13:11"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3423:6:11"},"nodeType":"YulFunctionCall","src":"3423:38:11"},"nodeType":"YulExpressionStatement","src":"3423:38:11"}]},"evmVersion":"paris","externalReferences":[{"declaration":2133,"isOffset":false,"isSlot":false,"src":"3438:6:11","valueSize":1},{"declaration":2133,"isOffset":false,"isSlot":false,"src":"3453:6:11","valueSize":1}],"flags":["memory-safe"],"id":2146,"nodeType":"InlineAssembly","src":"3372:111:11"}]},"id":2148,"nodeType":"IfStatement","src":"3175:326:11","trueBody":{"id":2145,"nodeType":"Block","src":"3199:145:11","statements":[{"errorCall":{"arguments":[{"id":2142,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2088,"src":"3322:2:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2139,"name":"IERC1155Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":515,"src":"3284:14:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Errors_$515_$","typeString":"type(contract IERC1155Errors)"}},"id":2141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3299:22:11","memberName":"ERC1155InvalidReceiver","nodeType":"MemberAccess","referencedDeclaration":490,"src":"3284:37:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3284:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2144,"nodeType":"RevertStatement","src":"3277:48:11"}]}}]},"errorName":"","id":2150,"nodeType":"TryCatchClause","parameters":{"id":2134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2133,"mutability":"mutable","name":"reason","nameLocation":"3149:6:11","nodeType":"VariableDeclaration","scope":2150,"src":"3136:19:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2132,"name":"bytes","nodeType":"ElementaryTypeName","src":"3136:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3135:21:11"},"src":"3129:386:11"}],"externalCall":{"arguments":[{"id":2108,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2084,"src":"2811:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2109,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2086,"src":"2821:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2110,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2091,"src":"2827:3:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":2111,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2094,"src":"2832:6:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":2112,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2096,"src":"2840:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":2105,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2088,"src":"2784:2:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2104,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1597,"src":"2767:16:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Receiver_$1597_$","typeString":"type(contract IERC1155Receiver)"}},"id":2106,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2767:20:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC1155Receiver_$1597","typeString":"contract IERC1155Receiver"}},"id":2107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2788:22:11","memberName":"onERC1155BatchReceived","nodeType":"MemberAccess","referencedDeclaration":1596,"src":"2767:43:11","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory) external returns (bytes4)"}},"id":2113,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2767:78:11","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":2151,"nodeType":"TryStatement","src":"2763:752:11"}]}}]},"documentation":{"id":2082,"nodeType":"StructuredDocumentation","src":"1963:537:11","text":" @dev Performs a batch acceptance check for the provided `operator` by calling {IERC1155-onERC1155BatchReceived}\n on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n Otherwise, the recipient must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value to accept\n the transfer."},"id":2155,"implemented":true,"kind":"function","modifiers":[],"name":"checkOnERC1155BatchReceived","nameLocation":"2514:27:11","nodeType":"FunctionDefinition","parameters":{"id":2097,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2084,"mutability":"mutable","name":"operator","nameLocation":"2559:8:11","nodeType":"VariableDeclaration","scope":2155,"src":"2551:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2083,"name":"address","nodeType":"ElementaryTypeName","src":"2551:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2086,"mutability":"mutable","name":"from","nameLocation":"2585:4:11","nodeType":"VariableDeclaration","scope":2155,"src":"2577:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2085,"name":"address","nodeType":"ElementaryTypeName","src":"2577:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2088,"mutability":"mutable","name":"to","nameLocation":"2607:2:11","nodeType":"VariableDeclaration","scope":2155,"src":"2599:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2087,"name":"address","nodeType":"ElementaryTypeName","src":"2599:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2091,"mutability":"mutable","name":"ids","nameLocation":"2636:3:11","nodeType":"VariableDeclaration","scope":2155,"src":"2619:20:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2089,"name":"uint256","nodeType":"ElementaryTypeName","src":"2619:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2090,"nodeType":"ArrayTypeName","src":"2619:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2094,"mutability":"mutable","name":"values","nameLocation":"2666:6:11","nodeType":"VariableDeclaration","scope":2155,"src":"2649:23:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2092,"name":"uint256","nodeType":"ElementaryTypeName","src":"2649:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2093,"nodeType":"ArrayTypeName","src":"2649:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2096,"mutability":"mutable","name":"data","nameLocation":"2695:4:11","nodeType":"VariableDeclaration","scope":2155,"src":"2682:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2095,"name":"bytes","nodeType":"ElementaryTypeName","src":"2682:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2541:164:11"},"returnParameters":{"id":2098,"nodeType":"ParameterList","parameters":[],"src":"2715:0:11"},"scope":2156,"src":"2505:1026:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":2157,"src":"439:3094:11","usedErrors":[],"usedEvents":[]}],"src":"120:3414:11"},"id":11},"@openzeppelin/contracts/utils/Arrays.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Arrays.sol","exportedSymbols":{"Arrays":[3034],"Comparators":[3066],"Math":[6361],"SlotDerivation":[3395],"StorageSlot":[3519]},"id":3035,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2158,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"183:24:12"},{"absolutePath":"@openzeppelin/contracts/utils/Comparators.sol","file":"./Comparators.sol","id":2160,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3035,"sourceUnit":3067,"src":"209:46:12","symbolAliases":[{"foreign":{"id":2159,"name":"Comparators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3066,"src":"217:11:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/SlotDerivation.sol","file":"./SlotDerivation.sol","id":2162,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3035,"sourceUnit":3396,"src":"256:52:12","symbolAliases":[{"foreign":{"id":2161,"name":"SlotDerivation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3395,"src":"264:14:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","file":"./StorageSlot.sol","id":2164,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3035,"sourceUnit":3520,"src":"309:46:12","symbolAliases":[{"foreign":{"id":2163,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3519,"src":"317:11:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":2166,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3035,"sourceUnit":6362,"src":"356:37:12","symbolAliases":[{"foreign":{"id":2165,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6361,"src":"364:4:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Arrays","contractDependencies":[],"contractKind":"library","documentation":{"id":2167,"nodeType":"StructuredDocumentation","src":"395:63:12","text":" @dev Collection of functions related to array types."},"fullyImplemented":true,"id":3034,"linearizedBaseContracts":[3034],"name":"Arrays","nameLocation":"467:6:12","nodeType":"ContractDefinition","nodes":[{"global":false,"id":2170,"libraryName":{"id":2168,"name":"SlotDerivation","nameLocations":["486:14:12"],"nodeType":"IdentifierPath","referencedDeclaration":3395,"src":"486:14:12"},"nodeType":"UsingForDirective","src":"480:33:12","typeName":{"id":2169,"name":"bytes32","nodeType":"ElementaryTypeName","src":"505:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"global":false,"id":2173,"libraryName":{"id":2171,"name":"StorageSlot","nameLocations":["524:11:12"],"nodeType":"IdentifierPath","referencedDeclaration":3519,"src":"524:11:12"},"nodeType":"UsingForDirective","src":"518:30:12","typeName":{"id":2172,"name":"bytes32","nodeType":"ElementaryTypeName","src":"540:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"body":{"id":2205,"nodeType":"Block","src":"1628:83:12","statements":[{"expression":{"arguments":[{"arguments":[{"id":2195,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2177,"src":"1656:5:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":2194,"name":"_begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2430,"src":"1649:6:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256[] memory) pure returns (uint256)"}},"id":2196,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1649:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":2198,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2177,"src":"1669:5:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":2197,"name":"_end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2450,"src":"1664:4:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256[] memory) pure returns (uint256)"}},"id":2199,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1664:11:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2200,"name":"comp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2187,"src":"1677:4:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":2193,"name":"_quickSort","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2419,"src":"1638:10:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$__$","typeString":"function (uint256,uint256,function (uint256,uint256) pure returns (bool)) pure"}},"id":2201,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1638:44:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2202,"nodeType":"ExpressionStatement","src":"1638:44:12"},{"expression":{"id":2203,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2177,"src":"1699:5:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":2192,"id":2204,"nodeType":"Return","src":"1692:12:12"}]},"documentation":{"id":2174,"nodeType":"StructuredDocumentation","src":"554:915:12","text":" @dev Sort an array of uint256 (in memory) following the provided comparator function.\n This function does the sorting \"in place\", meaning that it overrides the input. The object is returned for\n convenience, but that returned value can be discarded safely if the caller has a memory pointer to the array.\n NOTE: this function's cost is `O(n · log(n))` in average and `O(n²)` in the worst case, with n the length of the\n array. Using it in view functions that are executed through `eth_call` is safe, but one should be very careful\n when executing this as part of a transaction. If the array being sorted is too large, the sort operation may\n consume more gas than is available in a block, leading to potential DoS.\n IMPORTANT: Consider memory side-effects when using custom comparator functions that access memory in an unsafe way."},"id":2206,"implemented":true,"kind":"function","modifiers":[],"name":"sort","nameLocation":"1483:4:12","nodeType":"FunctionDefinition","parameters":{"id":2188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2177,"mutability":"mutable","name":"array","nameLocation":"1514:5:12","nodeType":"VariableDeclaration","scope":2206,"src":"1497:22:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2175,"name":"uint256","nodeType":"ElementaryTypeName","src":"1497:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2176,"nodeType":"ArrayTypeName","src":"1497:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2187,"mutability":"mutable","name":"comp","nameLocation":"1576:4:12","nodeType":"VariableDeclaration","scope":2206,"src":"1529:51:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"typeName":{"id":2186,"nodeType":"FunctionTypeName","parameterTypes":{"id":2182,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2179,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2186,"src":"1538:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2178,"name":"uint256","nodeType":"ElementaryTypeName","src":"1538:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2181,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2186,"src":"1547:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2180,"name":"uint256","nodeType":"ElementaryTypeName","src":"1547:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1537:18:12"},"returnParameterTypes":{"id":2185,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2184,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2186,"src":"1570:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2183,"name":"bool","nodeType":"ElementaryTypeName","src":"1570:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1569:6:12"},"src":"1529:51:12","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"1487:99:12"},"returnParameters":{"id":2192,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2191,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2206,"src":"1610:16:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2189,"name":"uint256","nodeType":"ElementaryTypeName","src":"1610:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2190,"nodeType":"ArrayTypeName","src":"1610:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1609:18:12"},"scope":3034,"src":"1474:237:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2224,"nodeType":"Block","src":"1894:66:12","statements":[{"expression":{"arguments":[{"id":2217,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2210,"src":"1909:5:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"expression":{"id":2218,"name":"Comparators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3066,"src":"1916:11:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Comparators_$3066_$","typeString":"type(library Comparators)"}},"id":2219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1928:2:12","memberName":"lt","nodeType":"MemberAccess","referencedDeclaration":3051,"src":"1916:14:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":2216,"name":"sort","nodeType":"Identifier","overloadedDeclarations":[2206,2225,2257,2278,2310,2331],"referencedDeclaration":2206,"src":"1904:4:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,function (uint256,uint256) pure returns (bool)) pure returns (uint256[] memory)"}},"id":2220,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1904:27:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2221,"nodeType":"ExpressionStatement","src":"1904:27:12"},{"expression":{"id":2222,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2210,"src":"1948:5:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":2215,"id":2223,"nodeType":"Return","src":"1941:12:12"}]},"documentation":{"id":2207,"nodeType":"StructuredDocumentation","src":"1717:93:12","text":" @dev Variant of {sort} that sorts an array of uint256 in increasing order."},"id":2225,"implemented":true,"kind":"function","modifiers":[],"name":"sort","nameLocation":"1824:4:12","nodeType":"FunctionDefinition","parameters":{"id":2211,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2210,"mutability":"mutable","name":"array","nameLocation":"1846:5:12","nodeType":"VariableDeclaration","scope":2225,"src":"1829:22:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2208,"name":"uint256","nodeType":"ElementaryTypeName","src":"1829:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2209,"nodeType":"ArrayTypeName","src":"1829:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1828:24:12"},"returnParameters":{"id":2215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2214,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2225,"src":"1876:16:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2212,"name":"uint256","nodeType":"ElementaryTypeName","src":"1876:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2213,"nodeType":"ArrayTypeName","src":"1876:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1875:18:12"},"scope":3034,"src":"1815:145:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2256,"nodeType":"Block","src":"3040:97:12","statements":[{"expression":{"arguments":[{"arguments":[{"id":2247,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2229,"src":"3075:5:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}],"id":2246,"name":"_castToUint256Array","nodeType":"Identifier","overloadedDeclarations":[2482,2494],"referencedDeclaration":2482,"src":"3055:19:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (address[] memory) pure returns (uint256[] memory)"}},"id":2248,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3055:26:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"arguments":[{"id":2250,"name":"comp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2239,"src":"3102:4:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) pure returns (bool)"}],"id":2249,"name":"_castToUint256Comp","nodeType":"Identifier","overloadedDeclarations":[2520,2546],"referencedDeclaration":2520,"src":"3083:18:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$_$returns$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$","typeString":"function (function (address,address) pure returns (bool)) pure returns (function (uint256,uint256) pure returns (bool))"}},"id":2251,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3083:24:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":2245,"name":"sort","nodeType":"Identifier","overloadedDeclarations":[2206,2225,2257,2278,2310,2331],"referencedDeclaration":2206,"src":"3050:4:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,function (uint256,uint256) pure returns (bool)) pure returns (uint256[] memory)"}},"id":2252,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3050:58:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2253,"nodeType":"ExpressionStatement","src":"3050:58:12"},{"expression":{"id":2254,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2229,"src":"3125:5:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":2244,"id":2255,"nodeType":"Return","src":"3118:12:12"}]},"documentation":{"id":2226,"nodeType":"StructuredDocumentation","src":"1966:915:12","text":" @dev Sort an array of address (in memory) following the provided comparator function.\n This function does the sorting \"in place\", meaning that it overrides the input. The object is returned for\n convenience, but that returned value can be discarded safely if the caller has a memory pointer to the array.\n NOTE: this function's cost is `O(n · log(n))` in average and `O(n²)` in the worst case, with n the length of the\n array. Using it in view functions that are executed through `eth_call` is safe, but one should be very careful\n when executing this as part of a transaction. If the array being sorted is too large, the sort operation may\n consume more gas than is available in a block, leading to potential DoS.\n IMPORTANT: Consider memory side-effects when using custom comparator functions that access memory in an unsafe way."},"id":2257,"implemented":true,"kind":"function","modifiers":[],"name":"sort","nameLocation":"2895:4:12","nodeType":"FunctionDefinition","parameters":{"id":2240,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2229,"mutability":"mutable","name":"array","nameLocation":"2926:5:12","nodeType":"VariableDeclaration","scope":2257,"src":"2909:22:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2227,"name":"address","nodeType":"ElementaryTypeName","src":"2909:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2228,"nodeType":"ArrayTypeName","src":"2909:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":2239,"mutability":"mutable","name":"comp","nameLocation":"2988:4:12","nodeType":"VariableDeclaration","scope":2257,"src":"2941:51:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) pure returns (bool)"},"typeName":{"id":2238,"nodeType":"FunctionTypeName","parameterTypes":{"id":2234,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2231,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2238,"src":"2950:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2230,"name":"address","nodeType":"ElementaryTypeName","src":"2950:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2233,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2238,"src":"2959:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2232,"name":"address","nodeType":"ElementaryTypeName","src":"2959:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2949:18:12"},"returnParameterTypes":{"id":2237,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2236,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2238,"src":"2982:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2235,"name":"bool","nodeType":"ElementaryTypeName","src":"2982:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2981:6:12"},"src":"2941:51:12","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"2899:99:12"},"returnParameters":{"id":2244,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2243,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2257,"src":"3022:16:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2241,"name":"address","nodeType":"ElementaryTypeName","src":"3022:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2242,"nodeType":"ArrayTypeName","src":"3022:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"3021:18:12"},"scope":3034,"src":"2886:251:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2277,"nodeType":"Block","src":"3320:87:12","statements":[{"expression":{"arguments":[{"arguments":[{"id":2269,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2261,"src":"3355:5:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}],"id":2268,"name":"_castToUint256Array","nodeType":"Identifier","overloadedDeclarations":[2482,2494],"referencedDeclaration":2482,"src":"3335:19:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (address[] memory) pure returns (uint256[] memory)"}},"id":2270,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3335:26:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"expression":{"id":2271,"name":"Comparators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3066,"src":"3363:11:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Comparators_$3066_$","typeString":"type(library Comparators)"}},"id":2272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3375:2:12","memberName":"lt","nodeType":"MemberAccess","referencedDeclaration":3051,"src":"3363:14:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":2267,"name":"sort","nodeType":"Identifier","overloadedDeclarations":[2206,2225,2257,2278,2310,2331],"referencedDeclaration":2206,"src":"3330:4:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,function (uint256,uint256) pure returns (bool)) pure returns (uint256[] memory)"}},"id":2273,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3330:48:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2274,"nodeType":"ExpressionStatement","src":"3330:48:12"},{"expression":{"id":2275,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2261,"src":"3395:5:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":2266,"id":2276,"nodeType":"Return","src":"3388:12:12"}]},"documentation":{"id":2258,"nodeType":"StructuredDocumentation","src":"3143:93:12","text":" @dev Variant of {sort} that sorts an array of address in increasing order."},"id":2278,"implemented":true,"kind":"function","modifiers":[],"name":"sort","nameLocation":"3250:4:12","nodeType":"FunctionDefinition","parameters":{"id":2262,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2261,"mutability":"mutable","name":"array","nameLocation":"3272:5:12","nodeType":"VariableDeclaration","scope":2278,"src":"3255:22:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2259,"name":"address","nodeType":"ElementaryTypeName","src":"3255:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2260,"nodeType":"ArrayTypeName","src":"3255:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"3254:24:12"},"returnParameters":{"id":2266,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2265,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2278,"src":"3302:16:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2263,"name":"address","nodeType":"ElementaryTypeName","src":"3302:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2264,"nodeType":"ArrayTypeName","src":"3302:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"3301:18:12"},"scope":3034,"src":"3241:166:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2309,"nodeType":"Block","src":"4487:97:12","statements":[{"expression":{"arguments":[{"arguments":[{"id":2300,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2282,"src":"4522:5:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}],"id":2299,"name":"_castToUint256Array","nodeType":"Identifier","overloadedDeclarations":[2482,2494],"referencedDeclaration":2494,"src":"4502:19:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (bytes32[] memory) pure returns (uint256[] memory)"}},"id":2301,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4502:26:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"arguments":[{"id":2303,"name":"comp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2292,"src":"4549:4:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32,bytes32) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32,bytes32) pure returns (bool)"}],"id":2302,"name":"_castToUint256Comp","nodeType":"Identifier","overloadedDeclarations":[2520,2546],"referencedDeclaration":2546,"src":"4530:18:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$_$returns$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$","typeString":"function (function (bytes32,bytes32) pure returns (bool)) pure returns (function (uint256,uint256) pure returns (bool))"}},"id":2304,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4530:24:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":2298,"name":"sort","nodeType":"Identifier","overloadedDeclarations":[2206,2225,2257,2278,2310,2331],"referencedDeclaration":2206,"src":"4497:4:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,function (uint256,uint256) pure returns (bool)) pure returns (uint256[] memory)"}},"id":2305,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4497:58:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2306,"nodeType":"ExpressionStatement","src":"4497:58:12"},{"expression":{"id":2307,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2282,"src":"4572:5:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"functionReturnParameters":2297,"id":2308,"nodeType":"Return","src":"4565:12:12"}]},"documentation":{"id":2279,"nodeType":"StructuredDocumentation","src":"3413:915:12","text":" @dev Sort an array of bytes32 (in memory) following the provided comparator function.\n This function does the sorting \"in place\", meaning that it overrides the input. The object is returned for\n convenience, but that returned value can be discarded safely if the caller has a memory pointer to the array.\n NOTE: this function's cost is `O(n · log(n))` in average and `O(n²)` in the worst case, with n the length of the\n array. Using it in view functions that are executed through `eth_call` is safe, but one should be very careful\n when executing this as part of a transaction. If the array being sorted is too large, the sort operation may\n consume more gas than is available in a block, leading to potential DoS.\n IMPORTANT: Consider memory side-effects when using custom comparator functions that access memory in an unsafe way."},"id":2310,"implemented":true,"kind":"function","modifiers":[],"name":"sort","nameLocation":"4342:4:12","nodeType":"FunctionDefinition","parameters":{"id":2293,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2282,"mutability":"mutable","name":"array","nameLocation":"4373:5:12","nodeType":"VariableDeclaration","scope":2310,"src":"4356:22:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2280,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4356:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2281,"nodeType":"ArrayTypeName","src":"4356:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":2292,"mutability":"mutable","name":"comp","nameLocation":"4435:4:12","nodeType":"VariableDeclaration","scope":2310,"src":"4388:51:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32,bytes32) pure returns (bool)"},"typeName":{"id":2291,"nodeType":"FunctionTypeName","parameterTypes":{"id":2287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2284,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2291,"src":"4397:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2283,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4397:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2286,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2291,"src":"4406:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2285,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4406:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4396:18:12"},"returnParameterTypes":{"id":2290,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2289,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2291,"src":"4429:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2288,"name":"bool","nodeType":"ElementaryTypeName","src":"4429:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4428:6:12"},"src":"4388:51:12","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32,bytes32) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"4346:99:12"},"returnParameters":{"id":2297,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2296,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2310,"src":"4469:16:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2294,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4469:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2295,"nodeType":"ArrayTypeName","src":"4469:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"4468:18:12"},"scope":3034,"src":"4333:251:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2330,"nodeType":"Block","src":"4767:87:12","statements":[{"expression":{"arguments":[{"arguments":[{"id":2322,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2314,"src":"4802:5:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}],"id":2321,"name":"_castToUint256Array","nodeType":"Identifier","overloadedDeclarations":[2482,2494],"referencedDeclaration":2494,"src":"4782:19:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (bytes32[] memory) pure returns (uint256[] memory)"}},"id":2323,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4782:26:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"expression":{"id":2324,"name":"Comparators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3066,"src":"4810:11:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Comparators_$3066_$","typeString":"type(library Comparators)"}},"id":2325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4822:2:12","memberName":"lt","nodeType":"MemberAccess","referencedDeclaration":3051,"src":"4810:14:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":2320,"name":"sort","nodeType":"Identifier","overloadedDeclarations":[2206,2225,2257,2278,2310,2331],"referencedDeclaration":2206,"src":"4777:4:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,function (uint256,uint256) pure returns (bool)) pure returns (uint256[] memory)"}},"id":2326,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4777:48:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2327,"nodeType":"ExpressionStatement","src":"4777:48:12"},{"expression":{"id":2328,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2314,"src":"4842:5:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"functionReturnParameters":2319,"id":2329,"nodeType":"Return","src":"4835:12:12"}]},"documentation":{"id":2311,"nodeType":"StructuredDocumentation","src":"4590:93:12","text":" @dev Variant of {sort} that sorts an array of bytes32 in increasing order."},"id":2331,"implemented":true,"kind":"function","modifiers":[],"name":"sort","nameLocation":"4697:4:12","nodeType":"FunctionDefinition","parameters":{"id":2315,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2314,"mutability":"mutable","name":"array","nameLocation":"4719:5:12","nodeType":"VariableDeclaration","scope":2331,"src":"4702:22:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2312,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4702:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2313,"nodeType":"ArrayTypeName","src":"4702:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"4701:24:12"},"returnParameters":{"id":2319,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2318,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2331,"src":"4749:16:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2316,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4749:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2317,"nodeType":"ArrayTypeName","src":"4749:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"4748:18:12"},"scope":3034,"src":"4688:166:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2418,"nodeType":"Block","src":"5470:889:12","statements":[{"id":2417,"nodeType":"UncheckedBlock","src":"5480:873:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2349,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2336,"src":"5508:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2350,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2334,"src":"5514:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5508:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30783430","id":2352,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5522:4:12","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"0x40"},"src":"5508:18:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2355,"nodeType":"IfStatement","src":"5504:31:12","trueBody":{"functionReturnParameters":2348,"id":2354,"nodeType":"Return","src":"5528:7:12"}},{"assignments":[2357],"declarations":[{"constant":false,"id":2357,"mutability":"mutable","name":"pivot","nameLocation":"5599:5:12","nodeType":"VariableDeclaration","scope":2417,"src":"5591:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2356,"name":"uint256","nodeType":"ElementaryTypeName","src":"5591:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2361,"initialValue":{"arguments":[{"id":2359,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2334,"src":"5614:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2358,"name":"_mload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2460,"src":"5607:6:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2360,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5607:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5591:29:12"},{"assignments":[2363],"declarations":[{"constant":false,"id":2363,"mutability":"mutable","name":"pos","nameLocation":"5715:3:12","nodeType":"VariableDeclaration","scope":2417,"src":"5707:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2362,"name":"uint256","nodeType":"ElementaryTypeName","src":"5707:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2365,"initialValue":{"id":2364,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2334,"src":"5721:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5707:19:12"},{"body":{"id":2396,"nodeType":"Block","src":"5795:331:12","statements":[{"condition":{"arguments":[{"arguments":[{"id":2381,"name":"it","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2367,"src":"5829:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2380,"name":"_mload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2460,"src":"5822:6:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2382,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5822:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2383,"name":"pivot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2357,"src":"5834:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2379,"name":"comp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2346,"src":"5817:4:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}},"id":2384,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5817:23:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2395,"nodeType":"IfStatement","src":"5813:299:12","trueBody":{"id":2394,"nodeType":"Block","src":"5842:270:12","statements":[{"expression":{"id":2387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2385,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2363,"src":"6046:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"30783230","id":2386,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6053:4:12","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"6046:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2388,"nodeType":"ExpressionStatement","src":"6046:11:12"},{"expression":{"arguments":[{"id":2390,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2363,"src":"6085:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2391,"name":"it","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2367,"src":"6090:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2389,"name":"_swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2470,"src":"6079:5:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":2392,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6079:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2393,"nodeType":"ExpressionStatement","src":"6079:14:12"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2372,"name":"it","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2367,"src":"5773:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2373,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2336,"src":"5778:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5773:8:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2397,"initializationExpression":{"assignments":[2367],"declarations":[{"constant":false,"id":2367,"mutability":"mutable","name":"it","nameLocation":"5754:2:12","nodeType":"VariableDeclaration","scope":2397,"src":"5746:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2366,"name":"uint256","nodeType":"ElementaryTypeName","src":"5746:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2371,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2368,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2334,"src":"5759:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"30783230","id":2369,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5767:4:12","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"5759:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5746:25:12"},"loopExpression":{"expression":{"id":2377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2375,"name":"it","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2367,"src":"5783:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"30783230","id":2376,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5789:4:12","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"5783:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2378,"nodeType":"ExpressionStatement","src":"5783:10:12"},"nodeType":"ForStatement","src":"5741:385:12"},{"expression":{"arguments":[{"id":2399,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2334,"src":"6146:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2400,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2363,"src":"6153:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2398,"name":"_swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2470,"src":"6140:5:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":2401,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6140:17:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2402,"nodeType":"ExpressionStatement","src":"6140:17:12"},{"expression":{"arguments":[{"id":2404,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2334,"src":"6207:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2405,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2363,"src":"6214:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2406,"name":"comp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2346,"src":"6219:4:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":2403,"name":"_quickSort","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2419,"src":"6196:10:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$__$","typeString":"function (uint256,uint256,function (uint256,uint256) pure returns (bool)) pure"}},"id":2407,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6196:28:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2408,"nodeType":"ExpressionStatement","src":"6196:28:12"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2410,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2363,"src":"6284:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"30783230","id":2411,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6290:4:12","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"6284:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2413,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2336,"src":"6296:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2414,"name":"comp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2346,"src":"6301:4:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":2409,"name":"_quickSort","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2419,"src":"6273:10:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$__$","typeString":"function (uint256,uint256,function (uint256,uint256) pure returns (bool)) pure"}},"id":2415,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6273:33:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2416,"nodeType":"ExpressionStatement","src":"6273:33:12"}]}]},"documentation":{"id":2332,"nodeType":"StructuredDocumentation","src":"4860:491:12","text":" @dev Performs a quick sort of a segment of memory. The segment sorted starts at `begin` (inclusive), and stops\n at end (exclusive). Sorting follows the `comp` comparator.\n Invariant: `begin <= end`. This is the case when initially called by {sort} and is preserved in subcalls.\n IMPORTANT: Memory locations between `begin` and `end` are not validated/zeroed. This function should\n be used only if the limits are within a memory array."},"id":2419,"implemented":true,"kind":"function","modifiers":[],"name":"_quickSort","nameLocation":"5365:10:12","nodeType":"FunctionDefinition","parameters":{"id":2347,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2334,"mutability":"mutable","name":"begin","nameLocation":"5384:5:12","nodeType":"VariableDeclaration","scope":2419,"src":"5376:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2333,"name":"uint256","nodeType":"ElementaryTypeName","src":"5376:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2336,"mutability":"mutable","name":"end","nameLocation":"5399:3:12","nodeType":"VariableDeclaration","scope":2419,"src":"5391:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2335,"name":"uint256","nodeType":"ElementaryTypeName","src":"5391:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2346,"mutability":"mutable","name":"comp","nameLocation":"5451:4:12","nodeType":"VariableDeclaration","scope":2419,"src":"5404:51:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"typeName":{"id":2345,"nodeType":"FunctionTypeName","parameterTypes":{"id":2341,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2338,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2345,"src":"5413:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2337,"name":"uint256","nodeType":"ElementaryTypeName","src":"5413:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2340,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2345,"src":"5422:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2339,"name":"uint256","nodeType":"ElementaryTypeName","src":"5422:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5412:18:12"},"returnParameterTypes":{"id":2344,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2343,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2345,"src":"5445:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2342,"name":"bool","nodeType":"ElementaryTypeName","src":"5445:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5444:6:12"},"src":"5404:51:12","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"5375:81:12"},"returnParameters":{"id":2348,"nodeType":"ParameterList","parameters":[],"src":"5470:0:12"},"scope":3034,"src":"5356:1003:12","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2429,"nodeType":"Block","src":"6532:88:12","statements":[{"AST":{"nodeType":"YulBlock","src":"6567:47:12","statements":[{"nodeType":"YulAssignment","src":"6581:23:12","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"6592:5:12"},{"kind":"number","nodeType":"YulLiteral","src":"6599:4:12","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6588:3:12"},"nodeType":"YulFunctionCall","src":"6588:16:12"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"6581:3:12"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2423,"isOffset":false,"isSlot":false,"src":"6592:5:12","valueSize":1},{"declaration":2426,"isOffset":false,"isSlot":false,"src":"6581:3:12","valueSize":1}],"flags":["memory-safe"],"id":2428,"nodeType":"InlineAssembly","src":"6542:72:12"}]},"documentation":{"id":2420,"nodeType":"StructuredDocumentation","src":"6365:87:12","text":" @dev Pointer to the memory location of the first element of `array`."},"id":2430,"implemented":true,"kind":"function","modifiers":[],"name":"_begin","nameLocation":"6466:6:12","nodeType":"FunctionDefinition","parameters":{"id":2424,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2423,"mutability":"mutable","name":"array","nameLocation":"6490:5:12","nodeType":"VariableDeclaration","scope":2430,"src":"6473:22:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2421,"name":"uint256","nodeType":"ElementaryTypeName","src":"6473:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2422,"nodeType":"ArrayTypeName","src":"6473:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"6472:24:12"},"returnParameters":{"id":2427,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2426,"mutability":"mutable","name":"ptr","nameLocation":"6527:3:12","nodeType":"VariableDeclaration","scope":2430,"src":"6519:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2425,"name":"uint256","nodeType":"ElementaryTypeName","src":"6519:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6518:13:12"},"scope":3034,"src":"6457:163:12","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2449,"nodeType":"Block","src":"6892:93:12","statements":[{"id":2448,"nodeType":"UncheckedBlock","src":"6902:77:12","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2440,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2434,"src":"6940:5:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":2439,"name":"_begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2430,"src":"6933:6:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256[] memory) pure returns (uint256)"}},"id":2441,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6933:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2442,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2434,"src":"6949:5:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6955:6:12","memberName":"length","nodeType":"MemberAccess","src":"6949:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30783230","id":2444,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6964:4:12","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"6949:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6933:35:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2438,"id":2447,"nodeType":"Return","src":"6926:42:12"}]}]},"documentation":{"id":2431,"nodeType":"StructuredDocumentation","src":"6626:188:12","text":" @dev Pointer to the memory location of the first memory word (32bytes) after `array`. This is the memory word\n that comes just after the last element of the array."},"id":2450,"implemented":true,"kind":"function","modifiers":[],"name":"_end","nameLocation":"6828:4:12","nodeType":"FunctionDefinition","parameters":{"id":2435,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2434,"mutability":"mutable","name":"array","nameLocation":"6850:5:12","nodeType":"VariableDeclaration","scope":2450,"src":"6833:22:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2432,"name":"uint256","nodeType":"ElementaryTypeName","src":"6833:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2433,"nodeType":"ArrayTypeName","src":"6833:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"6832:24:12"},"returnParameters":{"id":2438,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2437,"mutability":"mutable","name":"ptr","nameLocation":"6887:3:12","nodeType":"VariableDeclaration","scope":2450,"src":"6879:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2436,"name":"uint256","nodeType":"ElementaryTypeName","src":"6879:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6878:13:12"},"scope":3034,"src":"6819:166:12","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2459,"nodeType":"Block","src":"7136:68:12","statements":[{"AST":{"nodeType":"YulBlock","src":"7155:43:12","statements":[{"nodeType":"YulAssignment","src":"7169:19:12","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"7184:3:12"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7178:5:12"},"nodeType":"YulFunctionCall","src":"7178:10:12"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"7169:5:12"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2453,"isOffset":false,"isSlot":false,"src":"7184:3:12","valueSize":1},{"declaration":2456,"isOffset":false,"isSlot":false,"src":"7169:5:12","valueSize":1}],"id":2458,"nodeType":"InlineAssembly","src":"7146:52:12"}]},"documentation":{"id":2451,"nodeType":"StructuredDocumentation","src":"6991:74:12","text":" @dev Load memory word (as a uint256) at location `ptr`."},"id":2460,"implemented":true,"kind":"function","modifiers":[],"name":"_mload","nameLocation":"7079:6:12","nodeType":"FunctionDefinition","parameters":{"id":2454,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2453,"mutability":"mutable","name":"ptr","nameLocation":"7094:3:12","nodeType":"VariableDeclaration","scope":2460,"src":"7086:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2452,"name":"uint256","nodeType":"ElementaryTypeName","src":"7086:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7085:13:12"},"returnParameters":{"id":2457,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2456,"mutability":"mutable","name":"value","nameLocation":"7129:5:12","nodeType":"VariableDeclaration","scope":2460,"src":"7121:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2455,"name":"uint256","nodeType":"ElementaryTypeName","src":"7121:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7120:15:12"},"scope":3034,"src":"7070:134:12","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2469,"nodeType":"Block","src":"7348:178:12","statements":[{"AST":{"nodeType":"YulBlock","src":"7367:153:12","statements":[{"nodeType":"YulVariableDeclaration","src":"7381:25:12","value":{"arguments":[{"name":"ptr1","nodeType":"YulIdentifier","src":"7401:4:12"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7395:5:12"},"nodeType":"YulFunctionCall","src":"7395:11:12"},"variables":[{"name":"value1","nodeType":"YulTypedName","src":"7385:6:12","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7419:25:12","value":{"arguments":[{"name":"ptr2","nodeType":"YulIdentifier","src":"7439:4:12"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7433:5:12"},"nodeType":"YulFunctionCall","src":"7433:11:12"},"variables":[{"name":"value2","nodeType":"YulTypedName","src":"7423:6:12","type":""}]},{"expression":{"arguments":[{"name":"ptr1","nodeType":"YulIdentifier","src":"7464:4:12"},{"name":"value2","nodeType":"YulIdentifier","src":"7470:6:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7457:6:12"},"nodeType":"YulFunctionCall","src":"7457:20:12"},"nodeType":"YulExpressionStatement","src":"7457:20:12"},{"expression":{"arguments":[{"name":"ptr2","nodeType":"YulIdentifier","src":"7497:4:12"},{"name":"value1","nodeType":"YulIdentifier","src":"7503:6:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7490:6:12"},"nodeType":"YulFunctionCall","src":"7490:20:12"},"nodeType":"YulExpressionStatement","src":"7490:20:12"}]},"evmVersion":"paris","externalReferences":[{"declaration":2463,"isOffset":false,"isSlot":false,"src":"7401:4:12","valueSize":1},{"declaration":2463,"isOffset":false,"isSlot":false,"src":"7464:4:12","valueSize":1},{"declaration":2465,"isOffset":false,"isSlot":false,"src":"7439:4:12","valueSize":1},{"declaration":2465,"isOffset":false,"isSlot":false,"src":"7497:4:12","valueSize":1}],"id":2468,"nodeType":"InlineAssembly","src":"7358:162:12"}]},"documentation":{"id":2461,"nodeType":"StructuredDocumentation","src":"7210:77:12","text":" @dev Swaps the elements memory location `ptr1` and `ptr2`."},"id":2470,"implemented":true,"kind":"function","modifiers":[],"name":"_swap","nameLocation":"7301:5:12","nodeType":"FunctionDefinition","parameters":{"id":2466,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2463,"mutability":"mutable","name":"ptr1","nameLocation":"7315:4:12","nodeType":"VariableDeclaration","scope":2470,"src":"7307:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2462,"name":"uint256","nodeType":"ElementaryTypeName","src":"7307:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2465,"mutability":"mutable","name":"ptr2","nameLocation":"7329:4:12","nodeType":"VariableDeclaration","scope":2470,"src":"7321:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2464,"name":"uint256","nodeType":"ElementaryTypeName","src":"7321:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7306:28:12"},"returnParameters":{"id":2467,"nodeType":"ParameterList","parameters":[],"src":"7348:0:12"},"scope":3034,"src":"7292:234:12","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2481,"nodeType":"Block","src":"7713:64:12","statements":[{"AST":{"nodeType":"YulBlock","src":"7732:39:12","statements":[{"nodeType":"YulAssignment","src":"7746:15:12","value":{"name":"input","nodeType":"YulIdentifier","src":"7756:5:12"},"variableNames":[{"name":"output","nodeType":"YulIdentifier","src":"7746:6:12"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2474,"isOffset":false,"isSlot":false,"src":"7756:5:12","valueSize":1},{"declaration":2478,"isOffset":false,"isSlot":false,"src":"7746:6:12","valueSize":1}],"id":2480,"nodeType":"InlineAssembly","src":"7723:48:12"}]},"documentation":{"id":2471,"nodeType":"StructuredDocumentation","src":"7532:76:12","text":"@dev Helper: low level cast address memory array to uint256 memory array"},"id":2482,"implemented":true,"kind":"function","modifiers":[],"name":"_castToUint256Array","nameLocation":"7622:19:12","nodeType":"FunctionDefinition","parameters":{"id":2475,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2474,"mutability":"mutable","name":"input","nameLocation":"7659:5:12","nodeType":"VariableDeclaration","scope":2482,"src":"7642:22:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2472,"name":"address","nodeType":"ElementaryTypeName","src":"7642:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2473,"nodeType":"ArrayTypeName","src":"7642:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"7641:24:12"},"returnParameters":{"id":2479,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2478,"mutability":"mutable","name":"output","nameLocation":"7705:6:12","nodeType":"VariableDeclaration","scope":2482,"src":"7688:23:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2476,"name":"uint256","nodeType":"ElementaryTypeName","src":"7688:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2477,"nodeType":"ArrayTypeName","src":"7688:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"7687:25:12"},"scope":3034,"src":"7613:164:12","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2493,"nodeType":"Block","src":"7964:64:12","statements":[{"AST":{"nodeType":"YulBlock","src":"7983:39:12","statements":[{"nodeType":"YulAssignment","src":"7997:15:12","value":{"name":"input","nodeType":"YulIdentifier","src":"8007:5:12"},"variableNames":[{"name":"output","nodeType":"YulIdentifier","src":"7997:6:12"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2486,"isOffset":false,"isSlot":false,"src":"8007:5:12","valueSize":1},{"declaration":2490,"isOffset":false,"isSlot":false,"src":"7997:6:12","valueSize":1}],"id":2492,"nodeType":"InlineAssembly","src":"7974:48:12"}]},"documentation":{"id":2483,"nodeType":"StructuredDocumentation","src":"7783:76:12","text":"@dev Helper: low level cast bytes32 memory array to uint256 memory array"},"id":2494,"implemented":true,"kind":"function","modifiers":[],"name":"_castToUint256Array","nameLocation":"7873:19:12","nodeType":"FunctionDefinition","parameters":{"id":2487,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2486,"mutability":"mutable","name":"input","nameLocation":"7910:5:12","nodeType":"VariableDeclaration","scope":2494,"src":"7893:22:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2484,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7893:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2485,"nodeType":"ArrayTypeName","src":"7893:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"7892:24:12"},"returnParameters":{"id":2491,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2490,"mutability":"mutable","name":"output","nameLocation":"7956:6:12","nodeType":"VariableDeclaration","scope":2494,"src":"7939:23:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2488,"name":"uint256","nodeType":"ElementaryTypeName","src":"7939:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2489,"nodeType":"ArrayTypeName","src":"7939:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"7938:25:12"},"scope":3034,"src":"7864:164:12","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2519,"nodeType":"Block","src":"8290:64:12","statements":[{"AST":{"nodeType":"YulBlock","src":"8309:39:12","statements":[{"nodeType":"YulAssignment","src":"8323:15:12","value":{"name":"input","nodeType":"YulIdentifier","src":"8333:5:12"},"variableNames":[{"name":"output","nodeType":"YulIdentifier","src":"8323:6:12"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2505,"isOffset":false,"isSlot":false,"src":"8333:5:12","valueSize":1},{"declaration":2516,"isOffset":false,"isSlot":false,"src":"8323:6:12","valueSize":1}],"id":2518,"nodeType":"InlineAssembly","src":"8300:48:12"}]},"documentation":{"id":2495,"nodeType":"StructuredDocumentation","src":"8034:78:12","text":"@dev Helper: low level cast address comp function to uint256 comp function"},"id":2520,"implemented":true,"kind":"function","modifiers":[],"name":"_castToUint256Comp","nameLocation":"8126:18:12","nodeType":"FunctionDefinition","parameters":{"id":2506,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2505,"mutability":"mutable","name":"input","nameLocation":"8201:5:12","nodeType":"VariableDeclaration","scope":2520,"src":"8154:52:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) pure returns (bool)"},"typeName":{"id":2504,"nodeType":"FunctionTypeName","parameterTypes":{"id":2500,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2497,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2504,"src":"8163:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2496,"name":"address","nodeType":"ElementaryTypeName","src":"8163:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2499,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2504,"src":"8172:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2498,"name":"address","nodeType":"ElementaryTypeName","src":"8172:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8162:18:12"},"returnParameterTypes":{"id":2503,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2502,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2504,"src":"8195:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2501,"name":"bool","nodeType":"ElementaryTypeName","src":"8195:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8194:6:12"},"src":"8154:52:12","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"8144:68:12"},"returnParameters":{"id":2517,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2516,"mutability":"mutable","name":"output","nameLocation":"8282:6:12","nodeType":"VariableDeclaration","scope":2520,"src":"8235:53:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"typeName":{"id":2515,"nodeType":"FunctionTypeName","parameterTypes":{"id":2511,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2508,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2515,"src":"8244:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2507,"name":"uint256","nodeType":"ElementaryTypeName","src":"8244:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2510,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2515,"src":"8253:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2509,"name":"uint256","nodeType":"ElementaryTypeName","src":"8253:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8243:18:12"},"returnParameterTypes":{"id":2514,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2513,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2515,"src":"8276:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2512,"name":"bool","nodeType":"ElementaryTypeName","src":"8276:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8275:6:12"},"src":"8235:53:12","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"8234:55:12"},"scope":3034,"src":"8117:237:12","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2545,"nodeType":"Block","src":"8616:64:12","statements":[{"AST":{"nodeType":"YulBlock","src":"8635:39:12","statements":[{"nodeType":"YulAssignment","src":"8649:15:12","value":{"name":"input","nodeType":"YulIdentifier","src":"8659:5:12"},"variableNames":[{"name":"output","nodeType":"YulIdentifier","src":"8649:6:12"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2531,"isOffset":false,"isSlot":false,"src":"8659:5:12","valueSize":1},{"declaration":2542,"isOffset":false,"isSlot":false,"src":"8649:6:12","valueSize":1}],"id":2544,"nodeType":"InlineAssembly","src":"8626:48:12"}]},"documentation":{"id":2521,"nodeType":"StructuredDocumentation","src":"8360:78:12","text":"@dev Helper: low level cast bytes32 comp function to uint256 comp function"},"id":2546,"implemented":true,"kind":"function","modifiers":[],"name":"_castToUint256Comp","nameLocation":"8452:18:12","nodeType":"FunctionDefinition","parameters":{"id":2532,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2531,"mutability":"mutable","name":"input","nameLocation":"8527:5:12","nodeType":"VariableDeclaration","scope":2546,"src":"8480:52:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32,bytes32) pure returns (bool)"},"typeName":{"id":2530,"nodeType":"FunctionTypeName","parameterTypes":{"id":2526,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2523,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2530,"src":"8489:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2522,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8489:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2525,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2530,"src":"8498:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2524,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8498:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8488:18:12"},"returnParameterTypes":{"id":2529,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2528,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2530,"src":"8521:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2527,"name":"bool","nodeType":"ElementaryTypeName","src":"8521:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8520:6:12"},"src":"8480:52:12","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32,bytes32) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"8470:68:12"},"returnParameters":{"id":2543,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2542,"mutability":"mutable","name":"output","nameLocation":"8608:6:12","nodeType":"VariableDeclaration","scope":2546,"src":"8561:53:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"typeName":{"id":2541,"nodeType":"FunctionTypeName","parameterTypes":{"id":2537,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2534,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2541,"src":"8570:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2533,"name":"uint256","nodeType":"ElementaryTypeName","src":"8570:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2536,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2541,"src":"8579:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2535,"name":"uint256","nodeType":"ElementaryTypeName","src":"8579:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8569:18:12"},"returnParameterTypes":{"id":2540,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2539,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2541,"src":"8602:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2538,"name":"bool","nodeType":"ElementaryTypeName","src":"8602:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8601:6:12"},"src":"8561:53:12","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"8560:55:12"},"scope":3034,"src":"8443:237:12","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2628,"nodeType":"Block","src":"9405:834:12","statements":[{"assignments":[2558],"declarations":[{"constant":false,"id":2558,"mutability":"mutable","name":"low","nameLocation":"9423:3:12","nodeType":"VariableDeclaration","scope":2628,"src":"9415:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2557,"name":"uint256","nodeType":"ElementaryTypeName","src":"9415:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2560,"initialValue":{"hexValue":"30","id":2559,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9429:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"9415:15:12"},{"assignments":[2562],"declarations":[{"constant":false,"id":2562,"mutability":"mutable","name":"high","nameLocation":"9448:4:12","nodeType":"VariableDeclaration","scope":2628,"src":"9440:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2561,"name":"uint256","nodeType":"ElementaryTypeName","src":"9440:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2565,"initialValue":{"expression":{"id":2563,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2550,"src":"9455:5:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},"id":2564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9461:6:12","memberName":"length","nodeType":"MemberAccess","src":"9455:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9440:27:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2566,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2562,"src":"9482:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2567,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9490:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9482:9:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2572,"nodeType":"IfStatement","src":"9478:48:12","trueBody":{"id":2571,"nodeType":"Block","src":"9493:33:12","statements":[{"expression":{"hexValue":"30","id":2569,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9514:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2556,"id":2570,"nodeType":"Return","src":"9507:8:12"}]}},{"body":{"id":2604,"nodeType":"Block","src":"9555:423:12","statements":[{"assignments":[2577],"declarations":[{"constant":false,"id":2577,"mutability":"mutable","name":"mid","nameLocation":"9577:3:12","nodeType":"VariableDeclaration","scope":2604,"src":"9569:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2576,"name":"uint256","nodeType":"ElementaryTypeName","src":"9569:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2583,"initialValue":{"arguments":[{"id":2580,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2558,"src":"9596:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2581,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2562,"src":"9601:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2578,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6361,"src":"9583:4:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$6361_$","typeString":"type(library Math)"}},"id":2579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9588:7:12","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":5013,"src":"9583:12:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2582,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9583:23:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9569:37:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2585,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2550,"src":"9844:5:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},{"id":2586,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2577,"src":"9851:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2584,"name":"unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[2909,2935,2961],"referencedDeclaration":2961,"src":"9831:12:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Uint256Slot_$3410_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256) pure returns (struct StorageSlot.Uint256Slot storage pointer)"}},"id":2587,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9831:24:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$3410_storage_ptr","typeString":"struct StorageSlot.Uint256Slot storage pointer"}},"id":2588,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9856:5:12","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":3409,"src":"9831:30:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2589,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2552,"src":"9864:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9831:40:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2602,"nodeType":"Block","src":"9922:46:12","statements":[{"expression":{"id":2600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2596,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2558,"src":"9940:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2597,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2577,"src":"9946:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2598,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9952:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9946:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9940:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2601,"nodeType":"ExpressionStatement","src":"9940:13:12"}]},"id":2603,"nodeType":"IfStatement","src":"9827:141:12","trueBody":{"id":2595,"nodeType":"Block","src":"9873:43:12","statements":[{"expression":{"id":2593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2591,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2562,"src":"9891:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2592,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2577,"src":"9898:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9891:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2594,"nodeType":"ExpressionStatement","src":"9891:10:12"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2573,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2558,"src":"9543:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2574,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2562,"src":"9549:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9543:10:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2605,"nodeType":"WhileStatement","src":"9536:442:12"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2606,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2558,"src":"10095:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2607,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10101:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10095:7:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2610,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2550,"src":"10119:5:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2611,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2558,"src":"10126:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2612,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10132:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10126:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2609,"name":"unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[2909,2935,2961],"referencedDeclaration":2961,"src":"10106:12:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Uint256Slot_$3410_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256) pure returns (struct StorageSlot.Uint256Slot storage pointer)"}},"id":2614,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10106:28:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$3410_storage_ptr","typeString":"struct StorageSlot.Uint256Slot storage pointer"}},"id":2615,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10135:5:12","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":3409,"src":"10106:34:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2616,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2552,"src":"10144:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10106:45:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10095:56:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2626,"nodeType":"Block","src":"10198:35:12","statements":[{"expression":{"id":2624,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2558,"src":"10219:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2556,"id":2625,"nodeType":"Return","src":"10212:10:12"}]},"id":2627,"nodeType":"IfStatement","src":"10091:142:12","trueBody":{"id":2623,"nodeType":"Block","src":"10153:39:12","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2619,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2558,"src":"10174:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2620,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10180:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10174:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2556,"id":2622,"nodeType":"Return","src":"10167:14:12"}]}}]},"documentation":{"id":2547,"nodeType":"StructuredDocumentation","src":"8686:616:12","text":" @dev Searches a sorted `array` and returns the first index that contains\n a value greater or equal to `element`. If no such index exists (i.e. all\n values in the array are strictly less than `element`), the array length is\n returned. Time complexity O(log n).\n NOTE: The `array` is expected to be sorted in ascending order, and to\n contain no repeated elements.\n IMPORTANT: Deprecated. This implementation behaves as {lowerBound} but lacks\n support for repeated elements in the array. The {lowerBound} function should\n be used instead."},"id":2629,"implemented":true,"kind":"function","modifiers":[],"name":"findUpperBound","nameLocation":"9316:14:12","nodeType":"FunctionDefinition","parameters":{"id":2553,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2550,"mutability":"mutable","name":"array","nameLocation":"9349:5:12","nodeType":"VariableDeclaration","scope":2629,"src":"9331:23:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2548,"name":"uint256","nodeType":"ElementaryTypeName","src":"9331:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2549,"nodeType":"ArrayTypeName","src":"9331:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2552,"mutability":"mutable","name":"element","nameLocation":"9364:7:12","nodeType":"VariableDeclaration","scope":2629,"src":"9356:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2551,"name":"uint256","nodeType":"ElementaryTypeName","src":"9356:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9330:42:12"},"returnParameters":{"id":2556,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2555,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2629,"src":"9396:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2554,"name":"uint256","nodeType":"ElementaryTypeName","src":"9396:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9395:9:12"},"scope":3034,"src":"9307:932:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2692,"nodeType":"Block","src":"10756:709:12","statements":[{"assignments":[2641],"declarations":[{"constant":false,"id":2641,"mutability":"mutable","name":"low","nameLocation":"10774:3:12","nodeType":"VariableDeclaration","scope":2692,"src":"10766:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2640,"name":"uint256","nodeType":"ElementaryTypeName","src":"10766:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2643,"initialValue":{"hexValue":"30","id":2642,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10780:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10766:15:12"},{"assignments":[2645],"declarations":[{"constant":false,"id":2645,"mutability":"mutable","name":"high","nameLocation":"10799:4:12","nodeType":"VariableDeclaration","scope":2692,"src":"10791:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2644,"name":"uint256","nodeType":"ElementaryTypeName","src":"10791:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2648,"initialValue":{"expression":{"id":2646,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2633,"src":"10806:5:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},"id":2647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10812:6:12","memberName":"length","nodeType":"MemberAccess","src":"10806:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10791:27:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2649,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2645,"src":"10833:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2650,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10841:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10833:9:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2655,"nodeType":"IfStatement","src":"10829:48:12","trueBody":{"id":2654,"nodeType":"Block","src":"10844:33:12","statements":[{"expression":{"hexValue":"30","id":2652,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10865:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2639,"id":2653,"nodeType":"Return","src":"10858:8:12"}]}},{"body":{"id":2688,"nodeType":"Block","src":"10906:532:12","statements":[{"assignments":[2660],"declarations":[{"constant":false,"id":2660,"mutability":"mutable","name":"mid","nameLocation":"10928:3:12","nodeType":"VariableDeclaration","scope":2688,"src":"10920:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2659,"name":"uint256","nodeType":"ElementaryTypeName","src":"10920:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2666,"initialValue":{"arguments":[{"id":2663,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2641,"src":"10947:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2664,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2645,"src":"10952:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2661,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6361,"src":"10934:4:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$6361_$","typeString":"type(library Math)"}},"id":2662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10939:7:12","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":5013,"src":"10934:12:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2665,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10934:23:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10920:37:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2668,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2633,"src":"11195:5:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},{"id":2669,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2660,"src":"11202:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2667,"name":"unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[2909,2935,2961],"referencedDeclaration":2961,"src":"11182:12:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Uint256Slot_$3410_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256) pure returns (struct StorageSlot.Uint256Slot storage pointer)"}},"id":2670,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11182:24:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$3410_storage_ptr","typeString":"struct StorageSlot.Uint256Slot storage pointer"}},"id":2671,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11207:5:12","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":3409,"src":"11182:30:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2672,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2635,"src":"11215:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11182:40:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2686,"nodeType":"Block","src":"11385:43:12","statements":[{"expression":{"id":2684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2682,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2645,"src":"11403:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2683,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2660,"src":"11410:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11403:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2685,"nodeType":"ExpressionStatement","src":"11403:10:12"}]},"id":2687,"nodeType":"IfStatement","src":"11178:250:12","trueBody":{"id":2681,"nodeType":"Block","src":"11224:155:12","statements":[{"id":2680,"nodeType":"UncheckedBlock","src":"11301:64:12","statements":[{"expression":{"id":2678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2674,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2641,"src":"11333:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2675,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2660,"src":"11339:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2676,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11345:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11339:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11333:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2679,"nodeType":"ExpressionStatement","src":"11333:13:12"}]}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2656,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2641,"src":"10894:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2657,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2645,"src":"10900:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10894:10:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2689,"nodeType":"WhileStatement","src":"10887:551:12"},{"expression":{"id":2690,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2641,"src":"11455:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2639,"id":2691,"nodeType":"Return","src":"11448:10:12"}]},"documentation":{"id":2630,"nodeType":"StructuredDocumentation","src":"10245:412:12","text":" @dev Searches an `array` sorted in ascending order and returns the first\n index that contains a value greater or equal than `element`. If no such index\n exists (i.e. all values in the array are strictly less than `element`), the array\n length is returned. Time complexity O(log n).\n See C++'s https://en.cppreference.com/w/cpp/algorithm/lower_bound[lower_bound]."},"id":2693,"implemented":true,"kind":"function","modifiers":[],"name":"lowerBound","nameLocation":"10671:10:12","nodeType":"FunctionDefinition","parameters":{"id":2636,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2633,"mutability":"mutable","name":"array","nameLocation":"10700:5:12","nodeType":"VariableDeclaration","scope":2693,"src":"10682:23:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2631,"name":"uint256","nodeType":"ElementaryTypeName","src":"10682:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2632,"nodeType":"ArrayTypeName","src":"10682:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2635,"mutability":"mutable","name":"element","nameLocation":"10715:7:12","nodeType":"VariableDeclaration","scope":2693,"src":"10707:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2634,"name":"uint256","nodeType":"ElementaryTypeName","src":"10707:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10681:42:12"},"returnParameters":{"id":2639,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2638,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2693,"src":"10747:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2637,"name":"uint256","nodeType":"ElementaryTypeName","src":"10747:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10746:9:12"},"scope":3034,"src":"10662:803:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2756,"nodeType":"Block","src":"11982:709:12","statements":[{"assignments":[2705],"declarations":[{"constant":false,"id":2705,"mutability":"mutable","name":"low","nameLocation":"12000:3:12","nodeType":"VariableDeclaration","scope":2756,"src":"11992:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2704,"name":"uint256","nodeType":"ElementaryTypeName","src":"11992:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2707,"initialValue":{"hexValue":"30","id":2706,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12006:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11992:15:12"},{"assignments":[2709],"declarations":[{"constant":false,"id":2709,"mutability":"mutable","name":"high","nameLocation":"12025:4:12","nodeType":"VariableDeclaration","scope":2756,"src":"12017:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2708,"name":"uint256","nodeType":"ElementaryTypeName","src":"12017:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2712,"initialValue":{"expression":{"id":2710,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2697,"src":"12032:5:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},"id":2711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12038:6:12","memberName":"length","nodeType":"MemberAccess","src":"12032:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12017:27:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2713,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2709,"src":"12059:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2714,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12067:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12059:9:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2719,"nodeType":"IfStatement","src":"12055:48:12","trueBody":{"id":2718,"nodeType":"Block","src":"12070:33:12","statements":[{"expression":{"hexValue":"30","id":2716,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12091:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2703,"id":2717,"nodeType":"Return","src":"12084:8:12"}]}},{"body":{"id":2752,"nodeType":"Block","src":"12132:532:12","statements":[{"assignments":[2724],"declarations":[{"constant":false,"id":2724,"mutability":"mutable","name":"mid","nameLocation":"12154:3:12","nodeType":"VariableDeclaration","scope":2752,"src":"12146:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2723,"name":"uint256","nodeType":"ElementaryTypeName","src":"12146:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2730,"initialValue":{"arguments":[{"id":2727,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2705,"src":"12173:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2728,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2709,"src":"12178:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2725,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6361,"src":"12160:4:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$6361_$","typeString":"type(library Math)"}},"id":2726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12165:7:12","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":5013,"src":"12160:12:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2729,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12160:23:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12146:37:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2732,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2697,"src":"12421:5:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},{"id":2733,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2724,"src":"12428:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2731,"name":"unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[2909,2935,2961],"referencedDeclaration":2961,"src":"12408:12:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Uint256Slot_$3410_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256) pure returns (struct StorageSlot.Uint256Slot storage pointer)"}},"id":2734,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12408:24:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$3410_storage_ptr","typeString":"struct StorageSlot.Uint256Slot storage pointer"}},"id":2735,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12433:5:12","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":3409,"src":"12408:30:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2736,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2699,"src":"12441:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12408:40:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2750,"nodeType":"Block","src":"12499:155:12","statements":[{"id":2749,"nodeType":"UncheckedBlock","src":"12576:64:12","statements":[{"expression":{"id":2747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2743,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2705,"src":"12608:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2744,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2724,"src":"12614:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2745,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12620:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12614:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12608:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2748,"nodeType":"ExpressionStatement","src":"12608:13:12"}]}]},"id":2751,"nodeType":"IfStatement","src":"12404:250:12","trueBody":{"id":2742,"nodeType":"Block","src":"12450:43:12","statements":[{"expression":{"id":2740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2738,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2709,"src":"12468:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2739,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2724,"src":"12475:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12468:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2741,"nodeType":"ExpressionStatement","src":"12468:10:12"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2720,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2705,"src":"12120:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2721,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2709,"src":"12126:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12120:10:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2753,"nodeType":"WhileStatement","src":"12113:551:12"},{"expression":{"id":2754,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2705,"src":"12681:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2703,"id":2755,"nodeType":"Return","src":"12674:10:12"}]},"documentation":{"id":2694,"nodeType":"StructuredDocumentation","src":"11471:412:12","text":" @dev Searches an `array` sorted in ascending order and returns the first\n index that contains a value strictly greater than `element`. If no such index\n exists (i.e. all values in the array are strictly less than `element`), the array\n length is returned. Time complexity O(log n).\n See C++'s https://en.cppreference.com/w/cpp/algorithm/upper_bound[upper_bound]."},"id":2757,"implemented":true,"kind":"function","modifiers":[],"name":"upperBound","nameLocation":"11897:10:12","nodeType":"FunctionDefinition","parameters":{"id":2700,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2697,"mutability":"mutable","name":"array","nameLocation":"11926:5:12","nodeType":"VariableDeclaration","scope":2757,"src":"11908:23:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2695,"name":"uint256","nodeType":"ElementaryTypeName","src":"11908:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2696,"nodeType":"ArrayTypeName","src":"11908:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2699,"mutability":"mutable","name":"element","nameLocation":"11941:7:12","nodeType":"VariableDeclaration","scope":2757,"src":"11933:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2698,"name":"uint256","nodeType":"ElementaryTypeName","src":"11933:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11907:42:12"},"returnParameters":{"id":2703,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2702,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2757,"src":"11973:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2701,"name":"uint256","nodeType":"ElementaryTypeName","src":"11973:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11972:9:12"},"scope":3034,"src":"11888:803:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2819,"nodeType":"Block","src":"12875:709:12","statements":[{"assignments":[2769],"declarations":[{"constant":false,"id":2769,"mutability":"mutable","name":"low","nameLocation":"12893:3:12","nodeType":"VariableDeclaration","scope":2819,"src":"12885:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2768,"name":"uint256","nodeType":"ElementaryTypeName","src":"12885:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2771,"initialValue":{"hexValue":"30","id":2770,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12899:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"12885:15:12"},{"assignments":[2773],"declarations":[{"constant":false,"id":2773,"mutability":"mutable","name":"high","nameLocation":"12918:4:12","nodeType":"VariableDeclaration","scope":2819,"src":"12910:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2772,"name":"uint256","nodeType":"ElementaryTypeName","src":"12910:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2776,"initialValue":{"expression":{"id":2774,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2761,"src":"12925:5:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12931:6:12","memberName":"length","nodeType":"MemberAccess","src":"12925:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12910:27:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2777,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2773,"src":"12952:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2778,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12960:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12952:9:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2783,"nodeType":"IfStatement","src":"12948:48:12","trueBody":{"id":2782,"nodeType":"Block","src":"12963:33:12","statements":[{"expression":{"hexValue":"30","id":2780,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12984:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2767,"id":2781,"nodeType":"Return","src":"12977:8:12"}]}},{"body":{"id":2815,"nodeType":"Block","src":"13025:532:12","statements":[{"assignments":[2788],"declarations":[{"constant":false,"id":2788,"mutability":"mutable","name":"mid","nameLocation":"13047:3:12","nodeType":"VariableDeclaration","scope":2815,"src":"13039:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2787,"name":"uint256","nodeType":"ElementaryTypeName","src":"13039:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2794,"initialValue":{"arguments":[{"id":2791,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2769,"src":"13066:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2792,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2773,"src":"13071:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2789,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6361,"src":"13053:4:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$6361_$","typeString":"type(library Math)"}},"id":2790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13058:7:12","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":5013,"src":"13053:12:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2793,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13053:23:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13039:37:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2796,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2761,"src":"13320:5:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":2797,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2788,"src":"13327:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2795,"name":"unsafeMemoryAccess","nodeType":"Identifier","overloadedDeclarations":[2974,2987,3000],"referencedDeclaration":3000,"src":"13301:18:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":2798,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13301:30:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2799,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2763,"src":"13334:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13301:40:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2813,"nodeType":"Block","src":"13504:43:12","statements":[{"expression":{"id":2811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2809,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2773,"src":"13522:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2810,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2788,"src":"13529:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13522:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2812,"nodeType":"ExpressionStatement","src":"13522:10:12"}]},"id":2814,"nodeType":"IfStatement","src":"13297:250:12","trueBody":{"id":2808,"nodeType":"Block","src":"13343:155:12","statements":[{"id":2807,"nodeType":"UncheckedBlock","src":"13420:64:12","statements":[{"expression":{"id":2805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2801,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2769,"src":"13452:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2802,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2788,"src":"13458:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2803,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13464:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"13458:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13452:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2806,"nodeType":"ExpressionStatement","src":"13452:13:12"}]}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2784,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2769,"src":"13013:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2785,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2773,"src":"13019:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13013:10:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2816,"nodeType":"WhileStatement","src":"13006:551:12"},{"expression":{"id":2817,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2769,"src":"13574:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2767,"id":2818,"nodeType":"Return","src":"13567:10:12"}]},"documentation":{"id":2758,"nodeType":"StructuredDocumentation","src":"12697:74:12","text":" @dev Same as {lowerBound}, but with an array in memory."},"id":2820,"implemented":true,"kind":"function","modifiers":[],"name":"lowerBoundMemory","nameLocation":"12785:16:12","nodeType":"FunctionDefinition","parameters":{"id":2764,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2761,"mutability":"mutable","name":"array","nameLocation":"12819:5:12","nodeType":"VariableDeclaration","scope":2820,"src":"12802:22:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2759,"name":"uint256","nodeType":"ElementaryTypeName","src":"12802:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2760,"nodeType":"ArrayTypeName","src":"12802:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2763,"mutability":"mutable","name":"element","nameLocation":"12834:7:12","nodeType":"VariableDeclaration","scope":2820,"src":"12826:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2762,"name":"uint256","nodeType":"ElementaryTypeName","src":"12826:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12801:41:12"},"returnParameters":{"id":2767,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2766,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2820,"src":"12866:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2765,"name":"uint256","nodeType":"ElementaryTypeName","src":"12866:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12865:9:12"},"scope":3034,"src":"12776:808:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2882,"nodeType":"Block","src":"13768:709:12","statements":[{"assignments":[2832],"declarations":[{"constant":false,"id":2832,"mutability":"mutable","name":"low","nameLocation":"13786:3:12","nodeType":"VariableDeclaration","scope":2882,"src":"13778:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2831,"name":"uint256","nodeType":"ElementaryTypeName","src":"13778:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2834,"initialValue":{"hexValue":"30","id":2833,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13792:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13778:15:12"},{"assignments":[2836],"declarations":[{"constant":false,"id":2836,"mutability":"mutable","name":"high","nameLocation":"13811:4:12","nodeType":"VariableDeclaration","scope":2882,"src":"13803:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2835,"name":"uint256","nodeType":"ElementaryTypeName","src":"13803:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2839,"initialValue":{"expression":{"id":2837,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2824,"src":"13818:5:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13824:6:12","memberName":"length","nodeType":"MemberAccess","src":"13818:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13803:27:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2840,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2836,"src":"13845:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2841,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13853:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13845:9:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2846,"nodeType":"IfStatement","src":"13841:48:12","trueBody":{"id":2845,"nodeType":"Block","src":"13856:33:12","statements":[{"expression":{"hexValue":"30","id":2843,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13877:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2830,"id":2844,"nodeType":"Return","src":"13870:8:12"}]}},{"body":{"id":2878,"nodeType":"Block","src":"13918:532:12","statements":[{"assignments":[2851],"declarations":[{"constant":false,"id":2851,"mutability":"mutable","name":"mid","nameLocation":"13940:3:12","nodeType":"VariableDeclaration","scope":2878,"src":"13932:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2850,"name":"uint256","nodeType":"ElementaryTypeName","src":"13932:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2857,"initialValue":{"arguments":[{"id":2854,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2832,"src":"13959:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2855,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2836,"src":"13964:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2852,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6361,"src":"13946:4:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$6361_$","typeString":"type(library Math)"}},"id":2853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13951:7:12","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":5013,"src":"13946:12:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2856,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13946:23:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13932:37:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2859,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2824,"src":"14213:5:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":2860,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2851,"src":"14220:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2858,"name":"unsafeMemoryAccess","nodeType":"Identifier","overloadedDeclarations":[2974,2987,3000],"referencedDeclaration":3000,"src":"14194:18:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":2861,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14194:30:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2862,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2826,"src":"14227:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14194:40:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2876,"nodeType":"Block","src":"14285:155:12","statements":[{"id":2875,"nodeType":"UncheckedBlock","src":"14362:64:12","statements":[{"expression":{"id":2873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2869,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2832,"src":"14394:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2870,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2851,"src":"14400:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2871,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14406:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14400:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14394:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2874,"nodeType":"ExpressionStatement","src":"14394:13:12"}]}]},"id":2877,"nodeType":"IfStatement","src":"14190:250:12","trueBody":{"id":2868,"nodeType":"Block","src":"14236:43:12","statements":[{"expression":{"id":2866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2864,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2836,"src":"14254:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2865,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2851,"src":"14261:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14254:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2867,"nodeType":"ExpressionStatement","src":"14254:10:12"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2847,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2832,"src":"13906:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2848,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2836,"src":"13912:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13906:10:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2879,"nodeType":"WhileStatement","src":"13899:551:12"},{"expression":{"id":2880,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2832,"src":"14467:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2830,"id":2881,"nodeType":"Return","src":"14460:10:12"}]},"documentation":{"id":2821,"nodeType":"StructuredDocumentation","src":"13590:74:12","text":" @dev Same as {upperBound}, but with an array in memory."},"id":2883,"implemented":true,"kind":"function","modifiers":[],"name":"upperBoundMemory","nameLocation":"13678:16:12","nodeType":"FunctionDefinition","parameters":{"id":2827,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2824,"mutability":"mutable","name":"array","nameLocation":"13712:5:12","nodeType":"VariableDeclaration","scope":2883,"src":"13695:22:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2822,"name":"uint256","nodeType":"ElementaryTypeName","src":"13695:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2823,"nodeType":"ArrayTypeName","src":"13695:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2826,"mutability":"mutable","name":"element","nameLocation":"13727:7:12","nodeType":"VariableDeclaration","scope":2883,"src":"13719:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2825,"name":"uint256","nodeType":"ElementaryTypeName","src":"13719:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13694:41:12"},"returnParameters":{"id":2830,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2829,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2883,"src":"13759:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2828,"name":"uint256","nodeType":"ElementaryTypeName","src":"13759:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13758:9:12"},"scope":3034,"src":"13669:808:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2908,"nodeType":"Block","src":"14793:167:12","statements":[{"assignments":[2896],"declarations":[{"constant":false,"id":2896,"mutability":"mutable","name":"slot","nameLocation":"14811:4:12","nodeType":"VariableDeclaration","scope":2908,"src":"14803:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2895,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14803:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2897,"nodeType":"VariableDeclarationStatement","src":"14803:12:12"},{"AST":{"nodeType":"YulBlock","src":"14850:40:12","statements":[{"nodeType":"YulAssignment","src":"14864:16:12","value":{"name":"arr.slot","nodeType":"YulIdentifier","src":"14872:8:12"},"variableNames":[{"name":"slot","nodeType":"YulIdentifier","src":"14864:4:12"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2887,"isOffset":false,"isSlot":true,"src":"14872:8:12","suffix":"slot","valueSize":1},{"declaration":2896,"isOffset":false,"isSlot":false,"src":"14864:4:12","valueSize":1}],"flags":["memory-safe"],"id":2898,"nodeType":"InlineAssembly","src":"14825:65:12"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":2903,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2889,"src":"14932:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2899,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2896,"src":"14906:4:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14911:11:12","memberName":"deriveArray","nodeType":"MemberAccess","referencedDeclaration":3310,"src":"14906:16:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (bytes32)"}},"id":2901,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14906:18:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14925:6:12","memberName":"offset","nodeType":"MemberAccess","referencedDeclaration":3300,"src":"14906:25:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32,uint256) pure returns (bytes32)"}},"id":2904,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14906:30:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2905,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14937:14:12","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":3430,"src":"14906:45:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$3401_storage_ptr_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":2906,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14906:47:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$3401_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"functionReturnParameters":2894,"id":2907,"nodeType":"Return","src":"14899:54:12"}]},"documentation":{"id":2884,"nodeType":"StructuredDocumentation","src":"14483:191:12","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":2909,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeAccess","nameLocation":"14688:12:12","nodeType":"FunctionDefinition","parameters":{"id":2890,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2887,"mutability":"mutable","name":"arr","nameLocation":"14719:3:12","nodeType":"VariableDeclaration","scope":2909,"src":"14701:21:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2885,"name":"address","nodeType":"ElementaryTypeName","src":"14701:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2886,"nodeType":"ArrayTypeName","src":"14701:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":2889,"mutability":"mutable","name":"pos","nameLocation":"14732:3:12","nodeType":"VariableDeclaration","scope":2909,"src":"14724:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2888,"name":"uint256","nodeType":"ElementaryTypeName","src":"14724:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14700:36:12"},"returnParameters":{"id":2894,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2893,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2909,"src":"14760:31:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$3401_storage_ptr","typeString":"struct StorageSlot.AddressSlot"},"typeName":{"id":2892,"nodeType":"UserDefinedTypeName","pathNode":{"id":2891,"name":"StorageSlot.AddressSlot","nameLocations":["14760:11:12","14772:11:12"],"nodeType":"IdentifierPath","referencedDeclaration":3401,"src":"14760:23:12"},"referencedDeclaration":3401,"src":"14760:23:12","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$3401_storage_ptr","typeString":"struct StorageSlot.AddressSlot"}},"visibility":"internal"}],"src":"14759:33:12"},"scope":3034,"src":"14679:281:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2934,"nodeType":"Block","src":"15276:167:12","statements":[{"assignments":[2922],"declarations":[{"constant":false,"id":2922,"mutability":"mutable","name":"slot","nameLocation":"15294:4:12","nodeType":"VariableDeclaration","scope":2934,"src":"15286:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2921,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15286:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2923,"nodeType":"VariableDeclarationStatement","src":"15286:12:12"},{"AST":{"nodeType":"YulBlock","src":"15333:40:12","statements":[{"nodeType":"YulAssignment","src":"15347:16:12","value":{"name":"arr.slot","nodeType":"YulIdentifier","src":"15355:8:12"},"variableNames":[{"name":"slot","nodeType":"YulIdentifier","src":"15347:4:12"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2913,"isOffset":false,"isSlot":true,"src":"15355:8:12","suffix":"slot","valueSize":1},{"declaration":2922,"isOffset":false,"isSlot":false,"src":"15347:4:12","valueSize":1}],"flags":["memory-safe"],"id":2924,"nodeType":"InlineAssembly","src":"15308:65:12"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":2929,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2915,"src":"15415:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2925,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2922,"src":"15389:4:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15394:11:12","memberName":"deriveArray","nodeType":"MemberAccess","referencedDeclaration":3310,"src":"15389:16:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (bytes32)"}},"id":2927,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15389:18:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15408:6:12","memberName":"offset","nodeType":"MemberAccess","referencedDeclaration":3300,"src":"15389:25:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32,uint256) pure returns (bytes32)"}},"id":2930,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15389:30:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15420:14:12","memberName":"getBytes32Slot","nodeType":"MemberAccess","referencedDeclaration":3452,"src":"15389:45:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_Bytes32Slot_$3407_storage_ptr_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (struct StorageSlot.Bytes32Slot storage pointer)"}},"id":2932,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15389:47:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$3407_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot storage pointer"}},"functionReturnParameters":2920,"id":2933,"nodeType":"Return","src":"15382:54:12"}]},"documentation":{"id":2910,"nodeType":"StructuredDocumentation","src":"14966:191:12","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":2935,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeAccess","nameLocation":"15171:12:12","nodeType":"FunctionDefinition","parameters":{"id":2916,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2913,"mutability":"mutable","name":"arr","nameLocation":"15202:3:12","nodeType":"VariableDeclaration","scope":2935,"src":"15184:21:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2911,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15184:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2912,"nodeType":"ArrayTypeName","src":"15184:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":2915,"mutability":"mutable","name":"pos","nameLocation":"15215:3:12","nodeType":"VariableDeclaration","scope":2935,"src":"15207:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2914,"name":"uint256","nodeType":"ElementaryTypeName","src":"15207:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15183:36:12"},"returnParameters":{"id":2920,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2919,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2935,"src":"15243:31:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$3407_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"},"typeName":{"id":2918,"nodeType":"UserDefinedTypeName","pathNode":{"id":2917,"name":"StorageSlot.Bytes32Slot","nameLocations":["15243:11:12","15255:11:12"],"nodeType":"IdentifierPath","referencedDeclaration":3407,"src":"15243:23:12"},"referencedDeclaration":3407,"src":"15243:23:12","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$3407_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"}},"visibility":"internal"}],"src":"15242:33:12"},"scope":3034,"src":"15162:281:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2960,"nodeType":"Block","src":"15759:167:12","statements":[{"assignments":[2948],"declarations":[{"constant":false,"id":2948,"mutability":"mutable","name":"slot","nameLocation":"15777:4:12","nodeType":"VariableDeclaration","scope":2960,"src":"15769:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2947,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15769:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2949,"nodeType":"VariableDeclarationStatement","src":"15769:12:12"},{"AST":{"nodeType":"YulBlock","src":"15816:40:12","statements":[{"nodeType":"YulAssignment","src":"15830:16:12","value":{"name":"arr.slot","nodeType":"YulIdentifier","src":"15838:8:12"},"variableNames":[{"name":"slot","nodeType":"YulIdentifier","src":"15830:4:12"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2939,"isOffset":false,"isSlot":true,"src":"15838:8:12","suffix":"slot","valueSize":1},{"declaration":2948,"isOffset":false,"isSlot":false,"src":"15830:4:12","valueSize":1}],"flags":["memory-safe"],"id":2950,"nodeType":"InlineAssembly","src":"15791:65:12"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":2955,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2941,"src":"15898:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2951,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2948,"src":"15872:4:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2952,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15877:11:12","memberName":"deriveArray","nodeType":"MemberAccess","referencedDeclaration":3310,"src":"15872:16:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (bytes32)"}},"id":2953,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15872:18:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15891:6:12","memberName":"offset","nodeType":"MemberAccess","referencedDeclaration":3300,"src":"15872:25:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32,uint256) pure returns (bytes32)"}},"id":2956,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15872:30:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15903:14:12","memberName":"getUint256Slot","nodeType":"MemberAccess","referencedDeclaration":3463,"src":"15872:45:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_Uint256Slot_$3410_storage_ptr_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (struct StorageSlot.Uint256Slot storage pointer)"}},"id":2958,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15872:47:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$3410_storage_ptr","typeString":"struct StorageSlot.Uint256Slot storage pointer"}},"functionReturnParameters":2946,"id":2959,"nodeType":"Return","src":"15865:54:12"}]},"documentation":{"id":2936,"nodeType":"StructuredDocumentation","src":"15449:191:12","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":2961,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeAccess","nameLocation":"15654:12:12","nodeType":"FunctionDefinition","parameters":{"id":2942,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2939,"mutability":"mutable","name":"arr","nameLocation":"15685:3:12","nodeType":"VariableDeclaration","scope":2961,"src":"15667:21:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2937,"name":"uint256","nodeType":"ElementaryTypeName","src":"15667:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2938,"nodeType":"ArrayTypeName","src":"15667:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2941,"mutability":"mutable","name":"pos","nameLocation":"15698:3:12","nodeType":"VariableDeclaration","scope":2961,"src":"15690:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2940,"name":"uint256","nodeType":"ElementaryTypeName","src":"15690:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15666:36:12"},"returnParameters":{"id":2946,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2945,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2961,"src":"15726:31:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$3410_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"},"typeName":{"id":2944,"nodeType":"UserDefinedTypeName","pathNode":{"id":2943,"name":"StorageSlot.Uint256Slot","nameLocations":["15726:11:12","15738:11:12"],"nodeType":"IdentifierPath","referencedDeclaration":3410,"src":"15726:23:12"},"referencedDeclaration":3410,"src":"15726:23:12","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$3410_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"}},"visibility":"internal"}],"src":"15725:33:12"},"scope":3034,"src":"15645:281:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2973,"nodeType":"Block","src":"16227:98:12","statements":[{"AST":{"nodeType":"YulBlock","src":"16246:73:12","statements":[{"nodeType":"YulAssignment","src":"16260:49:12","value":{"arguments":[{"arguments":[{"arguments":[{"name":"arr","nodeType":"YulIdentifier","src":"16281:3:12"},{"kind":"number","nodeType":"YulLiteral","src":"16286:4:12","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16277:3:12"},"nodeType":"YulFunctionCall","src":"16277:14:12"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16297:3:12"},{"kind":"number","nodeType":"YulLiteral","src":"16302:4:12","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"16293:3:12"},"nodeType":"YulFunctionCall","src":"16293:14:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16273:3:12"},"nodeType":"YulFunctionCall","src":"16273:35:12"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16267:5:12"},"nodeType":"YulFunctionCall","src":"16267:42:12"},"variableNames":[{"name":"res","nodeType":"YulIdentifier","src":"16260:3:12"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2965,"isOffset":false,"isSlot":false,"src":"16281:3:12","valueSize":1},{"declaration":2967,"isOffset":false,"isSlot":false,"src":"16297:3:12","valueSize":1},{"declaration":2970,"isOffset":false,"isSlot":false,"src":"16260:3:12","valueSize":1}],"id":2972,"nodeType":"InlineAssembly","src":"16237:82:12"}]},"documentation":{"id":2962,"nodeType":"StructuredDocumentation","src":"15932:191:12","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":2974,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeMemoryAccess","nameLocation":"16137:18:12","nodeType":"FunctionDefinition","parameters":{"id":2968,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2965,"mutability":"mutable","name":"arr","nameLocation":"16173:3:12","nodeType":"VariableDeclaration","scope":2974,"src":"16156:20:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2963,"name":"address","nodeType":"ElementaryTypeName","src":"16156:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2964,"nodeType":"ArrayTypeName","src":"16156:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":2967,"mutability":"mutable","name":"pos","nameLocation":"16186:3:12","nodeType":"VariableDeclaration","scope":2974,"src":"16178:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2966,"name":"uint256","nodeType":"ElementaryTypeName","src":"16178:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16155:35:12"},"returnParameters":{"id":2971,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2970,"mutability":"mutable","name":"res","nameLocation":"16222:3:12","nodeType":"VariableDeclaration","scope":2974,"src":"16214:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2969,"name":"address","nodeType":"ElementaryTypeName","src":"16214:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"16213:13:12"},"scope":3034,"src":"16128:197:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2986,"nodeType":"Block","src":"16626:98:12","statements":[{"AST":{"nodeType":"YulBlock","src":"16645:73:12","statements":[{"nodeType":"YulAssignment","src":"16659:49:12","value":{"arguments":[{"arguments":[{"arguments":[{"name":"arr","nodeType":"YulIdentifier","src":"16680:3:12"},{"kind":"number","nodeType":"YulLiteral","src":"16685:4:12","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16676:3:12"},"nodeType":"YulFunctionCall","src":"16676:14:12"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16696:3:12"},{"kind":"number","nodeType":"YulLiteral","src":"16701:4:12","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"16692:3:12"},"nodeType":"YulFunctionCall","src":"16692:14:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16672:3:12"},"nodeType":"YulFunctionCall","src":"16672:35:12"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16666:5:12"},"nodeType":"YulFunctionCall","src":"16666:42:12"},"variableNames":[{"name":"res","nodeType":"YulIdentifier","src":"16659:3:12"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2978,"isOffset":false,"isSlot":false,"src":"16680:3:12","valueSize":1},{"declaration":2980,"isOffset":false,"isSlot":false,"src":"16696:3:12","valueSize":1},{"declaration":2983,"isOffset":false,"isSlot":false,"src":"16659:3:12","valueSize":1}],"id":2985,"nodeType":"InlineAssembly","src":"16636:82:12"}]},"documentation":{"id":2975,"nodeType":"StructuredDocumentation","src":"16331:191:12","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":2987,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeMemoryAccess","nameLocation":"16536:18:12","nodeType":"FunctionDefinition","parameters":{"id":2981,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2978,"mutability":"mutable","name":"arr","nameLocation":"16572:3:12","nodeType":"VariableDeclaration","scope":2987,"src":"16555:20:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2976,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16555:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2977,"nodeType":"ArrayTypeName","src":"16555:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":2980,"mutability":"mutable","name":"pos","nameLocation":"16585:3:12","nodeType":"VariableDeclaration","scope":2987,"src":"16577:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2979,"name":"uint256","nodeType":"ElementaryTypeName","src":"16577:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16554:35:12"},"returnParameters":{"id":2984,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2983,"mutability":"mutable","name":"res","nameLocation":"16621:3:12","nodeType":"VariableDeclaration","scope":2987,"src":"16613:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2982,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16613:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"16612:13:12"},"scope":3034,"src":"16527:197:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2999,"nodeType":"Block","src":"17025:98:12","statements":[{"AST":{"nodeType":"YulBlock","src":"17044:73:12","statements":[{"nodeType":"YulAssignment","src":"17058:49:12","value":{"arguments":[{"arguments":[{"arguments":[{"name":"arr","nodeType":"YulIdentifier","src":"17079:3:12"},{"kind":"number","nodeType":"YulLiteral","src":"17084:4:12","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17075:3:12"},"nodeType":"YulFunctionCall","src":"17075:14:12"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17095:3:12"},{"kind":"number","nodeType":"YulLiteral","src":"17100:4:12","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"17091:3:12"},"nodeType":"YulFunctionCall","src":"17091:14:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17071:3:12"},"nodeType":"YulFunctionCall","src":"17071:35:12"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17065:5:12"},"nodeType":"YulFunctionCall","src":"17065:42:12"},"variableNames":[{"name":"res","nodeType":"YulIdentifier","src":"17058:3:12"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2991,"isOffset":false,"isSlot":false,"src":"17079:3:12","valueSize":1},{"declaration":2993,"isOffset":false,"isSlot":false,"src":"17095:3:12","valueSize":1},{"declaration":2996,"isOffset":false,"isSlot":false,"src":"17058:3:12","valueSize":1}],"id":2998,"nodeType":"InlineAssembly","src":"17035:82:12"}]},"documentation":{"id":2988,"nodeType":"StructuredDocumentation","src":"16730:191:12","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":3000,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeMemoryAccess","nameLocation":"16935:18:12","nodeType":"FunctionDefinition","parameters":{"id":2994,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2991,"mutability":"mutable","name":"arr","nameLocation":"16971:3:12","nodeType":"VariableDeclaration","scope":3000,"src":"16954:20:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2989,"name":"uint256","nodeType":"ElementaryTypeName","src":"16954:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2990,"nodeType":"ArrayTypeName","src":"16954:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2993,"mutability":"mutable","name":"pos","nameLocation":"16984:3:12","nodeType":"VariableDeclaration","scope":3000,"src":"16976:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2992,"name":"uint256","nodeType":"ElementaryTypeName","src":"16976:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16953:35:12"},"returnParameters":{"id":2997,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2996,"mutability":"mutable","name":"res","nameLocation":"17020:3:12","nodeType":"VariableDeclaration","scope":3000,"src":"17012:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2995,"name":"uint256","nodeType":"ElementaryTypeName","src":"17012:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17011:13:12"},"scope":3034,"src":"16926:197:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3010,"nodeType":"Block","src":"17440:88:12","statements":[{"AST":{"nodeType":"YulBlock","src":"17475:47:12","statements":[{"expression":{"arguments":[{"name":"array.slot","nodeType":"YulIdentifier","src":"17496:10:12"},{"name":"len","nodeType":"YulIdentifier","src":"17508:3:12"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"17489:6:12"},"nodeType":"YulFunctionCall","src":"17489:23:12"},"nodeType":"YulExpressionStatement","src":"17489:23:12"}]},"evmVersion":"paris","externalReferences":[{"declaration":3004,"isOffset":false,"isSlot":true,"src":"17496:10:12","suffix":"slot","valueSize":1},{"declaration":3006,"isOffset":false,"isSlot":false,"src":"17508:3:12","valueSize":1}],"flags":["memory-safe"],"id":3009,"nodeType":"InlineAssembly","src":"17450:72:12"}]},"documentation":{"id":3001,"nodeType":"StructuredDocumentation","src":"17129:234:12","text":" @dev Helper to set the length of an dynamic array. Directly writing to `.length` is forbidden.\n WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased."},"id":3011,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeSetLength","nameLocation":"17377:15:12","nodeType":"FunctionDefinition","parameters":{"id":3007,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3004,"mutability":"mutable","name":"array","nameLocation":"17411:5:12","nodeType":"VariableDeclaration","scope":3011,"src":"17393:23:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3002,"name":"address","nodeType":"ElementaryTypeName","src":"17393:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3003,"nodeType":"ArrayTypeName","src":"17393:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":3006,"mutability":"mutable","name":"len","nameLocation":"17426:3:12","nodeType":"VariableDeclaration","scope":3011,"src":"17418:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3005,"name":"uint256","nodeType":"ElementaryTypeName","src":"17418:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17392:38:12"},"returnParameters":{"id":3008,"nodeType":"ParameterList","parameters":[],"src":"17440:0:12"},"scope":3034,"src":"17368:160:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3021,"nodeType":"Block","src":"17845:88:12","statements":[{"AST":{"nodeType":"YulBlock","src":"17880:47:12","statements":[{"expression":{"arguments":[{"name":"array.slot","nodeType":"YulIdentifier","src":"17901:10:12"},{"name":"len","nodeType":"YulIdentifier","src":"17913:3:12"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"17894:6:12"},"nodeType":"YulFunctionCall","src":"17894:23:12"},"nodeType":"YulExpressionStatement","src":"17894:23:12"}]},"evmVersion":"paris","externalReferences":[{"declaration":3015,"isOffset":false,"isSlot":true,"src":"17901:10:12","suffix":"slot","valueSize":1},{"declaration":3017,"isOffset":false,"isSlot":false,"src":"17913:3:12","valueSize":1}],"flags":["memory-safe"],"id":3020,"nodeType":"InlineAssembly","src":"17855:72:12"}]},"documentation":{"id":3012,"nodeType":"StructuredDocumentation","src":"17534:234:12","text":" @dev Helper to set the length of an dynamic array. Directly writing to `.length` is forbidden.\n WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased."},"id":3022,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeSetLength","nameLocation":"17782:15:12","nodeType":"FunctionDefinition","parameters":{"id":3018,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3015,"mutability":"mutable","name":"array","nameLocation":"17816:5:12","nodeType":"VariableDeclaration","scope":3022,"src":"17798:23:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3013,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17798:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3014,"nodeType":"ArrayTypeName","src":"17798:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":3017,"mutability":"mutable","name":"len","nameLocation":"17831:3:12","nodeType":"VariableDeclaration","scope":3022,"src":"17823:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3016,"name":"uint256","nodeType":"ElementaryTypeName","src":"17823:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17797:38:12"},"returnParameters":{"id":3019,"nodeType":"ParameterList","parameters":[],"src":"17845:0:12"},"scope":3034,"src":"17773:160:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3032,"nodeType":"Block","src":"18250:88:12","statements":[{"AST":{"nodeType":"YulBlock","src":"18285:47:12","statements":[{"expression":{"arguments":[{"name":"array.slot","nodeType":"YulIdentifier","src":"18306:10:12"},{"name":"len","nodeType":"YulIdentifier","src":"18318:3:12"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"18299:6:12"},"nodeType":"YulFunctionCall","src":"18299:23:12"},"nodeType":"YulExpressionStatement","src":"18299:23:12"}]},"evmVersion":"paris","externalReferences":[{"declaration":3026,"isOffset":false,"isSlot":true,"src":"18306:10:12","suffix":"slot","valueSize":1},{"declaration":3028,"isOffset":false,"isSlot":false,"src":"18318:3:12","valueSize":1}],"flags":["memory-safe"],"id":3031,"nodeType":"InlineAssembly","src":"18260:72:12"}]},"documentation":{"id":3023,"nodeType":"StructuredDocumentation","src":"17939:234:12","text":" @dev Helper to set the length of an dynamic array. Directly writing to `.length` is forbidden.\n WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased."},"id":3033,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeSetLength","nameLocation":"18187:15:12","nodeType":"FunctionDefinition","parameters":{"id":3029,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3026,"mutability":"mutable","name":"array","nameLocation":"18221:5:12","nodeType":"VariableDeclaration","scope":3033,"src":"18203:23:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3024,"name":"uint256","nodeType":"ElementaryTypeName","src":"18203:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3025,"nodeType":"ArrayTypeName","src":"18203:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3028,"mutability":"mutable","name":"len","nameLocation":"18236:3:12","nodeType":"VariableDeclaration","scope":3033,"src":"18228:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3027,"name":"uint256","nodeType":"ElementaryTypeName","src":"18228:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18202:38:12"},"returnParameters":{"id":3030,"nodeType":"ParameterList","parameters":[],"src":"18250:0:12"},"scope":3034,"src":"18178:160:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":3035,"src":"459:17881:12","usedErrors":[],"usedEvents":[]}],"src":"183:18158:12"},"id":12},"@openzeppelin/contracts/utils/Comparators.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Comparators.sol","exportedSymbols":{"Comparators":[3066]},"id":3067,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3036,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"105:24:13"},{"abstract":false,"baseContracts":[],"canonicalName":"Comparators","contractDependencies":[],"contractKind":"library","documentation":{"id":3037,"nodeType":"StructuredDocumentation","src":"131:92:13","text":" @dev Provides a set of functions to compare values.\n _Available since v5.1._"},"fullyImplemented":true,"id":3066,"linearizedBaseContracts":[3066],"name":"Comparators","nameLocation":"232:11:13","nodeType":"ContractDefinition","nodes":[{"body":{"id":3050,"nodeType":"Block","src":"313:29:13","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3046,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3039,"src":"330:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3047,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3041,"src":"334:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"330:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3045,"id":3049,"nodeType":"Return","src":"323:12:13"}]},"id":3051,"implemented":true,"kind":"function","modifiers":[],"name":"lt","nameLocation":"259:2:13","nodeType":"FunctionDefinition","parameters":{"id":3042,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3039,"mutability":"mutable","name":"a","nameLocation":"270:1:13","nodeType":"VariableDeclaration","scope":3051,"src":"262:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3038,"name":"uint256","nodeType":"ElementaryTypeName","src":"262:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3041,"mutability":"mutable","name":"b","nameLocation":"281:1:13","nodeType":"VariableDeclaration","scope":3051,"src":"273:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3040,"name":"uint256","nodeType":"ElementaryTypeName","src":"273:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"261:22:13"},"returnParameters":{"id":3045,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3044,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3051,"src":"307:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3043,"name":"bool","nodeType":"ElementaryTypeName","src":"307:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"306:6:13"},"scope":3066,"src":"250:92:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3064,"nodeType":"Block","src":"411:29:13","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3060,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3053,"src":"428:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3061,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"432:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"428:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3059,"id":3063,"nodeType":"Return","src":"421:12:13"}]},"id":3065,"implemented":true,"kind":"function","modifiers":[],"name":"gt","nameLocation":"357:2:13","nodeType":"FunctionDefinition","parameters":{"id":3056,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3053,"mutability":"mutable","name":"a","nameLocation":"368:1:13","nodeType":"VariableDeclaration","scope":3065,"src":"360:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3052,"name":"uint256","nodeType":"ElementaryTypeName","src":"360:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3055,"mutability":"mutable","name":"b","nameLocation":"379:1:13","nodeType":"VariableDeclaration","scope":3065,"src":"371:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3054,"name":"uint256","nodeType":"ElementaryTypeName","src":"371:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"359:22:13"},"returnParameters":{"id":3059,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3058,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3065,"src":"405:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3057,"name":"bool","nodeType":"ElementaryTypeName","src":"405:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"404:6:13"},"scope":3066,"src":"348:92:13","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3067,"src":"224:218:13","usedErrors":[],"usedEvents":[]}],"src":"105:338:13"},"id":13},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[3096]},"id":3097,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3068,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:14"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":3069,"nodeType":"StructuredDocumentation","src":"127:496:14","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":3096,"linearizedBaseContracts":[3096],"name":"Context","nameLocation":"642:7:14","nodeType":"ContractDefinition","nodes":[{"body":{"id":3077,"nodeType":"Block","src":"718:34:14","statements":[{"expression":{"expression":{"id":3074,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:14","memberName":"sender","nodeType":"MemberAccess","src":"735:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3073,"id":3076,"nodeType":"Return","src":"728:17:14"}]},"id":3078,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:14","nodeType":"FunctionDefinition","parameters":{"id":3070,"nodeType":"ParameterList","parameters":[],"src":"675:2:14"},"returnParameters":{"id":3073,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3072,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3078,"src":"709:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3071,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:14"},"scope":3096,"src":"656:96:14","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":3086,"nodeType":"Block","src":"825:32:14","statements":[{"expression":{"expression":{"id":3083,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:14","memberName":"data","nodeType":"MemberAccess","src":"842:8:14","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":3082,"id":3085,"nodeType":"Return","src":"835:15:14"}]},"id":3087,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:14","nodeType":"FunctionDefinition","parameters":{"id":3079,"nodeType":"ParameterList","parameters":[],"src":"775:2:14"},"returnParameters":{"id":3082,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3081,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3087,"src":"809:14:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3080,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:14"},"scope":3096,"src":"758:99:14","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":3094,"nodeType":"Block","src":"935:25:14","statements":[{"expression":{"hexValue":"30","id":3092,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3091,"id":3093,"nodeType":"Return","src":"945:8:14"}]},"id":3095,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:14","nodeType":"FunctionDefinition","parameters":{"id":3088,"nodeType":"ParameterList","parameters":[],"src":"892:2:14"},"returnParameters":{"id":3091,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3090,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3095,"src":"926:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3089,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:14"},"scope":3096,"src":"863:97:14","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":3097,"src":"624:338:14","usedErrors":[],"usedEvents":[]}],"src":"101:862:14"},"id":14},"@openzeppelin/contracts/utils/Panic.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","exportedSymbols":{"Panic":[3148]},"id":3149,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3098,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"99:24:15"},{"abstract":false,"baseContracts":[],"canonicalName":"Panic","contractDependencies":[],"contractKind":"library","documentation":{"id":3099,"nodeType":"StructuredDocumentation","src":"125:489:15","text":" @dev Helper library for emitting standardized panic codes.\n ```solidity\n contract Example {\n      using Panic for uint256;\n      // Use any of the declared internal constants\n      function foo() { Panic.GENERIC.panic(); }\n      // Alternatively\n      function foo() { Panic.panic(Panic.GENERIC); }\n }\n ```\n Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n _Available since v5.1._"},"fullyImplemented":true,"id":3148,"linearizedBaseContracts":[3148],"name":"Panic","nameLocation":"665:5:15","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":3100,"nodeType":"StructuredDocumentation","src":"677:36:15","text":"@dev generic / unspecified error"},"id":3103,"mutability":"constant","name":"GENERIC","nameLocation":"744:7:15","nodeType":"VariableDeclaration","scope":3148,"src":"718:40:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3101,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783030","id":3102,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"754:4:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"internal"},{"constant":true,"documentation":{"id":3104,"nodeType":"StructuredDocumentation","src":"764:37:15","text":"@dev used by the assert() builtin"},"id":3107,"mutability":"constant","name":"ASSERT","nameLocation":"832:6:15","nodeType":"VariableDeclaration","scope":3148,"src":"806:39:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3105,"name":"uint256","nodeType":"ElementaryTypeName","src":"806:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783031","id":3106,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"841:4:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"0x01"},"visibility":"internal"},{"constant":true,"documentation":{"id":3108,"nodeType":"StructuredDocumentation","src":"851:41:15","text":"@dev arithmetic underflow or overflow"},"id":3111,"mutability":"constant","name":"UNDER_OVERFLOW","nameLocation":"923:14:15","nodeType":"VariableDeclaration","scope":3148,"src":"897:47:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3109,"name":"uint256","nodeType":"ElementaryTypeName","src":"897:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783131","id":3110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"940:4:15","typeDescriptions":{"typeIdentifier":"t_rational_17_by_1","typeString":"int_const 17"},"value":"0x11"},"visibility":"internal"},{"constant":true,"documentation":{"id":3112,"nodeType":"StructuredDocumentation","src":"950:35:15","text":"@dev division or modulo by zero"},"id":3115,"mutability":"constant","name":"DIVISION_BY_ZERO","nameLocation":"1016:16:15","nodeType":"VariableDeclaration","scope":3148,"src":"990:49:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3113,"name":"uint256","nodeType":"ElementaryTypeName","src":"990:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783132","id":3114,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1035:4:15","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"0x12"},"visibility":"internal"},{"constant":true,"documentation":{"id":3116,"nodeType":"StructuredDocumentation","src":"1045:30:15","text":"@dev enum conversion error"},"id":3119,"mutability":"constant","name":"ENUM_CONVERSION_ERROR","nameLocation":"1106:21:15","nodeType":"VariableDeclaration","scope":3148,"src":"1080:54:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3117,"name":"uint256","nodeType":"ElementaryTypeName","src":"1080:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783231","id":3118,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1130:4:15","typeDescriptions":{"typeIdentifier":"t_rational_33_by_1","typeString":"int_const 33"},"value":"0x21"},"visibility":"internal"},{"constant":true,"documentation":{"id":3120,"nodeType":"StructuredDocumentation","src":"1140:36:15","text":"@dev invalid encoding in storage"},"id":3123,"mutability":"constant","name":"STORAGE_ENCODING_ERROR","nameLocation":"1207:22:15","nodeType":"VariableDeclaration","scope":3148,"src":"1181:55:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3121,"name":"uint256","nodeType":"ElementaryTypeName","src":"1181:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783232","id":3122,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1232:4:15","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"visibility":"internal"},{"constant":true,"documentation":{"id":3124,"nodeType":"StructuredDocumentation","src":"1242:24:15","text":"@dev empty array pop"},"id":3127,"mutability":"constant","name":"EMPTY_ARRAY_POP","nameLocation":"1297:15:15","nodeType":"VariableDeclaration","scope":3148,"src":"1271:48:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3125,"name":"uint256","nodeType":"ElementaryTypeName","src":"1271:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783331","id":3126,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1315:4:15","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"0x31"},"visibility":"internal"},{"constant":true,"documentation":{"id":3128,"nodeType":"StructuredDocumentation","src":"1325:35:15","text":"@dev array out of bounds access"},"id":3131,"mutability":"constant","name":"ARRAY_OUT_OF_BOUNDS","nameLocation":"1391:19:15","nodeType":"VariableDeclaration","scope":3148,"src":"1365:52:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3129,"name":"uint256","nodeType":"ElementaryTypeName","src":"1365:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783332","id":3130,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1413:4:15","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"0x32"},"visibility":"internal"},{"constant":true,"documentation":{"id":3132,"nodeType":"StructuredDocumentation","src":"1423:65:15","text":"@dev resource error (too large allocation or too large array)"},"id":3135,"mutability":"constant","name":"RESOURCE_ERROR","nameLocation":"1519:14:15","nodeType":"VariableDeclaration","scope":3148,"src":"1493:47:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3133,"name":"uint256","nodeType":"ElementaryTypeName","src":"1493:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783431","id":3134,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1536:4:15","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"0x41"},"visibility":"internal"},{"constant":true,"documentation":{"id":3136,"nodeType":"StructuredDocumentation","src":"1546:42:15","text":"@dev calling invalid internal function"},"id":3139,"mutability":"constant","name":"INVALID_INTERNAL_FUNCTION","nameLocation":"1619:25:15","nodeType":"VariableDeclaration","scope":3148,"src":"1593:58:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3137,"name":"uint256","nodeType":"ElementaryTypeName","src":"1593:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783531","id":3138,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1647:4:15","typeDescriptions":{"typeIdentifier":"t_rational_81_by_1","typeString":"int_const 81"},"value":"0x51"},"visibility":"internal"},{"body":{"id":3146,"nodeType":"Block","src":"1819:151:15","statements":[{"AST":{"nodeType":"YulBlock","src":"1854:110:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1875:4:15","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"1881:10:15","type":"","value":"0x4e487b71"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1868:6:15"},"nodeType":"YulFunctionCall","src":"1868:24:15"},"nodeType":"YulExpressionStatement","src":"1868:24:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1912:4:15","type":"","value":"0x20"},{"name":"code","nodeType":"YulIdentifier","src":"1918:4:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1905:6:15"},"nodeType":"YulFunctionCall","src":"1905:18:15"},"nodeType":"YulExpressionStatement","src":"1905:18:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1943:4:15","type":"","value":"0x1c"},{"kind":"number","nodeType":"YulLiteral","src":"1949:4:15","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1936:6:15"},"nodeType":"YulFunctionCall","src":"1936:18:15"},"nodeType":"YulExpressionStatement","src":"1936:18:15"}]},"evmVersion":"paris","externalReferences":[{"declaration":3142,"isOffset":false,"isSlot":false,"src":"1918:4:15","valueSize":1}],"flags":["memory-safe"],"id":3145,"nodeType":"InlineAssembly","src":"1829:135:15"}]},"documentation":{"id":3140,"nodeType":"StructuredDocumentation","src":"1658:113:15","text":"@dev Reverts with a panic code. Recommended to use with\n the internal constants with predefined codes."},"id":3147,"implemented":true,"kind":"function","modifiers":[],"name":"panic","nameLocation":"1785:5:15","nodeType":"FunctionDefinition","parameters":{"id":3143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3142,"mutability":"mutable","name":"code","nameLocation":"1799:4:15","nodeType":"VariableDeclaration","scope":3147,"src":"1791:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3141,"name":"uint256","nodeType":"ElementaryTypeName","src":"1791:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1790:14:15"},"returnParameters":{"id":3144,"nodeType":"ParameterList","parameters":[],"src":"1819:0:15"},"scope":3148,"src":"1776:194:15","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3149,"src":"657:1315:15","usedErrors":[],"usedEvents":[]}],"src":"99:1874:15"},"id":15},"@openzeppelin/contracts/utils/Pausable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Pausable.sol","exportedSymbols":{"Context":[3096],"Pausable":[3265]},"id":3266,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3150,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:16"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":3152,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3266,"sourceUnit":3097,"src":"128:45:16","symbolAliases":[{"foreign":{"id":3151,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3096,"src":"136:7:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":3154,"name":"Context","nameLocations":["645:7:16"],"nodeType":"IdentifierPath","referencedDeclaration":3096,"src":"645:7:16"},"id":3155,"nodeType":"InheritanceSpecifier","src":"645:7:16"}],"canonicalName":"Pausable","contractDependencies":[],"contractKind":"contract","documentation":{"id":3153,"nodeType":"StructuredDocumentation","src":"175:439:16","text":" @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."},"fullyImplemented":true,"id":3265,"linearizedBaseContracts":[3265,3096],"name":"Pausable","nameLocation":"633:8:16","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":3157,"mutability":"mutable","name":"_paused","nameLocation":"672:7:16","nodeType":"VariableDeclaration","scope":3265,"src":"659:20:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3156,"name":"bool","nodeType":"ElementaryTypeName","src":"659:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"private"},{"anonymous":false,"documentation":{"id":3158,"nodeType":"StructuredDocumentation","src":"686:73:16","text":" @dev Emitted when the pause is triggered by `account`."},"eventSelector":"62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258","id":3162,"name":"Paused","nameLocation":"770:6:16","nodeType":"EventDefinition","parameters":{"id":3161,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3160,"indexed":false,"mutability":"mutable","name":"account","nameLocation":"785:7:16","nodeType":"VariableDeclaration","scope":3162,"src":"777:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3159,"name":"address","nodeType":"ElementaryTypeName","src":"777:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"776:17:16"},"src":"764:30:16"},{"anonymous":false,"documentation":{"id":3163,"nodeType":"StructuredDocumentation","src":"800:70:16","text":" @dev Emitted when the pause is lifted by `account`."},"eventSelector":"5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa","id":3167,"name":"Unpaused","nameLocation":"881:8:16","nodeType":"EventDefinition","parameters":{"id":3166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3165,"indexed":false,"mutability":"mutable","name":"account","nameLocation":"898:7:16","nodeType":"VariableDeclaration","scope":3167,"src":"890:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3164,"name":"address","nodeType":"ElementaryTypeName","src":"890:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"889:17:16"},"src":"875:32:16"},{"documentation":{"id":3168,"nodeType":"StructuredDocumentation","src":"913:76:16","text":" @dev The operation failed because the contract is paused."},"errorSelector":"d93c0665","id":3170,"name":"EnforcedPause","nameLocation":"1000:13:16","nodeType":"ErrorDefinition","parameters":{"id":3169,"nodeType":"ParameterList","parameters":[],"src":"1013:2:16"},"src":"994:22:16"},{"documentation":{"id":3171,"nodeType":"StructuredDocumentation","src":"1022:80:16","text":" @dev The operation failed because the contract is not paused."},"errorSelector":"8dfc202b","id":3173,"name":"ExpectedPause","nameLocation":"1113:13:16","nodeType":"ErrorDefinition","parameters":{"id":3172,"nodeType":"ParameterList","parameters":[],"src":"1126:2:16"},"src":"1107:22:16"},{"body":{"id":3181,"nodeType":"Block","src":"1221:32:16","statements":[{"expression":{"id":3179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3177,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3157,"src":"1231:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":3178,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1241:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"1231:15:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3180,"nodeType":"ExpressionStatement","src":"1231:15:16"}]},"documentation":{"id":3174,"nodeType":"StructuredDocumentation","src":"1135:67:16","text":" @dev Initializes the contract in unpaused state."},"id":3182,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":3175,"nodeType":"ParameterList","parameters":[],"src":"1218:2:16"},"returnParameters":{"id":3176,"nodeType":"ParameterList","parameters":[],"src":"1221:0:16"},"scope":3265,"src":"1207:46:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3189,"nodeType":"Block","src":"1464:47:16","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3185,"name":"_requireNotPaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3219,"src":"1474:17:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":3186,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1474:19:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3187,"nodeType":"ExpressionStatement","src":"1474:19:16"},{"id":3188,"nodeType":"PlaceholderStatement","src":"1503:1:16"}]},"documentation":{"id":3183,"nodeType":"StructuredDocumentation","src":"1259:175:16","text":" @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."},"id":3190,"name":"whenNotPaused","nameLocation":"1448:13:16","nodeType":"ModifierDefinition","parameters":{"id":3184,"nodeType":"ParameterList","parameters":[],"src":"1461:2:16"},"src":"1439:72:16","virtual":false,"visibility":"internal"},{"body":{"id":3197,"nodeType":"Block","src":"1711:44:16","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3193,"name":"_requirePaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3232,"src":"1721:14:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":3194,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1721:16:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3195,"nodeType":"ExpressionStatement","src":"1721:16:16"},{"id":3196,"nodeType":"PlaceholderStatement","src":"1747:1:16"}]},"documentation":{"id":3191,"nodeType":"StructuredDocumentation","src":"1517:167:16","text":" @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."},"id":3198,"name":"whenPaused","nameLocation":"1698:10:16","nodeType":"ModifierDefinition","parameters":{"id":3192,"nodeType":"ParameterList","parameters":[],"src":"1708:2:16"},"src":"1689:66:16","virtual":false,"visibility":"internal"},{"body":{"id":3206,"nodeType":"Block","src":"1903:31:16","statements":[{"expression":{"id":3204,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3157,"src":"1920:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3203,"id":3205,"nodeType":"Return","src":"1913:14:16"}]},"documentation":{"id":3199,"nodeType":"StructuredDocumentation","src":"1761:84:16","text":" @dev Returns true if the contract is paused, and false otherwise."},"functionSelector":"5c975abb","id":3207,"implemented":true,"kind":"function","modifiers":[],"name":"paused","nameLocation":"1859:6:16","nodeType":"FunctionDefinition","parameters":{"id":3200,"nodeType":"ParameterList","parameters":[],"src":"1865:2:16"},"returnParameters":{"id":3203,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3202,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3207,"src":"1897:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3201,"name":"bool","nodeType":"ElementaryTypeName","src":"1897:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1896:6:16"},"scope":3265,"src":"1850:84:16","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":3218,"nodeType":"Block","src":"2053:77:16","statements":[{"condition":{"arguments":[],"expression":{"argumentTypes":[],"id":3211,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3207,"src":"2067:6:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":3212,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2067:8:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3217,"nodeType":"IfStatement","src":"2063:61:16","trueBody":{"id":3216,"nodeType":"Block","src":"2077:47:16","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3213,"name":"EnforcedPause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3170,"src":"2098:13:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3214,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2098:15:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3215,"nodeType":"RevertStatement","src":"2091:22:16"}]}}]},"documentation":{"id":3208,"nodeType":"StructuredDocumentation","src":"1940:57:16","text":" @dev Throws if the contract is paused."},"id":3219,"implemented":true,"kind":"function","modifiers":[],"name":"_requireNotPaused","nameLocation":"2011:17:16","nodeType":"FunctionDefinition","parameters":{"id":3209,"nodeType":"ParameterList","parameters":[],"src":"2028:2:16"},"returnParameters":{"id":3210,"nodeType":"ParameterList","parameters":[],"src":"2053:0:16"},"scope":3265,"src":"2002:128:16","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":3231,"nodeType":"Block","src":"2250:78:16","statements":[{"condition":{"id":3225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2264:9:16","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":3223,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3207,"src":"2265:6:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":3224,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2265:8:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3230,"nodeType":"IfStatement","src":"2260:62:16","trueBody":{"id":3229,"nodeType":"Block","src":"2275:47:16","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3226,"name":"ExpectedPause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3173,"src":"2296:13:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3227,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2296:15:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3228,"nodeType":"RevertStatement","src":"2289:22:16"}]}}]},"documentation":{"id":3220,"nodeType":"StructuredDocumentation","src":"2136:61:16","text":" @dev Throws if the contract is not paused."},"id":3232,"implemented":true,"kind":"function","modifiers":[],"name":"_requirePaused","nameLocation":"2211:14:16","nodeType":"FunctionDefinition","parameters":{"id":3221,"nodeType":"ParameterList","parameters":[],"src":"2225:2:16"},"returnParameters":{"id":3222,"nodeType":"ParameterList","parameters":[],"src":"2250:0:16"},"scope":3265,"src":"2202:126:16","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":3247,"nodeType":"Block","src":"2512:66:16","statements":[{"expression":{"id":3240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3238,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3157,"src":"2522:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":3239,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2532:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"2522:14:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3241,"nodeType":"ExpressionStatement","src":"2522:14:16"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":3243,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3078,"src":"2558:10:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":3244,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2558:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3242,"name":"Paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3162,"src":"2551:6:16","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":3245,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2551:20:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3246,"nodeType":"EmitStatement","src":"2546:25:16"}]},"documentation":{"id":3233,"nodeType":"StructuredDocumentation","src":"2334:124:16","text":" @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."},"id":3248,"implemented":true,"kind":"function","modifiers":[{"id":3236,"kind":"modifierInvocation","modifierName":{"id":3235,"name":"whenNotPaused","nameLocations":["2498:13:16"],"nodeType":"IdentifierPath","referencedDeclaration":3190,"src":"2498:13:16"},"nodeType":"ModifierInvocation","src":"2498:13:16"}],"name":"_pause","nameLocation":"2472:6:16","nodeType":"FunctionDefinition","parameters":{"id":3234,"nodeType":"ParameterList","parameters":[],"src":"2478:2:16"},"returnParameters":{"id":3237,"nodeType":"ParameterList","parameters":[],"src":"2512:0:16"},"scope":3265,"src":"2463:115:16","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":3263,"nodeType":"Block","src":"2758:69:16","statements":[{"expression":{"id":3256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3254,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3157,"src":"2768:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":3255,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2778:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"2768:15:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3257,"nodeType":"ExpressionStatement","src":"2768:15:16"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":3259,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3078,"src":"2807:10:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":3260,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2807:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3258,"name":"Unpaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3167,"src":"2798:8:16","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":3261,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2798:22:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3262,"nodeType":"EmitStatement","src":"2793:27:16"}]},"documentation":{"id":3249,"nodeType":"StructuredDocumentation","src":"2584:121:16","text":" @dev Returns to normal state.\n Requirements:\n - The contract must be paused."},"id":3264,"implemented":true,"kind":"function","modifiers":[{"id":3252,"kind":"modifierInvocation","modifierName":{"id":3251,"name":"whenPaused","nameLocations":["2747:10:16"],"nodeType":"IdentifierPath","referencedDeclaration":3198,"src":"2747:10:16"},"nodeType":"ModifierInvocation","src":"2747:10:16"}],"name":"_unpause","nameLocation":"2719:8:16","nodeType":"FunctionDefinition","parameters":{"id":3250,"nodeType":"ParameterList","parameters":[],"src":"2727:2:16"},"returnParameters":{"id":3253,"nodeType":"ParameterList","parameters":[],"src":"2758:0:16"},"scope":3265,"src":"2710:117:16","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":3266,"src":"615:2214:16","usedErrors":[3170,3173],"usedEvents":[3162,3167]}],"src":"102:2728:16"},"id":16},"@openzeppelin/contracts/utils/SlotDerivation.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/SlotDerivation.sol","exportedSymbols":{"SlotDerivation":[3395]},"id":3396,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3267,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"199:24:17"},{"abstract":false,"baseContracts":[],"canonicalName":"SlotDerivation","contractDependencies":[],"contractKind":"library","documentation":{"id":3268,"nodeType":"StructuredDocumentation","src":"225:1372:17","text":" @dev Library for computing storage (and transient storage) locations from namespaces and deriving slots\n corresponding to standard patterns. The derivation method for array and mapping matches the storage layout used by\n the solidity language / compiler.\n See https://docs.soliditylang.org/en/v0.8.20/internals/layout_in_storage.html#mappings-and-dynamic-arrays[Solidity docs for mappings and dynamic arrays.].\n Example usage:\n ```solidity\n contract Example {\n     // Add the library methods\n     using StorageSlot for bytes32;\n     using SlotDerivation for bytes32;\n     // Declare a namespace\n     string private constant _NAMESPACE = \"<namespace>\" // eg. OpenZeppelin.Slot\n     function setValueInNamespace(uint256 key, address newValue) internal {\n         _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value = newValue;\n     }\n     function getValueInNamespace(uint256 key) internal view returns (address) {\n         return _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value;\n     }\n }\n ```\n TIP: Consider using this library along with {StorageSlot}.\n NOTE: This library provides a way to manipulate storage locations in a non-standard way. Tooling for checking\n upgrade safety will ignore the slots accessed through this library.\n _Available since v5.1._"},"fullyImplemented":true,"id":3395,"linearizedBaseContracts":[3395],"name":"SlotDerivation","nameLocation":"1606:14:17","nodeType":"ContractDefinition","nodes":[{"body":{"id":3277,"nodeType":"Block","src":"1789:194:17","statements":[{"AST":{"nodeType":"YulBlock","src":"1824:153:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1845:4:17","type":"","value":"0x00"},{"arguments":[{"arguments":[{"arguments":[{"name":"namespace","nodeType":"YulIdentifier","src":"1869:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"1880:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1865:3:17"},"nodeType":"YulFunctionCall","src":"1865:20:17"},{"arguments":[{"name":"namespace","nodeType":"YulIdentifier","src":"1893:9:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1887:5:17"},"nodeType":"YulFunctionCall","src":"1887:16:17"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"1855:9:17"},"nodeType":"YulFunctionCall","src":"1855:49:17"},{"kind":"number","nodeType":"YulLiteral","src":"1906:1:17","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1851:3:17"},"nodeType":"YulFunctionCall","src":"1851:57:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1838:6:17"},"nodeType":"YulFunctionCall","src":"1838:71:17"},"nodeType":"YulExpressionStatement","src":"1838:71:17"},{"nodeType":"YulAssignment","src":"1922:45:17","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1944:4:17","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"1950:4:17","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"1934:9:17"},"nodeType":"YulFunctionCall","src":"1934:21:17"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1961:4:17","type":"","value":"0xff"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1957:3:17"},"nodeType":"YulFunctionCall","src":"1957:9:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1930:3:17"},"nodeType":"YulFunctionCall","src":"1930:37:17"},"variableNames":[{"name":"slot","nodeType":"YulIdentifier","src":"1922:4:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3271,"isOffset":false,"isSlot":false,"src":"1869:9:17","valueSize":1},{"declaration":3271,"isOffset":false,"isSlot":false,"src":"1893:9:17","valueSize":1},{"declaration":3274,"isOffset":false,"isSlot":false,"src":"1922:4:17","valueSize":1}],"flags":["memory-safe"],"id":3276,"nodeType":"InlineAssembly","src":"1799:178:17"}]},"documentation":{"id":3269,"nodeType":"StructuredDocumentation","src":"1627:74:17","text":" @dev Derive an ERC-7201 slot from a string (namespace)."},"id":3278,"implemented":true,"kind":"function","modifiers":[],"name":"erc7201Slot","nameLocation":"1715:11:17","nodeType":"FunctionDefinition","parameters":{"id":3272,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3271,"mutability":"mutable","name":"namespace","nameLocation":"1741:9:17","nodeType":"VariableDeclaration","scope":3278,"src":"1727:23:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3270,"name":"string","nodeType":"ElementaryTypeName","src":"1727:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1726:25:17"},"returnParameters":{"id":3275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3274,"mutability":"mutable","name":"slot","nameLocation":"1783:4:17","nodeType":"VariableDeclaration","scope":3278,"src":"1775:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3273,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1775:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1774:14:17"},"scope":3395,"src":"1706:277:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3299,"nodeType":"Block","src":"2175:86:17","statements":[{"id":3298,"nodeType":"UncheckedBlock","src":"2185:70:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3292,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3281,"src":"2232:4:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3291,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2224:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3290,"name":"uint256","nodeType":"ElementaryTypeName","src":"2224:7:17","typeDescriptions":{}}},"id":3293,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2224:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3294,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3283,"src":"2240:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2224:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3289,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2216:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3288,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2216:7:17","typeDescriptions":{}}},"id":3296,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2216:28:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3287,"id":3297,"nodeType":"Return","src":"2209:35:17"}]}]},"documentation":{"id":3279,"nodeType":"StructuredDocumentation","src":"1989:99:17","text":" @dev Add an offset to a slot to get the n-th element of a structure or an array."},"id":3300,"implemented":true,"kind":"function","modifiers":[],"name":"offset","nameLocation":"2102:6:17","nodeType":"FunctionDefinition","parameters":{"id":3284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3281,"mutability":"mutable","name":"slot","nameLocation":"2117:4:17","nodeType":"VariableDeclaration","scope":3300,"src":"2109:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3280,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2109:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3283,"mutability":"mutable","name":"pos","nameLocation":"2131:3:17","nodeType":"VariableDeclaration","scope":3300,"src":"2123:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3282,"name":"uint256","nodeType":"ElementaryTypeName","src":"2123:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2108:27:17"},"returnParameters":{"id":3287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3286,"mutability":"mutable","name":"result","nameLocation":"2167:6:17","nodeType":"VariableDeclaration","scope":3300,"src":"2159:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3285,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2159:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2158:16:17"},"scope":3395,"src":"2093:168:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3309,"nodeType":"Block","src":"2464:127:17","statements":[{"AST":{"nodeType":"YulBlock","src":"2499:86:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2520:4:17","type":"","value":"0x00"},{"name":"slot","nodeType":"YulIdentifier","src":"2526:4:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2513:6:17"},"nodeType":"YulFunctionCall","src":"2513:18:17"},"nodeType":"YulExpressionStatement","src":"2513:18:17"},{"nodeType":"YulAssignment","src":"2544:31:17","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2564:4:17","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"2570:4:17","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"2554:9:17"},"nodeType":"YulFunctionCall","src":"2554:21:17"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"2544:6:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3306,"isOffset":false,"isSlot":false,"src":"2544:6:17","valueSize":1},{"declaration":3303,"isOffset":false,"isSlot":false,"src":"2526:4:17","valueSize":1}],"flags":["memory-safe"],"id":3308,"nodeType":"InlineAssembly","src":"2474:111:17"}]},"documentation":{"id":3301,"nodeType":"StructuredDocumentation","src":"2267:118:17","text":" @dev Derive the location of the first element in an array from the slot where the length is stored."},"id":3310,"implemented":true,"kind":"function","modifiers":[],"name":"deriveArray","nameLocation":"2399:11:17","nodeType":"FunctionDefinition","parameters":{"id":3304,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3303,"mutability":"mutable","name":"slot","nameLocation":"2419:4:17","nodeType":"VariableDeclaration","scope":3310,"src":"2411:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3302,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2411:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2410:14:17"},"returnParameters":{"id":3307,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3306,"mutability":"mutable","name":"result","nameLocation":"2456:6:17","nodeType":"VariableDeclaration","scope":3310,"src":"2448:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3305,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2448:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2447:16:17"},"scope":3395,"src":"2390:201:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3321,"nodeType":"Block","src":"2769:179:17","statements":[{"AST":{"nodeType":"YulBlock","src":"2804:138:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2825:4:17","type":"","value":"0x00"},{"arguments":[{"name":"key","nodeType":"YulIdentifier","src":"2835:3:17"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2844:2:17","type":"","value":"96"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2852:1:17","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2848:3:17"},"nodeType":"YulFunctionCall","src":"2848:6:17"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2840:3:17"},"nodeType":"YulFunctionCall","src":"2840:15:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2831:3:17"},"nodeType":"YulFunctionCall","src":"2831:25:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2818:6:17"},"nodeType":"YulFunctionCall","src":"2818:39:17"},"nodeType":"YulExpressionStatement","src":"2818:39:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2877:4:17","type":"","value":"0x20"},{"name":"slot","nodeType":"YulIdentifier","src":"2883:4:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2870:6:17"},"nodeType":"YulFunctionCall","src":"2870:18:17"},"nodeType":"YulExpressionStatement","src":"2870:18:17"},{"nodeType":"YulAssignment","src":"2901:31:17","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2921:4:17","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"2927:4:17","type":"","value":"0x40"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"2911:9:17"},"nodeType":"YulFunctionCall","src":"2911:21:17"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"2901:6:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3315,"isOffset":false,"isSlot":false,"src":"2835:3:17","valueSize":1},{"declaration":3318,"isOffset":false,"isSlot":false,"src":"2901:6:17","valueSize":1},{"declaration":3313,"isOffset":false,"isSlot":false,"src":"2883:4:17","valueSize":1}],"flags":["memory-safe"],"id":3320,"nodeType":"InlineAssembly","src":"2779:163:17"}]},"documentation":{"id":3311,"nodeType":"StructuredDocumentation","src":"2597:78:17","text":" @dev Derive the location of a mapping element from the key."},"id":3322,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"2689:13:17","nodeType":"FunctionDefinition","parameters":{"id":3316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3313,"mutability":"mutable","name":"slot","nameLocation":"2711:4:17","nodeType":"VariableDeclaration","scope":3322,"src":"2703:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3312,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2703:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3315,"mutability":"mutable","name":"key","nameLocation":"2725:3:17","nodeType":"VariableDeclaration","scope":3322,"src":"2717:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3314,"name":"address","nodeType":"ElementaryTypeName","src":"2717:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2702:27:17"},"returnParameters":{"id":3319,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3318,"mutability":"mutable","name":"result","nameLocation":"2761:6:17","nodeType":"VariableDeclaration","scope":3322,"src":"2753:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3317,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2753:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2752:16:17"},"scope":3395,"src":"2680:268:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3333,"nodeType":"Block","src":"3123:173:17","statements":[{"AST":{"nodeType":"YulBlock","src":"3158:132:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3179:4:17","type":"","value":"0x00"},{"arguments":[{"arguments":[{"name":"key","nodeType":"YulIdentifier","src":"3199:3:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3192:6:17"},"nodeType":"YulFunctionCall","src":"3192:11:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3185:6:17"},"nodeType":"YulFunctionCall","src":"3185:19:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3172:6:17"},"nodeType":"YulFunctionCall","src":"3172:33:17"},"nodeType":"YulExpressionStatement","src":"3172:33:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3225:4:17","type":"","value":"0x20"},{"name":"slot","nodeType":"YulIdentifier","src":"3231:4:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3218:6:17"},"nodeType":"YulFunctionCall","src":"3218:18:17"},"nodeType":"YulExpressionStatement","src":"3218:18:17"},{"nodeType":"YulAssignment","src":"3249:31:17","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3269:4:17","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"3275:4:17","type":"","value":"0x40"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"3259:9:17"},"nodeType":"YulFunctionCall","src":"3259:21:17"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3249:6:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3327,"isOffset":false,"isSlot":false,"src":"3199:3:17","valueSize":1},{"declaration":3330,"isOffset":false,"isSlot":false,"src":"3249:6:17","valueSize":1},{"declaration":3325,"isOffset":false,"isSlot":false,"src":"3231:4:17","valueSize":1}],"flags":["memory-safe"],"id":3332,"nodeType":"InlineAssembly","src":"3133:157:17"}]},"documentation":{"id":3323,"nodeType":"StructuredDocumentation","src":"2954:78:17","text":" @dev Derive the location of a mapping element from the key."},"id":3334,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"3046:13:17","nodeType":"FunctionDefinition","parameters":{"id":3328,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3325,"mutability":"mutable","name":"slot","nameLocation":"3068:4:17","nodeType":"VariableDeclaration","scope":3334,"src":"3060:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3324,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3060:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3327,"mutability":"mutable","name":"key","nameLocation":"3079:3:17","nodeType":"VariableDeclaration","scope":3334,"src":"3074:8:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3326,"name":"bool","nodeType":"ElementaryTypeName","src":"3074:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3059:24:17"},"returnParameters":{"id":3331,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3330,"mutability":"mutable","name":"result","nameLocation":"3115:6:17","nodeType":"VariableDeclaration","scope":3334,"src":"3107:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3329,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3107:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3106:16:17"},"scope":3395,"src":"3037:259:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3345,"nodeType":"Block","src":"3474:157:17","statements":[{"AST":{"nodeType":"YulBlock","src":"3509:116:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3530:4:17","type":"","value":"0x00"},{"name":"key","nodeType":"YulIdentifier","src":"3536:3:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3523:6:17"},"nodeType":"YulFunctionCall","src":"3523:17:17"},"nodeType":"YulExpressionStatement","src":"3523:17:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3560:4:17","type":"","value":"0x20"},{"name":"slot","nodeType":"YulIdentifier","src":"3566:4:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3553:6:17"},"nodeType":"YulFunctionCall","src":"3553:18:17"},"nodeType":"YulExpressionStatement","src":"3553:18:17"},{"nodeType":"YulAssignment","src":"3584:31:17","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3604:4:17","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"3610:4:17","type":"","value":"0x40"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"3594:9:17"},"nodeType":"YulFunctionCall","src":"3594:21:17"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3584:6:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3339,"isOffset":false,"isSlot":false,"src":"3536:3:17","valueSize":1},{"declaration":3342,"isOffset":false,"isSlot":false,"src":"3584:6:17","valueSize":1},{"declaration":3337,"isOffset":false,"isSlot":false,"src":"3566:4:17","valueSize":1}],"flags":["memory-safe"],"id":3344,"nodeType":"InlineAssembly","src":"3484:141:17"}]},"documentation":{"id":3335,"nodeType":"StructuredDocumentation","src":"3302:78:17","text":" @dev Derive the location of a mapping element from the key."},"id":3346,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"3394:13:17","nodeType":"FunctionDefinition","parameters":{"id":3340,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3337,"mutability":"mutable","name":"slot","nameLocation":"3416:4:17","nodeType":"VariableDeclaration","scope":3346,"src":"3408:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3336,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3408:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3339,"mutability":"mutable","name":"key","nameLocation":"3430:3:17","nodeType":"VariableDeclaration","scope":3346,"src":"3422:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3338,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3422:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3407:27:17"},"returnParameters":{"id":3343,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3342,"mutability":"mutable","name":"result","nameLocation":"3466:6:17","nodeType":"VariableDeclaration","scope":3346,"src":"3458:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3341,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3458:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3457:16:17"},"scope":3395,"src":"3385:246:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3357,"nodeType":"Block","src":"3809:157:17","statements":[{"AST":{"nodeType":"YulBlock","src":"3844:116:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3865:4:17","type":"","value":"0x00"},{"name":"key","nodeType":"YulIdentifier","src":"3871:3:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3858:6:17"},"nodeType":"YulFunctionCall","src":"3858:17:17"},"nodeType":"YulExpressionStatement","src":"3858:17:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3895:4:17","type":"","value":"0x20"},{"name":"slot","nodeType":"YulIdentifier","src":"3901:4:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3888:6:17"},"nodeType":"YulFunctionCall","src":"3888:18:17"},"nodeType":"YulExpressionStatement","src":"3888:18:17"},{"nodeType":"YulAssignment","src":"3919:31:17","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3939:4:17","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"3945:4:17","type":"","value":"0x40"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"3929:9:17"},"nodeType":"YulFunctionCall","src":"3929:21:17"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3919:6:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3351,"isOffset":false,"isSlot":false,"src":"3871:3:17","valueSize":1},{"declaration":3354,"isOffset":false,"isSlot":false,"src":"3919:6:17","valueSize":1},{"declaration":3349,"isOffset":false,"isSlot":false,"src":"3901:4:17","valueSize":1}],"flags":["memory-safe"],"id":3356,"nodeType":"InlineAssembly","src":"3819:141:17"}]},"documentation":{"id":3347,"nodeType":"StructuredDocumentation","src":"3637:78:17","text":" @dev Derive the location of a mapping element from the key."},"id":3358,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"3729:13:17","nodeType":"FunctionDefinition","parameters":{"id":3352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3349,"mutability":"mutable","name":"slot","nameLocation":"3751:4:17","nodeType":"VariableDeclaration","scope":3358,"src":"3743:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3348,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3743:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3351,"mutability":"mutable","name":"key","nameLocation":"3765:3:17","nodeType":"VariableDeclaration","scope":3358,"src":"3757:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3350,"name":"uint256","nodeType":"ElementaryTypeName","src":"3757:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3742:27:17"},"returnParameters":{"id":3355,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3354,"mutability":"mutable","name":"result","nameLocation":"3801:6:17","nodeType":"VariableDeclaration","scope":3358,"src":"3793:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3353,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3793:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3792:16:17"},"scope":3395,"src":"3720:246:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3369,"nodeType":"Block","src":"4143:157:17","statements":[{"AST":{"nodeType":"YulBlock","src":"4178:116:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4199:4:17","type":"","value":"0x00"},{"name":"key","nodeType":"YulIdentifier","src":"4205:3:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4192:6:17"},"nodeType":"YulFunctionCall","src":"4192:17:17"},"nodeType":"YulExpressionStatement","src":"4192:17:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4229:4:17","type":"","value":"0x20"},{"name":"slot","nodeType":"YulIdentifier","src":"4235:4:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4222:6:17"},"nodeType":"YulFunctionCall","src":"4222:18:17"},"nodeType":"YulExpressionStatement","src":"4222:18:17"},{"nodeType":"YulAssignment","src":"4253:31:17","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4273:4:17","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"4279:4:17","type":"","value":"0x40"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"4263:9:17"},"nodeType":"YulFunctionCall","src":"4263:21:17"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"4253:6:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3363,"isOffset":false,"isSlot":false,"src":"4205:3:17","valueSize":1},{"declaration":3366,"isOffset":false,"isSlot":false,"src":"4253:6:17","valueSize":1},{"declaration":3361,"isOffset":false,"isSlot":false,"src":"4235:4:17","valueSize":1}],"flags":["memory-safe"],"id":3368,"nodeType":"InlineAssembly","src":"4153:141:17"}]},"documentation":{"id":3359,"nodeType":"StructuredDocumentation","src":"3972:78:17","text":" @dev Derive the location of a mapping element from the key."},"id":3370,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"4064:13:17","nodeType":"FunctionDefinition","parameters":{"id":3364,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3361,"mutability":"mutable","name":"slot","nameLocation":"4086:4:17","nodeType":"VariableDeclaration","scope":3370,"src":"4078:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3360,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4078:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3363,"mutability":"mutable","name":"key","nameLocation":"4099:3:17","nodeType":"VariableDeclaration","scope":3370,"src":"4092:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3362,"name":"int256","nodeType":"ElementaryTypeName","src":"4092:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"4077:26:17"},"returnParameters":{"id":3367,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3366,"mutability":"mutable","name":"result","nameLocation":"4135:6:17","nodeType":"VariableDeclaration","scope":3370,"src":"4127:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3365,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4127:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4126:16:17"},"scope":3395,"src":"4055:245:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3381,"nodeType":"Block","src":"4484:326:17","statements":[{"AST":{"nodeType":"YulBlock","src":"4519:285:17","statements":[{"nodeType":"YulVariableDeclaration","src":"4533:24:17","value":{"arguments":[{"name":"key","nodeType":"YulIdentifier","src":"4553:3:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4547:5:17"},"nodeType":"YulFunctionCall","src":"4547:10:17"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"4537:6:17","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4570:27:17","value":{"arguments":[{"name":"key","nodeType":"YulIdentifier","src":"4587:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"4592:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4583:3:17"},"nodeType":"YulFunctionCall","src":"4583:14:17"},"variables":[{"name":"begin","nodeType":"YulTypedName","src":"4574:5:17","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4610:29:17","value":{"arguments":[{"name":"begin","nodeType":"YulIdentifier","src":"4625:5:17"},{"name":"length","nodeType":"YulIdentifier","src":"4632:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4621:3:17"},"nodeType":"YulFunctionCall","src":"4621:18:17"},"variables":[{"name":"end","nodeType":"YulTypedName","src":"4614:3:17","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4652:23:17","value":{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"4671:3:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4665:5:17"},"nodeType":"YulFunctionCall","src":"4665:10:17"},"variables":[{"name":"cache","nodeType":"YulTypedName","src":"4656:5:17","type":""}]},{"expression":{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"4695:3:17"},{"name":"slot","nodeType":"YulIdentifier","src":"4700:4:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4688:6:17"},"nodeType":"YulFunctionCall","src":"4688:17:17"},"nodeType":"YulExpressionStatement","src":"4688:17:17"},{"nodeType":"YulAssignment","src":"4718:45:17","value":{"arguments":[{"name":"begin","nodeType":"YulIdentifier","src":"4738:5:17"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4749:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"4757:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4745:3:17"},"nodeType":"YulFunctionCall","src":"4745:17:17"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"4728:9:17"},"nodeType":"YulFunctionCall","src":"4728:35:17"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"4718:6:17"}]},{"expression":{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"4783:3:17"},{"name":"cache","nodeType":"YulIdentifier","src":"4788:5:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4776:6:17"},"nodeType":"YulFunctionCall","src":"4776:18:17"},"nodeType":"YulExpressionStatement","src":"4776:18:17"}]},"evmVersion":"paris","externalReferences":[{"declaration":3375,"isOffset":false,"isSlot":false,"src":"4553:3:17","valueSize":1},{"declaration":3375,"isOffset":false,"isSlot":false,"src":"4587:3:17","valueSize":1},{"declaration":3378,"isOffset":false,"isSlot":false,"src":"4718:6:17","valueSize":1},{"declaration":3373,"isOffset":false,"isSlot":false,"src":"4700:4:17","valueSize":1}],"flags":["memory-safe"],"id":3380,"nodeType":"InlineAssembly","src":"4494:310:17"}]},"documentation":{"id":3371,"nodeType":"StructuredDocumentation","src":"4306:78:17","text":" @dev Derive the location of a mapping element from the key."},"id":3382,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"4398:13:17","nodeType":"FunctionDefinition","parameters":{"id":3376,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3373,"mutability":"mutable","name":"slot","nameLocation":"4420:4:17","nodeType":"VariableDeclaration","scope":3382,"src":"4412:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3372,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4412:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3375,"mutability":"mutable","name":"key","nameLocation":"4440:3:17","nodeType":"VariableDeclaration","scope":3382,"src":"4426:17:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3374,"name":"string","nodeType":"ElementaryTypeName","src":"4426:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4411:33:17"},"returnParameters":{"id":3379,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3378,"mutability":"mutable","name":"result","nameLocation":"4476:6:17","nodeType":"VariableDeclaration","scope":3382,"src":"4468:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3377,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4468:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4467:16:17"},"scope":3395,"src":"4389:421:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3393,"nodeType":"Block","src":"4993:326:17","statements":[{"AST":{"nodeType":"YulBlock","src":"5028:285:17","statements":[{"nodeType":"YulVariableDeclaration","src":"5042:24:17","value":{"arguments":[{"name":"key","nodeType":"YulIdentifier","src":"5062:3:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5056:5:17"},"nodeType":"YulFunctionCall","src":"5056:10:17"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"5046:6:17","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5079:27:17","value":{"arguments":[{"name":"key","nodeType":"YulIdentifier","src":"5096:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"5101:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5092:3:17"},"nodeType":"YulFunctionCall","src":"5092:14:17"},"variables":[{"name":"begin","nodeType":"YulTypedName","src":"5083:5:17","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5119:29:17","value":{"arguments":[{"name":"begin","nodeType":"YulIdentifier","src":"5134:5:17"},{"name":"length","nodeType":"YulIdentifier","src":"5141:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5130:3:17"},"nodeType":"YulFunctionCall","src":"5130:18:17"},"variables":[{"name":"end","nodeType":"YulTypedName","src":"5123:3:17","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5161:23:17","value":{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"5180:3:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5174:5:17"},"nodeType":"YulFunctionCall","src":"5174:10:17"},"variables":[{"name":"cache","nodeType":"YulTypedName","src":"5165:5:17","type":""}]},{"expression":{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"5204:3:17"},{"name":"slot","nodeType":"YulIdentifier","src":"5209:4:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5197:6:17"},"nodeType":"YulFunctionCall","src":"5197:17:17"},"nodeType":"YulExpressionStatement","src":"5197:17:17"},{"nodeType":"YulAssignment","src":"5227:45:17","value":{"arguments":[{"name":"begin","nodeType":"YulIdentifier","src":"5247:5:17"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5258:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"5266:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5254:3:17"},"nodeType":"YulFunctionCall","src":"5254:17:17"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"5237:9:17"},"nodeType":"YulFunctionCall","src":"5237:35:17"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"5227:6:17"}]},{"expression":{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"5292:3:17"},{"name":"cache","nodeType":"YulIdentifier","src":"5297:5:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5285:6:17"},"nodeType":"YulFunctionCall","src":"5285:18:17"},"nodeType":"YulExpressionStatement","src":"5285:18:17"}]},"evmVersion":"paris","externalReferences":[{"declaration":3387,"isOffset":false,"isSlot":false,"src":"5062:3:17","valueSize":1},{"declaration":3387,"isOffset":false,"isSlot":false,"src":"5096:3:17","valueSize":1},{"declaration":3390,"isOffset":false,"isSlot":false,"src":"5227:6:17","valueSize":1},{"declaration":3385,"isOffset":false,"isSlot":false,"src":"5209:4:17","valueSize":1}],"flags":["memory-safe"],"id":3392,"nodeType":"InlineAssembly","src":"5003:310:17"}]},"documentation":{"id":3383,"nodeType":"StructuredDocumentation","src":"4816:78:17","text":" @dev Derive the location of a mapping element from the key."},"id":3394,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"4908:13:17","nodeType":"FunctionDefinition","parameters":{"id":3388,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3385,"mutability":"mutable","name":"slot","nameLocation":"4930:4:17","nodeType":"VariableDeclaration","scope":3394,"src":"4922:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3384,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4922:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3387,"mutability":"mutable","name":"key","nameLocation":"4949:3:17","nodeType":"VariableDeclaration","scope":3394,"src":"4936:16:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3386,"name":"bytes","nodeType":"ElementaryTypeName","src":"4936:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4921:32:17"},"returnParameters":{"id":3391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3390,"mutability":"mutable","name":"result","nameLocation":"4985:6:17","nodeType":"VariableDeclaration","scope":3394,"src":"4977:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3389,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4977:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4976:16:17"},"scope":3395,"src":"4899:420:17","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3396,"src":"1598:3723:17","usedErrors":[],"usedEvents":[]}],"src":"199:5123:17"},"id":17},"@openzeppelin/contracts/utils/StorageSlot.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","exportedSymbols":{"StorageSlot":[3519]},"id":3520,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3397,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"193:24:18"},{"abstract":false,"baseContracts":[],"canonicalName":"StorageSlot","contractDependencies":[],"contractKind":"library","documentation":{"id":3398,"nodeType":"StructuredDocumentation","src":"219:1187:18","text":" @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC-1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```\n TIP: Consider using this library along with {SlotDerivation}."},"fullyImplemented":true,"id":3519,"linearizedBaseContracts":[3519],"name":"StorageSlot","nameLocation":"1415:11:18","nodeType":"ContractDefinition","nodes":[{"canonicalName":"StorageSlot.AddressSlot","id":3401,"members":[{"constant":false,"id":3400,"mutability":"mutable","name":"value","nameLocation":"1470:5:18","nodeType":"VariableDeclaration","scope":3401,"src":"1462:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3399,"name":"address","nodeType":"ElementaryTypeName","src":"1462:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"AddressSlot","nameLocation":"1440:11:18","nodeType":"StructDefinition","scope":3519,"src":"1433:49:18","visibility":"public"},{"canonicalName":"StorageSlot.BooleanSlot","id":3404,"members":[{"constant":false,"id":3403,"mutability":"mutable","name":"value","nameLocation":"1522:5:18","nodeType":"VariableDeclaration","scope":3404,"src":"1517:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3402,"name":"bool","nodeType":"ElementaryTypeName","src":"1517:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"BooleanSlot","nameLocation":"1495:11:18","nodeType":"StructDefinition","scope":3519,"src":"1488:46:18","visibility":"public"},{"canonicalName":"StorageSlot.Bytes32Slot","id":3407,"members":[{"constant":false,"id":3406,"mutability":"mutable","name":"value","nameLocation":"1577:5:18","nodeType":"VariableDeclaration","scope":3407,"src":"1569:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3405,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1569:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"Bytes32Slot","nameLocation":"1547:11:18","nodeType":"StructDefinition","scope":3519,"src":"1540:49:18","visibility":"public"},{"canonicalName":"StorageSlot.Uint256Slot","id":3410,"members":[{"constant":false,"id":3409,"mutability":"mutable","name":"value","nameLocation":"1632:5:18","nodeType":"VariableDeclaration","scope":3410,"src":"1624:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3408,"name":"uint256","nodeType":"ElementaryTypeName","src":"1624:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Uint256Slot","nameLocation":"1602:11:18","nodeType":"StructDefinition","scope":3519,"src":"1595:49:18","visibility":"public"},{"canonicalName":"StorageSlot.Int256Slot","id":3413,"members":[{"constant":false,"id":3412,"mutability":"mutable","name":"value","nameLocation":"1685:5:18","nodeType":"VariableDeclaration","scope":3413,"src":"1678:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3411,"name":"int256","nodeType":"ElementaryTypeName","src":"1678:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"name":"Int256Slot","nameLocation":"1657:10:18","nodeType":"StructDefinition","scope":3519,"src":"1650:47:18","visibility":"public"},{"canonicalName":"StorageSlot.StringSlot","id":3416,"members":[{"constant":false,"id":3415,"mutability":"mutable","name":"value","nameLocation":"1738:5:18","nodeType":"VariableDeclaration","scope":3416,"src":"1731:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":3414,"name":"string","nodeType":"ElementaryTypeName","src":"1731:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"StringSlot","nameLocation":"1710:10:18","nodeType":"StructDefinition","scope":3519,"src":"1703:47:18","visibility":"public"},{"canonicalName":"StorageSlot.BytesSlot","id":3419,"members":[{"constant":false,"id":3418,"mutability":"mutable","name":"value","nameLocation":"1789:5:18","nodeType":"VariableDeclaration","scope":3419,"src":"1783:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":3417,"name":"bytes","nodeType":"ElementaryTypeName","src":"1783:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"BytesSlot","nameLocation":"1763:9:18","nodeType":"StructDefinition","scope":3519,"src":"1756:45:18","visibility":"public"},{"body":{"id":3429,"nodeType":"Block","src":"1983:79:18","statements":[{"AST":{"nodeType":"YulBlock","src":"2018:38:18","statements":[{"nodeType":"YulAssignment","src":"2032:14:18","value":{"name":"slot","nodeType":"YulIdentifier","src":"2042:4:18"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2032:6:18"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3426,"isOffset":false,"isSlot":true,"src":"2032:6:18","suffix":"slot","valueSize":1},{"declaration":3422,"isOffset":false,"isSlot":false,"src":"2042:4:18","valueSize":1}],"flags":["memory-safe"],"id":3428,"nodeType":"InlineAssembly","src":"1993:63:18"}]},"documentation":{"id":3420,"nodeType":"StructuredDocumentation","src":"1807:87:18","text":" @dev Returns an `AddressSlot` with member `value` located at `slot`."},"id":3430,"implemented":true,"kind":"function","modifiers":[],"name":"getAddressSlot","nameLocation":"1908:14:18","nodeType":"FunctionDefinition","parameters":{"id":3423,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3422,"mutability":"mutable","name":"slot","nameLocation":"1931:4:18","nodeType":"VariableDeclaration","scope":3430,"src":"1923:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3421,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1923:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1922:14:18"},"returnParameters":{"id":3427,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3426,"mutability":"mutable","name":"r","nameLocation":"1980:1:18","nodeType":"VariableDeclaration","scope":3430,"src":"1960:21:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$3401_storage_ptr","typeString":"struct StorageSlot.AddressSlot"},"typeName":{"id":3425,"nodeType":"UserDefinedTypeName","pathNode":{"id":3424,"name":"AddressSlot","nameLocations":["1960:11:18"],"nodeType":"IdentifierPath","referencedDeclaration":3401,"src":"1960:11:18"},"referencedDeclaration":3401,"src":"1960:11:18","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$3401_storage_ptr","typeString":"struct StorageSlot.AddressSlot"}},"visibility":"internal"}],"src":"1959:23:18"},"scope":3519,"src":"1899:163:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3440,"nodeType":"Block","src":"2243:79:18","statements":[{"AST":{"nodeType":"YulBlock","src":"2278:38:18","statements":[{"nodeType":"YulAssignment","src":"2292:14:18","value":{"name":"slot","nodeType":"YulIdentifier","src":"2302:4:18"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2292:6:18"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3437,"isOffset":false,"isSlot":true,"src":"2292:6:18","suffix":"slot","valueSize":1},{"declaration":3433,"isOffset":false,"isSlot":false,"src":"2302:4:18","valueSize":1}],"flags":["memory-safe"],"id":3439,"nodeType":"InlineAssembly","src":"2253:63:18"}]},"documentation":{"id":3431,"nodeType":"StructuredDocumentation","src":"2068:86:18","text":" @dev Returns a `BooleanSlot` with member `value` located at `slot`."},"id":3441,"implemented":true,"kind":"function","modifiers":[],"name":"getBooleanSlot","nameLocation":"2168:14:18","nodeType":"FunctionDefinition","parameters":{"id":3434,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3433,"mutability":"mutable","name":"slot","nameLocation":"2191:4:18","nodeType":"VariableDeclaration","scope":3441,"src":"2183:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3432,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2183:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2182:14:18"},"returnParameters":{"id":3438,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3437,"mutability":"mutable","name":"r","nameLocation":"2240:1:18","nodeType":"VariableDeclaration","scope":3441,"src":"2220:21:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$3404_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"},"typeName":{"id":3436,"nodeType":"UserDefinedTypeName","pathNode":{"id":3435,"name":"BooleanSlot","nameLocations":["2220:11:18"],"nodeType":"IdentifierPath","referencedDeclaration":3404,"src":"2220:11:18"},"referencedDeclaration":3404,"src":"2220:11:18","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$3404_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"}},"visibility":"internal"}],"src":"2219:23:18"},"scope":3519,"src":"2159:163:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3451,"nodeType":"Block","src":"2503:79:18","statements":[{"AST":{"nodeType":"YulBlock","src":"2538:38:18","statements":[{"nodeType":"YulAssignment","src":"2552:14:18","value":{"name":"slot","nodeType":"YulIdentifier","src":"2562:4:18"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2552:6:18"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3448,"isOffset":false,"isSlot":true,"src":"2552:6:18","suffix":"slot","valueSize":1},{"declaration":3444,"isOffset":false,"isSlot":false,"src":"2562:4:18","valueSize":1}],"flags":["memory-safe"],"id":3450,"nodeType":"InlineAssembly","src":"2513:63:18"}]},"documentation":{"id":3442,"nodeType":"StructuredDocumentation","src":"2328:86:18","text":" @dev Returns a `Bytes32Slot` with member `value` located at `slot`."},"id":3452,"implemented":true,"kind":"function","modifiers":[],"name":"getBytes32Slot","nameLocation":"2428:14:18","nodeType":"FunctionDefinition","parameters":{"id":3445,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3444,"mutability":"mutable","name":"slot","nameLocation":"2451:4:18","nodeType":"VariableDeclaration","scope":3452,"src":"2443:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3443,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2443:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2442:14:18"},"returnParameters":{"id":3449,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3448,"mutability":"mutable","name":"r","nameLocation":"2500:1:18","nodeType":"VariableDeclaration","scope":3452,"src":"2480:21:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$3407_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"},"typeName":{"id":3447,"nodeType":"UserDefinedTypeName","pathNode":{"id":3446,"name":"Bytes32Slot","nameLocations":["2480:11:18"],"nodeType":"IdentifierPath","referencedDeclaration":3407,"src":"2480:11:18"},"referencedDeclaration":3407,"src":"2480:11:18","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$3407_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"}},"visibility":"internal"}],"src":"2479:23:18"},"scope":3519,"src":"2419:163:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3462,"nodeType":"Block","src":"2763:79:18","statements":[{"AST":{"nodeType":"YulBlock","src":"2798:38:18","statements":[{"nodeType":"YulAssignment","src":"2812:14:18","value":{"name":"slot","nodeType":"YulIdentifier","src":"2822:4:18"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2812:6:18"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3459,"isOffset":false,"isSlot":true,"src":"2812:6:18","suffix":"slot","valueSize":1},{"declaration":3455,"isOffset":false,"isSlot":false,"src":"2822:4:18","valueSize":1}],"flags":["memory-safe"],"id":3461,"nodeType":"InlineAssembly","src":"2773:63:18"}]},"documentation":{"id":3453,"nodeType":"StructuredDocumentation","src":"2588:86:18","text":" @dev Returns a `Uint256Slot` with member `value` located at `slot`."},"id":3463,"implemented":true,"kind":"function","modifiers":[],"name":"getUint256Slot","nameLocation":"2688:14:18","nodeType":"FunctionDefinition","parameters":{"id":3456,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3455,"mutability":"mutable","name":"slot","nameLocation":"2711:4:18","nodeType":"VariableDeclaration","scope":3463,"src":"2703:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3454,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2703:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2702:14:18"},"returnParameters":{"id":3460,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3459,"mutability":"mutable","name":"r","nameLocation":"2760:1:18","nodeType":"VariableDeclaration","scope":3463,"src":"2740:21:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$3410_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"},"typeName":{"id":3458,"nodeType":"UserDefinedTypeName","pathNode":{"id":3457,"name":"Uint256Slot","nameLocations":["2740:11:18"],"nodeType":"IdentifierPath","referencedDeclaration":3410,"src":"2740:11:18"},"referencedDeclaration":3410,"src":"2740:11:18","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$3410_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"}},"visibility":"internal"}],"src":"2739:23:18"},"scope":3519,"src":"2679:163:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3473,"nodeType":"Block","src":"3020:79:18","statements":[{"AST":{"nodeType":"YulBlock","src":"3055:38:18","statements":[{"nodeType":"YulAssignment","src":"3069:14:18","value":{"name":"slot","nodeType":"YulIdentifier","src":"3079:4:18"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3069:6:18"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3470,"isOffset":false,"isSlot":true,"src":"3069:6:18","suffix":"slot","valueSize":1},{"declaration":3466,"isOffset":false,"isSlot":false,"src":"3079:4:18","valueSize":1}],"flags":["memory-safe"],"id":3472,"nodeType":"InlineAssembly","src":"3030:63:18"}]},"documentation":{"id":3464,"nodeType":"StructuredDocumentation","src":"2848:85:18","text":" @dev Returns a `Int256Slot` with member `value` located at `slot`."},"id":3474,"implemented":true,"kind":"function","modifiers":[],"name":"getInt256Slot","nameLocation":"2947:13:18","nodeType":"FunctionDefinition","parameters":{"id":3467,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3466,"mutability":"mutable","name":"slot","nameLocation":"2969:4:18","nodeType":"VariableDeclaration","scope":3474,"src":"2961:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3465,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2961:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2960:14:18"},"returnParameters":{"id":3471,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3470,"mutability":"mutable","name":"r","nameLocation":"3017:1:18","nodeType":"VariableDeclaration","scope":3474,"src":"2998:20:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Int256Slot_$3413_storage_ptr","typeString":"struct StorageSlot.Int256Slot"},"typeName":{"id":3469,"nodeType":"UserDefinedTypeName","pathNode":{"id":3468,"name":"Int256Slot","nameLocations":["2998:10:18"],"nodeType":"IdentifierPath","referencedDeclaration":3413,"src":"2998:10:18"},"referencedDeclaration":3413,"src":"2998:10:18","typeDescriptions":{"typeIdentifier":"t_struct$_Int256Slot_$3413_storage_ptr","typeString":"struct StorageSlot.Int256Slot"}},"visibility":"internal"}],"src":"2997:22:18"},"scope":3519,"src":"2938:161:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3484,"nodeType":"Block","src":"3277:79:18","statements":[{"AST":{"nodeType":"YulBlock","src":"3312:38:18","statements":[{"nodeType":"YulAssignment","src":"3326:14:18","value":{"name":"slot","nodeType":"YulIdentifier","src":"3336:4:18"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3326:6:18"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3481,"isOffset":false,"isSlot":true,"src":"3326:6:18","suffix":"slot","valueSize":1},{"declaration":3477,"isOffset":false,"isSlot":false,"src":"3336:4:18","valueSize":1}],"flags":["memory-safe"],"id":3483,"nodeType":"InlineAssembly","src":"3287:63:18"}]},"documentation":{"id":3475,"nodeType":"StructuredDocumentation","src":"3105:85:18","text":" @dev Returns a `StringSlot` with member `value` located at `slot`."},"id":3485,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3204:13:18","nodeType":"FunctionDefinition","parameters":{"id":3478,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3477,"mutability":"mutable","name":"slot","nameLocation":"3226:4:18","nodeType":"VariableDeclaration","scope":3485,"src":"3218:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3476,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3218:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3217:14:18"},"returnParameters":{"id":3482,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3481,"mutability":"mutable","name":"r","nameLocation":"3274:1:18","nodeType":"VariableDeclaration","scope":3485,"src":"3255:20:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$3416_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":3480,"nodeType":"UserDefinedTypeName","pathNode":{"id":3479,"name":"StringSlot","nameLocations":["3255:10:18"],"nodeType":"IdentifierPath","referencedDeclaration":3416,"src":"3255:10:18"},"referencedDeclaration":3416,"src":"3255:10:18","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$3416_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3254:22:18"},"scope":3519,"src":"3195:161:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3495,"nodeType":"Block","src":"3558:85:18","statements":[{"AST":{"nodeType":"YulBlock","src":"3593:44:18","statements":[{"nodeType":"YulAssignment","src":"3607:20:18","value":{"name":"store.slot","nodeType":"YulIdentifier","src":"3617:10:18"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3607:6:18"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3492,"isOffset":false,"isSlot":true,"src":"3607:6:18","suffix":"slot","valueSize":1},{"declaration":3488,"isOffset":false,"isSlot":true,"src":"3617:10:18","suffix":"slot","valueSize":1}],"flags":["memory-safe"],"id":3494,"nodeType":"InlineAssembly","src":"3568:69:18"}]},"documentation":{"id":3486,"nodeType":"StructuredDocumentation","src":"3362:101:18","text":" @dev Returns an `StringSlot` representation of the string storage pointer `store`."},"id":3496,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3477:13:18","nodeType":"FunctionDefinition","parameters":{"id":3489,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3488,"mutability":"mutable","name":"store","nameLocation":"3506:5:18","nodeType":"VariableDeclaration","scope":3496,"src":"3491:20:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":3487,"name":"string","nodeType":"ElementaryTypeName","src":"3491:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3490:22:18"},"returnParameters":{"id":3493,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3492,"mutability":"mutable","name":"r","nameLocation":"3555:1:18","nodeType":"VariableDeclaration","scope":3496,"src":"3536:20:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$3416_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":3491,"nodeType":"UserDefinedTypeName","pathNode":{"id":3490,"name":"StringSlot","nameLocations":["3536:10:18"],"nodeType":"IdentifierPath","referencedDeclaration":3416,"src":"3536:10:18"},"referencedDeclaration":3416,"src":"3536:10:18","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$3416_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3535:22:18"},"scope":3519,"src":"3468:175:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3506,"nodeType":"Block","src":"3818:79:18","statements":[{"AST":{"nodeType":"YulBlock","src":"3853:38:18","statements":[{"nodeType":"YulAssignment","src":"3867:14:18","value":{"name":"slot","nodeType":"YulIdentifier","src":"3877:4:18"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3867:6:18"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3503,"isOffset":false,"isSlot":true,"src":"3867:6:18","suffix":"slot","valueSize":1},{"declaration":3499,"isOffset":false,"isSlot":false,"src":"3877:4:18","valueSize":1}],"flags":["memory-safe"],"id":3505,"nodeType":"InlineAssembly","src":"3828:63:18"}]},"documentation":{"id":3497,"nodeType":"StructuredDocumentation","src":"3649:84:18","text":" @dev Returns a `BytesSlot` with member `value` located at `slot`."},"id":3507,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3747:12:18","nodeType":"FunctionDefinition","parameters":{"id":3500,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3499,"mutability":"mutable","name":"slot","nameLocation":"3768:4:18","nodeType":"VariableDeclaration","scope":3507,"src":"3760:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3498,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3760:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3759:14:18"},"returnParameters":{"id":3504,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3503,"mutability":"mutable","name":"r","nameLocation":"3815:1:18","nodeType":"VariableDeclaration","scope":3507,"src":"3797:19:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$3419_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":3502,"nodeType":"UserDefinedTypeName","pathNode":{"id":3501,"name":"BytesSlot","nameLocations":["3797:9:18"],"nodeType":"IdentifierPath","referencedDeclaration":3419,"src":"3797:9:18"},"referencedDeclaration":3419,"src":"3797:9:18","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$3419_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3796:21:18"},"scope":3519,"src":"3738:159:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3517,"nodeType":"Block","src":"4094:85:18","statements":[{"AST":{"nodeType":"YulBlock","src":"4129:44:18","statements":[{"nodeType":"YulAssignment","src":"4143:20:18","value":{"name":"store.slot","nodeType":"YulIdentifier","src":"4153:10:18"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"4143:6:18"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3514,"isOffset":false,"isSlot":true,"src":"4143:6:18","suffix":"slot","valueSize":1},{"declaration":3510,"isOffset":false,"isSlot":true,"src":"4153:10:18","suffix":"slot","valueSize":1}],"flags":["memory-safe"],"id":3516,"nodeType":"InlineAssembly","src":"4104:69:18"}]},"documentation":{"id":3508,"nodeType":"StructuredDocumentation","src":"3903:99:18","text":" @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."},"id":3518,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"4016:12:18","nodeType":"FunctionDefinition","parameters":{"id":3511,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3510,"mutability":"mutable","name":"store","nameLocation":"4043:5:18","nodeType":"VariableDeclaration","scope":3518,"src":"4029:19:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":3509,"name":"bytes","nodeType":"ElementaryTypeName","src":"4029:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4028:21:18"},"returnParameters":{"id":3515,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3514,"mutability":"mutable","name":"r","nameLocation":"4091:1:18","nodeType":"VariableDeclaration","scope":3518,"src":"4073:19:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$3419_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":3513,"nodeType":"UserDefinedTypeName","pathNode":{"id":3512,"name":"BytesSlot","nameLocations":["4073:9:18"],"nodeType":"IdentifierPath","referencedDeclaration":3419,"src":"4073:9:18"},"referencedDeclaration":3419,"src":"4073:9:18","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$3419_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"4072:21:18"},"scope":3519,"src":"4007:172:18","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3520,"src":"1407:2774:18","usedErrors":[],"usedEvents":[]}],"src":"193:3989:18"},"id":18},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[6361],"SafeCast":[8126],"SignedMath":[8270],"Strings":[4719]},"id":4720,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3521,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:19"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":3523,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4720,"sourceUnit":6362,"src":"127:37:19","symbolAliases":[{"foreign":{"id":3522,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6361,"src":"135:4:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./math/SafeCast.sol","id":3525,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4720,"sourceUnit":8127,"src":"165:45:19","symbolAliases":[{"foreign":{"id":3524,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8126,"src":"173:8:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":3527,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4720,"sourceUnit":8271,"src":"211:49:19","symbolAliases":[{"foreign":{"id":3526,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8270,"src":"219:10:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":3528,"nodeType":"StructuredDocumentation","src":"262:34:19","text":" @dev String operations."},"fullyImplemented":true,"id":4719,"linearizedBaseContracts":[4719],"name":"Strings","nameLocation":"305:7:19","nodeType":"ContractDefinition","nodes":[{"global":false,"id":3530,"libraryName":{"id":3529,"name":"SafeCast","nameLocations":["325:8:19"],"nodeType":"IdentifierPath","referencedDeclaration":8126,"src":"325:8:19"},"nodeType":"UsingForDirective","src":"319:21:19"},{"constant":true,"id":3533,"mutability":"constant","name":"HEX_DIGITS","nameLocation":"371:10:19","nodeType":"VariableDeclaration","scope":4719,"src":"346:56:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":3531,"name":"bytes16","nodeType":"ElementaryTypeName","src":"346:7:19","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":3532,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"384:18:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":3536,"mutability":"constant","name":"ADDRESS_LENGTH","nameLocation":"431:14:19","nodeType":"VariableDeclaration","scope":4719,"src":"408:42:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3534,"name":"uint8","nodeType":"ElementaryTypeName","src":"408:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":3535,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"448:2:19","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"documentation":{"id":3537,"nodeType":"StructuredDocumentation","src":"457:81:19","text":" @dev The `value` string doesn't fit in the specified `length`."},"errorSelector":"e22e27eb","id":3543,"name":"StringsInsufficientHexLength","nameLocation":"549:28:19","nodeType":"ErrorDefinition","parameters":{"id":3542,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3539,"mutability":"mutable","name":"value","nameLocation":"586:5:19","nodeType":"VariableDeclaration","scope":3543,"src":"578:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3538,"name":"uint256","nodeType":"ElementaryTypeName","src":"578:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3541,"mutability":"mutable","name":"length","nameLocation":"601:6:19","nodeType":"VariableDeclaration","scope":3543,"src":"593:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3540,"name":"uint256","nodeType":"ElementaryTypeName","src":"593:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"577:31:19"},"src":"543:66:19"},{"documentation":{"id":3544,"nodeType":"StructuredDocumentation","src":"615:108:19","text":" @dev The string being parsed contains characters that are not in scope of the given base."},"errorSelector":"94e2737e","id":3546,"name":"StringsInvalidChar","nameLocation":"734:18:19","nodeType":"ErrorDefinition","parameters":{"id":3545,"nodeType":"ParameterList","parameters":[],"src":"752:2:19"},"src":"728:27:19"},{"documentation":{"id":3547,"nodeType":"StructuredDocumentation","src":"761:84:19","text":" @dev The string being parsed is not a properly formatted address."},"errorSelector":"1d15ae44","id":3549,"name":"StringsInvalidAddressFormat","nameLocation":"856:27:19","nodeType":"ErrorDefinition","parameters":{"id":3548,"nodeType":"ParameterList","parameters":[],"src":"883:2:19"},"src":"850:36:19"},{"body":{"id":3596,"nodeType":"Block","src":"1058:561:19","statements":[{"id":3595,"nodeType":"UncheckedBlock","src":"1068:545:19","statements":[{"assignments":[3558],"declarations":[{"constant":false,"id":3558,"mutability":"mutable","name":"length","nameLocation":"1100:6:19","nodeType":"VariableDeclaration","scope":3595,"src":"1092:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3557,"name":"uint256","nodeType":"ElementaryTypeName","src":"1092:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3565,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3561,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3552,"src":"1120:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3559,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6361,"src":"1109:4:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$6361_$","typeString":"type(library Math)"}},"id":3560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1114:5:19","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":6133,"src":"1109:10:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3562,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1109:17:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3563,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1129:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1109:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1092:38:19"},{"assignments":[3567],"declarations":[{"constant":false,"id":3567,"mutability":"mutable","name":"buffer","nameLocation":"1158:6:19","nodeType":"VariableDeclaration","scope":3595,"src":"1144:20:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3566,"name":"string","nodeType":"ElementaryTypeName","src":"1144:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":3572,"initialValue":{"arguments":[{"id":3570,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3558,"src":"1178:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3569,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1167:10:19","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":3568,"name":"string","nodeType":"ElementaryTypeName","src":"1171:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":3571,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1167:18:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"1144:41:19"},{"assignments":[3574],"declarations":[{"constant":false,"id":3574,"mutability":"mutable","name":"ptr","nameLocation":"1207:3:19","nodeType":"VariableDeclaration","scope":3595,"src":"1199:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3573,"name":"uint256","nodeType":"ElementaryTypeName","src":"1199:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3575,"nodeType":"VariableDeclarationStatement","src":"1199:11:19"},{"AST":{"nodeType":"YulBlock","src":"1249:67:19","statements":[{"nodeType":"YulAssignment","src":"1267:35:19","value":{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"1278:6:19"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1290:2:19","type":"","value":"32"},{"name":"length","nodeType":"YulIdentifier","src":"1294:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1286:3:19"},"nodeType":"YulFunctionCall","src":"1286:15:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1274:3:19"},"nodeType":"YulFunctionCall","src":"1274:28:19"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"1267:3:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3567,"isOffset":false,"isSlot":false,"src":"1278:6:19","valueSize":1},{"declaration":3558,"isOffset":false,"isSlot":false,"src":"1294:6:19","valueSize":1},{"declaration":3574,"isOffset":false,"isSlot":false,"src":"1267:3:19","valueSize":1}],"flags":["memory-safe"],"id":3576,"nodeType":"InlineAssembly","src":"1224:92:19"},{"body":{"id":3591,"nodeType":"Block","src":"1342:234:19","statements":[{"expression":{"id":3579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"1360:5:19","subExpression":{"id":3578,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3574,"src":"1360:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3580,"nodeType":"ExpressionStatement","src":"1360:5:19"},{"AST":{"nodeType":"YulBlock","src":"1408:86:19","statements":[{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"1438:3:19"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1452:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"1459:2:19","type":"","value":"10"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"1448:3:19"},"nodeType":"YulFunctionCall","src":"1448:14:19"},{"name":"HEX_DIGITS","nodeType":"YulIdentifier","src":"1464:10:19"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"1443:4:19"},"nodeType":"YulFunctionCall","src":"1443:32:19"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"1430:7:19"},"nodeType":"YulFunctionCall","src":"1430:46:19"},"nodeType":"YulExpressionStatement","src":"1430:46:19"}]},"evmVersion":"paris","externalReferences":[{"declaration":3533,"isOffset":false,"isSlot":false,"src":"1464:10:19","valueSize":1},{"declaration":3574,"isOffset":false,"isSlot":false,"src":"1438:3:19","valueSize":1},{"declaration":3552,"isOffset":false,"isSlot":false,"src":"1452:5:19","valueSize":1}],"flags":["memory-safe"],"id":3581,"nodeType":"InlineAssembly","src":"1383:111:19"},{"expression":{"id":3584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3582,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3552,"src":"1511:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":3583,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1520:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1511:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3585,"nodeType":"ExpressionStatement","src":"1511:11:19"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3586,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3552,"src":"1544:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3587,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1553:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1544:10:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3590,"nodeType":"IfStatement","src":"1540:21:19","trueBody":{"id":3589,"nodeType":"Break","src":"1556:5:19"}}]},"condition":{"hexValue":"74727565","id":3577,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1336:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":3592,"nodeType":"WhileStatement","src":"1329:247:19"},{"expression":{"id":3593,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3567,"src":"1596:6:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3556,"id":3594,"nodeType":"Return","src":"1589:13:19"}]}]},"documentation":{"id":3550,"nodeType":"StructuredDocumentation","src":"892:90:19","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":3597,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"996:8:19","nodeType":"FunctionDefinition","parameters":{"id":3553,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3552,"mutability":"mutable","name":"value","nameLocation":"1013:5:19","nodeType":"VariableDeclaration","scope":3597,"src":"1005:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3551,"name":"uint256","nodeType":"ElementaryTypeName","src":"1005:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1004:15:19"},"returnParameters":{"id":3556,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3555,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3597,"src":"1043:13:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3554,"name":"string","nodeType":"ElementaryTypeName","src":"1043:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1042:15:19"},"scope":4719,"src":"987:632:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3622,"nodeType":"Block","src":"1795:92:19","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3608,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3600,"src":"1826:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":3609,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1834:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1826:9:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":3612,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1844:2:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":3613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1826:20:19","trueExpression":{"hexValue":"2d","id":3611,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1838:3:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":3617,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3600,"src":"1872:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":3615,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8270,"src":"1857:10:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$8270_$","typeString":"type(library SignedMath)"}},"id":3616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1868:3:19","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":8269,"src":"1857:14:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":3618,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1857:21:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3614,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3597,"src":"1848:8:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":3619,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1848:31:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":3606,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1812:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":3605,"name":"string","nodeType":"ElementaryTypeName","src":"1812:6:19","typeDescriptions":{}}},"id":3607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1819:6:19","memberName":"concat","nodeType":"MemberAccess","src":"1812:13:19","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":3620,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1812:68:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3604,"id":3621,"nodeType":"Return","src":"1805:75:19"}]},"documentation":{"id":3598,"nodeType":"StructuredDocumentation","src":"1625:89:19","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":3623,"implemented":true,"kind":"function","modifiers":[],"name":"toStringSigned","nameLocation":"1728:14:19","nodeType":"FunctionDefinition","parameters":{"id":3601,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3600,"mutability":"mutable","name":"value","nameLocation":"1750:5:19","nodeType":"VariableDeclaration","scope":3623,"src":"1743:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3599,"name":"int256","nodeType":"ElementaryTypeName","src":"1743:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1742:14:19"},"returnParameters":{"id":3604,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3603,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3623,"src":"1780:13:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3602,"name":"string","nodeType":"ElementaryTypeName","src":"1780:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1779:15:19"},"scope":4719,"src":"1719:168:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3642,"nodeType":"Block","src":"2066:100:19","statements":[{"id":3641,"nodeType":"UncheckedBlock","src":"2076:84:19","statements":[{"expression":{"arguments":[{"id":3632,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3626,"src":"2119:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3638,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3635,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3626,"src":"2138:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3633,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6361,"src":"2126:4:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$6361_$","typeString":"type(library Math)"}},"id":3634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2131:6:19","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":6304,"src":"2126:11:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3636,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2126:18:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3637,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2147:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2126:22:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3631,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[3643,3726,3746],"referencedDeclaration":3726,"src":"2107:11:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":3639,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2107:42:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3630,"id":3640,"nodeType":"Return","src":"2100:49:19"}]}]},"documentation":{"id":3624,"nodeType":"StructuredDocumentation","src":"1893:94:19","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":3643,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2001:11:19","nodeType":"FunctionDefinition","parameters":{"id":3627,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3626,"mutability":"mutable","name":"value","nameLocation":"2021:5:19","nodeType":"VariableDeclaration","scope":3643,"src":"2013:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3625,"name":"uint256","nodeType":"ElementaryTypeName","src":"2013:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2012:15:19"},"returnParameters":{"id":3630,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3629,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3643,"src":"2051:13:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3628,"name":"string","nodeType":"ElementaryTypeName","src":"2051:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2050:15:19"},"scope":4719,"src":"1992:174:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3725,"nodeType":"Block","src":"2379:435:19","statements":[{"assignments":[3654],"declarations":[{"constant":false,"id":3654,"mutability":"mutable","name":"localValue","nameLocation":"2397:10:19","nodeType":"VariableDeclaration","scope":3725,"src":"2389:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3653,"name":"uint256","nodeType":"ElementaryTypeName","src":"2389:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3656,"initialValue":{"id":3655,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3646,"src":"2410:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2389:26:19"},{"assignments":[3658],"declarations":[{"constant":false,"id":3658,"mutability":"mutable","name":"buffer","nameLocation":"2438:6:19","nodeType":"VariableDeclaration","scope":3725,"src":"2425:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3657,"name":"bytes","nodeType":"ElementaryTypeName","src":"2425:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3667,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3661,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2457:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3662,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3648,"src":"2461:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2457:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":3664,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2470:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2457:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3660,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2447:9:19","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":3659,"name":"bytes","nodeType":"ElementaryTypeName","src":"2451:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":3666,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2447:25:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2425:47:19"},{"expression":{"id":3672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3668,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3658,"src":"2482:6:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3670,"indexExpression":{"hexValue":"30","id":3669,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2489:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2482:9:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":3671,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2494:3:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"2482:15:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3673,"nodeType":"ExpressionStatement","src":"2482:15:19"},{"expression":{"id":3678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3674,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3658,"src":"2507:6:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3676,"indexExpression":{"hexValue":"31","id":3675,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2514:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2507:9:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":3677,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2519:3:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2507:15:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3679,"nodeType":"ExpressionStatement","src":"2507:15:19"},{"body":{"id":3708,"nodeType":"Block","src":"2577:95:19","statements":[{"expression":{"id":3702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3694,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3658,"src":"2591:6:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3696,"indexExpression":{"id":3695,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3681,"src":"2598:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2591:9:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":3697,"name":"HEX_DIGITS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3533,"src":"2603:10:19","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":3701,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3698,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3654,"src":"2614:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":3699,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2627:3:19","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2614:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2603:28:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2591:40:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3703,"nodeType":"ExpressionStatement","src":"2591:40:19"},{"expression":{"id":3706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3704,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3654,"src":"2645:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":3705,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2660:1:19","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2645:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3707,"nodeType":"ExpressionStatement","src":"2645:16:19"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3688,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3681,"src":"2565:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":3689,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2569:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2565:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3709,"initializationExpression":{"assignments":[3681],"declarations":[{"constant":false,"id":3681,"mutability":"mutable","name":"i","nameLocation":"2545:1:19","nodeType":"VariableDeclaration","scope":3709,"src":"2537:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3680,"name":"uint256","nodeType":"ElementaryTypeName","src":"2537:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3687,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3682,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2549:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3683,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3648,"src":"2553:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2549:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3685,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2562:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2549:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2537:26:19"},"loopExpression":{"expression":{"id":3692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2572:3:19","subExpression":{"id":3691,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3681,"src":"2574:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3693,"nodeType":"ExpressionStatement","src":"2572:3:19"},"nodeType":"ForStatement","src":"2532:140:19"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3710,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3654,"src":"2685:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3711,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2699:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2685:15:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3719,"nodeType":"IfStatement","src":"2681:96:19","trueBody":{"id":3718,"nodeType":"Block","src":"2702:75:19","statements":[{"errorCall":{"arguments":[{"id":3714,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3646,"src":"2752:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3715,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3648,"src":"2759:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3713,"name":"StringsInsufficientHexLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3543,"src":"2723:28:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":3716,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2723:43:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3717,"nodeType":"RevertStatement","src":"2716:50:19"}]}},{"expression":{"arguments":[{"id":3722,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3658,"src":"2800:6:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3721,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2793:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":3720,"name":"string","nodeType":"ElementaryTypeName","src":"2793:6:19","typeDescriptions":{}}},"id":3723,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2793:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3652,"id":3724,"nodeType":"Return","src":"2786:21:19"}]},"documentation":{"id":3644,"nodeType":"StructuredDocumentation","src":"2172:112:19","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":3726,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2298:11:19","nodeType":"FunctionDefinition","parameters":{"id":3649,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3646,"mutability":"mutable","name":"value","nameLocation":"2318:5:19","nodeType":"VariableDeclaration","scope":3726,"src":"2310:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3645,"name":"uint256","nodeType":"ElementaryTypeName","src":"2310:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3648,"mutability":"mutable","name":"length","nameLocation":"2333:6:19","nodeType":"VariableDeclaration","scope":3726,"src":"2325:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3647,"name":"uint256","nodeType":"ElementaryTypeName","src":"2325:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2309:31:19"},"returnParameters":{"id":3652,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3651,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3726,"src":"2364:13:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3650,"name":"string","nodeType":"ElementaryTypeName","src":"2364:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2363:15:19"},"scope":4719,"src":"2289:525:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3745,"nodeType":"Block","src":"3046:75:19","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":3739,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3729,"src":"3091:4:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3738,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3083:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":3737,"name":"uint160","nodeType":"ElementaryTypeName","src":"3083:7:19","typeDescriptions":{}}},"id":3740,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3083:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":3736,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3075:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3735,"name":"uint256","nodeType":"ElementaryTypeName","src":"3075:7:19","typeDescriptions":{}}},"id":3741,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3075:22:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3742,"name":"ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3536,"src":"3099:14:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":3734,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[3643,3726,3746],"referencedDeclaration":3726,"src":"3063:11:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":3743,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3063:51:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3733,"id":3744,"nodeType":"Return","src":"3056:58:19"}]},"documentation":{"id":3727,"nodeType":"StructuredDocumentation","src":"2820:148:19","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."},"id":3746,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2982:11:19","nodeType":"FunctionDefinition","parameters":{"id":3730,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3729,"mutability":"mutable","name":"addr","nameLocation":"3002:4:19","nodeType":"VariableDeclaration","scope":3746,"src":"2994:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3728,"name":"address","nodeType":"ElementaryTypeName","src":"2994:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2993:14:19"},"returnParameters":{"id":3733,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3732,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3746,"src":"3031:13:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3731,"name":"string","nodeType":"ElementaryTypeName","src":"3031:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3030:15:19"},"scope":4719,"src":"2973:148:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3810,"nodeType":"Block","src":"3378:642:19","statements":[{"assignments":[3755],"declarations":[{"constant":false,"id":3755,"mutability":"mutable","name":"buffer","nameLocation":"3401:6:19","nodeType":"VariableDeclaration","scope":3810,"src":"3388:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3754,"name":"bytes","nodeType":"ElementaryTypeName","src":"3388:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3762,"initialValue":{"arguments":[{"arguments":[{"id":3759,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3749,"src":"3428:4:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3758,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[3643,3726,3746],"referencedDeclaration":3746,"src":"3416:11:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$","typeString":"function (address) pure returns (string memory)"}},"id":3760,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3416:17:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3757,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3410:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3756,"name":"bytes","nodeType":"ElementaryTypeName","src":"3410:5:19","typeDescriptions":{}}},"id":3761,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3410:24:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3388:46:19"},{"assignments":[3764],"declarations":[{"constant":false,"id":3764,"mutability":"mutable","name":"hashValue","nameLocation":"3527:9:19","nodeType":"VariableDeclaration","scope":3810,"src":"3519:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3763,"name":"uint256","nodeType":"ElementaryTypeName","src":"3519:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3765,"nodeType":"VariableDeclarationStatement","src":"3519:17:19"},{"AST":{"nodeType":"YulBlock","src":"3571:78:19","statements":[{"nodeType":"YulAssignment","src":"3585:54:19","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3602:2:19","type":"","value":"96"},{"arguments":[{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"3620:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"3628:4:19","type":"","value":"0x22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3616:3:19"},"nodeType":"YulFunctionCall","src":"3616:17:19"},{"kind":"number","nodeType":"YulLiteral","src":"3635:2:19","type":"","value":"40"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"3606:9:19"},"nodeType":"YulFunctionCall","src":"3606:32:19"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"3598:3:19"},"nodeType":"YulFunctionCall","src":"3598:41:19"},"variableNames":[{"name":"hashValue","nodeType":"YulIdentifier","src":"3585:9:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3755,"isOffset":false,"isSlot":false,"src":"3620:6:19","valueSize":1},{"declaration":3764,"isOffset":false,"isSlot":false,"src":"3585:9:19","valueSize":1}],"flags":["memory-safe"],"id":3766,"nodeType":"InlineAssembly","src":"3546:103:19"},{"body":{"id":3803,"nodeType":"Block","src":"3692:291:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3777,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3764,"src":"3798:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":3778,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3810:3:19","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"3798:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"37","id":3780,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3816:1:19","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"3798:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"baseExpression":{"id":3784,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3755,"src":"3827:6:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3786,"indexExpression":{"id":3785,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3768,"src":"3834:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3827:9:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":3783,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3821:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3782,"name":"uint8","nodeType":"ElementaryTypeName","src":"3821:5:19","typeDescriptions":{}}},"id":3787,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3821:16:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":3788,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3840:2:19","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"3821:21:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3798:44:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3798,"nodeType":"IfStatement","src":"3794:150:19","trueBody":{"id":3797,"nodeType":"Block","src":"3844:100:19","statements":[{"expression":{"id":3795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3791,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3755,"src":"3912:6:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3793,"indexExpression":{"id":3792,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3768,"src":"3919:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3912:9:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"^=","rightHandSide":{"hexValue":"30783230","id":3794,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3925:4:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"3912:17:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3796,"nodeType":"ExpressionStatement","src":"3912:17:19"}]}},{"expression":{"id":3801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3799,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3764,"src":"3957:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":3800,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3971:1:19","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"3957:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3802,"nodeType":"ExpressionStatement","src":"3957:15:19"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3771,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3768,"src":"3680:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":3772,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3684:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3680:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3804,"initializationExpression":{"assignments":[3768],"declarations":[{"constant":false,"id":3768,"mutability":"mutable","name":"i","nameLocation":"3672:1:19","nodeType":"VariableDeclaration","scope":3804,"src":"3664:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3767,"name":"uint256","nodeType":"ElementaryTypeName","src":"3664:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3770,"initialValue":{"hexValue":"3431","id":3769,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3676:2:19","typeDescriptions":{"typeIdentifier":"t_rational_41_by_1","typeString":"int_const 41"},"value":"41"},"nodeType":"VariableDeclarationStatement","src":"3664:14:19"},"loopExpression":{"expression":{"id":3775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"3687:3:19","subExpression":{"id":3774,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3768,"src":"3689:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3776,"nodeType":"ExpressionStatement","src":"3687:3:19"},"nodeType":"ForStatement","src":"3659:324:19"},{"expression":{"arguments":[{"id":3807,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3755,"src":"4006:6:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3806,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3999:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":3805,"name":"string","nodeType":"ElementaryTypeName","src":"3999:6:19","typeDescriptions":{}}},"id":3808,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3999:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3753,"id":3809,"nodeType":"Return","src":"3992:21:19"}]},"documentation":{"id":3747,"nodeType":"StructuredDocumentation","src":"3127:165:19","text":" @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n representation, according to EIP-55."},"id":3811,"implemented":true,"kind":"function","modifiers":[],"name":"toChecksumHexString","nameLocation":"3306:19:19","nodeType":"FunctionDefinition","parameters":{"id":3750,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3749,"mutability":"mutable","name":"addr","nameLocation":"3334:4:19","nodeType":"VariableDeclaration","scope":3811,"src":"3326:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3748,"name":"address","nodeType":"ElementaryTypeName","src":"3326:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3325:14:19"},"returnParameters":{"id":3753,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3752,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3811,"src":"3363:13:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3751,"name":"string","nodeType":"ElementaryTypeName","src":"3363:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3362:15:19"},"scope":4719,"src":"3297:723:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3847,"nodeType":"Block","src":"4175:104:19","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":3823,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3814,"src":"4198:1:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3822,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4192:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3821,"name":"bytes","nodeType":"ElementaryTypeName","src":"4192:5:19","typeDescriptions":{}}},"id":3824,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4192:8:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4201:6:19","memberName":"length","nodeType":"MemberAccess","src":"4192:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":3828,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3816,"src":"4217:1:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3827,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4211:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3826,"name":"bytes","nodeType":"ElementaryTypeName","src":"4211:5:19","typeDescriptions":{}}},"id":3829,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4211:8:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4220:6:19","memberName":"length","nodeType":"MemberAccess","src":"4211:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4192:34:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":3844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":3835,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3814,"src":"4246:1:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3834,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4240:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3833,"name":"bytes","nodeType":"ElementaryTypeName","src":"4240:5:19","typeDescriptions":{}}},"id":3836,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4240:8:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3832,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4230:9:19","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3837,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4230:19:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":3841,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3816,"src":"4269:1:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3840,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4263:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3839,"name":"bytes","nodeType":"ElementaryTypeName","src":"4263:5:19","typeDescriptions":{}}},"id":3842,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4263:8:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3838,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4253:9:19","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3843,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4253:19:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4230:42:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4192:80:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3820,"id":3846,"nodeType":"Return","src":"4185:87:19"}]},"documentation":{"id":3812,"nodeType":"StructuredDocumentation","src":"4026:66:19","text":" @dev Returns true if the two strings are equal."},"id":3848,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"4106:5:19","nodeType":"FunctionDefinition","parameters":{"id":3817,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3814,"mutability":"mutable","name":"a","nameLocation":"4126:1:19","nodeType":"VariableDeclaration","scope":3848,"src":"4112:15:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3813,"name":"string","nodeType":"ElementaryTypeName","src":"4112:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3816,"mutability":"mutable","name":"b","nameLocation":"4143:1:19","nodeType":"VariableDeclaration","scope":3848,"src":"4129:15:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3815,"name":"string","nodeType":"ElementaryTypeName","src":"4129:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4111:34:19"},"returnParameters":{"id":3820,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3819,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3848,"src":"4169:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3818,"name":"bool","nodeType":"ElementaryTypeName","src":"4169:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4168:6:19"},"scope":4719,"src":"4097:182:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3866,"nodeType":"Block","src":"4576:64:19","statements":[{"expression":{"arguments":[{"id":3857,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3851,"src":"4603:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":3858,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4610:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":3861,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3851,"src":"4619:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3860,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4613:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3859,"name":"bytes","nodeType":"ElementaryTypeName","src":"4613:5:19","typeDescriptions":{}}},"id":3862,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4613:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4626:6:19","memberName":"length","nodeType":"MemberAccess","src":"4613:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3856,"name":"parseUint","nodeType":"Identifier","overloadedDeclarations":[3867,3898],"referencedDeclaration":3898,"src":"4593:9:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (uint256)"}},"id":3864,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4593:40:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3855,"id":3865,"nodeType":"Return","src":"4586:47:19"}]},"documentation":{"id":3849,"nodeType":"StructuredDocumentation","src":"4285:214:19","text":" @dev Parse a decimal string and returns the value as a `uint256`.\n Requirements:\n - The string must be formatted as `[0-9]*`\n - The result must fit into an `uint256` type"},"id":3867,"implemented":true,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"4513:9:19","nodeType":"FunctionDefinition","parameters":{"id":3852,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3851,"mutability":"mutable","name":"input","nameLocation":"4537:5:19","nodeType":"VariableDeclaration","scope":3867,"src":"4523:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3850,"name":"string","nodeType":"ElementaryTypeName","src":"4523:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4522:21:19"},"returnParameters":{"id":3855,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3854,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3867,"src":"4567:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3853,"name":"uint256","nodeType":"ElementaryTypeName","src":"4567:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4566:9:19"},"scope":4719,"src":"4504:136:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3897,"nodeType":"Block","src":"5038:153:19","statements":[{"assignments":[3880,3882],"declarations":[{"constant":false,"id":3880,"mutability":"mutable","name":"success","nameLocation":"5054:7:19","nodeType":"VariableDeclaration","scope":3897,"src":"5049:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3879,"name":"bool","nodeType":"ElementaryTypeName","src":"5049:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3882,"mutability":"mutable","name":"value","nameLocation":"5071:5:19","nodeType":"VariableDeclaration","scope":3897,"src":"5063:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3881,"name":"uint256","nodeType":"ElementaryTypeName","src":"5063:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3888,"initialValue":{"arguments":[{"id":3884,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3870,"src":"5093:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3885,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3872,"src":"5100:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3886,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3874,"src":"5107:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3883,"name":"tryParseUint","nodeType":"Identifier","overloadedDeclarations":[3919,3956],"referencedDeclaration":3956,"src":"5080:12:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":3887,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5080:31:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"5048:63:19"},{"condition":{"id":3890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5125:8:19","subExpression":{"id":3889,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3880,"src":"5126:7:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3894,"nodeType":"IfStatement","src":"5121:41:19","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3891,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3546,"src":"5142:18:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3892,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5142:20:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3893,"nodeType":"RevertStatement","src":"5135:27:19"}},{"expression":{"id":3895,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3882,"src":"5179:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3878,"id":3896,"nodeType":"Return","src":"5172:12:19"}]},"documentation":{"id":3868,"nodeType":"StructuredDocumentation","src":"4646:287:19","text":" @dev Variant of {parseUint} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `[0-9]*`\n - The result must fit into an `uint256` type"},"id":3898,"implemented":true,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"4947:9:19","nodeType":"FunctionDefinition","parameters":{"id":3875,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3870,"mutability":"mutable","name":"input","nameLocation":"4971:5:19","nodeType":"VariableDeclaration","scope":3898,"src":"4957:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3869,"name":"string","nodeType":"ElementaryTypeName","src":"4957:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3872,"mutability":"mutable","name":"begin","nameLocation":"4986:5:19","nodeType":"VariableDeclaration","scope":3898,"src":"4978:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3871,"name":"uint256","nodeType":"ElementaryTypeName","src":"4978:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3874,"mutability":"mutable","name":"end","nameLocation":"5001:3:19","nodeType":"VariableDeclaration","scope":3898,"src":"4993:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3873,"name":"uint256","nodeType":"ElementaryTypeName","src":"4993:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4956:49:19"},"returnParameters":{"id":3878,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3877,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3898,"src":"5029:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3876,"name":"uint256","nodeType":"ElementaryTypeName","src":"5029:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5028:9:19"},"scope":4719,"src":"4938:253:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3918,"nodeType":"Block","src":"5512:83:19","statements":[{"expression":{"arguments":[{"id":3909,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3901,"src":"5558:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":3910,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5565:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":3913,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3901,"src":"5574:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3912,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5568:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3911,"name":"bytes","nodeType":"ElementaryTypeName","src":"5568:5:19","typeDescriptions":{}}},"id":3914,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5568:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5581:6:19","memberName":"length","nodeType":"MemberAccess","src":"5568:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3908,"name":"_tryParseUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4026,"src":"5529:28:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":3916,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5529:59:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3907,"id":3917,"nodeType":"Return","src":"5522:66:19"}]},"documentation":{"id":3899,"nodeType":"StructuredDocumentation","src":"5197:215:19","text":" @dev Variant of {parseUint-string} that returns false if the parsing fails because of an invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":3919,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseUint","nameLocation":"5426:12:19","nodeType":"FunctionDefinition","parameters":{"id":3902,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3901,"mutability":"mutable","name":"input","nameLocation":"5453:5:19","nodeType":"VariableDeclaration","scope":3919,"src":"5439:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3900,"name":"string","nodeType":"ElementaryTypeName","src":"5439:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5438:21:19"},"returnParameters":{"id":3907,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3904,"mutability":"mutable","name":"success","nameLocation":"5488:7:19","nodeType":"VariableDeclaration","scope":3919,"src":"5483:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3903,"name":"bool","nodeType":"ElementaryTypeName","src":"5483:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3906,"mutability":"mutable","name":"value","nameLocation":"5505:5:19","nodeType":"VariableDeclaration","scope":3919,"src":"5497:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3905,"name":"uint256","nodeType":"ElementaryTypeName","src":"5497:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5482:29:19"},"scope":4719,"src":"5417:178:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3955,"nodeType":"Block","src":"5997:144:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3933,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3926,"src":"6011:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3936,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3922,"src":"6023:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3935,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6017:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3934,"name":"bytes","nodeType":"ElementaryTypeName","src":"6017:5:19","typeDescriptions":{}}},"id":3937,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6017:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3938,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6030:6:19","memberName":"length","nodeType":"MemberAccess","src":"6017:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6011:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3940,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3924,"src":"6040:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3941,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3926,"src":"6048:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6040:11:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6011:40:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3948,"nodeType":"IfStatement","src":"6007:63:19","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3944,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6061:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3945,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6068:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3946,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6060:10:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3932,"id":3947,"nodeType":"Return","src":"6053:17:19"}},{"expression":{"arguments":[{"id":3950,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3922,"src":"6116:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3951,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3924,"src":"6123:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3952,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3926,"src":"6130:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3949,"name":"_tryParseUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4026,"src":"6087:28:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":3953,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6087:47:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3932,"id":3954,"nodeType":"Return","src":"6080:54:19"}]},"documentation":{"id":3920,"nodeType":"StructuredDocumentation","src":"5601:238:19","text":" @dev Variant of {parseUint-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":3956,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseUint","nameLocation":"5853:12:19","nodeType":"FunctionDefinition","parameters":{"id":3927,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3922,"mutability":"mutable","name":"input","nameLocation":"5889:5:19","nodeType":"VariableDeclaration","scope":3956,"src":"5875:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3921,"name":"string","nodeType":"ElementaryTypeName","src":"5875:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3924,"mutability":"mutable","name":"begin","nameLocation":"5912:5:19","nodeType":"VariableDeclaration","scope":3956,"src":"5904:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3923,"name":"uint256","nodeType":"ElementaryTypeName","src":"5904:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3926,"mutability":"mutable","name":"end","nameLocation":"5935:3:19","nodeType":"VariableDeclaration","scope":3956,"src":"5927:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3925,"name":"uint256","nodeType":"ElementaryTypeName","src":"5927:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5865:79:19"},"returnParameters":{"id":3932,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3929,"mutability":"mutable","name":"success","nameLocation":"5973:7:19","nodeType":"VariableDeclaration","scope":3956,"src":"5968:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3928,"name":"bool","nodeType":"ElementaryTypeName","src":"5968:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3931,"mutability":"mutable","name":"value","nameLocation":"5990:5:19","nodeType":"VariableDeclaration","scope":3956,"src":"5982:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3930,"name":"uint256","nodeType":"ElementaryTypeName","src":"5982:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5967:29:19"},"scope":4719,"src":"5844:297:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4025,"nodeType":"Block","src":"6521:347:19","statements":[{"assignments":[3971],"declarations":[{"constant":false,"id":3971,"mutability":"mutable","name":"buffer","nameLocation":"6544:6:19","nodeType":"VariableDeclaration","scope":4025,"src":"6531:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3970,"name":"bytes","nodeType":"ElementaryTypeName","src":"6531:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3976,"initialValue":{"arguments":[{"id":3974,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3959,"src":"6559:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3973,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6553:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3972,"name":"bytes","nodeType":"ElementaryTypeName","src":"6553:5:19","typeDescriptions":{}}},"id":3975,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6553:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"6531:34:19"},{"assignments":[3978],"declarations":[{"constant":false,"id":3978,"mutability":"mutable","name":"result","nameLocation":"6584:6:19","nodeType":"VariableDeclaration","scope":4025,"src":"6576:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3977,"name":"uint256","nodeType":"ElementaryTypeName","src":"6576:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3980,"initialValue":{"hexValue":"30","id":3979,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6593:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6576:18:19"},{"body":{"id":4019,"nodeType":"Block","src":"6642:189:19","statements":[{"assignments":[3992],"declarations":[{"constant":false,"id":3992,"mutability":"mutable","name":"chr","nameLocation":"6662:3:19","nodeType":"VariableDeclaration","scope":4019,"src":"6656:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3991,"name":"uint8","nodeType":"ElementaryTypeName","src":"6656:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":4002,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":3997,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3971,"src":"6711:6:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3998,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3982,"src":"6719:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3996,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4718,"src":"6688:22:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":3999,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6688:33:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3995,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6681:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":3994,"name":"bytes1","nodeType":"ElementaryTypeName","src":"6681:6:19","typeDescriptions":{}}},"id":4000,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6681:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":3993,"name":"_tryParseChr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4706,"src":"6668:12:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes1_$returns$_t_uint8_$","typeString":"function (bytes1) pure returns (uint8)"}},"id":4001,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6668:55:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"6656:67:19"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4003,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3992,"src":"6741:3:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"39","id":4004,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6747:1:19","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"9"},"src":"6741:7:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4010,"nodeType":"IfStatement","src":"6737:30:19","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4006,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6758:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4007,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6765:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4008,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6757:10:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3969,"id":4009,"nodeType":"Return","src":"6750:17:19"}},{"expression":{"id":4013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4011,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3978,"src":"6781:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"3130","id":4012,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6791:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"6781:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4014,"nodeType":"ExpressionStatement","src":"6781:12:19"},{"expression":{"id":4017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4015,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3978,"src":"6807:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4016,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3992,"src":"6817:3:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"6807:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4018,"nodeType":"ExpressionStatement","src":"6807:13:19"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3985,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3982,"src":"6628:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3986,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3963,"src":"6632:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6628:7:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4020,"initializationExpression":{"assignments":[3982],"declarations":[{"constant":false,"id":3982,"mutability":"mutable","name":"i","nameLocation":"6617:1:19","nodeType":"VariableDeclaration","scope":4020,"src":"6609:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3981,"name":"uint256","nodeType":"ElementaryTypeName","src":"6609:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3984,"initialValue":{"id":3983,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3961,"src":"6621:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6609:17:19"},"loopExpression":{"expression":{"id":3989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"6637:3:19","subExpression":{"id":3988,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3982,"src":"6639:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3990,"nodeType":"ExpressionStatement","src":"6637:3:19"},"nodeType":"ForStatement","src":"6604:227:19"},{"expression":{"components":[{"hexValue":"74727565","id":4021,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6848:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":4022,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3978,"src":"6854:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4023,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6847:14:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3969,"id":4024,"nodeType":"Return","src":"6840:21:19"}]},"documentation":{"id":3957,"nodeType":"StructuredDocumentation","src":"6147:201:19","text":" @dev Implementation of {tryParseUint} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":4026,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseUintUncheckedBounds","nameLocation":"6362:28:19","nodeType":"FunctionDefinition","parameters":{"id":3964,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3959,"mutability":"mutable","name":"input","nameLocation":"6414:5:19","nodeType":"VariableDeclaration","scope":4026,"src":"6400:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3958,"name":"string","nodeType":"ElementaryTypeName","src":"6400:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3961,"mutability":"mutable","name":"begin","nameLocation":"6437:5:19","nodeType":"VariableDeclaration","scope":4026,"src":"6429:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3960,"name":"uint256","nodeType":"ElementaryTypeName","src":"6429:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3963,"mutability":"mutable","name":"end","nameLocation":"6460:3:19","nodeType":"VariableDeclaration","scope":4026,"src":"6452:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3962,"name":"uint256","nodeType":"ElementaryTypeName","src":"6452:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6390:79:19"},"returnParameters":{"id":3969,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3966,"mutability":"mutable","name":"success","nameLocation":"6497:7:19","nodeType":"VariableDeclaration","scope":4026,"src":"6492:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3965,"name":"bool","nodeType":"ElementaryTypeName","src":"6492:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3968,"mutability":"mutable","name":"value","nameLocation":"6514:5:19","nodeType":"VariableDeclaration","scope":4026,"src":"6506:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3967,"name":"uint256","nodeType":"ElementaryTypeName","src":"6506:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6491:29:19"},"scope":4719,"src":"6353:515:19","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":4044,"nodeType":"Block","src":"7165:63:19","statements":[{"expression":{"arguments":[{"id":4035,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4029,"src":"7191:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":4036,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7198:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":4039,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4029,"src":"7207:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4038,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7201:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4037,"name":"bytes","nodeType":"ElementaryTypeName","src":"7201:5:19","typeDescriptions":{}}},"id":4040,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7201:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7214:6:19","memberName":"length","nodeType":"MemberAccess","src":"7201:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4034,"name":"parseInt","nodeType":"Identifier","overloadedDeclarations":[4045,4076],"referencedDeclaration":4076,"src":"7182:8:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (int256)"}},"id":4042,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7182:39:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":4033,"id":4043,"nodeType":"Return","src":"7175:46:19"}]},"documentation":{"id":4027,"nodeType":"StructuredDocumentation","src":"6874:216:19","text":" @dev Parse a decimal string and returns the value as a `int256`.\n Requirements:\n - The string must be formatted as `[-+]?[0-9]*`\n - The result must fit in an `int256` type."},"id":4045,"implemented":true,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"7104:8:19","nodeType":"FunctionDefinition","parameters":{"id":4030,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4029,"mutability":"mutable","name":"input","nameLocation":"7127:5:19","nodeType":"VariableDeclaration","scope":4045,"src":"7113:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4028,"name":"string","nodeType":"ElementaryTypeName","src":"7113:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7112:21:19"},"returnParameters":{"id":4033,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4032,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4045,"src":"7157:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4031,"name":"int256","nodeType":"ElementaryTypeName","src":"7157:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"7156:8:19"},"scope":4719,"src":"7095:133:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4075,"nodeType":"Block","src":"7633:151:19","statements":[{"assignments":[4058,4060],"declarations":[{"constant":false,"id":4058,"mutability":"mutable","name":"success","nameLocation":"7649:7:19","nodeType":"VariableDeclaration","scope":4075,"src":"7644:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4057,"name":"bool","nodeType":"ElementaryTypeName","src":"7644:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4060,"mutability":"mutable","name":"value","nameLocation":"7665:5:19","nodeType":"VariableDeclaration","scope":4075,"src":"7658:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4059,"name":"int256","nodeType":"ElementaryTypeName","src":"7658:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":4066,"initialValue":{"arguments":[{"id":4062,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4048,"src":"7686:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":4063,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4050,"src":"7693:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4064,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4052,"src":"7700:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4061,"name":"tryParseInt","nodeType":"Identifier","overloadedDeclarations":[4097,4139],"referencedDeclaration":4139,"src":"7674:11:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":4065,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7674:30:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"nodeType":"VariableDeclarationStatement","src":"7643:61:19"},{"condition":{"id":4068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7718:8:19","subExpression":{"id":4067,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4058,"src":"7719:7:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4072,"nodeType":"IfStatement","src":"7714:41:19","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4069,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3546,"src":"7735:18:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4070,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7735:20:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4071,"nodeType":"RevertStatement","src":"7728:27:19"}},{"expression":{"id":4073,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4060,"src":"7772:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":4056,"id":4074,"nodeType":"Return","src":"7765:12:19"}]},"documentation":{"id":4046,"nodeType":"StructuredDocumentation","src":"7234:296:19","text":" @dev Variant of {parseInt-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `[-+]?[0-9]*`\n - The result must fit in an `int256` type."},"id":4076,"implemented":true,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"7544:8:19","nodeType":"FunctionDefinition","parameters":{"id":4053,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4048,"mutability":"mutable","name":"input","nameLocation":"7567:5:19","nodeType":"VariableDeclaration","scope":4076,"src":"7553:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4047,"name":"string","nodeType":"ElementaryTypeName","src":"7553:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4050,"mutability":"mutable","name":"begin","nameLocation":"7582:5:19","nodeType":"VariableDeclaration","scope":4076,"src":"7574:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4049,"name":"uint256","nodeType":"ElementaryTypeName","src":"7574:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4052,"mutability":"mutable","name":"end","nameLocation":"7597:3:19","nodeType":"VariableDeclaration","scope":4076,"src":"7589:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4051,"name":"uint256","nodeType":"ElementaryTypeName","src":"7589:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7552:49:19"},"returnParameters":{"id":4056,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4055,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4076,"src":"7625:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4054,"name":"int256","nodeType":"ElementaryTypeName","src":"7625:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"7624:8:19"},"scope":4719,"src":"7535:249:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4096,"nodeType":"Block","src":"8175:82:19","statements":[{"expression":{"arguments":[{"id":4087,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4079,"src":"8220:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":4088,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8227:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":4091,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4079,"src":"8236:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4090,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8230:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4089,"name":"bytes","nodeType":"ElementaryTypeName","src":"8230:5:19","typeDescriptions":{}}},"id":4092,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8230:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8243:6:19","memberName":"length","nodeType":"MemberAccess","src":"8230:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4086,"name":"_tryParseIntUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4260,"src":"8192:27:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":4094,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8192:58:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":4085,"id":4095,"nodeType":"Return","src":"8185:65:19"}]},"documentation":{"id":4077,"nodeType":"StructuredDocumentation","src":"7790:287:19","text":" @dev Variant of {parseInt-string} that returns false if the parsing fails because of an invalid character or if\n the result does not fit in a `int256`.\n NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`."},"id":4097,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseInt","nameLocation":"8091:11:19","nodeType":"FunctionDefinition","parameters":{"id":4080,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4079,"mutability":"mutable","name":"input","nameLocation":"8117:5:19","nodeType":"VariableDeclaration","scope":4097,"src":"8103:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4078,"name":"string","nodeType":"ElementaryTypeName","src":"8103:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8102:21:19"},"returnParameters":{"id":4085,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4082,"mutability":"mutable","name":"success","nameLocation":"8152:7:19","nodeType":"VariableDeclaration","scope":4097,"src":"8147:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4081,"name":"bool","nodeType":"ElementaryTypeName","src":"8147:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4084,"mutability":"mutable","name":"value","nameLocation":"8168:5:19","nodeType":"VariableDeclaration","scope":4097,"src":"8161:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4083,"name":"int256","nodeType":"ElementaryTypeName","src":"8161:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"8146:28:19"},"scope":4719,"src":"8082:175:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"constant":true,"id":4102,"mutability":"constant","name":"ABS_MIN_INT256","nameLocation":"8288:14:19","nodeType":"VariableDeclaration","scope":4719,"src":"8263:50:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4098,"name":"uint256","nodeType":"ElementaryTypeName","src":"8263:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"},"id":4101,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4099,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8305:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"323535","id":4100,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8310:3:19","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"8305:8:19","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"}},"visibility":"private"},{"body":{"id":4138,"nodeType":"Block","src":"8779:143:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4116,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4109,"src":"8793:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4119,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4105,"src":"8805:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4118,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8799:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4117,"name":"bytes","nodeType":"ElementaryTypeName","src":"8799:5:19","typeDescriptions":{}}},"id":4120,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8799:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8812:6:19","memberName":"length","nodeType":"MemberAccess","src":"8799:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8793:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4123,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4107,"src":"8822:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4124,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4109,"src":"8830:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8822:11:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8793:40:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4131,"nodeType":"IfStatement","src":"8789:63:19","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4127,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8843:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4128,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8850:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4129,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"8842:10:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4115,"id":4130,"nodeType":"Return","src":"8835:17:19"}},{"expression":{"arguments":[{"id":4133,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4105,"src":"8897:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":4134,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4107,"src":"8904:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4135,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4109,"src":"8911:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4132,"name":"_tryParseIntUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4260,"src":"8869:27:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":4136,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8869:46:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":4115,"id":4137,"nodeType":"Return","src":"8862:53:19"}]},"documentation":{"id":4103,"nodeType":"StructuredDocumentation","src":"8320:303:19","text":" @dev Variant of {parseInt-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n character or if the result does not fit in a `int256`.\n NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`."},"id":4139,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseInt","nameLocation":"8637:11:19","nodeType":"FunctionDefinition","parameters":{"id":4110,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4105,"mutability":"mutable","name":"input","nameLocation":"8672:5:19","nodeType":"VariableDeclaration","scope":4139,"src":"8658:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4104,"name":"string","nodeType":"ElementaryTypeName","src":"8658:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4107,"mutability":"mutable","name":"begin","nameLocation":"8695:5:19","nodeType":"VariableDeclaration","scope":4139,"src":"8687:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4106,"name":"uint256","nodeType":"ElementaryTypeName","src":"8687:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4109,"mutability":"mutable","name":"end","nameLocation":"8718:3:19","nodeType":"VariableDeclaration","scope":4139,"src":"8710:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4108,"name":"uint256","nodeType":"ElementaryTypeName","src":"8710:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8648:79:19"},"returnParameters":{"id":4115,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4112,"mutability":"mutable","name":"success","nameLocation":"8756:7:19","nodeType":"VariableDeclaration","scope":4139,"src":"8751:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4111,"name":"bool","nodeType":"ElementaryTypeName","src":"8751:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4114,"mutability":"mutable","name":"value","nameLocation":"8772:5:19","nodeType":"VariableDeclaration","scope":4139,"src":"8765:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4113,"name":"int256","nodeType":"ElementaryTypeName","src":"8765:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"8750:28:19"},"scope":4719,"src":"8628:294:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4259,"nodeType":"Block","src":"9299:812:19","statements":[{"assignments":[4154],"declarations":[{"constant":false,"id":4154,"mutability":"mutable","name":"buffer","nameLocation":"9322:6:19","nodeType":"VariableDeclaration","scope":4259,"src":"9309:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4153,"name":"bytes","nodeType":"ElementaryTypeName","src":"9309:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4159,"initialValue":{"arguments":[{"id":4157,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4142,"src":"9337:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4156,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9331:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4155,"name":"bytes","nodeType":"ElementaryTypeName","src":"9331:5:19","typeDescriptions":{}}},"id":4158,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9331:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"9309:34:19"},{"assignments":[4161],"declarations":[{"constant":false,"id":4161,"mutability":"mutable","name":"sign","nameLocation":"9407:4:19","nodeType":"VariableDeclaration","scope":4259,"src":"9400:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":4160,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9400:6:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"id":4177,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4162,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4144,"src":"9414:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4163,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4146,"src":"9423:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9414:12:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"arguments":[{"id":4172,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4154,"src":"9471:6:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4173,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4144,"src":"9479:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4171,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4718,"src":"9448:22:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":4174,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9448:37:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4170,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9441:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":4169,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9441:6:19","typeDescriptions":{}}},"id":4175,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9441:45:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":4176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9414:72:19","trueExpression":{"arguments":[{"hexValue":"30","id":4167,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9436:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4166,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9429:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":4165,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9429:6:19","typeDescriptions":{}}},"id":4168,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9429:9:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"VariableDeclarationStatement","src":"9400:86:19"},{"assignments":[4179],"declarations":[{"constant":false,"id":4179,"mutability":"mutable","name":"positiveSign","nameLocation":"9572:12:19","nodeType":"VariableDeclaration","scope":4259,"src":"9567:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4178,"name":"bool","nodeType":"ElementaryTypeName","src":"9567:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":4186,"initialValue":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":4185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4180,"name":"sign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4161,"src":"9587:4:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"2b","id":4183,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9602:3:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8","typeString":"literal_string \"+\""},"value":"+"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8","typeString":"literal_string \"+\""}],"id":4182,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9595:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":4181,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9595:6:19","typeDescriptions":{}}},"id":4184,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9595:11:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"9587:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"9567:39:19"},{"assignments":[4188],"declarations":[{"constant":false,"id":4188,"mutability":"mutable","name":"negativeSign","nameLocation":"9621:12:19","nodeType":"VariableDeclaration","scope":4259,"src":"9616:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4187,"name":"bool","nodeType":"ElementaryTypeName","src":"9616:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":4195,"initialValue":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":4194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4189,"name":"sign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4161,"src":"9636:4:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"2d","id":4192,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9651:3:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""}],"id":4191,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9644:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":4190,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9644:6:19","typeDescriptions":{}}},"id":4193,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9644:11:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"9636:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"9616:39:19"},{"assignments":[4197],"declarations":[{"constant":false,"id":4197,"mutability":"mutable","name":"offset","nameLocation":"9673:6:19","nodeType":"VariableDeclaration","scope":4259,"src":"9665:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4196,"name":"uint256","nodeType":"ElementaryTypeName","src":"9665:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4204,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4198,"name":"positiveSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4179,"src":"9683:12:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"id":4199,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4188,"src":"9699:12:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9683:28:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":4201,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9682:30:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9713:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8125,"src":"9682:37:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":4203,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9682:39:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9665:56:19"},{"assignments":[4206,4208],"declarations":[{"constant":false,"id":4206,"mutability":"mutable","name":"absSuccess","nameLocation":"9738:10:19","nodeType":"VariableDeclaration","scope":4259,"src":"9733:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4205,"name":"bool","nodeType":"ElementaryTypeName","src":"9733:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4208,"mutability":"mutable","name":"absValue","nameLocation":"9758:8:19","nodeType":"VariableDeclaration","scope":4259,"src":"9750:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4207,"name":"uint256","nodeType":"ElementaryTypeName","src":"9750:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4216,"initialValue":{"arguments":[{"id":4210,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4142,"src":"9783:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4211,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4144,"src":"9790:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":4212,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4197,"src":"9798:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9790:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4214,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4146,"src":"9806:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4209,"name":"tryParseUint","nodeType":"Identifier","overloadedDeclarations":[3919,3956],"referencedDeclaration":3956,"src":"9770:12:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":4215,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9770:40:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"9732:78:19"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4217,"name":"absSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4206,"src":"9825:10:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4218,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4208,"src":"9839:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4219,"name":"ABS_MIN_INT256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4102,"src":"9850:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9839:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9825:39:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4237,"name":"absSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4206,"src":"9967:10:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":4238,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4188,"src":"9981:12:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9967:26:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4240,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4208,"src":"9997:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4241,"name":"ABS_MIN_INT256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4102,"src":"10009:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9997:26:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9967:56:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4253,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10095:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4254,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10102:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4255,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10094:10:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4152,"id":4256,"nodeType":"Return","src":"10087:17:19"},"id":4257,"nodeType":"IfStatement","src":"9963:141:19","trueBody":{"id":4252,"nodeType":"Block","src":"10025:56:19","statements":[{"expression":{"components":[{"hexValue":"74727565","id":4244,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10047:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"expression":{"arguments":[{"id":4247,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10058:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":4246,"name":"int256","nodeType":"ElementaryTypeName","src":"10058:6:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":4245,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10053:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4248,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10053:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":4249,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10066:3:19","memberName":"min","nodeType":"MemberAccess","src":"10053:16:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4250,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10046:24:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":4152,"id":4251,"nodeType":"Return","src":"10039:31:19"}]}},"id":4258,"nodeType":"IfStatement","src":"9821:283:19","trueBody":{"id":4236,"nodeType":"Block","src":"9866:91:19","statements":[{"expression":{"components":[{"hexValue":"74727565","id":4222,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9888:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"condition":{"id":4223,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4188,"src":"9894:12:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":4231,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4208,"src":"9936:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4230,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9929:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":4229,"name":"int256","nodeType":"ElementaryTypeName","src":"9929:6:19","typeDescriptions":{}}},"id":4232,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9929:16:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":4233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9894:51:19","trueExpression":{"id":4228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"9909:17:19","subExpression":{"arguments":[{"id":4226,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4208,"src":"9917:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4225,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9910:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":4224,"name":"int256","nodeType":"ElementaryTypeName","src":"9910:6:19","typeDescriptions":{}}},"id":4227,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9910:16:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4234,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9887:59:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":4152,"id":4235,"nodeType":"Return","src":"9880:66:19"}]}}]},"documentation":{"id":4140,"nodeType":"StructuredDocumentation","src":"8928:200:19","text":" @dev Implementation of {tryParseInt} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":4260,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseIntUncheckedBounds","nameLocation":"9142:27:19","nodeType":"FunctionDefinition","parameters":{"id":4147,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4142,"mutability":"mutable","name":"input","nameLocation":"9193:5:19","nodeType":"VariableDeclaration","scope":4260,"src":"9179:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4141,"name":"string","nodeType":"ElementaryTypeName","src":"9179:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4144,"mutability":"mutable","name":"begin","nameLocation":"9216:5:19","nodeType":"VariableDeclaration","scope":4260,"src":"9208:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4143,"name":"uint256","nodeType":"ElementaryTypeName","src":"9208:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4146,"mutability":"mutable","name":"end","nameLocation":"9239:3:19","nodeType":"VariableDeclaration","scope":4260,"src":"9231:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4145,"name":"uint256","nodeType":"ElementaryTypeName","src":"9231:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9169:79:19"},"returnParameters":{"id":4152,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4149,"mutability":"mutable","name":"success","nameLocation":"9276:7:19","nodeType":"VariableDeclaration","scope":4260,"src":"9271:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4148,"name":"bool","nodeType":"ElementaryTypeName","src":"9271:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4151,"mutability":"mutable","name":"value","nameLocation":"9292:5:19","nodeType":"VariableDeclaration","scope":4260,"src":"9285:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4150,"name":"int256","nodeType":"ElementaryTypeName","src":"9285:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"9270:28:19"},"scope":4719,"src":"9133:978:19","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":4278,"nodeType":"Block","src":"10456:67:19","statements":[{"expression":{"arguments":[{"id":4269,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4263,"src":"10486:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":4270,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10493:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":4273,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4263,"src":"10502:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4272,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10496:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4271,"name":"bytes","nodeType":"ElementaryTypeName","src":"10496:5:19","typeDescriptions":{}}},"id":4274,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10496:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10509:6:19","memberName":"length","nodeType":"MemberAccess","src":"10496:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4268,"name":"parseHexUint","nodeType":"Identifier","overloadedDeclarations":[4279,4310],"referencedDeclaration":4310,"src":"10473:12:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (uint256)"}},"id":4276,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10473:43:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4267,"id":4277,"nodeType":"Return","src":"10466:50:19"}]},"documentation":{"id":4261,"nodeType":"StructuredDocumentation","src":"10117:259:19","text":" @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as a `uint256`.\n Requirements:\n - The string must be formatted as `(0x)?[0-9a-fA-F]*`\n - The result must fit in an `uint256` type."},"id":4279,"implemented":true,"kind":"function","modifiers":[],"name":"parseHexUint","nameLocation":"10390:12:19","nodeType":"FunctionDefinition","parameters":{"id":4264,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4263,"mutability":"mutable","name":"input","nameLocation":"10417:5:19","nodeType":"VariableDeclaration","scope":4279,"src":"10403:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4262,"name":"string","nodeType":"ElementaryTypeName","src":"10403:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10402:21:19"},"returnParameters":{"id":4267,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4266,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4279,"src":"10447:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4265,"name":"uint256","nodeType":"ElementaryTypeName","src":"10447:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10446:9:19"},"scope":4719,"src":"10381:142:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4309,"nodeType":"Block","src":"10937:156:19","statements":[{"assignments":[4292,4294],"declarations":[{"constant":false,"id":4292,"mutability":"mutable","name":"success","nameLocation":"10953:7:19","nodeType":"VariableDeclaration","scope":4309,"src":"10948:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4291,"name":"bool","nodeType":"ElementaryTypeName","src":"10948:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4294,"mutability":"mutable","name":"value","nameLocation":"10970:5:19","nodeType":"VariableDeclaration","scope":4309,"src":"10962:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4293,"name":"uint256","nodeType":"ElementaryTypeName","src":"10962:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4300,"initialValue":{"arguments":[{"id":4296,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4282,"src":"10995:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":4297,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4284,"src":"11002:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4298,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4286,"src":"11009:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4295,"name":"tryParseHexUint","nodeType":"Identifier","overloadedDeclarations":[4331,4368],"referencedDeclaration":4368,"src":"10979:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":4299,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10979:34:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"10947:66:19"},{"condition":{"id":4302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"11027:8:19","subExpression":{"id":4301,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4292,"src":"11028:7:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4306,"nodeType":"IfStatement","src":"11023:41:19","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4303,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3546,"src":"11044:18:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4304,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11044:20:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4305,"nodeType":"RevertStatement","src":"11037:27:19"}},{"expression":{"id":4307,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294,"src":"11081:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4290,"id":4308,"nodeType":"Return","src":"11074:12:19"}]},"documentation":{"id":4280,"nodeType":"StructuredDocumentation","src":"10529:300:19","text":" @dev Variant of {parseHexUint} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `(0x)?[0-9a-fA-F]*`\n - The result must fit in an `uint256` type."},"id":4310,"implemented":true,"kind":"function","modifiers":[],"name":"parseHexUint","nameLocation":"10843:12:19","nodeType":"FunctionDefinition","parameters":{"id":4287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4282,"mutability":"mutable","name":"input","nameLocation":"10870:5:19","nodeType":"VariableDeclaration","scope":4310,"src":"10856:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4281,"name":"string","nodeType":"ElementaryTypeName","src":"10856:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4284,"mutability":"mutable","name":"begin","nameLocation":"10885:5:19","nodeType":"VariableDeclaration","scope":4310,"src":"10877:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4283,"name":"uint256","nodeType":"ElementaryTypeName","src":"10877:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4286,"mutability":"mutable","name":"end","nameLocation":"10900:3:19","nodeType":"VariableDeclaration","scope":4310,"src":"10892:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4285,"name":"uint256","nodeType":"ElementaryTypeName","src":"10892:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10855:49:19"},"returnParameters":{"id":4290,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4289,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4310,"src":"10928:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4288,"name":"uint256","nodeType":"ElementaryTypeName","src":"10928:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10927:9:19"},"scope":4719,"src":"10834:259:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4330,"nodeType":"Block","src":"11420:86:19","statements":[{"expression":{"arguments":[{"id":4321,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4313,"src":"11469:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":4322,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11476:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":4325,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4313,"src":"11485:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4324,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11479:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4323,"name":"bytes","nodeType":"ElementaryTypeName","src":"11479:5:19","typeDescriptions":{}}},"id":4326,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11479:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11492:6:19","memberName":"length","nodeType":"MemberAccess","src":"11479:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4320,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4471,"src":"11437:31:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":4328,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11437:62:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":4319,"id":4329,"nodeType":"Return","src":"11430:69:19"}]},"documentation":{"id":4311,"nodeType":"StructuredDocumentation","src":"11099:218:19","text":" @dev Variant of {parseHexUint-string} that returns false if the parsing fails because of an invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":4331,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseHexUint","nameLocation":"11331:15:19","nodeType":"FunctionDefinition","parameters":{"id":4314,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4313,"mutability":"mutable","name":"input","nameLocation":"11361:5:19","nodeType":"VariableDeclaration","scope":4331,"src":"11347:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4312,"name":"string","nodeType":"ElementaryTypeName","src":"11347:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"11346:21:19"},"returnParameters":{"id":4319,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4316,"mutability":"mutable","name":"success","nameLocation":"11396:7:19","nodeType":"VariableDeclaration","scope":4331,"src":"11391:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4315,"name":"bool","nodeType":"ElementaryTypeName","src":"11391:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4318,"mutability":"mutable","name":"value","nameLocation":"11413:5:19","nodeType":"VariableDeclaration","scope":4331,"src":"11405:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4317,"name":"uint256","nodeType":"ElementaryTypeName","src":"11405:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11390:29:19"},"scope":4719,"src":"11322:184:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4367,"nodeType":"Block","src":"11914:147:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4345,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4338,"src":"11928:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4348,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4334,"src":"11940:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4347,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11934:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4346,"name":"bytes","nodeType":"ElementaryTypeName","src":"11934:5:19","typeDescriptions":{}}},"id":4349,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11934:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11947:6:19","memberName":"length","nodeType":"MemberAccess","src":"11934:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11928:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4352,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4336,"src":"11957:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4353,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4338,"src":"11965:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11957:11:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11928:40:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4360,"nodeType":"IfStatement","src":"11924:63:19","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4356,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"11978:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4357,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11985:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4358,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"11977:10:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4344,"id":4359,"nodeType":"Return","src":"11970:17:19"}},{"expression":{"arguments":[{"id":4362,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4334,"src":"12036:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":4363,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4336,"src":"12043:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4364,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4338,"src":"12050:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4361,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4471,"src":"12004:31:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":4365,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12004:50:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":4344,"id":4366,"nodeType":"Return","src":"11997:57:19"}]},"documentation":{"id":4332,"nodeType":"StructuredDocumentation","src":"11512:241:19","text":" @dev Variant of {parseHexUint-string-uint256-uint256} that returns false if the parsing fails because of an\n invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":4368,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseHexUint","nameLocation":"11767:15:19","nodeType":"FunctionDefinition","parameters":{"id":4339,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4334,"mutability":"mutable","name":"input","nameLocation":"11806:5:19","nodeType":"VariableDeclaration","scope":4368,"src":"11792:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4333,"name":"string","nodeType":"ElementaryTypeName","src":"11792:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4336,"mutability":"mutable","name":"begin","nameLocation":"11829:5:19","nodeType":"VariableDeclaration","scope":4368,"src":"11821:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4335,"name":"uint256","nodeType":"ElementaryTypeName","src":"11821:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4338,"mutability":"mutable","name":"end","nameLocation":"11852:3:19","nodeType":"VariableDeclaration","scope":4368,"src":"11844:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4337,"name":"uint256","nodeType":"ElementaryTypeName","src":"11844:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11782:79:19"},"returnParameters":{"id":4344,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4341,"mutability":"mutable","name":"success","nameLocation":"11890:7:19","nodeType":"VariableDeclaration","scope":4368,"src":"11885:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4340,"name":"bool","nodeType":"ElementaryTypeName","src":"11885:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4343,"mutability":"mutable","name":"value","nameLocation":"11907:5:19","nodeType":"VariableDeclaration","scope":4368,"src":"11899:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4342,"name":"uint256","nodeType":"ElementaryTypeName","src":"11899:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11884:29:19"},"scope":4719,"src":"11758:303:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4470,"nodeType":"Block","src":"12447:880:19","statements":[{"assignments":[4383],"declarations":[{"constant":false,"id":4383,"mutability":"mutable","name":"buffer","nameLocation":"12470:6:19","nodeType":"VariableDeclaration","scope":4470,"src":"12457:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4382,"name":"bytes","nodeType":"ElementaryTypeName","src":"12457:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4388,"initialValue":{"arguments":[{"id":4386,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4371,"src":"12485:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4385,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12479:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4384,"name":"bytes","nodeType":"ElementaryTypeName","src":"12479:5:19","typeDescriptions":{}}},"id":4387,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12479:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"12457:34:19"},{"assignments":[4390],"declarations":[{"constant":false,"id":4390,"mutability":"mutable","name":"hasPrefix","nameLocation":"12544:9:19","nodeType":"VariableDeclaration","scope":4470,"src":"12539:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4389,"name":"bool","nodeType":"ElementaryTypeName","src":"12539:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":4410,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4391,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4375,"src":"12557:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4392,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4373,"src":"12563:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4393,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12571:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12563:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12557:15:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":4396,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12556:17:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes2","typeString":"bytes2"},"id":4408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":4400,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4383,"src":"12607:6:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4401,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4373,"src":"12615:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4399,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4718,"src":"12584:22:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":4402,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12584:37:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4398,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12577:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":4397,"name":"bytes2","nodeType":"ElementaryTypeName","src":"12577:6:19","typeDescriptions":{}}},"id":4403,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12577:45:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"3078","id":4406,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12633:4:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""},"value":"0x"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""}],"id":4405,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12626:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":4404,"name":"bytes2","nodeType":"ElementaryTypeName","src":"12626:6:19","typeDescriptions":{}}},"id":4407,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12626:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"src":"12577:61:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12556:82:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"12539:99:19"},{"assignments":[4412],"declarations":[{"constant":false,"id":4412,"mutability":"mutable","name":"offset","nameLocation":"12727:6:19","nodeType":"VariableDeclaration","scope":4470,"src":"12719:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4411,"name":"uint256","nodeType":"ElementaryTypeName","src":"12719:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4418,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4413,"name":"hasPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4390,"src":"12736:9:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12746:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8125,"src":"12736:16:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":4415,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12736:18:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":4416,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12757:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12736:22:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12719:39:19"},{"assignments":[4420],"declarations":[{"constant":false,"id":4420,"mutability":"mutable","name":"result","nameLocation":"12777:6:19","nodeType":"VariableDeclaration","scope":4470,"src":"12769:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4419,"name":"uint256","nodeType":"ElementaryTypeName","src":"12769:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4422,"initialValue":{"hexValue":"30","id":4421,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12786:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"12769:18:19"},{"body":{"id":4464,"nodeType":"Block","src":"12844:446:19","statements":[{"assignments":[4436],"declarations":[{"constant":false,"id":4436,"mutability":"mutable","name":"chr","nameLocation":"12864:3:19","nodeType":"VariableDeclaration","scope":4464,"src":"12858:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4435,"name":"uint8","nodeType":"ElementaryTypeName","src":"12858:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":4446,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":4441,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4383,"src":"12913:6:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4442,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4424,"src":"12921:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4440,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4718,"src":"12890:22:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":4443,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12890:33:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4439,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12883:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":4438,"name":"bytes1","nodeType":"ElementaryTypeName","src":"12883:6:19","typeDescriptions":{}}},"id":4444,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12883:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":4437,"name":"_tryParseChr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4706,"src":"12870:12:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes1_$returns$_t_uint8_$","typeString":"function (bytes1) pure returns (uint8)"}},"id":4445,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12870:55:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"12858:67:19"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4447,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4436,"src":"12943:3:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3135","id":4448,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12949:2:19","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"15"},"src":"12943:8:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4454,"nodeType":"IfStatement","src":"12939:31:19","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4450,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12961:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4451,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12968:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4452,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"12960:10:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4381,"id":4453,"nodeType":"Return","src":"12953:17:19"}},{"expression":{"id":4457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4455,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4420,"src":"12984:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"3136","id":4456,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12994:2:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12984:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4458,"nodeType":"ExpressionStatement","src":"12984:12:19"},{"id":4463,"nodeType":"UncheckedBlock","src":"13010:270:19","statements":[{"expression":{"id":4461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4459,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4420,"src":"13252:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4460,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4436,"src":"13262:3:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"13252:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4462,"nodeType":"ExpressionStatement","src":"13252:13:19"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4429,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4424,"src":"12830:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4430,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4375,"src":"12834:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12830:7:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4465,"initializationExpression":{"assignments":[4424],"declarations":[{"constant":false,"id":4424,"mutability":"mutable","name":"i","nameLocation":"12810:1:19","nodeType":"VariableDeclaration","scope":4465,"src":"12802:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4423,"name":"uint256","nodeType":"ElementaryTypeName","src":"12802:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4428,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4425,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4373,"src":"12814:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":4426,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4412,"src":"12822:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12814:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12802:26:19"},"loopExpression":{"expression":{"id":4433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"12839:3:19","subExpression":{"id":4432,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4424,"src":"12841:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4434,"nodeType":"ExpressionStatement","src":"12839:3:19"},"nodeType":"ForStatement","src":"12797:493:19"},{"expression":{"components":[{"hexValue":"74727565","id":4466,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13307:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":4467,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4420,"src":"13313:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4468,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13306:14:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":4381,"id":4469,"nodeType":"Return","src":"13299:21:19"}]},"documentation":{"id":4369,"nodeType":"StructuredDocumentation","src":"12067:204:19","text":" @dev Implementation of {tryParseHexUint} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":4471,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseHexUintUncheckedBounds","nameLocation":"12285:31:19","nodeType":"FunctionDefinition","parameters":{"id":4376,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4371,"mutability":"mutable","name":"input","nameLocation":"12340:5:19","nodeType":"VariableDeclaration","scope":4471,"src":"12326:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4370,"name":"string","nodeType":"ElementaryTypeName","src":"12326:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4373,"mutability":"mutable","name":"begin","nameLocation":"12363:5:19","nodeType":"VariableDeclaration","scope":4471,"src":"12355:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4372,"name":"uint256","nodeType":"ElementaryTypeName","src":"12355:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4375,"mutability":"mutable","name":"end","nameLocation":"12386:3:19","nodeType":"VariableDeclaration","scope":4471,"src":"12378:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4374,"name":"uint256","nodeType":"ElementaryTypeName","src":"12378:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12316:79:19"},"returnParameters":{"id":4381,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4378,"mutability":"mutable","name":"success","nameLocation":"12423:7:19","nodeType":"VariableDeclaration","scope":4471,"src":"12418:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4377,"name":"bool","nodeType":"ElementaryTypeName","src":"12418:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4380,"mutability":"mutable","name":"value","nameLocation":"12440:5:19","nodeType":"VariableDeclaration","scope":4471,"src":"12432:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4379,"name":"uint256","nodeType":"ElementaryTypeName","src":"12432:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12417:29:19"},"scope":4719,"src":"12276:1051:19","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":4489,"nodeType":"Block","src":"13625:67:19","statements":[{"expression":{"arguments":[{"id":4480,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4474,"src":"13655:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":4481,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13662:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":4484,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4474,"src":"13671:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4483,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13665:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4482,"name":"bytes","nodeType":"ElementaryTypeName","src":"13665:5:19","typeDescriptions":{}}},"id":4485,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13665:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13678:6:19","memberName":"length","nodeType":"MemberAccess","src":"13665:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4479,"name":"parseAddress","nodeType":"Identifier","overloadedDeclarations":[4490,4521],"referencedDeclaration":4521,"src":"13642:12:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (address)"}},"id":4487,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13642:43:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":4478,"id":4488,"nodeType":"Return","src":"13635:50:19"}]},"documentation":{"id":4472,"nodeType":"StructuredDocumentation","src":"13333:212:19","text":" @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as an `address`.\n Requirements:\n - The string must be formatted as `(0x)?[0-9a-fA-F]{40}`"},"id":4490,"implemented":true,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"13559:12:19","nodeType":"FunctionDefinition","parameters":{"id":4475,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4474,"mutability":"mutable","name":"input","nameLocation":"13586:5:19","nodeType":"VariableDeclaration","scope":4490,"src":"13572:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4473,"name":"string","nodeType":"ElementaryTypeName","src":"13572:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"13571:21:19"},"returnParameters":{"id":4478,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4477,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4490,"src":"13616:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4476,"name":"address","nodeType":"ElementaryTypeName","src":"13616:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"13615:9:19"},"scope":4719,"src":"13550:142:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4520,"nodeType":"Block","src":"14058:165:19","statements":[{"assignments":[4503,4505],"declarations":[{"constant":false,"id":4503,"mutability":"mutable","name":"success","nameLocation":"14074:7:19","nodeType":"VariableDeclaration","scope":4520,"src":"14069:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4502,"name":"bool","nodeType":"ElementaryTypeName","src":"14069:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4505,"mutability":"mutable","name":"value","nameLocation":"14091:5:19","nodeType":"VariableDeclaration","scope":4520,"src":"14083:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4504,"name":"address","nodeType":"ElementaryTypeName","src":"14083:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":4511,"initialValue":{"arguments":[{"id":4507,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4493,"src":"14116:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":4508,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4495,"src":"14123:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4509,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4497,"src":"14130:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4506,"name":"tryParseAddress","nodeType":"Identifier","overloadedDeclarations":[4542,4646],"referencedDeclaration":4646,"src":"14100:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,address)"}},"id":4510,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14100:34:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"nodeType":"VariableDeclarationStatement","src":"14068:66:19"},{"condition":{"id":4513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"14148:8:19","subExpression":{"id":4512,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4503,"src":"14149:7:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4517,"nodeType":"IfStatement","src":"14144:50:19","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4514,"name":"StringsInvalidAddressFormat","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3549,"src":"14165:27:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4515,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14165:29:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4516,"nodeType":"RevertStatement","src":"14158:36:19"}},{"expression":{"id":4518,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4505,"src":"14211:5:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":4501,"id":4519,"nodeType":"Return","src":"14204:12:19"}]},"documentation":{"id":4491,"nodeType":"StructuredDocumentation","src":"13698:252:19","text":" @dev Variant of {parseAddress} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `(0x)?[0-9a-fA-F]{40}`"},"id":4521,"implemented":true,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"13964:12:19","nodeType":"FunctionDefinition","parameters":{"id":4498,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4493,"mutability":"mutable","name":"input","nameLocation":"13991:5:19","nodeType":"VariableDeclaration","scope":4521,"src":"13977:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4492,"name":"string","nodeType":"ElementaryTypeName","src":"13977:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4495,"mutability":"mutable","name":"begin","nameLocation":"14006:5:19","nodeType":"VariableDeclaration","scope":4521,"src":"13998:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4494,"name":"uint256","nodeType":"ElementaryTypeName","src":"13998:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4497,"mutability":"mutable","name":"end","nameLocation":"14021:3:19","nodeType":"VariableDeclaration","scope":4521,"src":"14013:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4496,"name":"uint256","nodeType":"ElementaryTypeName","src":"14013:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13976:49:19"},"returnParameters":{"id":4501,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4500,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4521,"src":"14049:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4499,"name":"address","nodeType":"ElementaryTypeName","src":"14049:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14048:9:19"},"scope":4719,"src":"13955:268:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4541,"nodeType":"Block","src":"14523:70:19","statements":[{"expression":{"arguments":[{"id":4532,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4524,"src":"14556:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":4533,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14563:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":4536,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4524,"src":"14572:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4535,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14566:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4534,"name":"bytes","nodeType":"ElementaryTypeName","src":"14566:5:19","typeDescriptions":{}}},"id":4537,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14566:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14579:6:19","memberName":"length","nodeType":"MemberAccess","src":"14566:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4531,"name":"tryParseAddress","nodeType":"Identifier","overloadedDeclarations":[4542,4646],"referencedDeclaration":4646,"src":"14540:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,address)"}},"id":4539,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14540:46:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":4530,"id":4540,"nodeType":"Return","src":"14533:53:19"}]},"documentation":{"id":4522,"nodeType":"StructuredDocumentation","src":"14229:191:19","text":" @dev Variant of {parseAddress-string} that returns false if the parsing fails because the input is not a properly\n formatted address. See {parseAddress} requirements."},"id":4542,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseAddress","nameLocation":"14434:15:19","nodeType":"FunctionDefinition","parameters":{"id":4525,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4524,"mutability":"mutable","name":"input","nameLocation":"14464:5:19","nodeType":"VariableDeclaration","scope":4542,"src":"14450:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4523,"name":"string","nodeType":"ElementaryTypeName","src":"14450:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"14449:21:19"},"returnParameters":{"id":4530,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4527,"mutability":"mutable","name":"success","nameLocation":"14499:7:19","nodeType":"VariableDeclaration","scope":4542,"src":"14494:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4526,"name":"bool","nodeType":"ElementaryTypeName","src":"14494:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4529,"mutability":"mutable","name":"value","nameLocation":"14516:5:19","nodeType":"VariableDeclaration","scope":4542,"src":"14508:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4528,"name":"address","nodeType":"ElementaryTypeName","src":"14508:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14493:29:19"},"scope":4719,"src":"14425:168:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4645,"nodeType":"Block","src":"14963:733:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4556,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4549,"src":"14977:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4559,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4545,"src":"14989:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4558,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14983:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4557,"name":"bytes","nodeType":"ElementaryTypeName","src":"14983:5:19","typeDescriptions":{}}},"id":4560,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14983:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14996:6:19","memberName":"length","nodeType":"MemberAccess","src":"14983:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14977:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4563,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4547,"src":"15006:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4564,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4549,"src":"15014:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15006:11:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14977:40:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4574,"nodeType":"IfStatement","src":"14973:72:19","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4567,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"15027:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":4570,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15042:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4569,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15034:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4568,"name":"address","nodeType":"ElementaryTypeName","src":"15034:7:19","typeDescriptions":{}}},"id":4571,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15034:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":4572,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"15026:19:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":4555,"id":4573,"nodeType":"Return","src":"15019:26:19"}},{"assignments":[4576],"declarations":[{"constant":false,"id":4576,"mutability":"mutable","name":"hasPrefix","nameLocation":"15061:9:19","nodeType":"VariableDeclaration","scope":4645,"src":"15056:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4575,"name":"bool","nodeType":"ElementaryTypeName","src":"15056:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":4599,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4577,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4549,"src":"15074:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4578,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4547,"src":"15080:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15088:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"15080:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15074:15:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":4582,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"15073:17:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes2","typeString":"bytes2"},"id":4597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"arguments":[{"id":4588,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4545,"src":"15130:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4587,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15124:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4586,"name":"bytes","nodeType":"ElementaryTypeName","src":"15124:5:19","typeDescriptions":{}}},"id":4589,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15124:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4590,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4547,"src":"15138:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4585,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4718,"src":"15101:22:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":4591,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15101:43:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4584,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15094:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":4583,"name":"bytes2","nodeType":"ElementaryTypeName","src":"15094:6:19","typeDescriptions":{}}},"id":4592,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15094:51:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"3078","id":4595,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15156:4:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""},"value":"0x"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""}],"id":4594,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15149:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":4593,"name":"bytes2","nodeType":"ElementaryTypeName","src":"15149:6:19","typeDescriptions":{}}},"id":4596,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15149:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"src":"15094:67:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15073:88:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"15056:105:19"},{"assignments":[4601],"declarations":[{"constant":false,"id":4601,"mutability":"mutable","name":"expectedLength","nameLocation":"15250:14:19","nodeType":"VariableDeclaration","scope":4645,"src":"15242:22:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4600,"name":"uint256","nodeType":"ElementaryTypeName","src":"15242:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4609,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3430","id":4602,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15267:2:19","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4603,"name":"hasPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4576,"src":"15272:9:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15282:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8125,"src":"15272:16:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":4605,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15272:18:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":4606,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15293:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15272:22:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15267:27:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15242:52:19"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4610,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4549,"src":"15359:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4611,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4547,"src":"15365:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15359:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4613,"name":"expectedLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4601,"src":"15374:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15359:29:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4643,"nodeType":"Block","src":"15639:51:19","statements":[{"expression":{"components":[{"hexValue":"66616c7365","id":4636,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"15661:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":4639,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15676:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4638,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15668:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4637,"name":"address","nodeType":"ElementaryTypeName","src":"15668:7:19","typeDescriptions":{}}},"id":4640,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15668:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":4641,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"15660:19:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":4555,"id":4642,"nodeType":"Return","src":"15653:26:19"}]},"id":4644,"nodeType":"IfStatement","src":"15355:335:19","trueBody":{"id":4635,"nodeType":"Block","src":"15390:243:19","statements":[{"assignments":[4616,4618],"declarations":[{"constant":false,"id":4616,"mutability":"mutable","name":"s","nameLocation":"15511:1:19","nodeType":"VariableDeclaration","scope":4635,"src":"15506:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4615,"name":"bool","nodeType":"ElementaryTypeName","src":"15506:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4618,"mutability":"mutable","name":"v","nameLocation":"15522:1:19","nodeType":"VariableDeclaration","scope":4635,"src":"15514:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4617,"name":"uint256","nodeType":"ElementaryTypeName","src":"15514:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4624,"initialValue":{"arguments":[{"id":4620,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4545,"src":"15559:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":4621,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4547,"src":"15566:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4622,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4549,"src":"15573:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4619,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4471,"src":"15527:31:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":4623,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15527:50:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"15505:72:19"},{"expression":{"components":[{"id":4625,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4616,"src":"15599:1:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"arguments":[{"arguments":[{"id":4630,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4618,"src":"15618:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4629,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15610:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":4628,"name":"uint160","nodeType":"ElementaryTypeName","src":"15610:7:19","typeDescriptions":{}}},"id":4631,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15610:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":4627,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15602:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4626,"name":"address","nodeType":"ElementaryTypeName","src":"15602:7:19","typeDescriptions":{}}},"id":4632,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15602:19:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":4633,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"15598:24:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":4555,"id":4634,"nodeType":"Return","src":"15591:31:19"}]}}]},"documentation":{"id":4543,"nodeType":"StructuredDocumentation","src":"14599:203:19","text":" @dev Variant of {parseAddress-string-uint256-uint256} that returns false if the parsing fails because input is not a properly\n formatted address. See {parseAddress} requirements."},"id":4646,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseAddress","nameLocation":"14816:15:19","nodeType":"FunctionDefinition","parameters":{"id":4550,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4545,"mutability":"mutable","name":"input","nameLocation":"14855:5:19","nodeType":"VariableDeclaration","scope":4646,"src":"14841:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4544,"name":"string","nodeType":"ElementaryTypeName","src":"14841:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4547,"mutability":"mutable","name":"begin","nameLocation":"14878:5:19","nodeType":"VariableDeclaration","scope":4646,"src":"14870:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4546,"name":"uint256","nodeType":"ElementaryTypeName","src":"14870:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4549,"mutability":"mutable","name":"end","nameLocation":"14901:3:19","nodeType":"VariableDeclaration","scope":4646,"src":"14893:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4548,"name":"uint256","nodeType":"ElementaryTypeName","src":"14893:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14831:79:19"},"returnParameters":{"id":4555,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4552,"mutability":"mutable","name":"success","nameLocation":"14939:7:19","nodeType":"VariableDeclaration","scope":4646,"src":"14934:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4551,"name":"bool","nodeType":"ElementaryTypeName","src":"14934:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4554,"mutability":"mutable","name":"value","nameLocation":"14956:5:19","nodeType":"VariableDeclaration","scope":4646,"src":"14948:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4553,"name":"address","nodeType":"ElementaryTypeName","src":"14948:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14933:29:19"},"scope":4719,"src":"14807:889:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4705,"nodeType":"Block","src":"15765:461:19","statements":[{"assignments":[4654],"declarations":[{"constant":false,"id":4654,"mutability":"mutable","name":"value","nameLocation":"15781:5:19","nodeType":"VariableDeclaration","scope":4705,"src":"15775:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4653,"name":"uint8","nodeType":"ElementaryTypeName","src":"15775:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":4659,"initialValue":{"arguments":[{"id":4657,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4648,"src":"15795:3:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":4656,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15789:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":4655,"name":"uint8","nodeType":"ElementaryTypeName","src":"15789:5:19","typeDescriptions":{}}},"id":4658,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15789:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"15775:24:19"},{"id":4702,"nodeType":"UncheckedBlock","src":"15959:238:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4660,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4654,"src":"15987:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3437","id":4661,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15995:2:19","typeDescriptions":{"typeIdentifier":"t_rational_47_by_1","typeString":"int_const 47"},"value":"47"},"src":"15987:10:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4663,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4654,"src":"16001:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3538","id":4664,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16009:2:19","typeDescriptions":{"typeIdentifier":"t_rational_58_by_1","typeString":"int_const 58"},"value":"58"},"src":"16001:10:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15987:24:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4671,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4654,"src":"16047:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":4672,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16055:2:19","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"16047:10:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4674,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4654,"src":"16061:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"313033","id":4675,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16069:3:19","typeDescriptions":{"typeIdentifier":"t_rational_103_by_1","typeString":"int_const 103"},"value":"103"},"src":"16061:11:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16047:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4682,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4654,"src":"16108:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3634","id":4683,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16116:2:19","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"16108:10:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4685,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4654,"src":"16122:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3731","id":4686,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16130:2:19","typeDescriptions":{"typeIdentifier":"t_rational_71_by_1","typeString":"int_const 71"},"value":"71"},"src":"16122:10:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16108:24:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"expression":{"arguments":[{"id":4695,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16176:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":4694,"name":"uint8","nodeType":"ElementaryTypeName","src":"16176:5:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":4693,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16171:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4696,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16171:11:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":4697,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16183:3:19","memberName":"max","nodeType":"MemberAccess","src":"16171:15:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":4652,"id":4698,"nodeType":"Return","src":"16164:22:19"},"id":4699,"nodeType":"IfStatement","src":"16104:82:19","trueBody":{"expression":{"id":4691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4689,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4654,"src":"16134:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3535","id":4690,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16143:2:19","typeDescriptions":{"typeIdentifier":"t_rational_55_by_1","typeString":"int_const 55"},"value":"55"},"src":"16134:11:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":4692,"nodeType":"ExpressionStatement","src":"16134:11:19"}},"id":4700,"nodeType":"IfStatement","src":"16043:143:19","trueBody":{"expression":{"id":4680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4678,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4654,"src":"16074:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3837","id":4679,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16083:2:19","typeDescriptions":{"typeIdentifier":"t_rational_87_by_1","typeString":"int_const 87"},"value":"87"},"src":"16074:11:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":4681,"nodeType":"ExpressionStatement","src":"16074:11:19"}},"id":4701,"nodeType":"IfStatement","src":"15983:203:19","trueBody":{"expression":{"id":4669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4667,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4654,"src":"16013:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3438","id":4668,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16022:2:19","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"src":"16013:11:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":4670,"nodeType":"ExpressionStatement","src":"16013:11:19"}}]},{"expression":{"id":4703,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4654,"src":"16214:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":4652,"id":4704,"nodeType":"Return","src":"16207:12:19"}]},"id":4706,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseChr","nameLocation":"15711:12:19","nodeType":"FunctionDefinition","parameters":{"id":4649,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4648,"mutability":"mutable","name":"chr","nameLocation":"15731:3:19","nodeType":"VariableDeclaration","scope":4706,"src":"15724:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":4647,"name":"bytes1","nodeType":"ElementaryTypeName","src":"15724:6:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"src":"15723:12:19"},"returnParameters":{"id":4652,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4651,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4706,"src":"15758:5:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4650,"name":"uint8","nodeType":"ElementaryTypeName","src":"15758:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"15757:7:19"},"scope":4719,"src":"15702:524:19","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":4717,"nodeType":"Block","src":"16611:225:19","statements":[{"AST":{"nodeType":"YulBlock","src":"16760:70:19","statements":[{"nodeType":"YulAssignment","src":"16774:46:19","value":{"arguments":[{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"16793:6:19"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16805:4:19","type":"","value":"0x20"},{"name":"offset","nodeType":"YulIdentifier","src":"16811:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16801:3:19"},"nodeType":"YulFunctionCall","src":"16801:17:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16789:3:19"},"nodeType":"YulFunctionCall","src":"16789:30:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16783:5:19"},"nodeType":"YulFunctionCall","src":"16783:37:19"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"16774:5:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4709,"isOffset":false,"isSlot":false,"src":"16793:6:19","valueSize":1},{"declaration":4711,"isOffset":false,"isSlot":false,"src":"16811:6:19","valueSize":1},{"declaration":4714,"isOffset":false,"isSlot":false,"src":"16774:5:19","valueSize":1}],"flags":["memory-safe"],"id":4716,"nodeType":"InlineAssembly","src":"16735:95:19"}]},"documentation":{"id":4707,"nodeType":"StructuredDocumentation","src":"16232:268:19","text":" @dev Reads a bytes32 from a bytes array without bounds checking.\n NOTE: making this function internal would mean it could be used with memory unsafe offset, and marking the\n assembly block as such would prevent some optimizations."},"id":4718,"implemented":true,"kind":"function","modifiers":[],"name":"_unsafeReadBytesOffset","nameLocation":"16514:22:19","nodeType":"FunctionDefinition","parameters":{"id":4712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4709,"mutability":"mutable","name":"buffer","nameLocation":"16550:6:19","nodeType":"VariableDeclaration","scope":4718,"src":"16537:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4708,"name":"bytes","nodeType":"ElementaryTypeName","src":"16537:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4711,"mutability":"mutable","name":"offset","nameLocation":"16566:6:19","nodeType":"VariableDeclaration","scope":4718,"src":"16558:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4710,"name":"uint256","nodeType":"ElementaryTypeName","src":"16558:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16536:37:19"},"returnParameters":{"id":4715,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4714,"mutability":"mutable","name":"value","nameLocation":"16604:5:19","nodeType":"VariableDeclaration","scope":4718,"src":"16596:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4713,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16596:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"16595:15:19"},"scope":4719,"src":"16505:331:19","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":4720,"src":"297:16541:19","usedErrors":[3543,3546,3549],"usedEvents":[]}],"src":"101:16738:19"},"id":19},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","exportedSymbols":{"ERC165":[4743],"IERC165":[4755]},"id":4744,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4721,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"114:24:20"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"./IERC165.sol","id":4723,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4744,"sourceUnit":4756,"src":"140:38:20","symbolAliases":[{"foreign":{"id":4722,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4755,"src":"148:7:20","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":4725,"name":"IERC165","nameLocations":["688:7:20"],"nodeType":"IdentifierPath","referencedDeclaration":4755,"src":"688:7:20"},"id":4726,"nodeType":"InheritanceSpecifier","src":"688:7:20"}],"canonicalName":"ERC165","contractDependencies":[],"contractKind":"contract","documentation":{"id":4724,"nodeType":"StructuredDocumentation","src":"180:479:20","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"},"fullyImplemented":true,"id":4743,"linearizedBaseContracts":[4743,4755],"name":"ERC165","nameLocation":"678:6:20","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[4754],"body":{"id":4741,"nodeType":"Block","src":"845:64:20","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":4739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4734,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4729,"src":"862:11:20","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":4736,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4755,"src":"882:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$4755_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$4755_$","typeString":"type(contract IERC165)"}],"id":4735,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"877:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4737,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"877:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$4755","typeString":"type(contract IERC165)"}},"id":4738,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"891:11:20","memberName":"interfaceId","nodeType":"MemberAccess","src":"877:25:20","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"862:40:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4733,"id":4740,"nodeType":"Return","src":"855:47:20"}]},"documentation":{"id":4727,"nodeType":"StructuredDocumentation","src":"702:56:20","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":4742,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"772:17:20","nodeType":"FunctionDefinition","parameters":{"id":4730,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4729,"mutability":"mutable","name":"interfaceId","nameLocation":"797:11:20","nodeType":"VariableDeclaration","scope":4742,"src":"790:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":4728,"name":"bytes4","nodeType":"ElementaryTypeName","src":"790:6:20","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"789:20:20"},"returnParameters":{"id":4733,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4732,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4742,"src":"839:4:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4731,"name":"bool","nodeType":"ElementaryTypeName","src":"839:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"838:6:20"},"scope":4743,"src":"763:146:20","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":4744,"src":"660:251:20","usedErrors":[],"usedEvents":[]}],"src":"114:798:20"},"id":20},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[4755]},"id":4756,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4745,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"115:24:21"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":4746,"nodeType":"StructuredDocumentation","src":"141:280:21","text":" @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":4755,"linearizedBaseContracts":[4755],"name":"IERC165","nameLocation":"432:7:21","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":4747,"nodeType":"StructuredDocumentation","src":"446:340:21","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":4754,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"800:17:21","nodeType":"FunctionDefinition","parameters":{"id":4750,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4749,"mutability":"mutable","name":"interfaceId","nameLocation":"825:11:21","nodeType":"VariableDeclaration","scope":4754,"src":"818:18:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":4748,"name":"bytes4","nodeType":"ElementaryTypeName","src":"818:6:21","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"817:20:21"},"returnParameters":{"id":4753,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4752,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4754,"src":"861:4:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4751,"name":"bool","nodeType":"ElementaryTypeName","src":"861:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"860:6:21"},"scope":4755,"src":"791:76:21","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":4756,"src":"422:447:21","usedErrors":[],"usedEvents":[]}],"src":"115:755:21"},"id":21},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[6361],"Panic":[3148],"SafeCast":[8126]},"id":6362,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4757,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"103:24:22"},{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","file":"../Panic.sol","id":4759,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6362,"sourceUnit":3149,"src":"129:35:22","symbolAliases":[{"foreign":{"id":4758,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3148,"src":"137:5:22","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":4761,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6362,"sourceUnit":8127,"src":"165:40:22","symbolAliases":[{"foreign":{"id":4760,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8126,"src":"173:8:22","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":4762,"nodeType":"StructuredDocumentation","src":"207:73:22","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":6361,"linearizedBaseContracts":[6361],"name":"Math","nameLocation":"289:4:22","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":4767,"members":[{"id":4763,"name":"Floor","nameLocation":"324:5:22","nodeType":"EnumValue","src":"324:5:22"},{"id":4764,"name":"Ceil","nameLocation":"367:4:22","nodeType":"EnumValue","src":"367:4:22"},{"id":4765,"name":"Trunc","nameLocation":"409:5:22","nodeType":"EnumValue","src":"409:5:22"},{"id":4766,"name":"Expand","nameLocation":"439:6:22","nodeType":"EnumValue","src":"439:6:22"}],"name":"Rounding","nameLocation":"305:8:22","nodeType":"EnumDefinition","src":"300:169:22"},{"body":{"id":4798,"nodeType":"Block","src":"677:140:22","statements":[{"id":4797,"nodeType":"UncheckedBlock","src":"687:124:22","statements":[{"assignments":[4780],"declarations":[{"constant":false,"id":4780,"mutability":"mutable","name":"c","nameLocation":"719:1:22","nodeType":"VariableDeclaration","scope":4797,"src":"711:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4779,"name":"uint256","nodeType":"ElementaryTypeName","src":"711:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4784,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4781,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4770,"src":"723:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":4782,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4772,"src":"727:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"723:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"711:17:22"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4785,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4780,"src":"746:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4786,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4770,"src":"750:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"746:5:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4792,"nodeType":"IfStatement","src":"742:28:22","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4788,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"761:5:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4789,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"768:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4790,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"760:10:22","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4778,"id":4791,"nodeType":"Return","src":"753:17:22"}},{"expression":{"components":[{"hexValue":"74727565","id":4793,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"792:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":4794,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4780,"src":"798:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4795,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"791:9:22","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":4778,"id":4796,"nodeType":"Return","src":"784:16:22"}]}]},"documentation":{"id":4768,"nodeType":"StructuredDocumentation","src":"475:106:22","text":" @dev Returns the addition of two unsigned integers, with an success flag (no overflow)."},"id":4799,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"595:6:22","nodeType":"FunctionDefinition","parameters":{"id":4773,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4770,"mutability":"mutable","name":"a","nameLocation":"610:1:22","nodeType":"VariableDeclaration","scope":4799,"src":"602:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4769,"name":"uint256","nodeType":"ElementaryTypeName","src":"602:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4772,"mutability":"mutable","name":"b","nameLocation":"621:1:22","nodeType":"VariableDeclaration","scope":4799,"src":"613:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4771,"name":"uint256","nodeType":"ElementaryTypeName","src":"613:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"601:22:22"},"returnParameters":{"id":4778,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4775,"mutability":"mutable","name":"success","nameLocation":"652:7:22","nodeType":"VariableDeclaration","scope":4799,"src":"647:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4774,"name":"bool","nodeType":"ElementaryTypeName","src":"647:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4777,"mutability":"mutable","name":"result","nameLocation":"669:6:22","nodeType":"VariableDeclaration","scope":4799,"src":"661:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4776,"name":"uint256","nodeType":"ElementaryTypeName","src":"661:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"646:30:22"},"scope":6361,"src":"586:231:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4826,"nodeType":"Block","src":"1028:113:22","statements":[{"id":4825,"nodeType":"UncheckedBlock","src":"1038:97:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4811,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4804,"src":"1066:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4812,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4802,"src":"1070:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1066:5:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4818,"nodeType":"IfStatement","src":"1062:28:22","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4814,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1081:5:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4815,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1088:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4816,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1080:10:22","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4810,"id":4817,"nodeType":"Return","src":"1073:17:22"}},{"expression":{"components":[{"hexValue":"74727565","id":4819,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1112:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4820,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4802,"src":"1118:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4821,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4804,"src":"1122:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1118:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4823,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1111:13:22","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":4810,"id":4824,"nodeType":"Return","src":"1104:20:22"}]}]},"documentation":{"id":4800,"nodeType":"StructuredDocumentation","src":"823:109:22","text":" @dev Returns the subtraction of two unsigned integers, with an success flag (no overflow)."},"id":4827,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"946:6:22","nodeType":"FunctionDefinition","parameters":{"id":4805,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4802,"mutability":"mutable","name":"a","nameLocation":"961:1:22","nodeType":"VariableDeclaration","scope":4827,"src":"953:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4801,"name":"uint256","nodeType":"ElementaryTypeName","src":"953:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4804,"mutability":"mutable","name":"b","nameLocation":"972:1:22","nodeType":"VariableDeclaration","scope":4827,"src":"964:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4803,"name":"uint256","nodeType":"ElementaryTypeName","src":"964:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"952:22:22"},"returnParameters":{"id":4810,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4807,"mutability":"mutable","name":"success","nameLocation":"1003:7:22","nodeType":"VariableDeclaration","scope":4827,"src":"998:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4806,"name":"bool","nodeType":"ElementaryTypeName","src":"998:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4809,"mutability":"mutable","name":"result","nameLocation":"1020:6:22","nodeType":"VariableDeclaration","scope":4827,"src":"1012:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4808,"name":"uint256","nodeType":"ElementaryTypeName","src":"1012:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"997:30:22"},"scope":6361,"src":"937:204:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4868,"nodeType":"Block","src":"1355:417:22","statements":[{"id":4867,"nodeType":"UncheckedBlock","src":"1365:401:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4839,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4830,"src":"1623:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4840,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1628:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1623:6:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4846,"nodeType":"IfStatement","src":"1619:28:22","trueBody":{"expression":{"components":[{"hexValue":"74727565","id":4842,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1639:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"hexValue":"30","id":4843,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1645:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4844,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1638:9:22","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4838,"id":4845,"nodeType":"Return","src":"1631:16:22"}},{"assignments":[4848],"declarations":[{"constant":false,"id":4848,"mutability":"mutable","name":"c","nameLocation":"1669:1:22","nodeType":"VariableDeclaration","scope":4867,"src":"1661:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4847,"name":"uint256","nodeType":"ElementaryTypeName","src":"1661:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4852,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4849,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4830,"src":"1673:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4850,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4832,"src":"1677:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1673:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1661:17:22"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4853,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4848,"src":"1696:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4854,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4830,"src":"1700:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1696:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4856,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4832,"src":"1705:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1696:10:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4862,"nodeType":"IfStatement","src":"1692:33:22","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4858,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1716:5:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4859,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1723:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4860,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1715:10:22","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4838,"id":4861,"nodeType":"Return","src":"1708:17:22"}},{"expression":{"components":[{"hexValue":"74727565","id":4863,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1747:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":4864,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4848,"src":"1753:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4865,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1746:9:22","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":4838,"id":4866,"nodeType":"Return","src":"1739:16:22"}]}]},"documentation":{"id":4828,"nodeType":"StructuredDocumentation","src":"1147:112:22","text":" @dev Returns the multiplication of two unsigned integers, with an success flag (no overflow)."},"id":4869,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"1273:6:22","nodeType":"FunctionDefinition","parameters":{"id":4833,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4830,"mutability":"mutable","name":"a","nameLocation":"1288:1:22","nodeType":"VariableDeclaration","scope":4869,"src":"1280:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4829,"name":"uint256","nodeType":"ElementaryTypeName","src":"1280:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4832,"mutability":"mutable","name":"b","nameLocation":"1299:1:22","nodeType":"VariableDeclaration","scope":4869,"src":"1291:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4831,"name":"uint256","nodeType":"ElementaryTypeName","src":"1291:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1279:22:22"},"returnParameters":{"id":4838,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4835,"mutability":"mutable","name":"success","nameLocation":"1330:7:22","nodeType":"VariableDeclaration","scope":4869,"src":"1325:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4834,"name":"bool","nodeType":"ElementaryTypeName","src":"1325:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4837,"mutability":"mutable","name":"result","nameLocation":"1347:6:22","nodeType":"VariableDeclaration","scope":4869,"src":"1339:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4836,"name":"uint256","nodeType":"ElementaryTypeName","src":"1339:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1324:30:22"},"scope":6361,"src":"1264:508:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4896,"nodeType":"Block","src":"1987:114:22","statements":[{"id":4895,"nodeType":"UncheckedBlock","src":"1997:98:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4881,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4874,"src":"2025:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4882,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2030:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2025:6:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4888,"nodeType":"IfStatement","src":"2021:29:22","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4884,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2041:5:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4885,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2048:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4886,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2040:10:22","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4880,"id":4887,"nodeType":"Return","src":"2033:17:22"}},{"expression":{"components":[{"hexValue":"74727565","id":4889,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2072:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4890,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4872,"src":"2078:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4891,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4874,"src":"2082:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2078:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4893,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2071:13:22","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":4880,"id":4894,"nodeType":"Return","src":"2064:20:22"}]}]},"documentation":{"id":4870,"nodeType":"StructuredDocumentation","src":"1778:113:22","text":" @dev Returns the division of two unsigned integers, with a success flag (no division by zero)."},"id":4897,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"1905:6:22","nodeType":"FunctionDefinition","parameters":{"id":4875,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4872,"mutability":"mutable","name":"a","nameLocation":"1920:1:22","nodeType":"VariableDeclaration","scope":4897,"src":"1912:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4871,"name":"uint256","nodeType":"ElementaryTypeName","src":"1912:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4874,"mutability":"mutable","name":"b","nameLocation":"1931:1:22","nodeType":"VariableDeclaration","scope":4897,"src":"1923:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4873,"name":"uint256","nodeType":"ElementaryTypeName","src":"1923:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1911:22:22"},"returnParameters":{"id":4880,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4877,"mutability":"mutable","name":"success","nameLocation":"1962:7:22","nodeType":"VariableDeclaration","scope":4897,"src":"1957:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4876,"name":"bool","nodeType":"ElementaryTypeName","src":"1957:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4879,"mutability":"mutable","name":"result","nameLocation":"1979:6:22","nodeType":"VariableDeclaration","scope":4897,"src":"1971:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4878,"name":"uint256","nodeType":"ElementaryTypeName","src":"1971:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1956:30:22"},"scope":6361,"src":"1896:205:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4924,"nodeType":"Block","src":"2326:114:22","statements":[{"id":4923,"nodeType":"UncheckedBlock","src":"2336:98:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4909,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4902,"src":"2364:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4910,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2369:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2364:6:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4916,"nodeType":"IfStatement","src":"2360:29:22","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4912,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2380:5:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4913,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2387:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4914,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2379:10:22","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4908,"id":4915,"nodeType":"Return","src":"2372:17:22"}},{"expression":{"components":[{"hexValue":"74727565","id":4917,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2411:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4918,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4900,"src":"2417:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":4919,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4902,"src":"2421:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2417:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4921,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2410:13:22","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":4908,"id":4922,"nodeType":"Return","src":"2403:20:22"}]}]},"documentation":{"id":4898,"nodeType":"StructuredDocumentation","src":"2107:123:22","text":" @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero)."},"id":4925,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"2244:6:22","nodeType":"FunctionDefinition","parameters":{"id":4903,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4900,"mutability":"mutable","name":"a","nameLocation":"2259:1:22","nodeType":"VariableDeclaration","scope":4925,"src":"2251:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4899,"name":"uint256","nodeType":"ElementaryTypeName","src":"2251:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4902,"mutability":"mutable","name":"b","nameLocation":"2270:1:22","nodeType":"VariableDeclaration","scope":4925,"src":"2262:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4901,"name":"uint256","nodeType":"ElementaryTypeName","src":"2262:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2250:22:22"},"returnParameters":{"id":4908,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4905,"mutability":"mutable","name":"success","nameLocation":"2301:7:22","nodeType":"VariableDeclaration","scope":4925,"src":"2296:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4904,"name":"bool","nodeType":"ElementaryTypeName","src":"2296:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4907,"mutability":"mutable","name":"result","nameLocation":"2318:6:22","nodeType":"VariableDeclaration","scope":4925,"src":"2310:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4906,"name":"uint256","nodeType":"ElementaryTypeName","src":"2310:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2295:30:22"},"scope":6361,"src":"2235:205:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4951,"nodeType":"Block","src":"2912:207:22","statements":[{"id":4950,"nodeType":"UncheckedBlock","src":"2922:191:22","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4948,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4937,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4932,"src":"3060:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4938,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4930,"src":"3066:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":4939,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4932,"src":"3070:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3066:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4941,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3065:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":4944,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4928,"src":"3091:9:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4942,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8126,"src":"3075:8:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8126_$","typeString":"type(library SafeCast)"}},"id":4943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3084:6:22","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8125,"src":"3075:15:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4945,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3075:26:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3065:36:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4947,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3064:38:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3060:42:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4936,"id":4949,"nodeType":"Return","src":"3053:49:22"}]}]},"documentation":{"id":4926,"nodeType":"StructuredDocumentation","src":"2446:374:22","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":4952,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"2834:7:22","nodeType":"FunctionDefinition","parameters":{"id":4933,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4928,"mutability":"mutable","name":"condition","nameLocation":"2847:9:22","nodeType":"VariableDeclaration","scope":4952,"src":"2842:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4927,"name":"bool","nodeType":"ElementaryTypeName","src":"2842:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4930,"mutability":"mutable","name":"a","nameLocation":"2866:1:22","nodeType":"VariableDeclaration","scope":4952,"src":"2858:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4929,"name":"uint256","nodeType":"ElementaryTypeName","src":"2858:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4932,"mutability":"mutable","name":"b","nameLocation":"2877:1:22","nodeType":"VariableDeclaration","scope":4952,"src":"2869:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4931,"name":"uint256","nodeType":"ElementaryTypeName","src":"2869:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2841:38:22"},"returnParameters":{"id":4936,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4935,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4952,"src":"2903:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4934,"name":"uint256","nodeType":"ElementaryTypeName","src":"2903:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2902:9:22"},"scope":6361,"src":"2825:294:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4970,"nodeType":"Block","src":"3256:44:22","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4963,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4955,"src":"3281:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4964,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4957,"src":"3285:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3281:5:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":4966,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4955,"src":"3288:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4967,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4957,"src":"3291:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4962,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4952,"src":"3273:7:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":4968,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3273:20:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4961,"id":4969,"nodeType":"Return","src":"3266:27:22"}]},"documentation":{"id":4953,"nodeType":"StructuredDocumentation","src":"3125:59:22","text":" @dev Returns the largest of two numbers."},"id":4971,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"3198:3:22","nodeType":"FunctionDefinition","parameters":{"id":4958,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4955,"mutability":"mutable","name":"a","nameLocation":"3210:1:22","nodeType":"VariableDeclaration","scope":4971,"src":"3202:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4954,"name":"uint256","nodeType":"ElementaryTypeName","src":"3202:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4957,"mutability":"mutable","name":"b","nameLocation":"3221:1:22","nodeType":"VariableDeclaration","scope":4971,"src":"3213:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4956,"name":"uint256","nodeType":"ElementaryTypeName","src":"3213:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3201:22:22"},"returnParameters":{"id":4961,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4960,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4971,"src":"3247:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4959,"name":"uint256","nodeType":"ElementaryTypeName","src":"3247:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3246:9:22"},"scope":6361,"src":"3189:111:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4989,"nodeType":"Block","src":"3438:44:22","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4982,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4974,"src":"3463:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4983,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4976,"src":"3467:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3463:5:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":4985,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4974,"src":"3470:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4986,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4976,"src":"3473:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4981,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4952,"src":"3455:7:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":4987,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3455:20:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4980,"id":4988,"nodeType":"Return","src":"3448:27:22"}]},"documentation":{"id":4972,"nodeType":"StructuredDocumentation","src":"3306:60:22","text":" @dev Returns the smallest of two numbers."},"id":4990,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"3380:3:22","nodeType":"FunctionDefinition","parameters":{"id":4977,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4974,"mutability":"mutable","name":"a","nameLocation":"3392:1:22","nodeType":"VariableDeclaration","scope":4990,"src":"3384:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4973,"name":"uint256","nodeType":"ElementaryTypeName","src":"3384:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4976,"mutability":"mutable","name":"b","nameLocation":"3403:1:22","nodeType":"VariableDeclaration","scope":4990,"src":"3395:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4975,"name":"uint256","nodeType":"ElementaryTypeName","src":"3395:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3383:22:22"},"returnParameters":{"id":4980,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4979,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4990,"src":"3429:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4978,"name":"uint256","nodeType":"ElementaryTypeName","src":"3429:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3428:9:22"},"scope":6361,"src":"3371:111:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5012,"nodeType":"Block","src":"3666:82:22","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5000,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4993,"src":"3721:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":5001,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4995,"src":"3725:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3721:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5003,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3720:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5004,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4993,"src":"3731:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":5005,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4995,"src":"3735:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3731:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5007,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3730:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":5008,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3740:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"3730:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3720:21:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4999,"id":5011,"nodeType":"Return","src":"3713:28:22"}]},"documentation":{"id":4991,"nodeType":"StructuredDocumentation","src":"3488:102:22","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":5013,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"3604:7:22","nodeType":"FunctionDefinition","parameters":{"id":4996,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4993,"mutability":"mutable","name":"a","nameLocation":"3620:1:22","nodeType":"VariableDeclaration","scope":5013,"src":"3612:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4992,"name":"uint256","nodeType":"ElementaryTypeName","src":"3612:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4995,"mutability":"mutable","name":"b","nameLocation":"3631:1:22","nodeType":"VariableDeclaration","scope":5013,"src":"3623:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4994,"name":"uint256","nodeType":"ElementaryTypeName","src":"3623:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3611:22:22"},"returnParameters":{"id":4999,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4998,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5013,"src":"3657:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4997,"name":"uint256","nodeType":"ElementaryTypeName","src":"3657:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3656:9:22"},"scope":6361,"src":"3595:153:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5053,"nodeType":"Block","src":"4040:633:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5023,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5018,"src":"4054:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5024,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4059:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4054:6:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5034,"nodeType":"IfStatement","src":"4050:150:22","trueBody":{"id":5033,"nodeType":"Block","src":"4062:138:22","statements":[{"expression":{"arguments":[{"expression":{"id":5029,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3148,"src":"4166:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$3148_$","typeString":"type(library Panic)"}},"id":5030,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4172:16:22","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":3115,"src":"4166:22:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5026,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3148,"src":"4154:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$3148_$","typeString":"type(library Panic)"}},"id":5028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4160:5:22","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":3147,"src":"4154:11:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":5031,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4154:35:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5032,"nodeType":"ExpressionStatement","src":"4154:35:22"}]}},{"id":5052,"nodeType":"UncheckedBlock","src":"4583:84:22","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5037,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5016,"src":"4630:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5038,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4634:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4630:5:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5035,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8126,"src":"4614:8:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8126_$","typeString":"type(library SafeCast)"}},"id":5036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4623:6:22","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8125,"src":"4614:15:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5040,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4614:22:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5041,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5016,"src":"4641:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5042,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4645:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4641:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5044,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4640:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5045,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5018,"src":"4650:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4640:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":5047,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4654:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4640:15:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5049,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4639:17:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4614:42:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5022,"id":5051,"nodeType":"Return","src":"4607:49:22"}]}]},"documentation":{"id":5014,"nodeType":"StructuredDocumentation","src":"3754:210:22","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."},"id":5054,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"3978:7:22","nodeType":"FunctionDefinition","parameters":{"id":5019,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5016,"mutability":"mutable","name":"a","nameLocation":"3994:1:22","nodeType":"VariableDeclaration","scope":5054,"src":"3986:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5015,"name":"uint256","nodeType":"ElementaryTypeName","src":"3986:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5018,"mutability":"mutable","name":"b","nameLocation":"4005:1:22","nodeType":"VariableDeclaration","scope":5054,"src":"3997:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5017,"name":"uint256","nodeType":"ElementaryTypeName","src":"3997:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3985:22:22"},"returnParameters":{"id":5022,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5021,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5054,"src":"4031:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5020,"name":"uint256","nodeType":"ElementaryTypeName","src":"4031:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4030:9:22"},"scope":6361,"src":"3969:704:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5190,"nodeType":"Block","src":"5094:4128:22","statements":[{"id":5189,"nodeType":"UncheckedBlock","src":"5104:4112:22","statements":[{"assignments":[5067],"declarations":[{"constant":false,"id":5067,"mutability":"mutable","name":"prod0","nameLocation":"5441:5:22","nodeType":"VariableDeclaration","scope":5189,"src":"5433:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5066,"name":"uint256","nodeType":"ElementaryTypeName","src":"5433:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5071,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5068,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5057,"src":"5449:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5069,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5059,"src":"5453:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5449:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5433:21:22"},{"assignments":[5073],"declarations":[{"constant":false,"id":5073,"mutability":"mutable","name":"prod1","nameLocation":"5521:5:22","nodeType":"VariableDeclaration","scope":5189,"src":"5513:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5072,"name":"uint256","nodeType":"ElementaryTypeName","src":"5513:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5074,"nodeType":"VariableDeclarationStatement","src":"5513:13:22"},{"AST":{"nodeType":"YulBlock","src":"5593:122:22","statements":[{"nodeType":"YulVariableDeclaration","src":"5611:30:22","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"5628:1:22"},{"name":"y","nodeType":"YulIdentifier","src":"5631:1:22"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5638:1:22","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"5634:3:22"},"nodeType":"YulFunctionCall","src":"5634:6:22"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"5621:6:22"},"nodeType":"YulFunctionCall","src":"5621:20:22"},"variables":[{"name":"mm","nodeType":"YulTypedName","src":"5615:2:22","type":""}]},{"nodeType":"YulAssignment","src":"5658:43:22","value":{"arguments":[{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"5675:2:22"},{"name":"prod0","nodeType":"YulIdentifier","src":"5679:5:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5671:3:22"},"nodeType":"YulFunctionCall","src":"5671:14:22"},{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"5690:2:22"},{"name":"prod0","nodeType":"YulIdentifier","src":"5694:5:22"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5687:2:22"},"nodeType":"YulFunctionCall","src":"5687:13:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5667:3:22"},"nodeType":"YulFunctionCall","src":"5667:34:22"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"5658:5:22"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5067,"isOffset":false,"isSlot":false,"src":"5679:5:22","valueSize":1},{"declaration":5067,"isOffset":false,"isSlot":false,"src":"5694:5:22","valueSize":1},{"declaration":5073,"isOffset":false,"isSlot":false,"src":"5658:5:22","valueSize":1},{"declaration":5057,"isOffset":false,"isSlot":false,"src":"5628:1:22","valueSize":1},{"declaration":5059,"isOffset":false,"isSlot":false,"src":"5631:1:22","valueSize":1}],"id":5075,"nodeType":"InlineAssembly","src":"5584:131:22"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5076,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5073,"src":"5796:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5077,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5805:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5796:10:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5084,"nodeType":"IfStatement","src":"5792:368:22","trueBody":{"id":5083,"nodeType":"Block","src":"5808:352:22","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5079,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5067,"src":"6126:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5080,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5061,"src":"6134:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6126:19:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5065,"id":5082,"nodeType":"Return","src":"6119:26:22"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5085,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5061,"src":"6270:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":5086,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5073,"src":"6285:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6270:20:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5103,"nodeType":"IfStatement","src":"6266:143:22","trueBody":{"id":5102,"nodeType":"Block","src":"6292:117:22","statements":[{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5094,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5092,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5061,"src":"6330:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5093,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6345:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6330:16:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":5095,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3148,"src":"6348:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$3148_$","typeString":"type(library Panic)"}},"id":5096,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6354:16:22","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":3115,"src":"6348:22:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":5097,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3148,"src":"6372:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$3148_$","typeString":"type(library Panic)"}},"id":5098,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6378:14:22","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":3111,"src":"6372:20:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5091,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4952,"src":"6322:7:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":5099,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6322:71:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5088,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3148,"src":"6310:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$3148_$","typeString":"type(library Panic)"}},"id":5090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6316:5:22","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":3147,"src":"6310:11:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":5100,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6310:84:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5101,"nodeType":"ExpressionStatement","src":"6310:84:22"}]}},{"assignments":[5105],"declarations":[{"constant":false,"id":5105,"mutability":"mutable","name":"remainder","nameLocation":"6672:9:22","nodeType":"VariableDeclaration","scope":5189,"src":"6664:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5104,"name":"uint256","nodeType":"ElementaryTypeName","src":"6664:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5106,"nodeType":"VariableDeclarationStatement","src":"6664:17:22"},{"AST":{"nodeType":"YulBlock","src":"6704:291:22","statements":[{"nodeType":"YulAssignment","src":"6773:38:22","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6793:1:22"},{"name":"y","nodeType":"YulIdentifier","src":"6796:1:22"},{"name":"denominator","nodeType":"YulIdentifier","src":"6799:11:22"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"6786:6:22"},"nodeType":"YulFunctionCall","src":"6786:25:22"},"variableNames":[{"name":"remainder","nodeType":"YulIdentifier","src":"6773:9:22"}]},{"nodeType":"YulAssignment","src":"6893:41:22","value":{"arguments":[{"name":"prod1","nodeType":"YulIdentifier","src":"6906:5:22"},{"arguments":[{"name":"remainder","nodeType":"YulIdentifier","src":"6916:9:22"},{"name":"prod0","nodeType":"YulIdentifier","src":"6927:5:22"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6913:2:22"},"nodeType":"YulFunctionCall","src":"6913:20:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6902:3:22"},"nodeType":"YulFunctionCall","src":"6902:32:22"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"6893:5:22"}]},{"nodeType":"YulAssignment","src":"6951:30:22","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"6964:5:22"},{"name":"remainder","nodeType":"YulIdentifier","src":"6971:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6960:3:22"},"nodeType":"YulFunctionCall","src":"6960:21:22"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"6951:5:22"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5061,"isOffset":false,"isSlot":false,"src":"6799:11:22","valueSize":1},{"declaration":5067,"isOffset":false,"isSlot":false,"src":"6927:5:22","valueSize":1},{"declaration":5067,"isOffset":false,"isSlot":false,"src":"6951:5:22","valueSize":1},{"declaration":5067,"isOffset":false,"isSlot":false,"src":"6964:5:22","valueSize":1},{"declaration":5073,"isOffset":false,"isSlot":false,"src":"6893:5:22","valueSize":1},{"declaration":5073,"isOffset":false,"isSlot":false,"src":"6906:5:22","valueSize":1},{"declaration":5105,"isOffset":false,"isSlot":false,"src":"6773:9:22","valueSize":1},{"declaration":5105,"isOffset":false,"isSlot":false,"src":"6916:9:22","valueSize":1},{"declaration":5105,"isOffset":false,"isSlot":false,"src":"6971:9:22","valueSize":1},{"declaration":5057,"isOffset":false,"isSlot":false,"src":"6793:1:22","valueSize":1},{"declaration":5059,"isOffset":false,"isSlot":false,"src":"6796:1:22","valueSize":1}],"id":5107,"nodeType":"InlineAssembly","src":"6695:300:22"},{"assignments":[5109],"declarations":[{"constant":false,"id":5109,"mutability":"mutable","name":"twos","nameLocation":"7207:4:22","nodeType":"VariableDeclaration","scope":5189,"src":"7199:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5108,"name":"uint256","nodeType":"ElementaryTypeName","src":"7199:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5116,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5110,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5061,"src":"7214:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"30","id":5111,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7229:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":5112,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5061,"src":"7233:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7229:15:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5114,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7228:17:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7214:31:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7199:46:22"},{"AST":{"nodeType":"YulBlock","src":"7268:366:22","statements":[{"nodeType":"YulAssignment","src":"7333:37:22","value":{"arguments":[{"name":"denominator","nodeType":"YulIdentifier","src":"7352:11:22"},{"name":"twos","nodeType":"YulIdentifier","src":"7365:4:22"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"7348:3:22"},"nodeType":"YulFunctionCall","src":"7348:22:22"},"variableNames":[{"name":"denominator","nodeType":"YulIdentifier","src":"7333:11:22"}]},{"nodeType":"YulAssignment","src":"7437:25:22","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"7450:5:22"},{"name":"twos","nodeType":"YulIdentifier","src":"7457:4:22"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"7446:3:22"},"nodeType":"YulFunctionCall","src":"7446:16:22"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"7437:5:22"}]},{"nodeType":"YulAssignment","src":"7581:39:22","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7601:1:22","type":"","value":"0"},{"name":"twos","nodeType":"YulIdentifier","src":"7604:4:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7597:3:22"},"nodeType":"YulFunctionCall","src":"7597:12:22"},{"name":"twos","nodeType":"YulIdentifier","src":"7611:4:22"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"7593:3:22"},"nodeType":"YulFunctionCall","src":"7593:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"7618:1:22","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7589:3:22"},"nodeType":"YulFunctionCall","src":"7589:31:22"},"variableNames":[{"name":"twos","nodeType":"YulIdentifier","src":"7581:4:22"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5061,"isOffset":false,"isSlot":false,"src":"7333:11:22","valueSize":1},{"declaration":5061,"isOffset":false,"isSlot":false,"src":"7352:11:22","valueSize":1},{"declaration":5067,"isOffset":false,"isSlot":false,"src":"7437:5:22","valueSize":1},{"declaration":5067,"isOffset":false,"isSlot":false,"src":"7450:5:22","valueSize":1},{"declaration":5109,"isOffset":false,"isSlot":false,"src":"7365:4:22","valueSize":1},{"declaration":5109,"isOffset":false,"isSlot":false,"src":"7457:4:22","valueSize":1},{"declaration":5109,"isOffset":false,"isSlot":false,"src":"7581:4:22","valueSize":1},{"declaration":5109,"isOffset":false,"isSlot":false,"src":"7604:4:22","valueSize":1},{"declaration":5109,"isOffset":false,"isSlot":false,"src":"7611:4:22","valueSize":1}],"id":5117,"nodeType":"InlineAssembly","src":"7259:375:22"},{"expression":{"id":5122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5118,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5067,"src":"7700:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5119,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5073,"src":"7709:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5120,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5109,"src":"7717:4:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7709:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7700:21:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5123,"nodeType":"ExpressionStatement","src":"7700:21:22"},{"assignments":[5125],"declarations":[{"constant":false,"id":5125,"mutability":"mutable","name":"inverse","nameLocation":"8064:7:22","nodeType":"VariableDeclaration","scope":5189,"src":"8056:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5124,"name":"uint256","nodeType":"ElementaryTypeName","src":"8056:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5132,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":5126,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8075:1:22","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5127,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5061,"src":"8079:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8075:15:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5129,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8074:17:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":5130,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8094:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"8074:21:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8056:39:22"},{"expression":{"id":5139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5133,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5125,"src":"8312:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5134,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8323:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5135,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5061,"src":"8327:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5136,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5125,"src":"8341:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8327:21:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8323:25:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8312:36:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5140,"nodeType":"ExpressionStatement","src":"8312:36:22"},{"expression":{"id":5147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5141,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5125,"src":"8382:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5142,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8393:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5143,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5061,"src":"8397:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5144,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5125,"src":"8411:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8397:21:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8393:25:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8382:36:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5148,"nodeType":"ExpressionStatement","src":"8382:36:22"},{"expression":{"id":5155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5149,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5125,"src":"8454:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5150,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8465:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5151,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5061,"src":"8469:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5152,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5125,"src":"8483:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8469:21:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8465:25:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8454:36:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5156,"nodeType":"ExpressionStatement","src":"8454:36:22"},{"expression":{"id":5163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5157,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5125,"src":"8525:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5158,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8536:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5159,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5061,"src":"8540:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5160,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5125,"src":"8554:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8540:21:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8536:25:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8525:36:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5164,"nodeType":"ExpressionStatement","src":"8525:36:22"},{"expression":{"id":5171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5165,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5125,"src":"8598:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5166,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8609:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5167,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5061,"src":"8613:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5168,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5125,"src":"8627:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8613:21:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8609:25:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8598:36:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5172,"nodeType":"ExpressionStatement","src":"8598:36:22"},{"expression":{"id":5179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5173,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5125,"src":"8672:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5174,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8683:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5175,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5061,"src":"8687:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5176,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5125,"src":"8701:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8687:21:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8683:25:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8672:36:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5180,"nodeType":"ExpressionStatement","src":"8672:36:22"},{"expression":{"id":5185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5181,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5064,"src":"9154:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5182,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5067,"src":"9163:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5183,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5125,"src":"9171:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9163:15:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9154:24:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5186,"nodeType":"ExpressionStatement","src":"9154:24:22"},{"expression":{"id":5187,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5064,"src":"9199:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5065,"id":5188,"nodeType":"Return","src":"9192:13:22"}]}]},"documentation":{"id":5055,"nodeType":"StructuredDocumentation","src":"4679:312:22","text":" @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."},"id":5191,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"5005:6:22","nodeType":"FunctionDefinition","parameters":{"id":5062,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5057,"mutability":"mutable","name":"x","nameLocation":"5020:1:22","nodeType":"VariableDeclaration","scope":5191,"src":"5012:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5056,"name":"uint256","nodeType":"ElementaryTypeName","src":"5012:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5059,"mutability":"mutable","name":"y","nameLocation":"5031:1:22","nodeType":"VariableDeclaration","scope":5191,"src":"5023:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5058,"name":"uint256","nodeType":"ElementaryTypeName","src":"5023:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5061,"mutability":"mutable","name":"denominator","nameLocation":"5042:11:22","nodeType":"VariableDeclaration","scope":5191,"src":"5034:19:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5060,"name":"uint256","nodeType":"ElementaryTypeName","src":"5034:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5011:43:22"},"returnParameters":{"id":5065,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5064,"mutability":"mutable","name":"result","nameLocation":"5086:6:22","nodeType":"VariableDeclaration","scope":5191,"src":"5078:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5063,"name":"uint256","nodeType":"ElementaryTypeName","src":"5078:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5077:16:22"},"scope":6361,"src":"4996:4226:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5227,"nodeType":"Block","src":"9461:128:22","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5207,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5194,"src":"9485:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5208,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5196,"src":"9488:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5209,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5198,"src":"9491:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5206,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[5191,5228],"referencedDeclaration":5191,"src":"9478:6:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":5210,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9478:25:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5214,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5201,"src":"9539:8:22","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4767","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4767","typeString":"enum Math.Rounding"}],"id":5213,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6360,"src":"9522:16:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4767_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5215,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9522:26:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5217,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5194,"src":"9559:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5218,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5196,"src":"9562:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5219,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5198,"src":"9565:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5216,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"9552:6:22","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":5220,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9552:25:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5221,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9580:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9552:29:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9522:59:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5211,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8126,"src":"9506:8:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8126_$","typeString":"type(library SafeCast)"}},"id":5212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9515:6:22","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8125,"src":"9506:15:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5224,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9506:76:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9478:104:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5205,"id":5226,"nodeType":"Return","src":"9471:111:22"}]},"documentation":{"id":5192,"nodeType":"StructuredDocumentation","src":"9228:118:22","text":" @dev Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":5228,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"9360:6:22","nodeType":"FunctionDefinition","parameters":{"id":5202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5194,"mutability":"mutable","name":"x","nameLocation":"9375:1:22","nodeType":"VariableDeclaration","scope":5228,"src":"9367:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5193,"name":"uint256","nodeType":"ElementaryTypeName","src":"9367:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5196,"mutability":"mutable","name":"y","nameLocation":"9386:1:22","nodeType":"VariableDeclaration","scope":5228,"src":"9378:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5195,"name":"uint256","nodeType":"ElementaryTypeName","src":"9378:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5198,"mutability":"mutable","name":"denominator","nameLocation":"9397:11:22","nodeType":"VariableDeclaration","scope":5228,"src":"9389:19:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5197,"name":"uint256","nodeType":"ElementaryTypeName","src":"9389:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5201,"mutability":"mutable","name":"rounding","nameLocation":"9419:8:22","nodeType":"VariableDeclaration","scope":5228,"src":"9410:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4767","typeString":"enum Math.Rounding"},"typeName":{"id":5200,"nodeType":"UserDefinedTypeName","pathNode":{"id":5199,"name":"Rounding","nameLocations":["9410:8:22"],"nodeType":"IdentifierPath","referencedDeclaration":4767,"src":"9410:8:22"},"referencedDeclaration":4767,"src":"9410:8:22","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4767","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"9366:62:22"},"returnParameters":{"id":5205,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5204,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5228,"src":"9452:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5203,"name":"uint256","nodeType":"ElementaryTypeName","src":"9452:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9451:9:22"},"scope":6361,"src":"9351:238:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5324,"nodeType":"Block","src":"10223:1849:22","statements":[{"id":5323,"nodeType":"UncheckedBlock","src":"10233:1833:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5238,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5233,"src":"10261:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5239,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10266:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10261:6:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5243,"nodeType":"IfStatement","src":"10257:20:22","trueBody":{"expression":{"hexValue":"30","id":5241,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10276:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":5237,"id":5242,"nodeType":"Return","src":"10269:8:22"}},{"assignments":[5245],"declarations":[{"constant":false,"id":5245,"mutability":"mutable","name":"remainder","nameLocation":"10756:9:22","nodeType":"VariableDeclaration","scope":5323,"src":"10748:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5244,"name":"uint256","nodeType":"ElementaryTypeName","src":"10748:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5249,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5246,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5231,"src":"10768:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":5247,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5233,"src":"10772:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10768:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10748:25:22"},{"assignments":[5251],"declarations":[{"constant":false,"id":5251,"mutability":"mutable","name":"gcd","nameLocation":"10795:3:22","nodeType":"VariableDeclaration","scope":5323,"src":"10787:11:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5250,"name":"uint256","nodeType":"ElementaryTypeName","src":"10787:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5253,"initialValue":{"id":5252,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5233,"src":"10801:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10787:15:22"},{"assignments":[5255],"declarations":[{"constant":false,"id":5255,"mutability":"mutable","name":"x","nameLocation":"10945:1:22","nodeType":"VariableDeclaration","scope":5323,"src":"10938:8:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5254,"name":"int256","nodeType":"ElementaryTypeName","src":"10938:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":5257,"initialValue":{"hexValue":"30","id":5256,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10949:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10938:12:22"},{"assignments":[5259],"declarations":[{"constant":false,"id":5259,"mutability":"mutable","name":"y","nameLocation":"10971:1:22","nodeType":"VariableDeclaration","scope":5323,"src":"10964:8:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5258,"name":"int256","nodeType":"ElementaryTypeName","src":"10964:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":5261,"initialValue":{"hexValue":"31","id":5260,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10975:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"10964:12:22"},{"body":{"id":5298,"nodeType":"Block","src":"11014:882:22","statements":[{"assignments":[5266],"declarations":[{"constant":false,"id":5266,"mutability":"mutable","name":"quotient","nameLocation":"11040:8:22","nodeType":"VariableDeclaration","scope":5298,"src":"11032:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5265,"name":"uint256","nodeType":"ElementaryTypeName","src":"11032:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5270,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5267,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5251,"src":"11051:3:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5268,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5245,"src":"11057:9:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11051:15:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11032:34:22"},{"expression":{"id":5281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":5271,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5251,"src":"11086:3:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5272,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5245,"src":"11091:9:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5273,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"11085:16:22","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":5274,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5245,"src":"11191:9:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5275,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5251,"src":"11436:3:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5276,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5245,"src":"11442:9:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5277,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5266,"src":"11454:8:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11442:20:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11436:26:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5280,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11104:376:22","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"src":"11085:395:22","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5282,"nodeType":"ExpressionStatement","src":"11085:395:22"},{"expression":{"id":5296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":5283,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5255,"src":"11500:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":5284,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5259,"src":"11503:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5285,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"11499:6:22","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":5286,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5259,"src":"11585:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5294,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5287,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5255,"src":"11839:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5288,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5259,"src":"11843:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":5291,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5266,"src":"11854:8:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5290,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11847:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":5289,"name":"int256","nodeType":"ElementaryTypeName","src":"11847:6:22","typeDescriptions":{}}},"id":5292,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11847:16:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"11843:20:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"11839:24:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5295,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11508:373:22","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"src":"11499:382:22","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5297,"nodeType":"ExpressionStatement","src":"11499:382:22"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5262,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5245,"src":"10998:9:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":5263,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11011:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10998:14:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5299,"nodeType":"WhileStatement","src":"10991:905:22"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5300,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5251,"src":"11914:3:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"31","id":5301,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11921:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11914:8:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5305,"nodeType":"IfStatement","src":"11910:22:22","trueBody":{"expression":{"hexValue":"30","id":5303,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11931:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":5237,"id":5304,"nodeType":"Return","src":"11924:8:22"}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5307,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5255,"src":"11983:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":5308,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11987:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11983:5:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5310,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5233,"src":"11990:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":5314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"12002:2:22","subExpression":{"id":5313,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5255,"src":"12003:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5312,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11994:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5311,"name":"uint256","nodeType":"ElementaryTypeName","src":"11994:7:22","typeDescriptions":{}}},"id":5315,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11994:11:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11990:15:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":5319,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5255,"src":"12015:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5318,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12007:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5317,"name":"uint256","nodeType":"ElementaryTypeName","src":"12007:7:22","typeDescriptions":{}}},"id":5320,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12007:10:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5306,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4952,"src":"11975:7:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":5321,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11975:43:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5237,"id":5322,"nodeType":"Return","src":"11968:50:22"}]}]},"documentation":{"id":5229,"nodeType":"StructuredDocumentation","src":"9595:553:22","text":" @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n If the input value is not inversible, 0 is returned.\n NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}."},"id":5325,"implemented":true,"kind":"function","modifiers":[],"name":"invMod","nameLocation":"10162:6:22","nodeType":"FunctionDefinition","parameters":{"id":5234,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5231,"mutability":"mutable","name":"a","nameLocation":"10177:1:22","nodeType":"VariableDeclaration","scope":5325,"src":"10169:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5230,"name":"uint256","nodeType":"ElementaryTypeName","src":"10169:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5233,"mutability":"mutable","name":"n","nameLocation":"10188:1:22","nodeType":"VariableDeclaration","scope":5325,"src":"10180:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5232,"name":"uint256","nodeType":"ElementaryTypeName","src":"10180:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10168:22:22"},"returnParameters":{"id":5237,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5236,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5325,"src":"10214:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5235,"name":"uint256","nodeType":"ElementaryTypeName","src":"10214:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10213:9:22"},"scope":6361,"src":"10153:1919:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5345,"nodeType":"Block","src":"12672:82:22","statements":[{"id":5344,"nodeType":"UncheckedBlock","src":"12682:66:22","statements":[{"expression":{"arguments":[{"id":5337,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5328,"src":"12725:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5338,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5330,"src":"12728:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"32","id":5339,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12732:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12728:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5341,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5330,"src":"12735:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5335,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6361,"src":"12713:4:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$6361_$","typeString":"type(library Math)"}},"id":5336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12718:6:22","memberName":"modExp","nodeType":"MemberAccess","referencedDeclaration":5382,"src":"12713:11:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (uint256)"}},"id":5342,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12713:24:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5334,"id":5343,"nodeType":"Return","src":"12706:31:22"}]}]},"documentation":{"id":5326,"nodeType":"StructuredDocumentation","src":"12078:514:22","text":" @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n NOTE: this function does NOT check that `p` is a prime greater than `2`."},"id":5346,"implemented":true,"kind":"function","modifiers":[],"name":"invModPrime","nameLocation":"12606:11:22","nodeType":"FunctionDefinition","parameters":{"id":5331,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5328,"mutability":"mutable","name":"a","nameLocation":"12626:1:22","nodeType":"VariableDeclaration","scope":5346,"src":"12618:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5327,"name":"uint256","nodeType":"ElementaryTypeName","src":"12618:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5330,"mutability":"mutable","name":"p","nameLocation":"12637:1:22","nodeType":"VariableDeclaration","scope":5346,"src":"12629:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5329,"name":"uint256","nodeType":"ElementaryTypeName","src":"12629:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12617:22:22"},"returnParameters":{"id":5334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5333,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5346,"src":"12663:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5332,"name":"uint256","nodeType":"ElementaryTypeName","src":"12663:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12662:9:22"},"scope":6361,"src":"12597:157:22","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5381,"nodeType":"Block","src":"13524:174:22","statements":[{"assignments":[5359,5361],"declarations":[{"constant":false,"id":5359,"mutability":"mutable","name":"success","nameLocation":"13540:7:22","nodeType":"VariableDeclaration","scope":5381,"src":"13535:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5358,"name":"bool","nodeType":"ElementaryTypeName","src":"13535:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5361,"mutability":"mutable","name":"result","nameLocation":"13557:6:22","nodeType":"VariableDeclaration","scope":5381,"src":"13549:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5360,"name":"uint256","nodeType":"ElementaryTypeName","src":"13549:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5367,"initialValue":{"arguments":[{"id":5363,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5349,"src":"13577:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5364,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5351,"src":"13580:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5365,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5353,"src":"13583:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5362,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[5406,5488],"referencedDeclaration":5406,"src":"13567:9:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (bool,uint256)"}},"id":5366,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13567:18:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"13534:51:22"},{"condition":{"id":5369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"13599:8:22","subExpression":{"id":5368,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5359,"src":"13600:7:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5378,"nodeType":"IfStatement","src":"13595:74:22","trueBody":{"id":5377,"nodeType":"Block","src":"13609:60:22","statements":[{"expression":{"arguments":[{"expression":{"id":5373,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3148,"src":"13635:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$3148_$","typeString":"type(library Panic)"}},"id":5374,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13641:16:22","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":3115,"src":"13635:22:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5370,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3148,"src":"13623:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$3148_$","typeString":"type(library Panic)"}},"id":5372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13629:5:22","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":3147,"src":"13623:11:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":5375,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13623:35:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5376,"nodeType":"ExpressionStatement","src":"13623:35:22"}]}},{"expression":{"id":5379,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5361,"src":"13685:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5357,"id":5380,"nodeType":"Return","src":"13678:13:22"}]},"documentation":{"id":5347,"nodeType":"StructuredDocumentation","src":"12760:678:22","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n Requirements:\n - modulus can't be zero\n - underlying staticcall to precompile must succeed\n IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n sure the chain you're using it on supports the precompiled contract for modular exponentiation\n at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n interpreted as 0."},"id":5382,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"13452:6:22","nodeType":"FunctionDefinition","parameters":{"id":5354,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5349,"mutability":"mutable","name":"b","nameLocation":"13467:1:22","nodeType":"VariableDeclaration","scope":5382,"src":"13459:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5348,"name":"uint256","nodeType":"ElementaryTypeName","src":"13459:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5351,"mutability":"mutable","name":"e","nameLocation":"13478:1:22","nodeType":"VariableDeclaration","scope":5382,"src":"13470:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5350,"name":"uint256","nodeType":"ElementaryTypeName","src":"13470:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5353,"mutability":"mutable","name":"m","nameLocation":"13489:1:22","nodeType":"VariableDeclaration","scope":5382,"src":"13481:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5352,"name":"uint256","nodeType":"ElementaryTypeName","src":"13481:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13458:33:22"},"returnParameters":{"id":5357,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5356,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5382,"src":"13515:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5355,"name":"uint256","nodeType":"ElementaryTypeName","src":"13515:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13514:9:22"},"scope":6361,"src":"13443:255:22","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5405,"nodeType":"Block","src":"14552:1493:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5396,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5389,"src":"14566:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5397,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14571:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14566:6:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5403,"nodeType":"IfStatement","src":"14562:29:22","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":5399,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"14582:5:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":5400,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14589:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":5401,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"14581:10:22","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":5395,"id":5402,"nodeType":"Return","src":"14574:17:22"}},{"AST":{"nodeType":"YulBlock","src":"14626:1413:22","statements":[{"nodeType":"YulVariableDeclaration","src":"14640:22:22","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14657:4:22","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14651:5:22"},"nodeType":"YulFunctionCall","src":"14651:11:22"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"14644:3:22","type":""}]},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"15570:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"15575:4:22","type":"","value":"0x20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15563:6:22"},"nodeType":"YulFunctionCall","src":"15563:17:22"},"nodeType":"YulExpressionStatement","src":"15563:17:22"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"15604:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"15609:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15600:3:22"},"nodeType":"YulFunctionCall","src":"15600:14:22"},{"kind":"number","nodeType":"YulLiteral","src":"15616:4:22","type":"","value":"0x20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15593:6:22"},"nodeType":"YulFunctionCall","src":"15593:28:22"},"nodeType":"YulExpressionStatement","src":"15593:28:22"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"15645:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"15650:4:22","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15641:3:22"},"nodeType":"YulFunctionCall","src":"15641:14:22"},{"kind":"number","nodeType":"YulLiteral","src":"15657:4:22","type":"","value":"0x20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15634:6:22"},"nodeType":"YulFunctionCall","src":"15634:28:22"},"nodeType":"YulExpressionStatement","src":"15634:28:22"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"15686:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"15691:4:22","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15682:3:22"},"nodeType":"YulFunctionCall","src":"15682:14:22"},{"name":"b","nodeType":"YulIdentifier","src":"15698:1:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15675:6:22"},"nodeType":"YulFunctionCall","src":"15675:25:22"},"nodeType":"YulExpressionStatement","src":"15675:25:22"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"15724:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"15729:4:22","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15720:3:22"},"nodeType":"YulFunctionCall","src":"15720:14:22"},{"name":"e","nodeType":"YulIdentifier","src":"15736:1:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15713:6:22"},"nodeType":"YulFunctionCall","src":"15713:25:22"},"nodeType":"YulExpressionStatement","src":"15713:25:22"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"15762:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"15767:4:22","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15758:3:22"},"nodeType":"YulFunctionCall","src":"15758:14:22"},{"name":"m","nodeType":"YulIdentifier","src":"15774:1:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15751:6:22"},"nodeType":"YulFunctionCall","src":"15751:25:22"},"nodeType":"YulExpressionStatement","src":"15751:25:22"},{"nodeType":"YulAssignment","src":"15938:57:22","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"15960:3:22"},"nodeType":"YulFunctionCall","src":"15960:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"15967:4:22","type":"","value":"0x05"},{"name":"ptr","nodeType":"YulIdentifier","src":"15973:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"15978:4:22","type":"","value":"0xc0"},{"kind":"number","nodeType":"YulLiteral","src":"15984:4:22","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"15990:4:22","type":"","value":"0x20"}],"functionName":{"name":"staticcall","nodeType":"YulIdentifier","src":"15949:10:22"},"nodeType":"YulFunctionCall","src":"15949:46:22"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"15938:7:22"}]},{"nodeType":"YulAssignment","src":"16008:21:22","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16024:4:22","type":"","value":"0x00"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16018:5:22"},"nodeType":"YulFunctionCall","src":"16018:11:22"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"16008:6:22"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5385,"isOffset":false,"isSlot":false,"src":"15698:1:22","valueSize":1},{"declaration":5387,"isOffset":false,"isSlot":false,"src":"15736:1:22","valueSize":1},{"declaration":5389,"isOffset":false,"isSlot":false,"src":"15774:1:22","valueSize":1},{"declaration":5394,"isOffset":false,"isSlot":false,"src":"16008:6:22","valueSize":1},{"declaration":5392,"isOffset":false,"isSlot":false,"src":"15938:7:22","valueSize":1}],"flags":["memory-safe"],"id":5404,"nodeType":"InlineAssembly","src":"14601:1438:22"}]},"documentation":{"id":5383,"nodeType":"StructuredDocumentation","src":"13704:738:22","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n to operate modulo 0 or if the underlying precompile reverted.\n IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n of a revert, but the result may be incorrectly interpreted as 0."},"id":5406,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"14456:9:22","nodeType":"FunctionDefinition","parameters":{"id":5390,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5385,"mutability":"mutable","name":"b","nameLocation":"14474:1:22","nodeType":"VariableDeclaration","scope":5406,"src":"14466:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5384,"name":"uint256","nodeType":"ElementaryTypeName","src":"14466:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5387,"mutability":"mutable","name":"e","nameLocation":"14485:1:22","nodeType":"VariableDeclaration","scope":5406,"src":"14477:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5386,"name":"uint256","nodeType":"ElementaryTypeName","src":"14477:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5389,"mutability":"mutable","name":"m","nameLocation":"14496:1:22","nodeType":"VariableDeclaration","scope":5406,"src":"14488:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5388,"name":"uint256","nodeType":"ElementaryTypeName","src":"14488:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14465:33:22"},"returnParameters":{"id":5395,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5392,"mutability":"mutable","name":"success","nameLocation":"14527:7:22","nodeType":"VariableDeclaration","scope":5406,"src":"14522:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5391,"name":"bool","nodeType":"ElementaryTypeName","src":"14522:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5394,"mutability":"mutable","name":"result","nameLocation":"14544:6:22","nodeType":"VariableDeclaration","scope":5406,"src":"14536:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5393,"name":"uint256","nodeType":"ElementaryTypeName","src":"14536:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14521:30:22"},"scope":6361,"src":"14447:1598:22","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5441,"nodeType":"Block","src":"16242:179:22","statements":[{"assignments":[5419,5421],"declarations":[{"constant":false,"id":5419,"mutability":"mutable","name":"success","nameLocation":"16258:7:22","nodeType":"VariableDeclaration","scope":5441,"src":"16253:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5418,"name":"bool","nodeType":"ElementaryTypeName","src":"16253:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5421,"mutability":"mutable","name":"result","nameLocation":"16280:6:22","nodeType":"VariableDeclaration","scope":5441,"src":"16267:19:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5420,"name":"bytes","nodeType":"ElementaryTypeName","src":"16267:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":5427,"initialValue":{"arguments":[{"id":5423,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5409,"src":"16300:1:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":5424,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5411,"src":"16303:1:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":5425,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5413,"src":"16306:1:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5422,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[5406,5488],"referencedDeclaration":5488,"src":"16290:9:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory,bytes memory,bytes memory) view returns (bool,bytes memory)"}},"id":5426,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16290:18:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"16252:56:22"},{"condition":{"id":5429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"16322:8:22","subExpression":{"id":5428,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5419,"src":"16323:7:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5438,"nodeType":"IfStatement","src":"16318:74:22","trueBody":{"id":5437,"nodeType":"Block","src":"16332:60:22","statements":[{"expression":{"arguments":[{"expression":{"id":5433,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3148,"src":"16358:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$3148_$","typeString":"type(library Panic)"}},"id":5434,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16364:16:22","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":3115,"src":"16358:22:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5430,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3148,"src":"16346:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$3148_$","typeString":"type(library Panic)"}},"id":5432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16352:5:22","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":3147,"src":"16346:11:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":5435,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16346:35:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5436,"nodeType":"ExpressionStatement","src":"16346:35:22"}]}},{"expression":{"id":5439,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5421,"src":"16408:6:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":5417,"id":5440,"nodeType":"Return","src":"16401:13:22"}]},"documentation":{"id":5407,"nodeType":"StructuredDocumentation","src":"16051:85:22","text":" @dev Variant of {modExp} that supports inputs of arbitrary length."},"id":5442,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"16150:6:22","nodeType":"FunctionDefinition","parameters":{"id":5414,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5409,"mutability":"mutable","name":"b","nameLocation":"16170:1:22","nodeType":"VariableDeclaration","scope":5442,"src":"16157:14:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5408,"name":"bytes","nodeType":"ElementaryTypeName","src":"16157:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":5411,"mutability":"mutable","name":"e","nameLocation":"16186:1:22","nodeType":"VariableDeclaration","scope":5442,"src":"16173:14:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5410,"name":"bytes","nodeType":"ElementaryTypeName","src":"16173:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":5413,"mutability":"mutable","name":"m","nameLocation":"16202:1:22","nodeType":"VariableDeclaration","scope":5442,"src":"16189:14:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5412,"name":"bytes","nodeType":"ElementaryTypeName","src":"16189:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16156:48:22"},"returnParameters":{"id":5417,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5416,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5442,"src":"16228:12:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5415,"name":"bytes","nodeType":"ElementaryTypeName","src":"16228:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16227:14:22"},"scope":6361,"src":"16141:280:22","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5487,"nodeType":"Block","src":"16675:771:22","statements":[{"condition":{"arguments":[{"id":5457,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5449,"src":"16700:1:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5456,"name":"_zeroBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5521,"src":"16689:10:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (bytes memory) pure returns (bool)"}},"id":5458,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16689:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5466,"nodeType":"IfStatement","src":"16685:47:22","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":5459,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"16712:5:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":5462,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16729:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5461,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"16719:9:22","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":5460,"name":"bytes","nodeType":"ElementaryTypeName","src":"16723:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":5463,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16719:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":5464,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"16711:21:22","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"functionReturnParameters":5455,"id":5465,"nodeType":"Return","src":"16704:28:22"}},{"assignments":[5468],"declarations":[{"constant":false,"id":5468,"mutability":"mutable","name":"mLen","nameLocation":"16751:4:22","nodeType":"VariableDeclaration","scope":5487,"src":"16743:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5467,"name":"uint256","nodeType":"ElementaryTypeName","src":"16743:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5471,"initialValue":{"expression":{"id":5469,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5449,"src":"16758:1:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16760:6:22","memberName":"length","nodeType":"MemberAccess","src":"16758:8:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"16743:23:22"},{"expression":{"id":5484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5472,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5454,"src":"16848:6:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":5475,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5445,"src":"16874:1:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16876:6:22","memberName":"length","nodeType":"MemberAccess","src":"16874:8:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":5477,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5447,"src":"16884:1:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16886:6:22","memberName":"length","nodeType":"MemberAccess","src":"16884:8:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5479,"name":"mLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5468,"src":"16894:4:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5480,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5445,"src":"16900:1:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":5481,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5447,"src":"16903:1:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":5482,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5449,"src":"16906:1:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":5473,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"16857:3:22","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":5474,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16861:12:22","memberName":"encodePacked","nodeType":"MemberAccess","src":"16857:16:22","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":5483,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16857:51:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"16848:60:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5485,"nodeType":"ExpressionStatement","src":"16848:60:22"},{"AST":{"nodeType":"YulBlock","src":"16944:496:22","statements":[{"nodeType":"YulVariableDeclaration","src":"16958:32:22","value":{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"16977:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"16985:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16973:3:22"},"nodeType":"YulFunctionCall","src":"16973:17:22"},"variables":[{"name":"dataPtr","nodeType":"YulTypedName","src":"16962:7:22","type":""}]},{"nodeType":"YulAssignment","src":"17080:73:22","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"17102:3:22"},"nodeType":"YulFunctionCall","src":"17102:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"17109:4:22","type":"","value":"0x05"},{"name":"dataPtr","nodeType":"YulIdentifier","src":"17115:7:22"},{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"17130:6:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17124:5:22"},"nodeType":"YulFunctionCall","src":"17124:13:22"},{"name":"dataPtr","nodeType":"YulIdentifier","src":"17139:7:22"},{"name":"mLen","nodeType":"YulIdentifier","src":"17148:4:22"}],"functionName":{"name":"staticcall","nodeType":"YulIdentifier","src":"17091:10:22"},"nodeType":"YulFunctionCall","src":"17091:62:22"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"17080:7:22"}]},{"expression":{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"17309:6:22"},{"name":"mLen","nodeType":"YulIdentifier","src":"17317:4:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17302:6:22"},"nodeType":"YulFunctionCall","src":"17302:20:22"},"nodeType":"YulExpressionStatement","src":"17302:20:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17405:4:22","type":"","value":"0x40"},{"arguments":[{"name":"dataPtr","nodeType":"YulIdentifier","src":"17415:7:22"},{"name":"mLen","nodeType":"YulIdentifier","src":"17424:4:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17411:3:22"},"nodeType":"YulFunctionCall","src":"17411:18:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17398:6:22"},"nodeType":"YulFunctionCall","src":"17398:32:22"},"nodeType":"YulExpressionStatement","src":"17398:32:22"}]},"evmVersion":"paris","externalReferences":[{"declaration":5468,"isOffset":false,"isSlot":false,"src":"17148:4:22","valueSize":1},{"declaration":5468,"isOffset":false,"isSlot":false,"src":"17317:4:22","valueSize":1},{"declaration":5468,"isOffset":false,"isSlot":false,"src":"17424:4:22","valueSize":1},{"declaration":5454,"isOffset":false,"isSlot":false,"src":"16977:6:22","valueSize":1},{"declaration":5454,"isOffset":false,"isSlot":false,"src":"17130:6:22","valueSize":1},{"declaration":5454,"isOffset":false,"isSlot":false,"src":"17309:6:22","valueSize":1},{"declaration":5452,"isOffset":false,"isSlot":false,"src":"17080:7:22","valueSize":1}],"flags":["memory-safe"],"id":5486,"nodeType":"InlineAssembly","src":"16919:521:22"}]},"documentation":{"id":5443,"nodeType":"StructuredDocumentation","src":"16427:88:22","text":" @dev Variant of {tryModExp} that supports inputs of arbitrary length."},"id":5488,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"16529:9:22","nodeType":"FunctionDefinition","parameters":{"id":5450,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5445,"mutability":"mutable","name":"b","nameLocation":"16561:1:22","nodeType":"VariableDeclaration","scope":5488,"src":"16548:14:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5444,"name":"bytes","nodeType":"ElementaryTypeName","src":"16548:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":5447,"mutability":"mutable","name":"e","nameLocation":"16585:1:22","nodeType":"VariableDeclaration","scope":5488,"src":"16572:14:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5446,"name":"bytes","nodeType":"ElementaryTypeName","src":"16572:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":5449,"mutability":"mutable","name":"m","nameLocation":"16609:1:22","nodeType":"VariableDeclaration","scope":5488,"src":"16596:14:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5448,"name":"bytes","nodeType":"ElementaryTypeName","src":"16596:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16538:78:22"},"returnParameters":{"id":5455,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5452,"mutability":"mutable","name":"success","nameLocation":"16645:7:22","nodeType":"VariableDeclaration","scope":5488,"src":"16640:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5451,"name":"bool","nodeType":"ElementaryTypeName","src":"16640:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5454,"mutability":"mutable","name":"result","nameLocation":"16667:6:22","nodeType":"VariableDeclaration","scope":5488,"src":"16654:19:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5453,"name":"bytes","nodeType":"ElementaryTypeName","src":"16654:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16639:35:22"},"scope":6361,"src":"16520:926:22","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5520,"nodeType":"Block","src":"17601:176:22","statements":[{"body":{"id":5516,"nodeType":"Block","src":"17658:92:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":5511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":5507,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5491,"src":"17676:9:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5509,"indexExpression":{"id":5508,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5497,"src":"17686:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17676:12:22","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":5510,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17692:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17676:17:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5515,"nodeType":"IfStatement","src":"17672:68:22","trueBody":{"id":5514,"nodeType":"Block","src":"17695:45:22","statements":[{"expression":{"hexValue":"66616c7365","id":5512,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17720:5:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":5495,"id":5513,"nodeType":"Return","src":"17713:12:22"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5500,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5497,"src":"17631:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":5501,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5491,"src":"17635:9:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17645:6:22","memberName":"length","nodeType":"MemberAccess","src":"17635:16:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17631:20:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5517,"initializationExpression":{"assignments":[5497],"declarations":[{"constant":false,"id":5497,"mutability":"mutable","name":"i","nameLocation":"17624:1:22","nodeType":"VariableDeclaration","scope":5517,"src":"17616:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5496,"name":"uint256","nodeType":"ElementaryTypeName","src":"17616:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5499,"initialValue":{"hexValue":"30","id":5498,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17628:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"17616:13:22"},"loopExpression":{"expression":{"id":5505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"17653:3:22","subExpression":{"id":5504,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5497,"src":"17655:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5506,"nodeType":"ExpressionStatement","src":"17653:3:22"},"nodeType":"ForStatement","src":"17611:139:22"},{"expression":{"hexValue":"74727565","id":5518,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17766:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":5495,"id":5519,"nodeType":"Return","src":"17759:11:22"}]},"documentation":{"id":5489,"nodeType":"StructuredDocumentation","src":"17452:72:22","text":" @dev Returns whether the provided byte array is zero."},"id":5521,"implemented":true,"kind":"function","modifiers":[],"name":"_zeroBytes","nameLocation":"17538:10:22","nodeType":"FunctionDefinition","parameters":{"id":5492,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5491,"mutability":"mutable","name":"byteArray","nameLocation":"17562:9:22","nodeType":"VariableDeclaration","scope":5521,"src":"17549:22:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5490,"name":"bytes","nodeType":"ElementaryTypeName","src":"17549:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"17548:24:22"},"returnParameters":{"id":5495,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5494,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5521,"src":"17595:4:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5493,"name":"bool","nodeType":"ElementaryTypeName","src":"17595:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"17594:6:22"},"scope":6361,"src":"17529:248:22","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":5739,"nodeType":"Block","src":"18137:5124:22","statements":[{"id":5738,"nodeType":"UncheckedBlock","src":"18147:5108:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5529,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5524,"src":"18241:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"31","id":5530,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18246:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"18241:6:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5535,"nodeType":"IfStatement","src":"18237:53:22","trueBody":{"id":5534,"nodeType":"Block","src":"18249:41:22","statements":[{"expression":{"id":5532,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5524,"src":"18274:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5528,"id":5533,"nodeType":"Return","src":"18267:8:22"}]}},{"assignments":[5537],"declarations":[{"constant":false,"id":5537,"mutability":"mutable","name":"aa","nameLocation":"19225:2:22","nodeType":"VariableDeclaration","scope":5738,"src":"19217:10:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5536,"name":"uint256","nodeType":"ElementaryTypeName","src":"19217:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5539,"initialValue":{"id":5538,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5524,"src":"19230:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19217:14:22"},{"assignments":[5541],"declarations":[{"constant":false,"id":5541,"mutability":"mutable","name":"xn","nameLocation":"19253:2:22","nodeType":"VariableDeclaration","scope":5738,"src":"19245:10:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5540,"name":"uint256","nodeType":"ElementaryTypeName","src":"19245:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5543,"initialValue":{"hexValue":"31","id":5542,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19258:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"19245:14:22"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5544,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5537,"src":"19278:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":5547,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5545,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19285:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":5546,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19290:3:22","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"19285:8:22","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":5548,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19284:10:22","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"src":"19278:16:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5559,"nodeType":"IfStatement","src":"19274:92:22","trueBody":{"id":5558,"nodeType":"Block","src":"19296:70:22","statements":[{"expression":{"id":5552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5550,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5537,"src":"19314:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":5551,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19321:3:22","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"19314:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5553,"nodeType":"ExpressionStatement","src":"19314:10:22"},{"expression":{"id":5556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5554,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5541,"src":"19342:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3634","id":5555,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19349:2:22","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"19342:9:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5557,"nodeType":"ExpressionStatement","src":"19342:9:22"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5560,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5537,"src":"19383:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":5563,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5561,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19390:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":5562,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19395:2:22","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"19390:7:22","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":5564,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19389:9:22","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"src":"19383:15:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5575,"nodeType":"IfStatement","src":"19379:90:22","trueBody":{"id":5574,"nodeType":"Block","src":"19400:69:22","statements":[{"expression":{"id":5568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5566,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5537,"src":"19418:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":5567,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19425:2:22","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"19418:9:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5569,"nodeType":"ExpressionStatement","src":"19418:9:22"},{"expression":{"id":5572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5570,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5541,"src":"19445:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3332","id":5571,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19452:2:22","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"19445:9:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5573,"nodeType":"ExpressionStatement","src":"19445:9:22"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5576,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5537,"src":"19486:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":5579,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5577,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19493:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":5578,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19498:2:22","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"19493:7:22","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":5580,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19492:9:22","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"src":"19486:15:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5591,"nodeType":"IfStatement","src":"19482:90:22","trueBody":{"id":5590,"nodeType":"Block","src":"19503:69:22","statements":[{"expression":{"id":5584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5582,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5537,"src":"19521:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":5583,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19528:2:22","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"19521:9:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5585,"nodeType":"ExpressionStatement","src":"19521:9:22"},{"expression":{"id":5588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5586,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5541,"src":"19548:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3136","id":5587,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19555:2:22","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"19548:9:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5589,"nodeType":"ExpressionStatement","src":"19548:9:22"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5592,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5537,"src":"19589:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":5595,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5593,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19596:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":5594,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19601:2:22","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"19596:7:22","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":5596,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19595:9:22","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"src":"19589:15:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5607,"nodeType":"IfStatement","src":"19585:89:22","trueBody":{"id":5606,"nodeType":"Block","src":"19606:68:22","statements":[{"expression":{"id":5600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5598,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5537,"src":"19624:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":5599,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19631:2:22","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"19624:9:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5601,"nodeType":"ExpressionStatement","src":"19624:9:22"},{"expression":{"id":5604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5602,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5541,"src":"19651:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"38","id":5603,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19658:1:22","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"19651:8:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5605,"nodeType":"ExpressionStatement","src":"19651:8:22"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5608,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5537,"src":"19691:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":5611,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5609,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19698:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":5610,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19703:1:22","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"19698:6:22","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":5612,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19697:8:22","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"src":"19691:14:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5623,"nodeType":"IfStatement","src":"19687:87:22","trueBody":{"id":5622,"nodeType":"Block","src":"19707:67:22","statements":[{"expression":{"id":5616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5614,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5537,"src":"19725:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":5615,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19732:1:22","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"19725:8:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5617,"nodeType":"ExpressionStatement","src":"19725:8:22"},{"expression":{"id":5620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5618,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5541,"src":"19751:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"34","id":5619,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19758:1:22","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"19751:8:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5621,"nodeType":"ExpressionStatement","src":"19751:8:22"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5624,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5537,"src":"19791:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"id":5627,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5625,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19798:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":5626,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19803:1:22","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"19798:6:22","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}}],"id":5628,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19797:8:22","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}},"src":"19791:14:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5639,"nodeType":"IfStatement","src":"19787:87:22","trueBody":{"id":5638,"nodeType":"Block","src":"19807:67:22","statements":[{"expression":{"id":5632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5630,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5537,"src":"19825:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":5631,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19832:1:22","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"19825:8:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5633,"nodeType":"ExpressionStatement","src":"19825:8:22"},{"expression":{"id":5636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5634,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5541,"src":"19851:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"32","id":5635,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19858:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"19851:8:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5637,"nodeType":"ExpressionStatement","src":"19851:8:22"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5640,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5537,"src":"19891:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"id":5643,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5641,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19898:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":5642,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19903:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"19898:6:22","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}}],"id":5644,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19897:8:22","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}},"src":"19891:14:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5651,"nodeType":"IfStatement","src":"19887:61:22","trueBody":{"id":5650,"nodeType":"Block","src":"19907:41:22","statements":[{"expression":{"id":5648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5646,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5541,"src":"19925:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"31","id":5647,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19932:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"19925:8:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5649,"nodeType":"ExpressionStatement","src":"19925:8:22"}]}},{"expression":{"id":5659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5652,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5541,"src":"20368:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":5653,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20374:1:22","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5654,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5541,"src":"20378:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20374:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5656,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"20373:8:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20385:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"20373:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20368:18:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5660,"nodeType":"ExpressionStatement","src":"20368:18:22"},{"expression":{"id":5670,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5661,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5541,"src":"22273:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5662,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5541,"src":"22279:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5663,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5524,"src":"22284:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5664,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5541,"src":"22288:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22284:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22279:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5667,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22278:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5668,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22295:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22278:18:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22273:23:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5671,"nodeType":"ExpressionStatement","src":"22273:23:22"},{"expression":{"id":5681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5672,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5541,"src":"22382:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5673,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5541,"src":"22388:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5674,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5524,"src":"22393:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5675,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5541,"src":"22397:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22393:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22388:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5678,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22387:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5679,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22404:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22387:18:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22382:23:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5682,"nodeType":"ExpressionStatement","src":"22382:23:22"},{"expression":{"id":5692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5683,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5541,"src":"22493:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5684,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5541,"src":"22499:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5685,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5524,"src":"22504:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5686,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5541,"src":"22508:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22504:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22499:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5689,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22498:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5690,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22515:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22498:18:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22493:23:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5693,"nodeType":"ExpressionStatement","src":"22493:23:22"},{"expression":{"id":5703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5694,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5541,"src":"22602:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5695,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5541,"src":"22608:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5696,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5524,"src":"22613:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5697,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5541,"src":"22617:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22613:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22608:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5700,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22607:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5701,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22624:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22607:18:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22602:23:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5704,"nodeType":"ExpressionStatement","src":"22602:23:22"},{"expression":{"id":5714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5705,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5541,"src":"22712:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5706,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5541,"src":"22718:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5707,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5524,"src":"22723:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5708,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5541,"src":"22727:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22723:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22718:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5711,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22717:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5712,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22734:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22717:18:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22712:23:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5715,"nodeType":"ExpressionStatement","src":"22712:23:22"},{"expression":{"id":5725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5716,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5541,"src":"22822:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5717,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5541,"src":"22828:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5718,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5524,"src":"22833:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5719,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5541,"src":"22837:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22833:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22828:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5722,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22827:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5723,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22844:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22827:18:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22822:23:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5726,"nodeType":"ExpressionStatement","src":"22822:23:22"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5727,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5541,"src":"23211:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5730,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5541,"src":"23232:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5731,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5524,"src":"23237:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5732,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5541,"src":"23241:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23237:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23232:11:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5728,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8126,"src":"23216:8:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8126_$","typeString":"type(library SafeCast)"}},"id":5729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23225:6:22","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8125,"src":"23216:15:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5735,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23216:28:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23211:33:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5528,"id":5737,"nodeType":"Return","src":"23204:40:22"}]}]},"documentation":{"id":5522,"nodeType":"StructuredDocumentation","src":"17783:292:22","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n using integer operations."},"id":5740,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"18089:4:22","nodeType":"FunctionDefinition","parameters":{"id":5525,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5524,"mutability":"mutable","name":"a","nameLocation":"18102:1:22","nodeType":"VariableDeclaration","scope":5740,"src":"18094:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5523,"name":"uint256","nodeType":"ElementaryTypeName","src":"18094:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18093:11:22"},"returnParameters":{"id":5528,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5527,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5740,"src":"18128:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5526,"name":"uint256","nodeType":"ElementaryTypeName","src":"18128:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18127:9:22"},"scope":6361,"src":"18080:5181:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5773,"nodeType":"Block","src":"23434:171:22","statements":[{"id":5772,"nodeType":"UncheckedBlock","src":"23444:155:22","statements":[{"assignments":[5752],"declarations":[{"constant":false,"id":5752,"mutability":"mutable","name":"result","nameLocation":"23476:6:22","nodeType":"VariableDeclaration","scope":5772,"src":"23468:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5751,"name":"uint256","nodeType":"ElementaryTypeName","src":"23468:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5756,"initialValue":{"arguments":[{"id":5754,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5743,"src":"23490:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5753,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[5740,5774],"referencedDeclaration":5740,"src":"23485:4:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5755,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23485:7:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"23468:24:22"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5757,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5752,"src":"23513:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5761,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5746,"src":"23555:8:22","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4767","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4767","typeString":"enum Math.Rounding"}],"id":5760,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6360,"src":"23538:16:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4767_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5762,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23538:26:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5763,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5752,"src":"23568:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5764,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5752,"src":"23577:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23568:15:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5766,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5743,"src":"23586:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23568:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"23538:49:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5758,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8126,"src":"23522:8:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8126_$","typeString":"type(library SafeCast)"}},"id":5759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23531:6:22","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8125,"src":"23522:15:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5769,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23522:66:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23513:75:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5750,"id":5771,"nodeType":"Return","src":"23506:82:22"}]}]},"documentation":{"id":5741,"nodeType":"StructuredDocumentation","src":"23267:86:22","text":" @dev Calculates sqrt(a), following the selected rounding direction."},"id":5774,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"23367:4:22","nodeType":"FunctionDefinition","parameters":{"id":5747,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5743,"mutability":"mutable","name":"a","nameLocation":"23380:1:22","nodeType":"VariableDeclaration","scope":5774,"src":"23372:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5742,"name":"uint256","nodeType":"ElementaryTypeName","src":"23372:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5746,"mutability":"mutable","name":"rounding","nameLocation":"23392:8:22","nodeType":"VariableDeclaration","scope":5774,"src":"23383:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4767","typeString":"enum Math.Rounding"},"typeName":{"id":5745,"nodeType":"UserDefinedTypeName","pathNode":{"id":5744,"name":"Rounding","nameLocations":["23383:8:22"],"nodeType":"IdentifierPath","referencedDeclaration":4767,"src":"23383:8:22"},"referencedDeclaration":4767,"src":"23383:8:22","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4767","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"23371:30:22"},"returnParameters":{"id":5750,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5749,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5774,"src":"23425:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5748,"name":"uint256","nodeType":"ElementaryTypeName","src":"23425:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23424:9:22"},"scope":6361,"src":"23358:247:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5969,"nodeType":"Block","src":"23796:981:22","statements":[{"assignments":[5783],"declarations":[{"constant":false,"id":5783,"mutability":"mutable","name":"result","nameLocation":"23814:6:22","nodeType":"VariableDeclaration","scope":5969,"src":"23806:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5782,"name":"uint256","nodeType":"ElementaryTypeName","src":"23806:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5785,"initialValue":{"hexValue":"30","id":5784,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23823:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"23806:18:22"},{"assignments":[5787],"declarations":[{"constant":false,"id":5787,"mutability":"mutable","name":"exp","nameLocation":"23842:3:22","nodeType":"VariableDeclaration","scope":5969,"src":"23834:11:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5786,"name":"uint256","nodeType":"ElementaryTypeName","src":"23834:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5788,"nodeType":"VariableDeclarationStatement","src":"23834:11:22"},{"id":5966,"nodeType":"UncheckedBlock","src":"23855:893:22","statements":[{"expression":{"id":5803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5789,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5787,"src":"23879:3:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"313238","id":5790,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23885:3:22","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5793,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5777,"src":"23907:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"id":5799,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":5796,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5794,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23916:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":5795,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23921:3:22","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"23916:8:22","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":5797,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"23915:10:22","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5798,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23928:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"23915:14:22","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"}},"src":"23907:22:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5791,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8126,"src":"23891:8:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8126_$","typeString":"type(library SafeCast)"}},"id":5792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23900:6:22","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8125,"src":"23891:15:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5801,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23891:39:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23885:45:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23879:51:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5804,"nodeType":"ExpressionStatement","src":"23879:51:22"},{"expression":{"id":5807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5805,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5777,"src":"23944:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":5806,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5787,"src":"23954:3:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23944:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5808,"nodeType":"ExpressionStatement","src":"23944:13:22"},{"expression":{"id":5811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5809,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5783,"src":"23971:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":5810,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5787,"src":"23981:3:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23971:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5812,"nodeType":"ExpressionStatement","src":"23971:13:22"},{"expression":{"id":5827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5813,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5787,"src":"23999:3:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3634","id":5814,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24005:2:22","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5817,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5777,"src":"24026:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"id":5823,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":5820,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5818,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24035:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":5819,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24040:2:22","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"24035:7:22","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":5821,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24034:9:22","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5822,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24046:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24034:13:22","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"}},"src":"24026:21:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5815,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8126,"src":"24010:8:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8126_$","typeString":"type(library SafeCast)"}},"id":5816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24019:6:22","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8125,"src":"24010:15:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5825,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24010:38:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24005:43:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23999:49:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5828,"nodeType":"ExpressionStatement","src":"23999:49:22"},{"expression":{"id":5831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5829,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5777,"src":"24062:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":5830,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5787,"src":"24072:3:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24062:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5832,"nodeType":"ExpressionStatement","src":"24062:13:22"},{"expression":{"id":5835,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5833,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5783,"src":"24089:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":5834,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5787,"src":"24099:3:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24089:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5836,"nodeType":"ExpressionStatement","src":"24089:13:22"},{"expression":{"id":5851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5837,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5787,"src":"24117:3:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5850,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3332","id":5838,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24123:2:22","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5841,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5777,"src":"24144:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"id":5847,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":5844,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5842,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24153:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":5843,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24158:2:22","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"24153:7:22","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":5845,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24152:9:22","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5846,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24164:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24152:13:22","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"}},"src":"24144:21:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5839,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8126,"src":"24128:8:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8126_$","typeString":"type(library SafeCast)"}},"id":5840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24137:6:22","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8125,"src":"24128:15:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5849,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24128:38:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24123:43:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24117:49:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5852,"nodeType":"ExpressionStatement","src":"24117:49:22"},{"expression":{"id":5855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5853,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5777,"src":"24180:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":5854,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5787,"src":"24190:3:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24180:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5856,"nodeType":"ExpressionStatement","src":"24180:13:22"},{"expression":{"id":5859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5857,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5783,"src":"24207:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":5858,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5787,"src":"24217:3:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24207:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5860,"nodeType":"ExpressionStatement","src":"24207:13:22"},{"expression":{"id":5875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5861,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5787,"src":"24235:3:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5874,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3136","id":5862,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24241:2:22","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5865,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5777,"src":"24262:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"id":5871,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":5868,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5866,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24271:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":5867,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24276:2:22","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"24271:7:22","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":5869,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24270:9:22","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5870,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24282:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24270:13:22","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"}},"src":"24262:21:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5863,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8126,"src":"24246:8:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8126_$","typeString":"type(library SafeCast)"}},"id":5864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24255:6:22","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8125,"src":"24246:15:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5873,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24246:38:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24241:43:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24235:49:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5876,"nodeType":"ExpressionStatement","src":"24235:49:22"},{"expression":{"id":5879,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5877,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5777,"src":"24298:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":5878,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5787,"src":"24308:3:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24298:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5880,"nodeType":"ExpressionStatement","src":"24298:13:22"},{"expression":{"id":5883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5881,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5783,"src":"24325:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":5882,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5787,"src":"24335:3:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24325:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5884,"nodeType":"ExpressionStatement","src":"24325:13:22"},{"expression":{"id":5899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5885,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5787,"src":"24353:3:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5898,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"38","id":5886,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24359:1:22","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5889,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5777,"src":"24379:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"id":5895,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":5892,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5890,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24388:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":5891,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24393:1:22","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"24388:6:22","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":5893,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24387:8:22","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5894,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24398:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24387:12:22","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"}},"src":"24379:20:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5887,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8126,"src":"24363:8:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8126_$","typeString":"type(library SafeCast)"}},"id":5888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24372:6:22","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8125,"src":"24363:15:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5897,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24363:37:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24359:41:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24353:47:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5900,"nodeType":"ExpressionStatement","src":"24353:47:22"},{"expression":{"id":5903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5901,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5777,"src":"24414:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":5902,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5787,"src":"24424:3:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24414:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5904,"nodeType":"ExpressionStatement","src":"24414:13:22"},{"expression":{"id":5907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5905,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5783,"src":"24441:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":5906,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5787,"src":"24451:3:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24441:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5908,"nodeType":"ExpressionStatement","src":"24441:13:22"},{"expression":{"id":5923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5909,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5787,"src":"24469:3:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"34","id":5910,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24475:1:22","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5913,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5777,"src":"24495:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"id":5919,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"id":5916,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5914,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24504:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":5915,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24509:1:22","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"24504:6:22","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}}],"id":5917,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24503:8:22","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5918,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24514:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24503:12:22","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"}},"src":"24495:20:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5911,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8126,"src":"24479:8:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8126_$","typeString":"type(library SafeCast)"}},"id":5912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24488:6:22","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8125,"src":"24479:15:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5921,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24479:37:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24475:41:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24469:47:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5924,"nodeType":"ExpressionStatement","src":"24469:47:22"},{"expression":{"id":5927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5925,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5777,"src":"24530:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":5926,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5787,"src":"24540:3:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24530:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5928,"nodeType":"ExpressionStatement","src":"24530:13:22"},{"expression":{"id":5931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5929,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5783,"src":"24557:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":5930,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5787,"src":"24567:3:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24557:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5932,"nodeType":"ExpressionStatement","src":"24557:13:22"},{"expression":{"id":5947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5933,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5787,"src":"24585:3:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5934,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24591:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5937,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5777,"src":"24611:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"id":5943,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"id":5940,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5938,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24620:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":5939,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24625:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"24620:6:22","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}}],"id":5941,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24619:8:22","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24630:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24619:12:22","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"}},"src":"24611:20:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5935,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8126,"src":"24595:8:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8126_$","typeString":"type(library SafeCast)"}},"id":5936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24604:6:22","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8125,"src":"24595:15:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5945,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24595:37:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24591:41:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24585:47:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5948,"nodeType":"ExpressionStatement","src":"24585:47:22"},{"expression":{"id":5951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5949,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5777,"src":"24646:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":5950,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5787,"src":"24656:3:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24646:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5952,"nodeType":"ExpressionStatement","src":"24646:13:22"},{"expression":{"id":5955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5953,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5783,"src":"24673:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":5954,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5787,"src":"24683:3:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24673:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5956,"nodeType":"ExpressionStatement","src":"24673:13:22"},{"expression":{"id":5964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5957,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5783,"src":"24701:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5960,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5777,"src":"24727:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":5961,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24735:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24727:9:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5958,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8126,"src":"24711:8:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8126_$","typeString":"type(library SafeCast)"}},"id":5959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24720:6:22","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8125,"src":"24711:15:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5963,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24711:26:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24701:36:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5965,"nodeType":"ExpressionStatement","src":"24701:36:22"}]},{"expression":{"id":5967,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5783,"src":"24764:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5781,"id":5968,"nodeType":"Return","src":"24757:13:22"}]},"documentation":{"id":5775,"nodeType":"StructuredDocumentation","src":"23611:119:22","text":" @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":5970,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"23744:4:22","nodeType":"FunctionDefinition","parameters":{"id":5778,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5777,"mutability":"mutable","name":"value","nameLocation":"23757:5:22","nodeType":"VariableDeclaration","scope":5970,"src":"23749:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5776,"name":"uint256","nodeType":"ElementaryTypeName","src":"23749:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23748:15:22"},"returnParameters":{"id":5781,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5780,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5970,"src":"23787:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5779,"name":"uint256","nodeType":"ElementaryTypeName","src":"23787:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23786:9:22"},"scope":6361,"src":"23735:1042:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6003,"nodeType":"Block","src":"25010:175:22","statements":[{"id":6002,"nodeType":"UncheckedBlock","src":"25020:159:22","statements":[{"assignments":[5982],"declarations":[{"constant":false,"id":5982,"mutability":"mutable","name":"result","nameLocation":"25052:6:22","nodeType":"VariableDeclaration","scope":6002,"src":"25044:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5981,"name":"uint256","nodeType":"ElementaryTypeName","src":"25044:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5986,"initialValue":{"arguments":[{"id":5984,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5973,"src":"25066:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5983,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[5970,6004],"referencedDeclaration":5970,"src":"25061:4:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5985,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25061:11:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"25044:28:22"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5987,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5982,"src":"25093:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5991,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5976,"src":"25135:8:22","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4767","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4767","typeString":"enum Math.Rounding"}],"id":5990,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6360,"src":"25118:16:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4767_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5992,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25118:26:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5993,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25148:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":5994,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5982,"src":"25153:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25148:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5996,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5973,"src":"25162:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25148:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"25118:49:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5988,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8126,"src":"25102:8:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8126_$","typeString":"type(library SafeCast)"}},"id":5989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25111:6:22","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8125,"src":"25102:15:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5999,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25102:66:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25093:75:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5980,"id":6001,"nodeType":"Return","src":"25086:82:22"}]}]},"documentation":{"id":5971,"nodeType":"StructuredDocumentation","src":"24783:142:22","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":6004,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"24939:4:22","nodeType":"FunctionDefinition","parameters":{"id":5977,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5973,"mutability":"mutable","name":"value","nameLocation":"24952:5:22","nodeType":"VariableDeclaration","scope":6004,"src":"24944:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5972,"name":"uint256","nodeType":"ElementaryTypeName","src":"24944:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5976,"mutability":"mutable","name":"rounding","nameLocation":"24968:8:22","nodeType":"VariableDeclaration","scope":6004,"src":"24959:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4767","typeString":"enum Math.Rounding"},"typeName":{"id":5975,"nodeType":"UserDefinedTypeName","pathNode":{"id":5974,"name":"Rounding","nameLocations":["24959:8:22"],"nodeType":"IdentifierPath","referencedDeclaration":4767,"src":"24959:8:22"},"referencedDeclaration":4767,"src":"24959:8:22","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4767","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"24943:34:22"},"returnParameters":{"id":5980,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5979,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6004,"src":"25001:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5978,"name":"uint256","nodeType":"ElementaryTypeName","src":"25001:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25000:9:22"},"scope":6361,"src":"24930:255:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6132,"nodeType":"Block","src":"25378:854:22","statements":[{"assignments":[6013],"declarations":[{"constant":false,"id":6013,"mutability":"mutable","name":"result","nameLocation":"25396:6:22","nodeType":"VariableDeclaration","scope":6132,"src":"25388:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6012,"name":"uint256","nodeType":"ElementaryTypeName","src":"25388:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6015,"initialValue":{"hexValue":"30","id":6014,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25405:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"25388:18:22"},{"id":6129,"nodeType":"UncheckedBlock","src":"25416:787:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6016,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6007,"src":"25444:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":6019,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6017,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25453:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":6018,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25459:2:22","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"25453:8:22","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"25444:17:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6032,"nodeType":"IfStatement","src":"25440:103:22","trueBody":{"id":6031,"nodeType":"Block","src":"25463:80:22","statements":[{"expression":{"id":6025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6021,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6007,"src":"25481:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":6024,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6022,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25490:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":6023,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25496:2:22","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"25490:8:22","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"25481:17:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6026,"nodeType":"ExpressionStatement","src":"25481:17:22"},{"expression":{"id":6029,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6027,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6013,"src":"25516:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":6028,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25526:2:22","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"25516:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6030,"nodeType":"ExpressionStatement","src":"25516:12:22"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6033,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6007,"src":"25560:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":6036,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6034,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25569:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":6035,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25575:2:22","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"25569:8:22","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"25560:17:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6049,"nodeType":"IfStatement","src":"25556:103:22","trueBody":{"id":6048,"nodeType":"Block","src":"25579:80:22","statements":[{"expression":{"id":6042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6038,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6007,"src":"25597:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":6041,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6039,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25606:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":6040,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25612:2:22","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"25606:8:22","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"25597:17:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6043,"nodeType":"ExpressionStatement","src":"25597:17:22"},{"expression":{"id":6046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6044,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6013,"src":"25632:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":6045,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25642:2:22","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"25632:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6047,"nodeType":"ExpressionStatement","src":"25632:12:22"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6054,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6050,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6007,"src":"25676:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":6053,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6051,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25685:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":6052,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25691:2:22","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"25685:8:22","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"25676:17:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6066,"nodeType":"IfStatement","src":"25672:103:22","trueBody":{"id":6065,"nodeType":"Block","src":"25695:80:22","statements":[{"expression":{"id":6059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6055,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6007,"src":"25713:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":6058,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6056,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25722:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":6057,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25728:2:22","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"25722:8:22","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"25713:17:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6060,"nodeType":"ExpressionStatement","src":"25713:17:22"},{"expression":{"id":6063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6061,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6013,"src":"25748:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":6062,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25758:2:22","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"25748:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6064,"nodeType":"ExpressionStatement","src":"25748:12:22"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6067,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6007,"src":"25792:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":6070,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6068,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25801:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":6069,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25807:1:22","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"25801:7:22","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"25792:16:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6083,"nodeType":"IfStatement","src":"25788:100:22","trueBody":{"id":6082,"nodeType":"Block","src":"25810:78:22","statements":[{"expression":{"id":6076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6072,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6007,"src":"25828:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":6075,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6073,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25837:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":6074,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25843:1:22","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"25837:7:22","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"25828:16:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6077,"nodeType":"ExpressionStatement","src":"25828:16:22"},{"expression":{"id":6080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6078,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6013,"src":"25862:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":6079,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25872:1:22","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"25862:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6081,"nodeType":"ExpressionStatement","src":"25862:11:22"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6088,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6084,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6007,"src":"25905:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":6087,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6085,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25914:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":6086,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25920:1:22","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"25914:7:22","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"25905:16:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6100,"nodeType":"IfStatement","src":"25901:100:22","trueBody":{"id":6099,"nodeType":"Block","src":"25923:78:22","statements":[{"expression":{"id":6093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6089,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6007,"src":"25941:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":6092,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6090,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25950:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":6091,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25956:1:22","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"25950:7:22","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"25941:16:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6094,"nodeType":"ExpressionStatement","src":"25941:16:22"},{"expression":{"id":6097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6095,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6013,"src":"25975:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":6096,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25985:1:22","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"25975:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6098,"nodeType":"ExpressionStatement","src":"25975:11:22"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6101,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6007,"src":"26018:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":6104,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6102,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26027:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":6103,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26033:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26027:7:22","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"26018:16:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6117,"nodeType":"IfStatement","src":"26014:100:22","trueBody":{"id":6116,"nodeType":"Block","src":"26036:78:22","statements":[{"expression":{"id":6110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6106,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6007,"src":"26054:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":6109,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6107,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26063:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":6108,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26069:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26063:7:22","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"26054:16:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6111,"nodeType":"ExpressionStatement","src":"26054:16:22"},{"expression":{"id":6114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6112,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6013,"src":"26088:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":6113,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26098:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26088:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6115,"nodeType":"ExpressionStatement","src":"26088:11:22"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6118,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6007,"src":"26131:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":6121,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6119,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26140:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":6120,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26146:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"26140:7:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"26131:16:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6128,"nodeType":"IfStatement","src":"26127:66:22","trueBody":{"id":6127,"nodeType":"Block","src":"26149:44:22","statements":[{"expression":{"id":6125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6123,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6013,"src":"26167:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":6124,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26177:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"26167:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6126,"nodeType":"ExpressionStatement","src":"26167:11:22"}]}}]},{"expression":{"id":6130,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6013,"src":"26219:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6011,"id":6131,"nodeType":"Return","src":"26212:13:22"}]},"documentation":{"id":6005,"nodeType":"StructuredDocumentation","src":"25191:120:22","text":" @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":6133,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"25325:5:22","nodeType":"FunctionDefinition","parameters":{"id":6008,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6007,"mutability":"mutable","name":"value","nameLocation":"25339:5:22","nodeType":"VariableDeclaration","scope":6133,"src":"25331:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6006,"name":"uint256","nodeType":"ElementaryTypeName","src":"25331:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25330:15:22"},"returnParameters":{"id":6011,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6010,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6133,"src":"25369:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6009,"name":"uint256","nodeType":"ElementaryTypeName","src":"25369:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25368:9:22"},"scope":6361,"src":"25316:916:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6166,"nodeType":"Block","src":"26467:177:22","statements":[{"id":6165,"nodeType":"UncheckedBlock","src":"26477:161:22","statements":[{"assignments":[6145],"declarations":[{"constant":false,"id":6145,"mutability":"mutable","name":"result","nameLocation":"26509:6:22","nodeType":"VariableDeclaration","scope":6165,"src":"26501:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6144,"name":"uint256","nodeType":"ElementaryTypeName","src":"26501:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6149,"initialValue":{"arguments":[{"id":6147,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6136,"src":"26524:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6146,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[6133,6167],"referencedDeclaration":6133,"src":"26518:5:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":6148,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26518:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"26501:29:22"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6150,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6145,"src":"26551:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6154,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6139,"src":"26593:8:22","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4767","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4767","typeString":"enum Math.Rounding"}],"id":6153,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6360,"src":"26576:16:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4767_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":6155,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26576:26:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6156,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26606:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":6157,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6145,"src":"26612:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26606:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6159,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6136,"src":"26621:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26606:20:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"26576:50:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6151,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8126,"src":"26560:8:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8126_$","typeString":"type(library SafeCast)"}},"id":6152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26569:6:22","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8125,"src":"26560:15:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6162,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26560:67:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26551:76:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6143,"id":6164,"nodeType":"Return","src":"26544:83:22"}]}]},"documentation":{"id":6134,"nodeType":"StructuredDocumentation","src":"26238:143:22","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":6167,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"26395:5:22","nodeType":"FunctionDefinition","parameters":{"id":6140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6136,"mutability":"mutable","name":"value","nameLocation":"26409:5:22","nodeType":"VariableDeclaration","scope":6167,"src":"26401:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6135,"name":"uint256","nodeType":"ElementaryTypeName","src":"26401:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6139,"mutability":"mutable","name":"rounding","nameLocation":"26425:8:22","nodeType":"VariableDeclaration","scope":6167,"src":"26416:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4767","typeString":"enum Math.Rounding"},"typeName":{"id":6138,"nodeType":"UserDefinedTypeName","pathNode":{"id":6137,"name":"Rounding","nameLocations":["26416:8:22"],"nodeType":"IdentifierPath","referencedDeclaration":4767,"src":"26416:8:22"},"referencedDeclaration":4767,"src":"26416:8:22","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4767","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"26400:34:22"},"returnParameters":{"id":6143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6142,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6167,"src":"26458:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6141,"name":"uint256","nodeType":"ElementaryTypeName","src":"26458:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26457:9:22"},"scope":6361,"src":"26386:258:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6303,"nodeType":"Block","src":"26964:674:22","statements":[{"assignments":[6176],"declarations":[{"constant":false,"id":6176,"mutability":"mutable","name":"result","nameLocation":"26982:6:22","nodeType":"VariableDeclaration","scope":6303,"src":"26974:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6175,"name":"uint256","nodeType":"ElementaryTypeName","src":"26974:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6178,"initialValue":{"hexValue":"30","id":6177,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26991:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"26974:18:22"},{"assignments":[6180],"declarations":[{"constant":false,"id":6180,"mutability":"mutable","name":"isGt","nameLocation":"27010:4:22","nodeType":"VariableDeclaration","scope":6303,"src":"27002:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6179,"name":"uint256","nodeType":"ElementaryTypeName","src":"27002:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6181,"nodeType":"VariableDeclarationStatement","src":"27002:12:22"},{"id":6300,"nodeType":"UncheckedBlock","src":"27024:585:22","statements":[{"expression":{"id":6194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6182,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6180,"src":"27048:4:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6185,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6170,"src":"27071:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"id":6191,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":6188,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6186,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27080:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":6187,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27085:3:22","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"27080:8:22","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":6189,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27079:10:22","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":6190,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27092:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27079:14:22","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"}},"src":"27071:22:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6183,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8126,"src":"27055:8:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8126_$","typeString":"type(library SafeCast)"}},"id":6184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27064:6:22","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8125,"src":"27055:15:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6193,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27055:39:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27048:46:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6195,"nodeType":"ExpressionStatement","src":"27048:46:22"},{"expression":{"id":6200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6196,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6170,"src":"27108:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6197,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6180,"src":"27118:4:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"313238","id":6198,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27125:3:22","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"27118:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27108:20:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6201,"nodeType":"ExpressionStatement","src":"27108:20:22"},{"expression":{"id":6206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6202,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6176,"src":"27142:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6203,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6180,"src":"27152:4:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3136","id":6204,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27159:2:22","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"27152:9:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27142:19:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6207,"nodeType":"ExpressionStatement","src":"27142:19:22"},{"expression":{"id":6220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6208,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6180,"src":"27176:4:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6211,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6170,"src":"27199:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"id":6217,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":6214,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6212,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27208:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":6213,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27213:2:22","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"27208:7:22","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":6215,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27207:9:22","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":6216,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27219:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27207:13:22","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"}},"src":"27199:21:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6209,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8126,"src":"27183:8:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8126_$","typeString":"type(library SafeCast)"}},"id":6210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27192:6:22","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8125,"src":"27183:15:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6219,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27183:38:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27176:45:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6221,"nodeType":"ExpressionStatement","src":"27176:45:22"},{"expression":{"id":6226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6222,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6170,"src":"27235:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6223,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6180,"src":"27245:4:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3634","id":6224,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27252:2:22","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"27245:9:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27235:19:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6227,"nodeType":"ExpressionStatement","src":"27235:19:22"},{"expression":{"id":6232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6228,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6176,"src":"27268:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6229,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6180,"src":"27278:4:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"38","id":6230,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27285:1:22","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"27278:8:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27268:18:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6233,"nodeType":"ExpressionStatement","src":"27268:18:22"},{"expression":{"id":6246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6234,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6180,"src":"27301:4:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6237,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6170,"src":"27324:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"id":6243,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":6240,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27333:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":6239,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27338:2:22","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"27333:7:22","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":6241,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27332:9:22","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":6242,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27344:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27332:13:22","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"}},"src":"27324:21:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6235,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8126,"src":"27308:8:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8126_$","typeString":"type(library SafeCast)"}},"id":6236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27317:6:22","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8125,"src":"27308:15:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6245,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27308:38:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27301:45:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6247,"nodeType":"ExpressionStatement","src":"27301:45:22"},{"expression":{"id":6252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6248,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6170,"src":"27360:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6249,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6180,"src":"27370:4:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3332","id":6250,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27377:2:22","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"27370:9:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27360:19:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6253,"nodeType":"ExpressionStatement","src":"27360:19:22"},{"expression":{"id":6258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6254,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6176,"src":"27393:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6255,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6180,"src":"27403:4:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"34","id":6256,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27410:1:22","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"27403:8:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27393:18:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6259,"nodeType":"ExpressionStatement","src":"27393:18:22"},{"expression":{"id":6272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6260,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6180,"src":"27426:4:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6263,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6170,"src":"27449:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"id":6269,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":6266,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6264,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27458:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":6265,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27463:2:22","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"27458:7:22","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":6267,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27457:9:22","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":6268,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27469:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27457:13:22","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"}},"src":"27449:21:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6261,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8126,"src":"27433:8:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8126_$","typeString":"type(library SafeCast)"}},"id":6262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27442:6:22","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8125,"src":"27433:15:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6271,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27433:38:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27426:45:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6273,"nodeType":"ExpressionStatement","src":"27426:45:22"},{"expression":{"id":6278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6274,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6170,"src":"27485:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6275,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6180,"src":"27495:4:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3136","id":6276,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27502:2:22","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"27495:9:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27485:19:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6279,"nodeType":"ExpressionStatement","src":"27485:19:22"},{"expression":{"id":6284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6280,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6176,"src":"27518:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6281,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6180,"src":"27528:4:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":6282,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27535:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"27528:8:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27518:18:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6285,"nodeType":"ExpressionStatement","src":"27518:18:22"},{"expression":{"id":6298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6286,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6176,"src":"27551:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6289,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6170,"src":"27577:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"id":6295,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":6292,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6290,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27586:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":6291,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27591:1:22","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"27586:6:22","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":6293,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27585:8:22","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":6294,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27596:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27585:12:22","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"}},"src":"27577:20:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6287,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8126,"src":"27561:8:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8126_$","typeString":"type(library SafeCast)"}},"id":6288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27570:6:22","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8125,"src":"27561:15:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27561:37:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27551:47:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6299,"nodeType":"ExpressionStatement","src":"27551:47:22"}]},{"expression":{"id":6301,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6176,"src":"27625:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6174,"id":6302,"nodeType":"Return","src":"27618:13:22"}]},"documentation":{"id":6168,"nodeType":"StructuredDocumentation","src":"26650:246:22","text":" @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":6304,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"26910:6:22","nodeType":"FunctionDefinition","parameters":{"id":6171,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6170,"mutability":"mutable","name":"value","nameLocation":"26925:5:22","nodeType":"VariableDeclaration","scope":6304,"src":"26917:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6169,"name":"uint256","nodeType":"ElementaryTypeName","src":"26917:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26916:15:22"},"returnParameters":{"id":6174,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6173,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6304,"src":"26955:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6172,"name":"uint256","nodeType":"ElementaryTypeName","src":"26955:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26954:9:22"},"scope":6361,"src":"26901:737:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6340,"nodeType":"Block","src":"27875:184:22","statements":[{"id":6339,"nodeType":"UncheckedBlock","src":"27885:168:22","statements":[{"assignments":[6316],"declarations":[{"constant":false,"id":6316,"mutability":"mutable","name":"result","nameLocation":"27917:6:22","nodeType":"VariableDeclaration","scope":6339,"src":"27909:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6315,"name":"uint256","nodeType":"ElementaryTypeName","src":"27909:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6320,"initialValue":{"arguments":[{"id":6318,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6307,"src":"27933:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6317,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[6304,6341],"referencedDeclaration":6304,"src":"27926:6:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":6319,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27926:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"27909:30:22"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6321,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6316,"src":"27960:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6325,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6310,"src":"28002:8:22","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4767","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4767","typeString":"enum Math.Rounding"}],"id":6324,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6360,"src":"27985:16:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4767_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":6326,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27985:26:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6327,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28015:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6328,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6316,"src":"28021:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":6329,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28031:1:22","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"28021:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6331,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"28020:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28015:18:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6333,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6307,"src":"28036:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28015:26:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"27985:56:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6322,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8126,"src":"27969:8:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8126_$","typeString":"type(library SafeCast)"}},"id":6323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27978:6:22","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8125,"src":"27969:15:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6336,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27969:73:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27960:82:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6314,"id":6338,"nodeType":"Return","src":"27953:89:22"}]}]},"documentation":{"id":6305,"nodeType":"StructuredDocumentation","src":"27644:144:22","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":6341,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"27802:6:22","nodeType":"FunctionDefinition","parameters":{"id":6311,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6307,"mutability":"mutable","name":"value","nameLocation":"27817:5:22","nodeType":"VariableDeclaration","scope":6341,"src":"27809:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6306,"name":"uint256","nodeType":"ElementaryTypeName","src":"27809:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6310,"mutability":"mutable","name":"rounding","nameLocation":"27833:8:22","nodeType":"VariableDeclaration","scope":6341,"src":"27824:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4767","typeString":"enum Math.Rounding"},"typeName":{"id":6309,"nodeType":"UserDefinedTypeName","pathNode":{"id":6308,"name":"Rounding","nameLocations":["27824:8:22"],"nodeType":"IdentifierPath","referencedDeclaration":4767,"src":"27824:8:22"},"referencedDeclaration":4767,"src":"27824:8:22","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4767","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"27808:34:22"},"returnParameters":{"id":6314,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6313,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6341,"src":"27866:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6312,"name":"uint256","nodeType":"ElementaryTypeName","src":"27866:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"27865:9:22"},"scope":6361,"src":"27793:266:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6359,"nodeType":"Block","src":"28257:48:22","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":6357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":6355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6352,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6345,"src":"28280:8:22","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4767","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4767","typeString":"enum Math.Rounding"}],"id":6351,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28274:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":6350,"name":"uint8","nodeType":"ElementaryTypeName","src":"28274:5:22","typeDescriptions":{}}},"id":6353,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28274:15:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":6354,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28292:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"28274:19:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":6356,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28297:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"28274:24:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":6349,"id":6358,"nodeType":"Return","src":"28267:31:22"}]},"documentation":{"id":6342,"nodeType":"StructuredDocumentation","src":"28065:113:22","text":" @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."},"id":6360,"implemented":true,"kind":"function","modifiers":[],"name":"unsignedRoundsUp","nameLocation":"28192:16:22","nodeType":"FunctionDefinition","parameters":{"id":6346,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6345,"mutability":"mutable","name":"rounding","nameLocation":"28218:8:22","nodeType":"VariableDeclaration","scope":6360,"src":"28209:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4767","typeString":"enum Math.Rounding"},"typeName":{"id":6344,"nodeType":"UserDefinedTypeName","pathNode":{"id":6343,"name":"Rounding","nameLocations":["28209:8:22"],"nodeType":"IdentifierPath","referencedDeclaration":4767,"src":"28209:8:22"},"referencedDeclaration":4767,"src":"28209:8:22","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4767","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"28208:19:22"},"returnParameters":{"id":6349,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6348,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6360,"src":"28251:4:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6347,"name":"bool","nodeType":"ElementaryTypeName","src":"28251:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"28250:6:22"},"scope":6361,"src":"28183:122:22","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":6362,"src":"281:28026:22","usedErrors":[],"usedEvents":[]}],"src":"103:28205:22"},"id":22},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","exportedSymbols":{"SafeCast":[8126]},"id":8127,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6363,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"192:24:23"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeCast","contractDependencies":[],"contractKind":"library","documentation":{"id":6364,"nodeType":"StructuredDocumentation","src":"218:550:23","text":" @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."},"fullyImplemented":true,"id":8126,"linearizedBaseContracts":[8126],"name":"SafeCast","nameLocation":"777:8:23","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":6365,"nodeType":"StructuredDocumentation","src":"792:68:23","text":" @dev Value doesn't fit in an uint of `bits` size."},"errorSelector":"6dfcc650","id":6371,"name":"SafeCastOverflowedUintDowncast","nameLocation":"871:30:23","nodeType":"ErrorDefinition","parameters":{"id":6370,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6367,"mutability":"mutable","name":"bits","nameLocation":"908:4:23","nodeType":"VariableDeclaration","scope":6371,"src":"902:10:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6366,"name":"uint8","nodeType":"ElementaryTypeName","src":"902:5:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":6369,"mutability":"mutable","name":"value","nameLocation":"922:5:23","nodeType":"VariableDeclaration","scope":6371,"src":"914:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6368,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"901:27:23"},"src":"865:64:23"},{"documentation":{"id":6372,"nodeType":"StructuredDocumentation","src":"935:75:23","text":" @dev An int value doesn't fit in an uint of `bits` size."},"errorSelector":"a8ce4432","id":6376,"name":"SafeCastOverflowedIntToUint","nameLocation":"1021:27:23","nodeType":"ErrorDefinition","parameters":{"id":6375,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6374,"mutability":"mutable","name":"value","nameLocation":"1056:5:23","nodeType":"VariableDeclaration","scope":6376,"src":"1049:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6373,"name":"int256","nodeType":"ElementaryTypeName","src":"1049:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1048:14:23"},"src":"1015:48:23"},{"documentation":{"id":6377,"nodeType":"StructuredDocumentation","src":"1069:67:23","text":" @dev Value doesn't fit in an int of `bits` size."},"errorSelector":"327269a7","id":6383,"name":"SafeCastOverflowedIntDowncast","nameLocation":"1147:29:23","nodeType":"ErrorDefinition","parameters":{"id":6382,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6379,"mutability":"mutable","name":"bits","nameLocation":"1183:4:23","nodeType":"VariableDeclaration","scope":6383,"src":"1177:10:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6378,"name":"uint8","nodeType":"ElementaryTypeName","src":"1177:5:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":6381,"mutability":"mutable","name":"value","nameLocation":"1196:5:23","nodeType":"VariableDeclaration","scope":6383,"src":"1189:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6380,"name":"int256","nodeType":"ElementaryTypeName","src":"1189:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1176:26:23"},"src":"1141:62:23"},{"documentation":{"id":6384,"nodeType":"StructuredDocumentation","src":"1209:75:23","text":" @dev An uint value doesn't fit in an int of `bits` size."},"errorSelector":"24775e06","id":6388,"name":"SafeCastOverflowedUintToInt","nameLocation":"1295:27:23","nodeType":"ErrorDefinition","parameters":{"id":6387,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6386,"mutability":"mutable","name":"value","nameLocation":"1331:5:23","nodeType":"VariableDeclaration","scope":6388,"src":"1323:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6385,"name":"uint256","nodeType":"ElementaryTypeName","src":"1323:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1322:15:23"},"src":"1289:49:23"},{"body":{"id":6415,"nodeType":"Block","src":"1695:152:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6396,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6391,"src":"1709:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6399,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1722:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":6398,"name":"uint248","nodeType":"ElementaryTypeName","src":"1722:7:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"}],"id":6397,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1717:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6400,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1717:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint248","typeString":"type(uint248)"}},"id":6401,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1731:3:23","memberName":"max","nodeType":"MemberAccess","src":"1717:17:23","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"src":"1709:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6409,"nodeType":"IfStatement","src":"1705:105:23","trueBody":{"id":6408,"nodeType":"Block","src":"1736:74:23","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":6404,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1788:3:23","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":6405,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6391,"src":"1793:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6403,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6371,"src":"1757:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6406,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1757:42:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6407,"nodeType":"RevertStatement","src":"1750:49:23"}]}},{"expression":{"arguments":[{"id":6412,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6391,"src":"1834:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6411,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1826:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":6410,"name":"uint248","nodeType":"ElementaryTypeName","src":"1826:7:23","typeDescriptions":{}}},"id":6413,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1826:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"functionReturnParameters":6395,"id":6414,"nodeType":"Return","src":"1819:21:23"}]},"documentation":{"id":6389,"nodeType":"StructuredDocumentation","src":"1344:280:23","text":" @dev Returns the downcasted uint248 from uint256, reverting on\n overflow (when the input is greater than largest uint248).\n Counterpart to Solidity's `uint248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":6416,"implemented":true,"kind":"function","modifiers":[],"name":"toUint248","nameLocation":"1638:9:23","nodeType":"FunctionDefinition","parameters":{"id":6392,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6391,"mutability":"mutable","name":"value","nameLocation":"1656:5:23","nodeType":"VariableDeclaration","scope":6416,"src":"1648:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6390,"name":"uint256","nodeType":"ElementaryTypeName","src":"1648:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1647:15:23"},"returnParameters":{"id":6395,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6394,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6416,"src":"1686:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"},"typeName":{"id":6393,"name":"uint248","nodeType":"ElementaryTypeName","src":"1686:7:23","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"visibility":"internal"}],"src":"1685:9:23"},"scope":8126,"src":"1629:218:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6443,"nodeType":"Block","src":"2204:152:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6424,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6419,"src":"2218:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6427,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2231:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":6426,"name":"uint240","nodeType":"ElementaryTypeName","src":"2231:7:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"}],"id":6425,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2226:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6428,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2226:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint240","typeString":"type(uint240)"}},"id":6429,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2240:3:23","memberName":"max","nodeType":"MemberAccess","src":"2226:17:23","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"src":"2218:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6437,"nodeType":"IfStatement","src":"2214:105:23","trueBody":{"id":6436,"nodeType":"Block","src":"2245:74:23","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":6432,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2297:3:23","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":6433,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6419,"src":"2302:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6431,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6371,"src":"2266:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6434,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2266:42:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6435,"nodeType":"RevertStatement","src":"2259:49:23"}]}},{"expression":{"arguments":[{"id":6440,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6419,"src":"2343:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6439,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2335:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":6438,"name":"uint240","nodeType":"ElementaryTypeName","src":"2335:7:23","typeDescriptions":{}}},"id":6441,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2335:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"functionReturnParameters":6423,"id":6442,"nodeType":"Return","src":"2328:21:23"}]},"documentation":{"id":6417,"nodeType":"StructuredDocumentation","src":"1853:280:23","text":" @dev Returns the downcasted uint240 from uint256, reverting on\n overflow (when the input is greater than largest uint240).\n Counterpart to Solidity's `uint240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":6444,"implemented":true,"kind":"function","modifiers":[],"name":"toUint240","nameLocation":"2147:9:23","nodeType":"FunctionDefinition","parameters":{"id":6420,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6419,"mutability":"mutable","name":"value","nameLocation":"2165:5:23","nodeType":"VariableDeclaration","scope":6444,"src":"2157:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6418,"name":"uint256","nodeType":"ElementaryTypeName","src":"2157:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2156:15:23"},"returnParameters":{"id":6423,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6422,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6444,"src":"2195:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"},"typeName":{"id":6421,"name":"uint240","nodeType":"ElementaryTypeName","src":"2195:7:23","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"visibility":"internal"}],"src":"2194:9:23"},"scope":8126,"src":"2138:218:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6471,"nodeType":"Block","src":"2713:152:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6452,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6447,"src":"2727:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6455,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2740:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":6454,"name":"uint232","nodeType":"ElementaryTypeName","src":"2740:7:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"}],"id":6453,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2735:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6456,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2735:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint232","typeString":"type(uint232)"}},"id":6457,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2749:3:23","memberName":"max","nodeType":"MemberAccess","src":"2735:17:23","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"src":"2727:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6465,"nodeType":"IfStatement","src":"2723:105:23","trueBody":{"id":6464,"nodeType":"Block","src":"2754:74:23","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":6460,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2806:3:23","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":6461,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6447,"src":"2811:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6459,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6371,"src":"2775:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6462,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2775:42:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6463,"nodeType":"RevertStatement","src":"2768:49:23"}]}},{"expression":{"arguments":[{"id":6468,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6447,"src":"2852:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6467,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2844:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":6466,"name":"uint232","nodeType":"ElementaryTypeName","src":"2844:7:23","typeDescriptions":{}}},"id":6469,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2844:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"functionReturnParameters":6451,"id":6470,"nodeType":"Return","src":"2837:21:23"}]},"documentation":{"id":6445,"nodeType":"StructuredDocumentation","src":"2362:280:23","text":" @dev Returns the downcasted uint232 from uint256, reverting on\n overflow (when the input is greater than largest uint232).\n Counterpart to Solidity's `uint232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":6472,"implemented":true,"kind":"function","modifiers":[],"name":"toUint232","nameLocation":"2656:9:23","nodeType":"FunctionDefinition","parameters":{"id":6448,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6447,"mutability":"mutable","name":"value","nameLocation":"2674:5:23","nodeType":"VariableDeclaration","scope":6472,"src":"2666:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6446,"name":"uint256","nodeType":"ElementaryTypeName","src":"2666:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2665:15:23"},"returnParameters":{"id":6451,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6450,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6472,"src":"2704:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"},"typeName":{"id":6449,"name":"uint232","nodeType":"ElementaryTypeName","src":"2704:7:23","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"visibility":"internal"}],"src":"2703:9:23"},"scope":8126,"src":"2647:218:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6499,"nodeType":"Block","src":"3222:152:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6480,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6475,"src":"3236:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6483,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3249:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":6482,"name":"uint224","nodeType":"ElementaryTypeName","src":"3249:7:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"}],"id":6481,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3244:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6484,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3244:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint224","typeString":"type(uint224)"}},"id":6485,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3258:3:23","memberName":"max","nodeType":"MemberAccess","src":"3244:17:23","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"3236:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6493,"nodeType":"IfStatement","src":"3232:105:23","trueBody":{"id":6492,"nodeType":"Block","src":"3263:74:23","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":6488,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3315:3:23","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":6489,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6475,"src":"3320:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6487,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6371,"src":"3284:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6490,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3284:42:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6491,"nodeType":"RevertStatement","src":"3277:49:23"}]}},{"expression":{"arguments":[{"id":6496,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6475,"src":"3361:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6495,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3353:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":6494,"name":"uint224","nodeType":"ElementaryTypeName","src":"3353:7:23","typeDescriptions":{}}},"id":6497,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3353:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":6479,"id":6498,"nodeType":"Return","src":"3346:21:23"}]},"documentation":{"id":6473,"nodeType":"StructuredDocumentation","src":"2871:280:23","text":" @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":6500,"implemented":true,"kind":"function","modifiers":[],"name":"toUint224","nameLocation":"3165:9:23","nodeType":"FunctionDefinition","parameters":{"id":6476,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6475,"mutability":"mutable","name":"value","nameLocation":"3183:5:23","nodeType":"VariableDeclaration","scope":6500,"src":"3175:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6474,"name":"uint256","nodeType":"ElementaryTypeName","src":"3175:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3174:15:23"},"returnParameters":{"id":6479,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6478,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6500,"src":"3213:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":6477,"name":"uint224","nodeType":"ElementaryTypeName","src":"3213:7:23","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"3212:9:23"},"scope":8126,"src":"3156:218:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6527,"nodeType":"Block","src":"3731:152:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6508,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6503,"src":"3745:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6511,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3758:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":6510,"name":"uint216","nodeType":"ElementaryTypeName","src":"3758:7:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"}],"id":6509,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3753:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6512,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3753:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint216","typeString":"type(uint216)"}},"id":6513,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3767:3:23","memberName":"max","nodeType":"MemberAccess","src":"3753:17:23","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"src":"3745:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6521,"nodeType":"IfStatement","src":"3741:105:23","trueBody":{"id":6520,"nodeType":"Block","src":"3772:74:23","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":6516,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3824:3:23","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":6517,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6503,"src":"3829:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6515,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6371,"src":"3793:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6518,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3793:42:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6519,"nodeType":"RevertStatement","src":"3786:49:23"}]}},{"expression":{"arguments":[{"id":6524,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6503,"src":"3870:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6523,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3862:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":6522,"name":"uint216","nodeType":"ElementaryTypeName","src":"3862:7:23","typeDescriptions":{}}},"id":6525,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3862:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"functionReturnParameters":6507,"id":6526,"nodeType":"Return","src":"3855:21:23"}]},"documentation":{"id":6501,"nodeType":"StructuredDocumentation","src":"3380:280:23","text":" @dev Returns the downcasted uint216 from uint256, reverting on\n overflow (when the input is greater than largest uint216).\n Counterpart to Solidity's `uint216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":6528,"implemented":true,"kind":"function","modifiers":[],"name":"toUint216","nameLocation":"3674:9:23","nodeType":"FunctionDefinition","parameters":{"id":6504,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6503,"mutability":"mutable","name":"value","nameLocation":"3692:5:23","nodeType":"VariableDeclaration","scope":6528,"src":"3684:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6502,"name":"uint256","nodeType":"ElementaryTypeName","src":"3684:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3683:15:23"},"returnParameters":{"id":6507,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6506,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6528,"src":"3722:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"},"typeName":{"id":6505,"name":"uint216","nodeType":"ElementaryTypeName","src":"3722:7:23","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"visibility":"internal"}],"src":"3721:9:23"},"scope":8126,"src":"3665:218:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6555,"nodeType":"Block","src":"4240:152:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6536,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6531,"src":"4254:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6539,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4267:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":6538,"name":"uint208","nodeType":"ElementaryTypeName","src":"4267:7:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"}],"id":6537,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4262:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6540,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4262:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint208","typeString":"type(uint208)"}},"id":6541,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4276:3:23","memberName":"max","nodeType":"MemberAccess","src":"4262:17:23","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"4254:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6549,"nodeType":"IfStatement","src":"4250:105:23","trueBody":{"id":6548,"nodeType":"Block","src":"4281:74:23","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":6544,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4333:3:23","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":6545,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6531,"src":"4338:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6543,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6371,"src":"4302:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6546,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4302:42:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6547,"nodeType":"RevertStatement","src":"4295:49:23"}]}},{"expression":{"arguments":[{"id":6552,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6531,"src":"4379:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6551,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4371:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":6550,"name":"uint208","nodeType":"ElementaryTypeName","src":"4371:7:23","typeDescriptions":{}}},"id":6553,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4371:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":6535,"id":6554,"nodeType":"Return","src":"4364:21:23"}]},"documentation":{"id":6529,"nodeType":"StructuredDocumentation","src":"3889:280:23","text":" @dev Returns the downcasted uint208 from uint256, reverting on\n overflow (when the input is greater than largest uint208).\n Counterpart to Solidity's `uint208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":6556,"implemented":true,"kind":"function","modifiers":[],"name":"toUint208","nameLocation":"4183:9:23","nodeType":"FunctionDefinition","parameters":{"id":6532,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6531,"mutability":"mutable","name":"value","nameLocation":"4201:5:23","nodeType":"VariableDeclaration","scope":6556,"src":"4193:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6530,"name":"uint256","nodeType":"ElementaryTypeName","src":"4193:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4192:15:23"},"returnParameters":{"id":6535,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6534,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6556,"src":"4231:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":6533,"name":"uint208","nodeType":"ElementaryTypeName","src":"4231:7:23","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"4230:9:23"},"scope":8126,"src":"4174:218:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6583,"nodeType":"Block","src":"4749:152:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6564,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6559,"src":"4763:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6567,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4776:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":6566,"name":"uint200","nodeType":"ElementaryTypeName","src":"4776:7:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"}],"id":6565,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4771:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6568,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4771:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint200","typeString":"type(uint200)"}},"id":6569,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4785:3:23","memberName":"max","nodeType":"MemberAccess","src":"4771:17:23","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"src":"4763:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6577,"nodeType":"IfStatement","src":"4759:105:23","trueBody":{"id":6576,"nodeType":"Block","src":"4790:74:23","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":6572,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4842:3:23","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":6573,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6559,"src":"4847:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6571,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6371,"src":"4811:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6574,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4811:42:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6575,"nodeType":"RevertStatement","src":"4804:49:23"}]}},{"expression":{"arguments":[{"id":6580,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6559,"src":"4888:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6579,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4880:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":6578,"name":"uint200","nodeType":"ElementaryTypeName","src":"4880:7:23","typeDescriptions":{}}},"id":6581,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4880:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"functionReturnParameters":6563,"id":6582,"nodeType":"Return","src":"4873:21:23"}]},"documentation":{"id":6557,"nodeType":"StructuredDocumentation","src":"4398:280:23","text":" @dev Returns the downcasted uint200 from uint256, reverting on\n overflow (when the input is greater than largest uint200).\n Counterpart to Solidity's `uint200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":6584,"implemented":true,"kind":"function","modifiers":[],"name":"toUint200","nameLocation":"4692:9:23","nodeType":"FunctionDefinition","parameters":{"id":6560,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6559,"mutability":"mutable","name":"value","nameLocation":"4710:5:23","nodeType":"VariableDeclaration","scope":6584,"src":"4702:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6558,"name":"uint256","nodeType":"ElementaryTypeName","src":"4702:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4701:15:23"},"returnParameters":{"id":6563,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6562,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6584,"src":"4740:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"},"typeName":{"id":6561,"name":"uint200","nodeType":"ElementaryTypeName","src":"4740:7:23","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"visibility":"internal"}],"src":"4739:9:23"},"scope":8126,"src":"4683:218:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6611,"nodeType":"Block","src":"5258:152:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6592,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6587,"src":"5272:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6595,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5285:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":6594,"name":"uint192","nodeType":"ElementaryTypeName","src":"5285:7:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"}],"id":6593,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5280:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6596,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5280:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint192","typeString":"type(uint192)"}},"id":6597,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5294:3:23","memberName":"max","nodeType":"MemberAccess","src":"5280:17:23","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"src":"5272:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6605,"nodeType":"IfStatement","src":"5268:105:23","trueBody":{"id":6604,"nodeType":"Block","src":"5299:74:23","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":6600,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5351:3:23","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":6601,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6587,"src":"5356:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6599,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6371,"src":"5320:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6602,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5320:42:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6603,"nodeType":"RevertStatement","src":"5313:49:23"}]}},{"expression":{"arguments":[{"id":6608,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6587,"src":"5397:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6607,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5389:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":6606,"name":"uint192","nodeType":"ElementaryTypeName","src":"5389:7:23","typeDescriptions":{}}},"id":6609,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5389:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"functionReturnParameters":6591,"id":6610,"nodeType":"Return","src":"5382:21:23"}]},"documentation":{"id":6585,"nodeType":"StructuredDocumentation","src":"4907:280:23","text":" @dev Returns the downcasted uint192 from uint256, reverting on\n overflow (when the input is greater than largest uint192).\n Counterpart to Solidity's `uint192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":6612,"implemented":true,"kind":"function","modifiers":[],"name":"toUint192","nameLocation":"5201:9:23","nodeType":"FunctionDefinition","parameters":{"id":6588,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6587,"mutability":"mutable","name":"value","nameLocation":"5219:5:23","nodeType":"VariableDeclaration","scope":6612,"src":"5211:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6586,"name":"uint256","nodeType":"ElementaryTypeName","src":"5211:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5210:15:23"},"returnParameters":{"id":6591,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6590,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6612,"src":"5249:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":6589,"name":"uint192","nodeType":"ElementaryTypeName","src":"5249:7:23","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"5248:9:23"},"scope":8126,"src":"5192:218:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6639,"nodeType":"Block","src":"5767:152:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6620,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6615,"src":"5781:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6623,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5794:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":6622,"name":"uint184","nodeType":"ElementaryTypeName","src":"5794:7:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"}],"id":6621,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5789:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6624,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5789:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint184","typeString":"type(uint184)"}},"id":6625,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5803:3:23","memberName":"max","nodeType":"MemberAccess","src":"5789:17:23","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"src":"5781:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6633,"nodeType":"IfStatement","src":"5777:105:23","trueBody":{"id":6632,"nodeType":"Block","src":"5808:74:23","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":6628,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5860:3:23","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":6629,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6615,"src":"5865:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6627,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6371,"src":"5829:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6630,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5829:42:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6631,"nodeType":"RevertStatement","src":"5822:49:23"}]}},{"expression":{"arguments":[{"id":6636,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6615,"src":"5906:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6635,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5898:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":6634,"name":"uint184","nodeType":"ElementaryTypeName","src":"5898:7:23","typeDescriptions":{}}},"id":6637,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5898:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"functionReturnParameters":6619,"id":6638,"nodeType":"Return","src":"5891:21:23"}]},"documentation":{"id":6613,"nodeType":"StructuredDocumentation","src":"5416:280:23","text":" @dev Returns the downcasted uint184 from uint256, reverting on\n overflow (when the input is greater than largest uint184).\n Counterpart to Solidity's `uint184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":6640,"implemented":true,"kind":"function","modifiers":[],"name":"toUint184","nameLocation":"5710:9:23","nodeType":"FunctionDefinition","parameters":{"id":6616,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6615,"mutability":"mutable","name":"value","nameLocation":"5728:5:23","nodeType":"VariableDeclaration","scope":6640,"src":"5720:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6614,"name":"uint256","nodeType":"ElementaryTypeName","src":"5720:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5719:15:23"},"returnParameters":{"id":6619,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6618,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6640,"src":"5758:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"},"typeName":{"id":6617,"name":"uint184","nodeType":"ElementaryTypeName","src":"5758:7:23","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"visibility":"internal"}],"src":"5757:9:23"},"scope":8126,"src":"5701:218:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6667,"nodeType":"Block","src":"6276:152:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6648,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6643,"src":"6290:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6651,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6303:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":6650,"name":"uint176","nodeType":"ElementaryTypeName","src":"6303:7:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"}],"id":6649,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6298:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6652,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6298:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint176","typeString":"type(uint176)"}},"id":6653,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6312:3:23","memberName":"max","nodeType":"MemberAccess","src":"6298:17:23","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"src":"6290:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6661,"nodeType":"IfStatement","src":"6286:105:23","trueBody":{"id":6660,"nodeType":"Block","src":"6317:74:23","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":6656,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6369:3:23","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":6657,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6643,"src":"6374:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6655,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6371,"src":"6338:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6658,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6338:42:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6659,"nodeType":"RevertStatement","src":"6331:49:23"}]}},{"expression":{"arguments":[{"id":6664,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6643,"src":"6415:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6663,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6407:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":6662,"name":"uint176","nodeType":"ElementaryTypeName","src":"6407:7:23","typeDescriptions":{}}},"id":6665,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6407:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"functionReturnParameters":6647,"id":6666,"nodeType":"Return","src":"6400:21:23"}]},"documentation":{"id":6641,"nodeType":"StructuredDocumentation","src":"5925:280:23","text":" @dev Returns the downcasted uint176 from uint256, reverting on\n overflow (when the input is greater than largest uint176).\n Counterpart to Solidity's `uint176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":6668,"implemented":true,"kind":"function","modifiers":[],"name":"toUint176","nameLocation":"6219:9:23","nodeType":"FunctionDefinition","parameters":{"id":6644,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6643,"mutability":"mutable","name":"value","nameLocation":"6237:5:23","nodeType":"VariableDeclaration","scope":6668,"src":"6229:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6642,"name":"uint256","nodeType":"ElementaryTypeName","src":"6229:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6228:15:23"},"returnParameters":{"id":6647,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6646,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6668,"src":"6267:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"},"typeName":{"id":6645,"name":"uint176","nodeType":"ElementaryTypeName","src":"6267:7:23","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"visibility":"internal"}],"src":"6266:9:23"},"scope":8126,"src":"6210:218:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6695,"nodeType":"Block","src":"6785:152:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6676,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6671,"src":"6799:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6679,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6812:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":6678,"name":"uint168","nodeType":"ElementaryTypeName","src":"6812:7:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"}],"id":6677,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6807:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6680,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6807:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint168","typeString":"type(uint168)"}},"id":6681,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6821:3:23","memberName":"max","nodeType":"MemberAccess","src":"6807:17:23","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"src":"6799:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6689,"nodeType":"IfStatement","src":"6795:105:23","trueBody":{"id":6688,"nodeType":"Block","src":"6826:74:23","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":6684,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6878:3:23","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":6685,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6671,"src":"6883:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6683,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6371,"src":"6847:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6686,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6847:42:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6687,"nodeType":"RevertStatement","src":"6840:49:23"}]}},{"expression":{"arguments":[{"id":6692,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6671,"src":"6924:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6691,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6916:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":6690,"name":"uint168","nodeType":"ElementaryTypeName","src":"6916:7:23","typeDescriptions":{}}},"id":6693,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6916:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"functionReturnParameters":6675,"id":6694,"nodeType":"Return","src":"6909:21:23"}]},"documentation":{"id":6669,"nodeType":"StructuredDocumentation","src":"6434:280:23","text":" @dev Returns the downcasted uint168 from uint256, reverting on\n overflow (when the input is greater than largest uint168).\n Counterpart to Solidity's `uint168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":6696,"implemented":true,"kind":"function","modifiers":[],"name":"toUint168","nameLocation":"6728:9:23","nodeType":"FunctionDefinition","parameters":{"id":6672,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6671,"mutability":"mutable","name":"value","nameLocation":"6746:5:23","nodeType":"VariableDeclaration","scope":6696,"src":"6738:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6670,"name":"uint256","nodeType":"ElementaryTypeName","src":"6738:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6737:15:23"},"returnParameters":{"id":6675,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6674,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6696,"src":"6776:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"},"typeName":{"id":6673,"name":"uint168","nodeType":"ElementaryTypeName","src":"6776:7:23","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"visibility":"internal"}],"src":"6775:9:23"},"scope":8126,"src":"6719:218:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6723,"nodeType":"Block","src":"7294:152:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6704,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6699,"src":"7308:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6707,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7321:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":6706,"name":"uint160","nodeType":"ElementaryTypeName","src":"7321:7:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"}],"id":6705,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7316:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6708,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7316:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint160","typeString":"type(uint160)"}},"id":6709,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7330:3:23","memberName":"max","nodeType":"MemberAccess","src":"7316:17:23","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"7308:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6717,"nodeType":"IfStatement","src":"7304:105:23","trueBody":{"id":6716,"nodeType":"Block","src":"7335:74:23","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":6712,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7387:3:23","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":6713,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6699,"src":"7392:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6711,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6371,"src":"7356:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6714,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7356:42:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6715,"nodeType":"RevertStatement","src":"7349:49:23"}]}},{"expression":{"arguments":[{"id":6720,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6699,"src":"7433:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6719,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7425:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":6718,"name":"uint160","nodeType":"ElementaryTypeName","src":"7425:7:23","typeDescriptions":{}}},"id":6721,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7425:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":6703,"id":6722,"nodeType":"Return","src":"7418:21:23"}]},"documentation":{"id":6697,"nodeType":"StructuredDocumentation","src":"6943:280:23","text":" @dev Returns the downcasted uint160 from uint256, reverting on\n overflow (when the input is greater than largest uint160).\n Counterpart to Solidity's `uint160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":6724,"implemented":true,"kind":"function","modifiers":[],"name":"toUint160","nameLocation":"7237:9:23","nodeType":"FunctionDefinition","parameters":{"id":6700,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6699,"mutability":"mutable","name":"value","nameLocation":"7255:5:23","nodeType":"VariableDeclaration","scope":6724,"src":"7247:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6698,"name":"uint256","nodeType":"ElementaryTypeName","src":"7247:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7246:15:23"},"returnParameters":{"id":6703,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6702,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6724,"src":"7285:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":6701,"name":"uint160","nodeType":"ElementaryTypeName","src":"7285:7:23","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"7284:9:23"},"scope":8126,"src":"7228:218:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6751,"nodeType":"Block","src":"7803:152:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6732,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6727,"src":"7817:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6735,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7830:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":6734,"name":"uint152","nodeType":"ElementaryTypeName","src":"7830:7:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"}],"id":6733,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7825:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6736,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7825:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint152","typeString":"type(uint152)"}},"id":6737,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7839:3:23","memberName":"max","nodeType":"MemberAccess","src":"7825:17:23","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"src":"7817:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6745,"nodeType":"IfStatement","src":"7813:105:23","trueBody":{"id":6744,"nodeType":"Block","src":"7844:74:23","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":6740,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7896:3:23","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":6741,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6727,"src":"7901:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6739,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6371,"src":"7865:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6742,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7865:42:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6743,"nodeType":"RevertStatement","src":"7858:49:23"}]}},{"expression":{"arguments":[{"id":6748,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6727,"src":"7942:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6747,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7934:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":6746,"name":"uint152","nodeType":"ElementaryTypeName","src":"7934:7:23","typeDescriptions":{}}},"id":6749,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7934:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"functionReturnParameters":6731,"id":6750,"nodeType":"Return","src":"7927:21:23"}]},"documentation":{"id":6725,"nodeType":"StructuredDocumentation","src":"7452:280:23","text":" @dev Returns the downcasted uint152 from uint256, reverting on\n overflow (when the input is greater than largest uint152).\n Counterpart to Solidity's `uint152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":6752,"implemented":true,"kind":"function","modifiers":[],"name":"toUint152","nameLocation":"7746:9:23","nodeType":"FunctionDefinition","parameters":{"id":6728,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6727,"mutability":"mutable","name":"value","nameLocation":"7764:5:23","nodeType":"VariableDeclaration","scope":6752,"src":"7756:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6726,"name":"uint256","nodeType":"ElementaryTypeName","src":"7756:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7755:15:23"},"returnParameters":{"id":6731,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6730,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6752,"src":"7794:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"},"typeName":{"id":6729,"name":"uint152","nodeType":"ElementaryTypeName","src":"7794:7:23","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"visibility":"internal"}],"src":"7793:9:23"},"scope":8126,"src":"7737:218:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6779,"nodeType":"Block","src":"8312:152:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6760,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6755,"src":"8326:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6763,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8339:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":6762,"name":"uint144","nodeType":"ElementaryTypeName","src":"8339:7:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"}],"id":6761,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8334:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6764,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8334:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint144","typeString":"type(uint144)"}},"id":6765,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8348:3:23","memberName":"max","nodeType":"MemberAccess","src":"8334:17:23","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"src":"8326:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6773,"nodeType":"IfStatement","src":"8322:105:23","trueBody":{"id":6772,"nodeType":"Block","src":"8353:74:23","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":6768,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8405:3:23","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":6769,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6755,"src":"8410:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6767,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6371,"src":"8374:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6770,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8374:42:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6771,"nodeType":"RevertStatement","src":"8367:49:23"}]}},{"expression":{"arguments":[{"id":6776,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6755,"src":"8451:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6775,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8443:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":6774,"name":"uint144","nodeType":"ElementaryTypeName","src":"8443:7:23","typeDescriptions":{}}},"id":6777,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8443:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"functionReturnParameters":6759,"id":6778,"nodeType":"Return","src":"8436:21:23"}]},"documentation":{"id":6753,"nodeType":"StructuredDocumentation","src":"7961:280:23","text":" @dev Returns the downcasted uint144 from uint256, reverting on\n overflow (when the input is greater than largest uint144).\n Counterpart to Solidity's `uint144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":6780,"implemented":true,"kind":"function","modifiers":[],"name":"toUint144","nameLocation":"8255:9:23","nodeType":"FunctionDefinition","parameters":{"id":6756,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6755,"mutability":"mutable","name":"value","nameLocation":"8273:5:23","nodeType":"VariableDeclaration","scope":6780,"src":"8265:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6754,"name":"uint256","nodeType":"ElementaryTypeName","src":"8265:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8264:15:23"},"returnParameters":{"id":6759,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6758,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6780,"src":"8303:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"},"typeName":{"id":6757,"name":"uint144","nodeType":"ElementaryTypeName","src":"8303:7:23","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"visibility":"internal"}],"src":"8302:9:23"},"scope":8126,"src":"8246:218:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6807,"nodeType":"Block","src":"8821:152:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6788,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6783,"src":"8835:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6791,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8848:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":6790,"name":"uint136","nodeType":"ElementaryTypeName","src":"8848:7:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"}],"id":6789,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8843:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6792,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8843:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint136","typeString":"type(uint136)"}},"id":6793,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8857:3:23","memberName":"max","nodeType":"MemberAccess","src":"8843:17:23","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"src":"8835:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6801,"nodeType":"IfStatement","src":"8831:105:23","trueBody":{"id":6800,"nodeType":"Block","src":"8862:74:23","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":6796,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8914:3:23","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":6797,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6783,"src":"8919:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6795,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6371,"src":"8883:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6798,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8883:42:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6799,"nodeType":"RevertStatement","src":"8876:49:23"}]}},{"expression":{"arguments":[{"id":6804,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6783,"src":"8960:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6803,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8952:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":6802,"name":"uint136","nodeType":"ElementaryTypeName","src":"8952:7:23","typeDescriptions":{}}},"id":6805,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8952:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"functionReturnParameters":6787,"id":6806,"nodeType":"Return","src":"8945:21:23"}]},"documentation":{"id":6781,"nodeType":"StructuredDocumentation","src":"8470:280:23","text":" @dev Returns the downcasted uint136 from uint256, reverting on\n overflow (when the input is greater than largest uint136).\n Counterpart to Solidity's `uint136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":6808,"implemented":true,"kind":"function","modifiers":[],"name":"toUint136","nameLocation":"8764:9:23","nodeType":"FunctionDefinition","parameters":{"id":6784,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6783,"mutability":"mutable","name":"value","nameLocation":"8782:5:23","nodeType":"VariableDeclaration","scope":6808,"src":"8774:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6782,"name":"uint256","nodeType":"ElementaryTypeName","src":"8774:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8773:15:23"},"returnParameters":{"id":6787,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6786,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6808,"src":"8812:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"},"typeName":{"id":6785,"name":"uint136","nodeType":"ElementaryTypeName","src":"8812:7:23","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"visibility":"internal"}],"src":"8811:9:23"},"scope":8126,"src":"8755:218:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6835,"nodeType":"Block","src":"9330:152:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6816,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6811,"src":"9344:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6819,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9357:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":6818,"name":"uint128","nodeType":"ElementaryTypeName","src":"9357:7:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"}],"id":6817,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9352:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6820,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9352:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint128","typeString":"type(uint128)"}},"id":6821,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9366:3:23","memberName":"max","nodeType":"MemberAccess","src":"9352:17:23","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"9344:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6829,"nodeType":"IfStatement","src":"9340:105:23","trueBody":{"id":6828,"nodeType":"Block","src":"9371:74:23","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":6824,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9423:3:23","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":6825,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6811,"src":"9428:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6823,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6371,"src":"9392:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6826,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9392:42:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6827,"nodeType":"RevertStatement","src":"9385:49:23"}]}},{"expression":{"arguments":[{"id":6832,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6811,"src":"9469:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6831,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9461:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":6830,"name":"uint128","nodeType":"ElementaryTypeName","src":"9461:7:23","typeDescriptions":{}}},"id":6833,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9461:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":6815,"id":6834,"nodeType":"Return","src":"9454:21:23"}]},"documentation":{"id":6809,"nodeType":"StructuredDocumentation","src":"8979:280:23","text":" @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":6836,"implemented":true,"kind":"function","modifiers":[],"name":"toUint128","nameLocation":"9273:9:23","nodeType":"FunctionDefinition","parameters":{"id":6812,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6811,"mutability":"mutable","name":"value","nameLocation":"9291:5:23","nodeType":"VariableDeclaration","scope":6836,"src":"9283:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6810,"name":"uint256","nodeType":"ElementaryTypeName","src":"9283:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9282:15:23"},"returnParameters":{"id":6815,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6814,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6836,"src":"9321:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":6813,"name":"uint128","nodeType":"ElementaryTypeName","src":"9321:7:23","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"9320:9:23"},"scope":8126,"src":"9264:218:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6863,"nodeType":"Block","src":"9839:152:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6850,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6844,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6839,"src":"9853:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6847,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9866:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":6846,"name":"uint120","nodeType":"ElementaryTypeName","src":"9866:7:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"}],"id":6845,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9861:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6848,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9861:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint120","typeString":"type(uint120)"}},"id":6849,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9875:3:23","memberName":"max","nodeType":"MemberAccess","src":"9861:17:23","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"src":"9853:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6857,"nodeType":"IfStatement","src":"9849:105:23","trueBody":{"id":6856,"nodeType":"Block","src":"9880:74:23","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":6852,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9932:3:23","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":6853,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6839,"src":"9937:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6851,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6371,"src":"9901:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6854,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9901:42:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6855,"nodeType":"RevertStatement","src":"9894:49:23"}]}},{"expression":{"arguments":[{"id":6860,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6839,"src":"9978:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6859,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9970:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":6858,"name":"uint120","nodeType":"ElementaryTypeName","src":"9970:7:23","typeDescriptions":{}}},"id":6861,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9970:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"functionReturnParameters":6843,"id":6862,"nodeType":"Return","src":"9963:21:23"}]},"documentation":{"id":6837,"nodeType":"StructuredDocumentation","src":"9488:280:23","text":" @dev Returns the downcasted uint120 from uint256, reverting on\n overflow (when the input is greater than largest uint120).\n Counterpart to Solidity's `uint120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":6864,"implemented":true,"kind":"function","modifiers":[],"name":"toUint120","nameLocation":"9782:9:23","nodeType":"FunctionDefinition","parameters":{"id":6840,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6839,"mutability":"mutable","name":"value","nameLocation":"9800:5:23","nodeType":"VariableDeclaration","scope":6864,"src":"9792:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6838,"name":"uint256","nodeType":"ElementaryTypeName","src":"9792:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9791:15:23"},"returnParameters":{"id":6843,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6842,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6864,"src":"9830:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"},"typeName":{"id":6841,"name":"uint120","nodeType":"ElementaryTypeName","src":"9830:7:23","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"visibility":"internal"}],"src":"9829:9:23"},"scope":8126,"src":"9773:218:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6891,"nodeType":"Block","src":"10348:152:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6872,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6867,"src":"10362:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6875,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10375:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":6874,"name":"uint112","nodeType":"ElementaryTypeName","src":"10375:7:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"}],"id":6873,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10370:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6876,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10370:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint112","typeString":"type(uint112)"}},"id":6877,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10384:3:23","memberName":"max","nodeType":"MemberAccess","src":"10370:17:23","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"10362:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6885,"nodeType":"IfStatement","src":"10358:105:23","trueBody":{"id":6884,"nodeType":"Block","src":"10389:74:23","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":6880,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10441:3:23","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":6881,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6867,"src":"10446:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6879,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6371,"src":"10410:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6882,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10410:42:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6883,"nodeType":"RevertStatement","src":"10403:49:23"}]}},{"expression":{"arguments":[{"id":6888,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6867,"src":"10487:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6887,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10479:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":6886,"name":"uint112","nodeType":"ElementaryTypeName","src":"10479:7:23","typeDescriptions":{}}},"id":6889,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10479:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"functionReturnParameters":6871,"id":6890,"nodeType":"Return","src":"10472:21:23"}]},"documentation":{"id":6865,"nodeType":"StructuredDocumentation","src":"9997:280:23","text":" @dev Returns the downcasted uint112 from uint256, reverting on\n overflow (when the input is greater than largest uint112).\n Counterpart to Solidity's `uint112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":6892,"implemented":true,"kind":"function","modifiers":[],"name":"toUint112","nameLocation":"10291:9:23","nodeType":"FunctionDefinition","parameters":{"id":6868,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6867,"mutability":"mutable","name":"value","nameLocation":"10309:5:23","nodeType":"VariableDeclaration","scope":6892,"src":"10301:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6866,"name":"uint256","nodeType":"ElementaryTypeName","src":"10301:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10300:15:23"},"returnParameters":{"id":6871,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6870,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6892,"src":"10339:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":6869,"name":"uint112","nodeType":"ElementaryTypeName","src":"10339:7:23","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"src":"10338:9:23"},"scope":8126,"src":"10282:218:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6919,"nodeType":"Block","src":"10857:152:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6900,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6895,"src":"10871:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6903,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10884:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":6902,"name":"uint104","nodeType":"ElementaryTypeName","src":"10884:7:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"}],"id":6901,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10879:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6904,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10879:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint104","typeString":"type(uint104)"}},"id":6905,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10893:3:23","memberName":"max","nodeType":"MemberAccess","src":"10879:17:23","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"src":"10871:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6913,"nodeType":"IfStatement","src":"10867:105:23","trueBody":{"id":6912,"nodeType":"Block","src":"10898:74:23","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":6908,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10950:3:23","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":6909,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6895,"src":"10955:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6907,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6371,"src":"10919:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6910,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10919:42:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6911,"nodeType":"RevertStatement","src":"10912:49:23"}]}},{"expression":{"arguments":[{"id":6916,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6895,"src":"10996:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6915,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10988:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":6914,"name":"uint104","nodeType":"ElementaryTypeName","src":"10988:7:23","typeDescriptions":{}}},"id":6917,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10988:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"functionReturnParameters":6899,"id":6918,"nodeType":"Return","src":"10981:21:23"}]},"documentation":{"id":6893,"nodeType":"StructuredDocumentation","src":"10506:280:23","text":" @dev Returns the downcasted uint104 from uint256, reverting on\n overflow (when the input is greater than largest uint104).\n Counterpart to Solidity's `uint104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":6920,"implemented":true,"kind":"function","modifiers":[],"name":"toUint104","nameLocation":"10800:9:23","nodeType":"FunctionDefinition","parameters":{"id":6896,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6895,"mutability":"mutable","name":"value","nameLocation":"10818:5:23","nodeType":"VariableDeclaration","scope":6920,"src":"10810:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6894,"name":"uint256","nodeType":"ElementaryTypeName","src":"10810:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10809:15:23"},"returnParameters":{"id":6899,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6898,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6920,"src":"10848:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"},"typeName":{"id":6897,"name":"uint104","nodeType":"ElementaryTypeName","src":"10848:7:23","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"visibility":"internal"}],"src":"10847:9:23"},"scope":8126,"src":"10791:218:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6947,"nodeType":"Block","src":"11360:149:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6934,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6928,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6923,"src":"11374:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6931,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11387:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":6930,"name":"uint96","nodeType":"ElementaryTypeName","src":"11387:6:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"}],"id":6929,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11382:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6932,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11382:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint96","typeString":"type(uint96)"}},"id":6933,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11395:3:23","memberName":"max","nodeType":"MemberAccess","src":"11382:16:23","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"11374:24:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6941,"nodeType":"IfStatement","src":"11370:103:23","trueBody":{"id":6940,"nodeType":"Block","src":"11400:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":6936,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11452:2:23","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":6937,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6923,"src":"11456:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6935,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6371,"src":"11421:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6938,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11421:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6939,"nodeType":"RevertStatement","src":"11414:48:23"}]}},{"expression":{"arguments":[{"id":6944,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6923,"src":"11496:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6943,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11489:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":6942,"name":"uint96","nodeType":"ElementaryTypeName","src":"11489:6:23","typeDescriptions":{}}},"id":6945,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11489:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":6927,"id":6946,"nodeType":"Return","src":"11482:20:23"}]},"documentation":{"id":6921,"nodeType":"StructuredDocumentation","src":"11015:276:23","text":" @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":6948,"implemented":true,"kind":"function","modifiers":[],"name":"toUint96","nameLocation":"11305:8:23","nodeType":"FunctionDefinition","parameters":{"id":6924,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6923,"mutability":"mutable","name":"value","nameLocation":"11322:5:23","nodeType":"VariableDeclaration","scope":6948,"src":"11314:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6922,"name":"uint256","nodeType":"ElementaryTypeName","src":"11314:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11313:15:23"},"returnParameters":{"id":6927,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6926,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6948,"src":"11352:6:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":6925,"name":"uint96","nodeType":"ElementaryTypeName","src":"11352:6:23","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"11351:8:23"},"scope":8126,"src":"11296:213:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6975,"nodeType":"Block","src":"11860:149:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6956,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6951,"src":"11874:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6959,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11887:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":6958,"name":"uint88","nodeType":"ElementaryTypeName","src":"11887:6:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"}],"id":6957,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11882:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6960,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11882:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint88","typeString":"type(uint88)"}},"id":6961,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11895:3:23","memberName":"max","nodeType":"MemberAccess","src":"11882:16:23","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"src":"11874:24:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6969,"nodeType":"IfStatement","src":"11870:103:23","trueBody":{"id":6968,"nodeType":"Block","src":"11900:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":6964,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11952:2:23","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":6965,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6951,"src":"11956:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6963,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6371,"src":"11921:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6966,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11921:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6967,"nodeType":"RevertStatement","src":"11914:48:23"}]}},{"expression":{"arguments":[{"id":6972,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6951,"src":"11996:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6971,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11989:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":6970,"name":"uint88","nodeType":"ElementaryTypeName","src":"11989:6:23","typeDescriptions":{}}},"id":6973,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11989:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"functionReturnParameters":6955,"id":6974,"nodeType":"Return","src":"11982:20:23"}]},"documentation":{"id":6949,"nodeType":"StructuredDocumentation","src":"11515:276:23","text":" @dev Returns the downcasted uint88 from uint256, reverting on\n overflow (when the input is greater than largest uint88).\n Counterpart to Solidity's `uint88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":6976,"implemented":true,"kind":"function","modifiers":[],"name":"toUint88","nameLocation":"11805:8:23","nodeType":"FunctionDefinition","parameters":{"id":6952,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6951,"mutability":"mutable","name":"value","nameLocation":"11822:5:23","nodeType":"VariableDeclaration","scope":6976,"src":"11814:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6950,"name":"uint256","nodeType":"ElementaryTypeName","src":"11814:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11813:15:23"},"returnParameters":{"id":6955,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6954,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6976,"src":"11852:6:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"},"typeName":{"id":6953,"name":"uint88","nodeType":"ElementaryTypeName","src":"11852:6:23","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"visibility":"internal"}],"src":"11851:8:23"},"scope":8126,"src":"11796:213:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7003,"nodeType":"Block","src":"12360:149:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6984,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6979,"src":"12374:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6987,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12387:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":6986,"name":"uint80","nodeType":"ElementaryTypeName","src":"12387:6:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"}],"id":6985,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12382:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6988,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12382:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint80","typeString":"type(uint80)"}},"id":6989,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12395:3:23","memberName":"max","nodeType":"MemberAccess","src":"12382:16:23","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"src":"12374:24:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6997,"nodeType":"IfStatement","src":"12370:103:23","trueBody":{"id":6996,"nodeType":"Block","src":"12400:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":6992,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12452:2:23","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":6993,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6979,"src":"12456:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6991,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6371,"src":"12421:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6994,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12421:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6995,"nodeType":"RevertStatement","src":"12414:48:23"}]}},{"expression":{"arguments":[{"id":7000,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6979,"src":"12496:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6999,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12489:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":6998,"name":"uint80","nodeType":"ElementaryTypeName","src":"12489:6:23","typeDescriptions":{}}},"id":7001,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12489:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"functionReturnParameters":6983,"id":7002,"nodeType":"Return","src":"12482:20:23"}]},"documentation":{"id":6977,"nodeType":"StructuredDocumentation","src":"12015:276:23","text":" @dev Returns the downcasted uint80 from uint256, reverting on\n overflow (when the input is greater than largest uint80).\n Counterpart to Solidity's `uint80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":7004,"implemented":true,"kind":"function","modifiers":[],"name":"toUint80","nameLocation":"12305:8:23","nodeType":"FunctionDefinition","parameters":{"id":6980,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6979,"mutability":"mutable","name":"value","nameLocation":"12322:5:23","nodeType":"VariableDeclaration","scope":7004,"src":"12314:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6978,"name":"uint256","nodeType":"ElementaryTypeName","src":"12314:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12313:15:23"},"returnParameters":{"id":6983,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6982,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7004,"src":"12352:6:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":6981,"name":"uint80","nodeType":"ElementaryTypeName","src":"12352:6:23","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"12351:8:23"},"scope":8126,"src":"12296:213:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7031,"nodeType":"Block","src":"12860:149:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7012,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7007,"src":"12874:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7015,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12887:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":7014,"name":"uint72","nodeType":"ElementaryTypeName","src":"12887:6:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"}],"id":7013,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12882:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7016,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12882:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint72","typeString":"type(uint72)"}},"id":7017,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12895:3:23","memberName":"max","nodeType":"MemberAccess","src":"12882:16:23","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"src":"12874:24:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7025,"nodeType":"IfStatement","src":"12870:103:23","trueBody":{"id":7024,"nodeType":"Block","src":"12900:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":7020,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12952:2:23","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":7021,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7007,"src":"12956:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7019,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6371,"src":"12921:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7022,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12921:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7023,"nodeType":"RevertStatement","src":"12914:48:23"}]}},{"expression":{"arguments":[{"id":7028,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7007,"src":"12996:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7027,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12989:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":7026,"name":"uint72","nodeType":"ElementaryTypeName","src":"12989:6:23","typeDescriptions":{}}},"id":7029,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12989:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"functionReturnParameters":7011,"id":7030,"nodeType":"Return","src":"12982:20:23"}]},"documentation":{"id":7005,"nodeType":"StructuredDocumentation","src":"12515:276:23","text":" @dev Returns the downcasted uint72 from uint256, reverting on\n overflow (when the input is greater than largest uint72).\n Counterpart to Solidity's `uint72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":7032,"implemented":true,"kind":"function","modifiers":[],"name":"toUint72","nameLocation":"12805:8:23","nodeType":"FunctionDefinition","parameters":{"id":7008,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7007,"mutability":"mutable","name":"value","nameLocation":"12822:5:23","nodeType":"VariableDeclaration","scope":7032,"src":"12814:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7006,"name":"uint256","nodeType":"ElementaryTypeName","src":"12814:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12813:15:23"},"returnParameters":{"id":7011,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7010,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7032,"src":"12852:6:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":7009,"name":"uint72","nodeType":"ElementaryTypeName","src":"12852:6:23","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"}],"src":"12851:8:23"},"scope":8126,"src":"12796:213:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7059,"nodeType":"Block","src":"13360:149:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7040,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7035,"src":"13374:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7043,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13387:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":7042,"name":"uint64","nodeType":"ElementaryTypeName","src":"13387:6:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":7041,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13382:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7044,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13382:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":7045,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13395:3:23","memberName":"max","nodeType":"MemberAccess","src":"13382:16:23","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"13374:24:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7053,"nodeType":"IfStatement","src":"13370:103:23","trueBody":{"id":7052,"nodeType":"Block","src":"13400:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":7048,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13452:2:23","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":7049,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7035,"src":"13456:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7047,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6371,"src":"13421:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7050,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13421:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7051,"nodeType":"RevertStatement","src":"13414:48:23"}]}},{"expression":{"arguments":[{"id":7056,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7035,"src":"13496:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7055,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13489:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":7054,"name":"uint64","nodeType":"ElementaryTypeName","src":"13489:6:23","typeDescriptions":{}}},"id":7057,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13489:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":7039,"id":7058,"nodeType":"Return","src":"13482:20:23"}]},"documentation":{"id":7033,"nodeType":"StructuredDocumentation","src":"13015:276:23","text":" @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":7060,"implemented":true,"kind":"function","modifiers":[],"name":"toUint64","nameLocation":"13305:8:23","nodeType":"FunctionDefinition","parameters":{"id":7036,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7035,"mutability":"mutable","name":"value","nameLocation":"13322:5:23","nodeType":"VariableDeclaration","scope":7060,"src":"13314:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7034,"name":"uint256","nodeType":"ElementaryTypeName","src":"13314:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13313:15:23"},"returnParameters":{"id":7039,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7038,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7060,"src":"13352:6:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":7037,"name":"uint64","nodeType":"ElementaryTypeName","src":"13352:6:23","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"13351:8:23"},"scope":8126,"src":"13296:213:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7087,"nodeType":"Block","src":"13860:149:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7068,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7063,"src":"13874:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7071,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13887:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":7070,"name":"uint56","nodeType":"ElementaryTypeName","src":"13887:6:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"}],"id":7069,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13882:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7072,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13882:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint56","typeString":"type(uint56)"}},"id":7073,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13895:3:23","memberName":"max","nodeType":"MemberAccess","src":"13882:16:23","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"src":"13874:24:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7081,"nodeType":"IfStatement","src":"13870:103:23","trueBody":{"id":7080,"nodeType":"Block","src":"13900:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":7076,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13952:2:23","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":7077,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7063,"src":"13956:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7075,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6371,"src":"13921:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7078,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13921:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7079,"nodeType":"RevertStatement","src":"13914:48:23"}]}},{"expression":{"arguments":[{"id":7084,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7063,"src":"13996:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7083,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13989:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":7082,"name":"uint56","nodeType":"ElementaryTypeName","src":"13989:6:23","typeDescriptions":{}}},"id":7085,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13989:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"functionReturnParameters":7067,"id":7086,"nodeType":"Return","src":"13982:20:23"}]},"documentation":{"id":7061,"nodeType":"StructuredDocumentation","src":"13515:276:23","text":" @dev Returns the downcasted uint56 from uint256, reverting on\n overflow (when the input is greater than largest uint56).\n Counterpart to Solidity's `uint56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":7088,"implemented":true,"kind":"function","modifiers":[],"name":"toUint56","nameLocation":"13805:8:23","nodeType":"FunctionDefinition","parameters":{"id":7064,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7063,"mutability":"mutable","name":"value","nameLocation":"13822:5:23","nodeType":"VariableDeclaration","scope":7088,"src":"13814:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7062,"name":"uint256","nodeType":"ElementaryTypeName","src":"13814:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13813:15:23"},"returnParameters":{"id":7067,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7066,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7088,"src":"13852:6:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"},"typeName":{"id":7065,"name":"uint56","nodeType":"ElementaryTypeName","src":"13852:6:23","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"visibility":"internal"}],"src":"13851:8:23"},"scope":8126,"src":"13796:213:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7115,"nodeType":"Block","src":"14360:149:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7096,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7091,"src":"14374:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7099,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14387:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":7098,"name":"uint48","nodeType":"ElementaryTypeName","src":"14387:6:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"}],"id":7097,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14382:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7100,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14382:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint48","typeString":"type(uint48)"}},"id":7101,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14395:3:23","memberName":"max","nodeType":"MemberAccess","src":"14382:16:23","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"14374:24:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7109,"nodeType":"IfStatement","src":"14370:103:23","trueBody":{"id":7108,"nodeType":"Block","src":"14400:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":7104,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14452:2:23","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":7105,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7091,"src":"14456:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7103,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6371,"src":"14421:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7106,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14421:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7107,"nodeType":"RevertStatement","src":"14414:48:23"}]}},{"expression":{"arguments":[{"id":7112,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7091,"src":"14496:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7111,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14489:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":7110,"name":"uint48","nodeType":"ElementaryTypeName","src":"14489:6:23","typeDescriptions":{}}},"id":7113,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14489:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":7095,"id":7114,"nodeType":"Return","src":"14482:20:23"}]},"documentation":{"id":7089,"nodeType":"StructuredDocumentation","src":"14015:276:23","text":" @dev Returns the downcasted uint48 from uint256, reverting on\n overflow (when the input is greater than largest uint48).\n Counterpart to Solidity's `uint48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":7116,"implemented":true,"kind":"function","modifiers":[],"name":"toUint48","nameLocation":"14305:8:23","nodeType":"FunctionDefinition","parameters":{"id":7092,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7091,"mutability":"mutable","name":"value","nameLocation":"14322:5:23","nodeType":"VariableDeclaration","scope":7116,"src":"14314:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7090,"name":"uint256","nodeType":"ElementaryTypeName","src":"14314:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14313:15:23"},"returnParameters":{"id":7095,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7094,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7116,"src":"14352:6:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":7093,"name":"uint48","nodeType":"ElementaryTypeName","src":"14352:6:23","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"14351:8:23"},"scope":8126,"src":"14296:213:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7143,"nodeType":"Block","src":"14860:149:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7124,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7119,"src":"14874:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7127,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14887:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":7126,"name":"uint40","nodeType":"ElementaryTypeName","src":"14887:6:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"}],"id":7125,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14882:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7128,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14882:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint40","typeString":"type(uint40)"}},"id":7129,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14895:3:23","memberName":"max","nodeType":"MemberAccess","src":"14882:16:23","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"14874:24:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7137,"nodeType":"IfStatement","src":"14870:103:23","trueBody":{"id":7136,"nodeType":"Block","src":"14900:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":7132,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14952:2:23","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":7133,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7119,"src":"14956:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7131,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6371,"src":"14921:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7134,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14921:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7135,"nodeType":"RevertStatement","src":"14914:48:23"}]}},{"expression":{"arguments":[{"id":7140,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7119,"src":"14996:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7139,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14989:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":7138,"name":"uint40","nodeType":"ElementaryTypeName","src":"14989:6:23","typeDescriptions":{}}},"id":7141,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14989:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"functionReturnParameters":7123,"id":7142,"nodeType":"Return","src":"14982:20:23"}]},"documentation":{"id":7117,"nodeType":"StructuredDocumentation","src":"14515:276:23","text":" @dev Returns the downcasted uint40 from uint256, reverting on\n overflow (when the input is greater than largest uint40).\n Counterpart to Solidity's `uint40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":7144,"implemented":true,"kind":"function","modifiers":[],"name":"toUint40","nameLocation":"14805:8:23","nodeType":"FunctionDefinition","parameters":{"id":7120,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7119,"mutability":"mutable","name":"value","nameLocation":"14822:5:23","nodeType":"VariableDeclaration","scope":7144,"src":"14814:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7118,"name":"uint256","nodeType":"ElementaryTypeName","src":"14814:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14813:15:23"},"returnParameters":{"id":7123,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7122,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7144,"src":"14852:6:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":7121,"name":"uint40","nodeType":"ElementaryTypeName","src":"14852:6:23","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"14851:8:23"},"scope":8126,"src":"14796:213:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7171,"nodeType":"Block","src":"15360:149:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7152,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7147,"src":"15374:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7155,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15387:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":7154,"name":"uint32","nodeType":"ElementaryTypeName","src":"15387:6:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"}],"id":7153,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15382:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7156,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15382:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint32","typeString":"type(uint32)"}},"id":7157,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15395:3:23","memberName":"max","nodeType":"MemberAccess","src":"15382:16:23","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"15374:24:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7165,"nodeType":"IfStatement","src":"15370:103:23","trueBody":{"id":7164,"nodeType":"Block","src":"15400:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":7160,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15452:2:23","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":7161,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7147,"src":"15456:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7159,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6371,"src":"15421:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7162,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15421:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7163,"nodeType":"RevertStatement","src":"15414:48:23"}]}},{"expression":{"arguments":[{"id":7168,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7147,"src":"15496:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7167,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15489:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":7166,"name":"uint32","nodeType":"ElementaryTypeName","src":"15489:6:23","typeDescriptions":{}}},"id":7169,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15489:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":7151,"id":7170,"nodeType":"Return","src":"15482:20:23"}]},"documentation":{"id":7145,"nodeType":"StructuredDocumentation","src":"15015:276:23","text":" @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":7172,"implemented":true,"kind":"function","modifiers":[],"name":"toUint32","nameLocation":"15305:8:23","nodeType":"FunctionDefinition","parameters":{"id":7148,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7147,"mutability":"mutable","name":"value","nameLocation":"15322:5:23","nodeType":"VariableDeclaration","scope":7172,"src":"15314:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7146,"name":"uint256","nodeType":"ElementaryTypeName","src":"15314:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15313:15:23"},"returnParameters":{"id":7151,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7150,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7172,"src":"15352:6:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7149,"name":"uint32","nodeType":"ElementaryTypeName","src":"15352:6:23","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"15351:8:23"},"scope":8126,"src":"15296:213:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7199,"nodeType":"Block","src":"15860:149:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7180,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7175,"src":"15874:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7183,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15887:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":7182,"name":"uint24","nodeType":"ElementaryTypeName","src":"15887:6:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"}],"id":7181,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15882:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7184,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15882:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint24","typeString":"type(uint24)"}},"id":7185,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15895:3:23","memberName":"max","nodeType":"MemberAccess","src":"15882:16:23","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"15874:24:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7193,"nodeType":"IfStatement","src":"15870:103:23","trueBody":{"id":7192,"nodeType":"Block","src":"15900:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":7188,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15952:2:23","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":7189,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7175,"src":"15956:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7187,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6371,"src":"15921:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7190,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15921:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7191,"nodeType":"RevertStatement","src":"15914:48:23"}]}},{"expression":{"arguments":[{"id":7196,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7175,"src":"15996:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7195,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15989:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":7194,"name":"uint24","nodeType":"ElementaryTypeName","src":"15989:6:23","typeDescriptions":{}}},"id":7197,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15989:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"functionReturnParameters":7179,"id":7198,"nodeType":"Return","src":"15982:20:23"}]},"documentation":{"id":7173,"nodeType":"StructuredDocumentation","src":"15515:276:23","text":" @dev Returns the downcasted uint24 from uint256, reverting on\n overflow (when the input is greater than largest uint24).\n Counterpart to Solidity's `uint24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":7200,"implemented":true,"kind":"function","modifiers":[],"name":"toUint24","nameLocation":"15805:8:23","nodeType":"FunctionDefinition","parameters":{"id":7176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7175,"mutability":"mutable","name":"value","nameLocation":"15822:5:23","nodeType":"VariableDeclaration","scope":7200,"src":"15814:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7174,"name":"uint256","nodeType":"ElementaryTypeName","src":"15814:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15813:15:23"},"returnParameters":{"id":7179,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7178,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7200,"src":"15852:6:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":7177,"name":"uint24","nodeType":"ElementaryTypeName","src":"15852:6:23","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"15851:8:23"},"scope":8126,"src":"15796:213:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7227,"nodeType":"Block","src":"16360:149:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7208,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7203,"src":"16374:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7211,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16387:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":7210,"name":"uint16","nodeType":"ElementaryTypeName","src":"16387:6:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"}],"id":7209,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16382:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7212,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16382:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint16","typeString":"type(uint16)"}},"id":7213,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16395:3:23","memberName":"max","nodeType":"MemberAccess","src":"16382:16:23","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"16374:24:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7221,"nodeType":"IfStatement","src":"16370:103:23","trueBody":{"id":7220,"nodeType":"Block","src":"16400:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":7216,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16452:2:23","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":7217,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7203,"src":"16456:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7215,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6371,"src":"16421:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7218,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16421:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7219,"nodeType":"RevertStatement","src":"16414:48:23"}]}},{"expression":{"arguments":[{"id":7224,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7203,"src":"16496:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7223,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16489:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":7222,"name":"uint16","nodeType":"ElementaryTypeName","src":"16489:6:23","typeDescriptions":{}}},"id":7225,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16489:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":7207,"id":7226,"nodeType":"Return","src":"16482:20:23"}]},"documentation":{"id":7201,"nodeType":"StructuredDocumentation","src":"16015:276:23","text":" @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":7228,"implemented":true,"kind":"function","modifiers":[],"name":"toUint16","nameLocation":"16305:8:23","nodeType":"FunctionDefinition","parameters":{"id":7204,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7203,"mutability":"mutable","name":"value","nameLocation":"16322:5:23","nodeType":"VariableDeclaration","scope":7228,"src":"16314:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7202,"name":"uint256","nodeType":"ElementaryTypeName","src":"16314:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16313:15:23"},"returnParameters":{"id":7207,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7206,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7228,"src":"16352:6:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":7205,"name":"uint16","nodeType":"ElementaryTypeName","src":"16352:6:23","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"16351:8:23"},"scope":8126,"src":"16296:213:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7255,"nodeType":"Block","src":"16854:146:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7236,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7231,"src":"16868:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7239,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16881:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":7238,"name":"uint8","nodeType":"ElementaryTypeName","src":"16881:5:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":7237,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16876:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7240,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16876:11:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":7241,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16888:3:23","memberName":"max","nodeType":"MemberAccess","src":"16876:15:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"16868:23:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7249,"nodeType":"IfStatement","src":"16864:101:23","trueBody":{"id":7248,"nodeType":"Block","src":"16893:72:23","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":7244,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16945:1:23","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":7245,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7231,"src":"16948:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7243,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6371,"src":"16914:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7246,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16914:40:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7247,"nodeType":"RevertStatement","src":"16907:47:23"}]}},{"expression":{"arguments":[{"id":7252,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7231,"src":"16987:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7251,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16981:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":7250,"name":"uint8","nodeType":"ElementaryTypeName","src":"16981:5:23","typeDescriptions":{}}},"id":7253,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16981:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":7235,"id":7254,"nodeType":"Return","src":"16974:19:23"}]},"documentation":{"id":7229,"nodeType":"StructuredDocumentation","src":"16515:272:23","text":" @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":7256,"implemented":true,"kind":"function","modifiers":[],"name":"toUint8","nameLocation":"16801:7:23","nodeType":"FunctionDefinition","parameters":{"id":7232,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7231,"mutability":"mutable","name":"value","nameLocation":"16817:5:23","nodeType":"VariableDeclaration","scope":7256,"src":"16809:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7230,"name":"uint256","nodeType":"ElementaryTypeName","src":"16809:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16808:15:23"},"returnParameters":{"id":7235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7234,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7256,"src":"16847:5:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":7233,"name":"uint8","nodeType":"ElementaryTypeName","src":"16847:5:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16846:7:23"},"scope":8126,"src":"16792:208:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7278,"nodeType":"Block","src":"17236:128:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7264,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7259,"src":"17250:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":7265,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17258:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17250:9:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7272,"nodeType":"IfStatement","src":"17246:81:23","trueBody":{"id":7271,"nodeType":"Block","src":"17261:66:23","statements":[{"errorCall":{"arguments":[{"id":7268,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7259,"src":"17310:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7267,"name":"SafeCastOverflowedIntToUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6376,"src":"17282:27:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_int256_$returns$__$","typeString":"function (int256) pure"}},"id":7269,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17282:34:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7270,"nodeType":"RevertStatement","src":"17275:41:23"}]}},{"expression":{"arguments":[{"id":7275,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7259,"src":"17351:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7274,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17343:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7273,"name":"uint256","nodeType":"ElementaryTypeName","src":"17343:7:23","typeDescriptions":{}}},"id":7276,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17343:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7263,"id":7277,"nodeType":"Return","src":"17336:21:23"}]},"documentation":{"id":7257,"nodeType":"StructuredDocumentation","src":"17006:160:23","text":" @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0."},"id":7279,"implemented":true,"kind":"function","modifiers":[],"name":"toUint256","nameLocation":"17180:9:23","nodeType":"FunctionDefinition","parameters":{"id":7260,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7259,"mutability":"mutable","name":"value","nameLocation":"17197:5:23","nodeType":"VariableDeclaration","scope":7279,"src":"17190:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7258,"name":"int256","nodeType":"ElementaryTypeName","src":"17190:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17189:14:23"},"returnParameters":{"id":7263,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7262,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7279,"src":"17227:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7261,"name":"uint256","nodeType":"ElementaryTypeName","src":"17227:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17226:9:23"},"scope":8126,"src":"17171:193:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7304,"nodeType":"Block","src":"17761:150:23","statements":[{"expression":{"id":7292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7287,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7285,"src":"17771:10:23","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7290,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7282,"src":"17791:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7289,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17784:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"},"typeName":{"id":7288,"name":"int248","nodeType":"ElementaryTypeName","src":"17784:6:23","typeDescriptions":{}}},"id":7291,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17784:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"src":"17771:26:23","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"id":7293,"nodeType":"ExpressionStatement","src":"17771:26:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7294,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7285,"src":"17811:10:23","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7295,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7282,"src":"17825:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17811:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7303,"nodeType":"IfStatement","src":"17807:98:23","trueBody":{"id":7302,"nodeType":"Block","src":"17832:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":7298,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17883:3:23","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":7299,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7282,"src":"17888:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7297,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6383,"src":"17853:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7300,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17853:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7301,"nodeType":"RevertStatement","src":"17846:48:23"}]}}]},"documentation":{"id":7280,"nodeType":"StructuredDocumentation","src":"17370:312:23","text":" @dev Returns the downcasted int248 from int256, reverting on\n overflow (when the input is less than smallest int248 or\n greater than largest int248).\n Counterpart to Solidity's `int248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":7305,"implemented":true,"kind":"function","modifiers":[],"name":"toInt248","nameLocation":"17696:8:23","nodeType":"FunctionDefinition","parameters":{"id":7283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7282,"mutability":"mutable","name":"value","nameLocation":"17712:5:23","nodeType":"VariableDeclaration","scope":7305,"src":"17705:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7281,"name":"int256","nodeType":"ElementaryTypeName","src":"17705:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17704:14:23"},"returnParameters":{"id":7286,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7285,"mutability":"mutable","name":"downcasted","nameLocation":"17749:10:23","nodeType":"VariableDeclaration","scope":7305,"src":"17742:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"},"typeName":{"id":7284,"name":"int248","nodeType":"ElementaryTypeName","src":"17742:6:23","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"visibility":"internal"}],"src":"17741:19:23"},"scope":8126,"src":"17687:224:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7330,"nodeType":"Block","src":"18308:150:23","statements":[{"expression":{"id":7318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7313,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7311,"src":"18318:10:23","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7316,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7308,"src":"18338:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7315,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18331:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"},"typeName":{"id":7314,"name":"int240","nodeType":"ElementaryTypeName","src":"18331:6:23","typeDescriptions":{}}},"id":7317,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18331:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"src":"18318:26:23","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"id":7319,"nodeType":"ExpressionStatement","src":"18318:26:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7320,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7311,"src":"18358:10:23","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7321,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7308,"src":"18372:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18358:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7329,"nodeType":"IfStatement","src":"18354:98:23","trueBody":{"id":7328,"nodeType":"Block","src":"18379:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":7324,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18430:3:23","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":7325,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7308,"src":"18435:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7323,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6383,"src":"18400:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7326,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18400:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7327,"nodeType":"RevertStatement","src":"18393:48:23"}]}}]},"documentation":{"id":7306,"nodeType":"StructuredDocumentation","src":"17917:312:23","text":" @dev Returns the downcasted int240 from int256, reverting on\n overflow (when the input is less than smallest int240 or\n greater than largest int240).\n Counterpart to Solidity's `int240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":7331,"implemented":true,"kind":"function","modifiers":[],"name":"toInt240","nameLocation":"18243:8:23","nodeType":"FunctionDefinition","parameters":{"id":7309,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7308,"mutability":"mutable","name":"value","nameLocation":"18259:5:23","nodeType":"VariableDeclaration","scope":7331,"src":"18252:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7307,"name":"int256","nodeType":"ElementaryTypeName","src":"18252:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18251:14:23"},"returnParameters":{"id":7312,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7311,"mutability":"mutable","name":"downcasted","nameLocation":"18296:10:23","nodeType":"VariableDeclaration","scope":7331,"src":"18289:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"},"typeName":{"id":7310,"name":"int240","nodeType":"ElementaryTypeName","src":"18289:6:23","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"visibility":"internal"}],"src":"18288:19:23"},"scope":8126,"src":"18234:224:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7356,"nodeType":"Block","src":"18855:150:23","statements":[{"expression":{"id":7344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7339,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7337,"src":"18865:10:23","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7342,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7334,"src":"18885:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7341,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18878:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"},"typeName":{"id":7340,"name":"int232","nodeType":"ElementaryTypeName","src":"18878:6:23","typeDescriptions":{}}},"id":7343,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18878:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"src":"18865:26:23","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"id":7345,"nodeType":"ExpressionStatement","src":"18865:26:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7346,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7337,"src":"18905:10:23","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7347,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7334,"src":"18919:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18905:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7355,"nodeType":"IfStatement","src":"18901:98:23","trueBody":{"id":7354,"nodeType":"Block","src":"18926:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":7350,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18977:3:23","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":7351,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7334,"src":"18982:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7349,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6383,"src":"18947:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7352,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18947:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7353,"nodeType":"RevertStatement","src":"18940:48:23"}]}}]},"documentation":{"id":7332,"nodeType":"StructuredDocumentation","src":"18464:312:23","text":" @dev Returns the downcasted int232 from int256, reverting on\n overflow (when the input is less than smallest int232 or\n greater than largest int232).\n Counterpart to Solidity's `int232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":7357,"implemented":true,"kind":"function","modifiers":[],"name":"toInt232","nameLocation":"18790:8:23","nodeType":"FunctionDefinition","parameters":{"id":7335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7334,"mutability":"mutable","name":"value","nameLocation":"18806:5:23","nodeType":"VariableDeclaration","scope":7357,"src":"18799:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7333,"name":"int256","nodeType":"ElementaryTypeName","src":"18799:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18798:14:23"},"returnParameters":{"id":7338,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7337,"mutability":"mutable","name":"downcasted","nameLocation":"18843:10:23","nodeType":"VariableDeclaration","scope":7357,"src":"18836:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"},"typeName":{"id":7336,"name":"int232","nodeType":"ElementaryTypeName","src":"18836:6:23","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"visibility":"internal"}],"src":"18835:19:23"},"scope":8126,"src":"18781:224:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7382,"nodeType":"Block","src":"19402:150:23","statements":[{"expression":{"id":7370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7365,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7363,"src":"19412:10:23","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7368,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7360,"src":"19432:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7367,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19425:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"},"typeName":{"id":7366,"name":"int224","nodeType":"ElementaryTypeName","src":"19425:6:23","typeDescriptions":{}}},"id":7369,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19425:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"src":"19412:26:23","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"id":7371,"nodeType":"ExpressionStatement","src":"19412:26:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7372,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7363,"src":"19452:10:23","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7373,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7360,"src":"19466:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19452:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7381,"nodeType":"IfStatement","src":"19448:98:23","trueBody":{"id":7380,"nodeType":"Block","src":"19473:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":7376,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19524:3:23","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":7377,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7360,"src":"19529:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7375,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6383,"src":"19494:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7378,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19494:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7379,"nodeType":"RevertStatement","src":"19487:48:23"}]}}]},"documentation":{"id":7358,"nodeType":"StructuredDocumentation","src":"19011:312:23","text":" @dev Returns the downcasted int224 from int256, reverting on\n overflow (when the input is less than smallest int224 or\n greater than largest int224).\n Counterpart to Solidity's `int224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":7383,"implemented":true,"kind":"function","modifiers":[],"name":"toInt224","nameLocation":"19337:8:23","nodeType":"FunctionDefinition","parameters":{"id":7361,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7360,"mutability":"mutable","name":"value","nameLocation":"19353:5:23","nodeType":"VariableDeclaration","scope":7383,"src":"19346:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7359,"name":"int256","nodeType":"ElementaryTypeName","src":"19346:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19345:14:23"},"returnParameters":{"id":7364,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7363,"mutability":"mutable","name":"downcasted","nameLocation":"19390:10:23","nodeType":"VariableDeclaration","scope":7383,"src":"19383:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"},"typeName":{"id":7362,"name":"int224","nodeType":"ElementaryTypeName","src":"19383:6:23","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"visibility":"internal"}],"src":"19382:19:23"},"scope":8126,"src":"19328:224:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7408,"nodeType":"Block","src":"19949:150:23","statements":[{"expression":{"id":7396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7391,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7389,"src":"19959:10:23","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7394,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7386,"src":"19979:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7393,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19972:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"},"typeName":{"id":7392,"name":"int216","nodeType":"ElementaryTypeName","src":"19972:6:23","typeDescriptions":{}}},"id":7395,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19972:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"src":"19959:26:23","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"id":7397,"nodeType":"ExpressionStatement","src":"19959:26:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7398,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7389,"src":"19999:10:23","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7399,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7386,"src":"20013:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19999:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7407,"nodeType":"IfStatement","src":"19995:98:23","trueBody":{"id":7406,"nodeType":"Block","src":"20020:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":7402,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20071:3:23","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":7403,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7386,"src":"20076:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7401,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6383,"src":"20041:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7404,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20041:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7405,"nodeType":"RevertStatement","src":"20034:48:23"}]}}]},"documentation":{"id":7384,"nodeType":"StructuredDocumentation","src":"19558:312:23","text":" @dev Returns the downcasted int216 from int256, reverting on\n overflow (when the input is less than smallest int216 or\n greater than largest int216).\n Counterpart to Solidity's `int216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":7409,"implemented":true,"kind":"function","modifiers":[],"name":"toInt216","nameLocation":"19884:8:23","nodeType":"FunctionDefinition","parameters":{"id":7387,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7386,"mutability":"mutable","name":"value","nameLocation":"19900:5:23","nodeType":"VariableDeclaration","scope":7409,"src":"19893:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7385,"name":"int256","nodeType":"ElementaryTypeName","src":"19893:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19892:14:23"},"returnParameters":{"id":7390,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7389,"mutability":"mutable","name":"downcasted","nameLocation":"19937:10:23","nodeType":"VariableDeclaration","scope":7409,"src":"19930:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"},"typeName":{"id":7388,"name":"int216","nodeType":"ElementaryTypeName","src":"19930:6:23","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"visibility":"internal"}],"src":"19929:19:23"},"scope":8126,"src":"19875:224:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7434,"nodeType":"Block","src":"20496:150:23","statements":[{"expression":{"id":7422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7417,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7415,"src":"20506:10:23","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7420,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7412,"src":"20526:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7419,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20519:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"},"typeName":{"id":7418,"name":"int208","nodeType":"ElementaryTypeName","src":"20519:6:23","typeDescriptions":{}}},"id":7421,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20519:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"src":"20506:26:23","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"id":7423,"nodeType":"ExpressionStatement","src":"20506:26:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7424,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7415,"src":"20546:10:23","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7425,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7412,"src":"20560:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20546:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7433,"nodeType":"IfStatement","src":"20542:98:23","trueBody":{"id":7432,"nodeType":"Block","src":"20567:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":7428,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20618:3:23","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":7429,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7412,"src":"20623:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7427,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6383,"src":"20588:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7430,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20588:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7431,"nodeType":"RevertStatement","src":"20581:48:23"}]}}]},"documentation":{"id":7410,"nodeType":"StructuredDocumentation","src":"20105:312:23","text":" @dev Returns the downcasted int208 from int256, reverting on\n overflow (when the input is less than smallest int208 or\n greater than largest int208).\n Counterpart to Solidity's `int208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":7435,"implemented":true,"kind":"function","modifiers":[],"name":"toInt208","nameLocation":"20431:8:23","nodeType":"FunctionDefinition","parameters":{"id":7413,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7412,"mutability":"mutable","name":"value","nameLocation":"20447:5:23","nodeType":"VariableDeclaration","scope":7435,"src":"20440:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7411,"name":"int256","nodeType":"ElementaryTypeName","src":"20440:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20439:14:23"},"returnParameters":{"id":7416,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7415,"mutability":"mutable","name":"downcasted","nameLocation":"20484:10:23","nodeType":"VariableDeclaration","scope":7435,"src":"20477:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"},"typeName":{"id":7414,"name":"int208","nodeType":"ElementaryTypeName","src":"20477:6:23","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"visibility":"internal"}],"src":"20476:19:23"},"scope":8126,"src":"20422:224:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7460,"nodeType":"Block","src":"21043:150:23","statements":[{"expression":{"id":7448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7443,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7441,"src":"21053:10:23","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7446,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7438,"src":"21073:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7445,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21066:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"},"typeName":{"id":7444,"name":"int200","nodeType":"ElementaryTypeName","src":"21066:6:23","typeDescriptions":{}}},"id":7447,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21066:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"src":"21053:26:23","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"id":7449,"nodeType":"ExpressionStatement","src":"21053:26:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7450,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7441,"src":"21093:10:23","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7451,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7438,"src":"21107:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21093:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7459,"nodeType":"IfStatement","src":"21089:98:23","trueBody":{"id":7458,"nodeType":"Block","src":"21114:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":7454,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21165:3:23","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":7455,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7438,"src":"21170:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7453,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6383,"src":"21135:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7456,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21135:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7457,"nodeType":"RevertStatement","src":"21128:48:23"}]}}]},"documentation":{"id":7436,"nodeType":"StructuredDocumentation","src":"20652:312:23","text":" @dev Returns the downcasted int200 from int256, reverting on\n overflow (when the input is less than smallest int200 or\n greater than largest int200).\n Counterpart to Solidity's `int200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":7461,"implemented":true,"kind":"function","modifiers":[],"name":"toInt200","nameLocation":"20978:8:23","nodeType":"FunctionDefinition","parameters":{"id":7439,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7438,"mutability":"mutable","name":"value","nameLocation":"20994:5:23","nodeType":"VariableDeclaration","scope":7461,"src":"20987:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7437,"name":"int256","nodeType":"ElementaryTypeName","src":"20987:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20986:14:23"},"returnParameters":{"id":7442,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7441,"mutability":"mutable","name":"downcasted","nameLocation":"21031:10:23","nodeType":"VariableDeclaration","scope":7461,"src":"21024:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"},"typeName":{"id":7440,"name":"int200","nodeType":"ElementaryTypeName","src":"21024:6:23","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"visibility":"internal"}],"src":"21023:19:23"},"scope":8126,"src":"20969:224:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7486,"nodeType":"Block","src":"21590:150:23","statements":[{"expression":{"id":7474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7469,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7467,"src":"21600:10:23","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7472,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7464,"src":"21620:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7471,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21613:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"},"typeName":{"id":7470,"name":"int192","nodeType":"ElementaryTypeName","src":"21613:6:23","typeDescriptions":{}}},"id":7473,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21613:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"src":"21600:26:23","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"id":7475,"nodeType":"ExpressionStatement","src":"21600:26:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7476,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7467,"src":"21640:10:23","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7477,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7464,"src":"21654:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21640:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7485,"nodeType":"IfStatement","src":"21636:98:23","trueBody":{"id":7484,"nodeType":"Block","src":"21661:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":7480,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21712:3:23","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":7481,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7464,"src":"21717:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7479,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6383,"src":"21682:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7482,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21682:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7483,"nodeType":"RevertStatement","src":"21675:48:23"}]}}]},"documentation":{"id":7462,"nodeType":"StructuredDocumentation","src":"21199:312:23","text":" @dev Returns the downcasted int192 from int256, reverting on\n overflow (when the input is less than smallest int192 or\n greater than largest int192).\n Counterpart to Solidity's `int192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":7487,"implemented":true,"kind":"function","modifiers":[],"name":"toInt192","nameLocation":"21525:8:23","nodeType":"FunctionDefinition","parameters":{"id":7465,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7464,"mutability":"mutable","name":"value","nameLocation":"21541:5:23","nodeType":"VariableDeclaration","scope":7487,"src":"21534:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7463,"name":"int256","nodeType":"ElementaryTypeName","src":"21534:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21533:14:23"},"returnParameters":{"id":7468,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7467,"mutability":"mutable","name":"downcasted","nameLocation":"21578:10:23","nodeType":"VariableDeclaration","scope":7487,"src":"21571:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"},"typeName":{"id":7466,"name":"int192","nodeType":"ElementaryTypeName","src":"21571:6:23","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"visibility":"internal"}],"src":"21570:19:23"},"scope":8126,"src":"21516:224:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7512,"nodeType":"Block","src":"22137:150:23","statements":[{"expression":{"id":7500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7495,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7493,"src":"22147:10:23","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7498,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7490,"src":"22167:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7497,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22160:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"},"typeName":{"id":7496,"name":"int184","nodeType":"ElementaryTypeName","src":"22160:6:23","typeDescriptions":{}}},"id":7499,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22160:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"src":"22147:26:23","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"id":7501,"nodeType":"ExpressionStatement","src":"22147:26:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7502,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7493,"src":"22187:10:23","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7503,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7490,"src":"22201:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22187:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7511,"nodeType":"IfStatement","src":"22183:98:23","trueBody":{"id":7510,"nodeType":"Block","src":"22208:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":7506,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22259:3:23","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":7507,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7490,"src":"22264:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7505,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6383,"src":"22229:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7508,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22229:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7509,"nodeType":"RevertStatement","src":"22222:48:23"}]}}]},"documentation":{"id":7488,"nodeType":"StructuredDocumentation","src":"21746:312:23","text":" @dev Returns the downcasted int184 from int256, reverting on\n overflow (when the input is less than smallest int184 or\n greater than largest int184).\n Counterpart to Solidity's `int184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":7513,"implemented":true,"kind":"function","modifiers":[],"name":"toInt184","nameLocation":"22072:8:23","nodeType":"FunctionDefinition","parameters":{"id":7491,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7490,"mutability":"mutable","name":"value","nameLocation":"22088:5:23","nodeType":"VariableDeclaration","scope":7513,"src":"22081:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7489,"name":"int256","nodeType":"ElementaryTypeName","src":"22081:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22080:14:23"},"returnParameters":{"id":7494,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7493,"mutability":"mutable","name":"downcasted","nameLocation":"22125:10:23","nodeType":"VariableDeclaration","scope":7513,"src":"22118:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"},"typeName":{"id":7492,"name":"int184","nodeType":"ElementaryTypeName","src":"22118:6:23","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"visibility":"internal"}],"src":"22117:19:23"},"scope":8126,"src":"22063:224:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7538,"nodeType":"Block","src":"22684:150:23","statements":[{"expression":{"id":7526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7521,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7519,"src":"22694:10:23","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7524,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7516,"src":"22714:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7523,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22707:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"},"typeName":{"id":7522,"name":"int176","nodeType":"ElementaryTypeName","src":"22707:6:23","typeDescriptions":{}}},"id":7525,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22707:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"src":"22694:26:23","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"id":7527,"nodeType":"ExpressionStatement","src":"22694:26:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7528,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7519,"src":"22734:10:23","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7529,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7516,"src":"22748:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22734:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7537,"nodeType":"IfStatement","src":"22730:98:23","trueBody":{"id":7536,"nodeType":"Block","src":"22755:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":7532,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22806:3:23","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":7533,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7516,"src":"22811:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7531,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6383,"src":"22776:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7534,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22776:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7535,"nodeType":"RevertStatement","src":"22769:48:23"}]}}]},"documentation":{"id":7514,"nodeType":"StructuredDocumentation","src":"22293:312:23","text":" @dev Returns the downcasted int176 from int256, reverting on\n overflow (when the input is less than smallest int176 or\n greater than largest int176).\n Counterpart to Solidity's `int176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":7539,"implemented":true,"kind":"function","modifiers":[],"name":"toInt176","nameLocation":"22619:8:23","nodeType":"FunctionDefinition","parameters":{"id":7517,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7516,"mutability":"mutable","name":"value","nameLocation":"22635:5:23","nodeType":"VariableDeclaration","scope":7539,"src":"22628:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7515,"name":"int256","nodeType":"ElementaryTypeName","src":"22628:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22627:14:23"},"returnParameters":{"id":7520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7519,"mutability":"mutable","name":"downcasted","nameLocation":"22672:10:23","nodeType":"VariableDeclaration","scope":7539,"src":"22665:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"},"typeName":{"id":7518,"name":"int176","nodeType":"ElementaryTypeName","src":"22665:6:23","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"visibility":"internal"}],"src":"22664:19:23"},"scope":8126,"src":"22610:224:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7564,"nodeType":"Block","src":"23231:150:23","statements":[{"expression":{"id":7552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7547,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7545,"src":"23241:10:23","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7550,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7542,"src":"23261:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7549,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23254:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"},"typeName":{"id":7548,"name":"int168","nodeType":"ElementaryTypeName","src":"23254:6:23","typeDescriptions":{}}},"id":7551,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23254:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"src":"23241:26:23","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"id":7553,"nodeType":"ExpressionStatement","src":"23241:26:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7554,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7545,"src":"23281:10:23","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7555,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7542,"src":"23295:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23281:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7563,"nodeType":"IfStatement","src":"23277:98:23","trueBody":{"id":7562,"nodeType":"Block","src":"23302:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":7558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23353:3:23","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":7559,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7542,"src":"23358:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7557,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6383,"src":"23323:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7560,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23323:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7561,"nodeType":"RevertStatement","src":"23316:48:23"}]}}]},"documentation":{"id":7540,"nodeType":"StructuredDocumentation","src":"22840:312:23","text":" @dev Returns the downcasted int168 from int256, reverting on\n overflow (when the input is less than smallest int168 or\n greater than largest int168).\n Counterpart to Solidity's `int168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":7565,"implemented":true,"kind":"function","modifiers":[],"name":"toInt168","nameLocation":"23166:8:23","nodeType":"FunctionDefinition","parameters":{"id":7543,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7542,"mutability":"mutable","name":"value","nameLocation":"23182:5:23","nodeType":"VariableDeclaration","scope":7565,"src":"23175:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7541,"name":"int256","nodeType":"ElementaryTypeName","src":"23175:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23174:14:23"},"returnParameters":{"id":7546,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7545,"mutability":"mutable","name":"downcasted","nameLocation":"23219:10:23","nodeType":"VariableDeclaration","scope":7565,"src":"23212:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"},"typeName":{"id":7544,"name":"int168","nodeType":"ElementaryTypeName","src":"23212:6:23","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"visibility":"internal"}],"src":"23211:19:23"},"scope":8126,"src":"23157:224:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7590,"nodeType":"Block","src":"23778:150:23","statements":[{"expression":{"id":7578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7573,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7571,"src":"23788:10:23","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7576,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7568,"src":"23808:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7575,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23801:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"},"typeName":{"id":7574,"name":"int160","nodeType":"ElementaryTypeName","src":"23801:6:23","typeDescriptions":{}}},"id":7577,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23801:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"src":"23788:26:23","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"id":7579,"nodeType":"ExpressionStatement","src":"23788:26:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7580,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7571,"src":"23828:10:23","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7581,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7568,"src":"23842:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23828:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7589,"nodeType":"IfStatement","src":"23824:98:23","trueBody":{"id":7588,"nodeType":"Block","src":"23849:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":7584,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23900:3:23","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":7585,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7568,"src":"23905:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7583,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6383,"src":"23870:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7586,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23870:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7587,"nodeType":"RevertStatement","src":"23863:48:23"}]}}]},"documentation":{"id":7566,"nodeType":"StructuredDocumentation","src":"23387:312:23","text":" @dev Returns the downcasted int160 from int256, reverting on\n overflow (when the input is less than smallest int160 or\n greater than largest int160).\n Counterpart to Solidity's `int160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":7591,"implemented":true,"kind":"function","modifiers":[],"name":"toInt160","nameLocation":"23713:8:23","nodeType":"FunctionDefinition","parameters":{"id":7569,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7568,"mutability":"mutable","name":"value","nameLocation":"23729:5:23","nodeType":"VariableDeclaration","scope":7591,"src":"23722:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7567,"name":"int256","nodeType":"ElementaryTypeName","src":"23722:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23721:14:23"},"returnParameters":{"id":7572,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7571,"mutability":"mutable","name":"downcasted","nameLocation":"23766:10:23","nodeType":"VariableDeclaration","scope":7591,"src":"23759:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"},"typeName":{"id":7570,"name":"int160","nodeType":"ElementaryTypeName","src":"23759:6:23","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"visibility":"internal"}],"src":"23758:19:23"},"scope":8126,"src":"23704:224:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7616,"nodeType":"Block","src":"24325:150:23","statements":[{"expression":{"id":7604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7599,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7597,"src":"24335:10:23","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7602,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7594,"src":"24355:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7601,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24348:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"},"typeName":{"id":7600,"name":"int152","nodeType":"ElementaryTypeName","src":"24348:6:23","typeDescriptions":{}}},"id":7603,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24348:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"src":"24335:26:23","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"id":7605,"nodeType":"ExpressionStatement","src":"24335:26:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7606,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7597,"src":"24375:10:23","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7607,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7594,"src":"24389:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24375:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7615,"nodeType":"IfStatement","src":"24371:98:23","trueBody":{"id":7614,"nodeType":"Block","src":"24396:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":7610,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24447:3:23","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":7611,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7594,"src":"24452:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7609,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6383,"src":"24417:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7612,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24417:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7613,"nodeType":"RevertStatement","src":"24410:48:23"}]}}]},"documentation":{"id":7592,"nodeType":"StructuredDocumentation","src":"23934:312:23","text":" @dev Returns the downcasted int152 from int256, reverting on\n overflow (when the input is less than smallest int152 or\n greater than largest int152).\n Counterpart to Solidity's `int152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":7617,"implemented":true,"kind":"function","modifiers":[],"name":"toInt152","nameLocation":"24260:8:23","nodeType":"FunctionDefinition","parameters":{"id":7595,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7594,"mutability":"mutable","name":"value","nameLocation":"24276:5:23","nodeType":"VariableDeclaration","scope":7617,"src":"24269:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7593,"name":"int256","nodeType":"ElementaryTypeName","src":"24269:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24268:14:23"},"returnParameters":{"id":7598,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7597,"mutability":"mutable","name":"downcasted","nameLocation":"24313:10:23","nodeType":"VariableDeclaration","scope":7617,"src":"24306:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"},"typeName":{"id":7596,"name":"int152","nodeType":"ElementaryTypeName","src":"24306:6:23","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"visibility":"internal"}],"src":"24305:19:23"},"scope":8126,"src":"24251:224:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7642,"nodeType":"Block","src":"24872:150:23","statements":[{"expression":{"id":7630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7625,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7623,"src":"24882:10:23","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7628,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7620,"src":"24902:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7627,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24895:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"},"typeName":{"id":7626,"name":"int144","nodeType":"ElementaryTypeName","src":"24895:6:23","typeDescriptions":{}}},"id":7629,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24895:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"src":"24882:26:23","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"id":7631,"nodeType":"ExpressionStatement","src":"24882:26:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7632,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7623,"src":"24922:10:23","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7633,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7620,"src":"24936:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24922:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7641,"nodeType":"IfStatement","src":"24918:98:23","trueBody":{"id":7640,"nodeType":"Block","src":"24943:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":7636,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24994:3:23","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":7637,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7620,"src":"24999:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7635,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6383,"src":"24964:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7638,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24964:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7639,"nodeType":"RevertStatement","src":"24957:48:23"}]}}]},"documentation":{"id":7618,"nodeType":"StructuredDocumentation","src":"24481:312:23","text":" @dev Returns the downcasted int144 from int256, reverting on\n overflow (when the input is less than smallest int144 or\n greater than largest int144).\n Counterpart to Solidity's `int144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":7643,"implemented":true,"kind":"function","modifiers":[],"name":"toInt144","nameLocation":"24807:8:23","nodeType":"FunctionDefinition","parameters":{"id":7621,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7620,"mutability":"mutable","name":"value","nameLocation":"24823:5:23","nodeType":"VariableDeclaration","scope":7643,"src":"24816:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7619,"name":"int256","nodeType":"ElementaryTypeName","src":"24816:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24815:14:23"},"returnParameters":{"id":7624,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7623,"mutability":"mutable","name":"downcasted","nameLocation":"24860:10:23","nodeType":"VariableDeclaration","scope":7643,"src":"24853:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"},"typeName":{"id":7622,"name":"int144","nodeType":"ElementaryTypeName","src":"24853:6:23","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"visibility":"internal"}],"src":"24852:19:23"},"scope":8126,"src":"24798:224:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7668,"nodeType":"Block","src":"25419:150:23","statements":[{"expression":{"id":7656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7651,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7649,"src":"25429:10:23","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7654,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7646,"src":"25449:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7653,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25442:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"},"typeName":{"id":7652,"name":"int136","nodeType":"ElementaryTypeName","src":"25442:6:23","typeDescriptions":{}}},"id":7655,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25442:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"src":"25429:26:23","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"id":7657,"nodeType":"ExpressionStatement","src":"25429:26:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7658,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7649,"src":"25469:10:23","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7659,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7646,"src":"25483:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"25469:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7667,"nodeType":"IfStatement","src":"25465:98:23","trueBody":{"id":7666,"nodeType":"Block","src":"25490:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":7662,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25541:3:23","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":7663,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7646,"src":"25546:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7661,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6383,"src":"25511:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7664,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25511:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7665,"nodeType":"RevertStatement","src":"25504:48:23"}]}}]},"documentation":{"id":7644,"nodeType":"StructuredDocumentation","src":"25028:312:23","text":" @dev Returns the downcasted int136 from int256, reverting on\n overflow (when the input is less than smallest int136 or\n greater than largest int136).\n Counterpart to Solidity's `int136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":7669,"implemented":true,"kind":"function","modifiers":[],"name":"toInt136","nameLocation":"25354:8:23","nodeType":"FunctionDefinition","parameters":{"id":7647,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7646,"mutability":"mutable","name":"value","nameLocation":"25370:5:23","nodeType":"VariableDeclaration","scope":7669,"src":"25363:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7645,"name":"int256","nodeType":"ElementaryTypeName","src":"25363:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25362:14:23"},"returnParameters":{"id":7650,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7649,"mutability":"mutable","name":"downcasted","nameLocation":"25407:10:23","nodeType":"VariableDeclaration","scope":7669,"src":"25400:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"},"typeName":{"id":7648,"name":"int136","nodeType":"ElementaryTypeName","src":"25400:6:23","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"visibility":"internal"}],"src":"25399:19:23"},"scope":8126,"src":"25345:224:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7694,"nodeType":"Block","src":"25966:150:23","statements":[{"expression":{"id":7682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7677,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7675,"src":"25976:10:23","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7680,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7672,"src":"25996:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7679,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25989:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":7678,"name":"int128","nodeType":"ElementaryTypeName","src":"25989:6:23","typeDescriptions":{}}},"id":7681,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25989:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"25976:26:23","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":7683,"nodeType":"ExpressionStatement","src":"25976:26:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7684,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7675,"src":"26016:10:23","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7685,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7672,"src":"26030:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26016:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7693,"nodeType":"IfStatement","src":"26012:98:23","trueBody":{"id":7692,"nodeType":"Block","src":"26037:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":7688,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26088:3:23","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":7689,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7672,"src":"26093:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7687,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6383,"src":"26058:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7690,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26058:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7691,"nodeType":"RevertStatement","src":"26051:48:23"}]}}]},"documentation":{"id":7670,"nodeType":"StructuredDocumentation","src":"25575:312:23","text":" @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":7695,"implemented":true,"kind":"function","modifiers":[],"name":"toInt128","nameLocation":"25901:8:23","nodeType":"FunctionDefinition","parameters":{"id":7673,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7672,"mutability":"mutable","name":"value","nameLocation":"25917:5:23","nodeType":"VariableDeclaration","scope":7695,"src":"25910:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7671,"name":"int256","nodeType":"ElementaryTypeName","src":"25910:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25909:14:23"},"returnParameters":{"id":7676,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7675,"mutability":"mutable","name":"downcasted","nameLocation":"25954:10:23","nodeType":"VariableDeclaration","scope":7695,"src":"25947:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":7674,"name":"int128","nodeType":"ElementaryTypeName","src":"25947:6:23","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"25946:19:23"},"scope":8126,"src":"25892:224:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7720,"nodeType":"Block","src":"26513:150:23","statements":[{"expression":{"id":7708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7703,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7701,"src":"26523:10:23","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7706,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7698,"src":"26543:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7705,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26536:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"},"typeName":{"id":7704,"name":"int120","nodeType":"ElementaryTypeName","src":"26536:6:23","typeDescriptions":{}}},"id":7707,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26536:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"src":"26523:26:23","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"id":7709,"nodeType":"ExpressionStatement","src":"26523:26:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7710,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7701,"src":"26563:10:23","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7711,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7698,"src":"26577:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26563:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7719,"nodeType":"IfStatement","src":"26559:98:23","trueBody":{"id":7718,"nodeType":"Block","src":"26584:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":7714,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26635:3:23","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":7715,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7698,"src":"26640:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7713,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6383,"src":"26605:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7716,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26605:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7717,"nodeType":"RevertStatement","src":"26598:48:23"}]}}]},"documentation":{"id":7696,"nodeType":"StructuredDocumentation","src":"26122:312:23","text":" @dev Returns the downcasted int120 from int256, reverting on\n overflow (when the input is less than smallest int120 or\n greater than largest int120).\n Counterpart to Solidity's `int120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":7721,"implemented":true,"kind":"function","modifiers":[],"name":"toInt120","nameLocation":"26448:8:23","nodeType":"FunctionDefinition","parameters":{"id":7699,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7698,"mutability":"mutable","name":"value","nameLocation":"26464:5:23","nodeType":"VariableDeclaration","scope":7721,"src":"26457:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7697,"name":"int256","nodeType":"ElementaryTypeName","src":"26457:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26456:14:23"},"returnParameters":{"id":7702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7701,"mutability":"mutable","name":"downcasted","nameLocation":"26501:10:23","nodeType":"VariableDeclaration","scope":7721,"src":"26494:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"},"typeName":{"id":7700,"name":"int120","nodeType":"ElementaryTypeName","src":"26494:6:23","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"visibility":"internal"}],"src":"26493:19:23"},"scope":8126,"src":"26439:224:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7746,"nodeType":"Block","src":"27060:150:23","statements":[{"expression":{"id":7734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7729,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7727,"src":"27070:10:23","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7732,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7724,"src":"27090:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7731,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27083:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"},"typeName":{"id":7730,"name":"int112","nodeType":"ElementaryTypeName","src":"27083:6:23","typeDescriptions":{}}},"id":7733,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27083:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"src":"27070:26:23","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"id":7735,"nodeType":"ExpressionStatement","src":"27070:26:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7736,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7727,"src":"27110:10:23","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7737,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7724,"src":"27124:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27110:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7745,"nodeType":"IfStatement","src":"27106:98:23","trueBody":{"id":7744,"nodeType":"Block","src":"27131:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":7740,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27182:3:23","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":7741,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7724,"src":"27187:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7739,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6383,"src":"27152:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7742,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27152:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7743,"nodeType":"RevertStatement","src":"27145:48:23"}]}}]},"documentation":{"id":7722,"nodeType":"StructuredDocumentation","src":"26669:312:23","text":" @dev Returns the downcasted int112 from int256, reverting on\n overflow (when the input is less than smallest int112 or\n greater than largest int112).\n Counterpart to Solidity's `int112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":7747,"implemented":true,"kind":"function","modifiers":[],"name":"toInt112","nameLocation":"26995:8:23","nodeType":"FunctionDefinition","parameters":{"id":7725,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7724,"mutability":"mutable","name":"value","nameLocation":"27011:5:23","nodeType":"VariableDeclaration","scope":7747,"src":"27004:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7723,"name":"int256","nodeType":"ElementaryTypeName","src":"27004:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27003:14:23"},"returnParameters":{"id":7728,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7727,"mutability":"mutable","name":"downcasted","nameLocation":"27048:10:23","nodeType":"VariableDeclaration","scope":7747,"src":"27041:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"},"typeName":{"id":7726,"name":"int112","nodeType":"ElementaryTypeName","src":"27041:6:23","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"visibility":"internal"}],"src":"27040:19:23"},"scope":8126,"src":"26986:224:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7772,"nodeType":"Block","src":"27607:150:23","statements":[{"expression":{"id":7760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7755,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7753,"src":"27617:10:23","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7758,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7750,"src":"27637:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7757,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27630:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"},"typeName":{"id":7756,"name":"int104","nodeType":"ElementaryTypeName","src":"27630:6:23","typeDescriptions":{}}},"id":7759,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27630:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"src":"27617:26:23","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"id":7761,"nodeType":"ExpressionStatement","src":"27617:26:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7762,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7753,"src":"27657:10:23","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7763,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7750,"src":"27671:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27657:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7771,"nodeType":"IfStatement","src":"27653:98:23","trueBody":{"id":7770,"nodeType":"Block","src":"27678:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":7766,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27729:3:23","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":7767,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7750,"src":"27734:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7765,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6383,"src":"27699:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7768,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27699:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7769,"nodeType":"RevertStatement","src":"27692:48:23"}]}}]},"documentation":{"id":7748,"nodeType":"StructuredDocumentation","src":"27216:312:23","text":" @dev Returns the downcasted int104 from int256, reverting on\n overflow (when the input is less than smallest int104 or\n greater than largest int104).\n Counterpart to Solidity's `int104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":7773,"implemented":true,"kind":"function","modifiers":[],"name":"toInt104","nameLocation":"27542:8:23","nodeType":"FunctionDefinition","parameters":{"id":7751,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7750,"mutability":"mutable","name":"value","nameLocation":"27558:5:23","nodeType":"VariableDeclaration","scope":7773,"src":"27551:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7749,"name":"int256","nodeType":"ElementaryTypeName","src":"27551:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27550:14:23"},"returnParameters":{"id":7754,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7753,"mutability":"mutable","name":"downcasted","nameLocation":"27595:10:23","nodeType":"VariableDeclaration","scope":7773,"src":"27588:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"},"typeName":{"id":7752,"name":"int104","nodeType":"ElementaryTypeName","src":"27588:6:23","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"visibility":"internal"}],"src":"27587:19:23"},"scope":8126,"src":"27533:224:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7798,"nodeType":"Block","src":"28147:148:23","statements":[{"expression":{"id":7786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7781,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7779,"src":"28157:10:23","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7784,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7776,"src":"28176:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7783,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28170:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"},"typeName":{"id":7782,"name":"int96","nodeType":"ElementaryTypeName","src":"28170:5:23","typeDescriptions":{}}},"id":7785,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28170:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"src":"28157:25:23","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"id":7787,"nodeType":"ExpressionStatement","src":"28157:25:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7788,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7779,"src":"28196:10:23","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7789,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7776,"src":"28210:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28196:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7797,"nodeType":"IfStatement","src":"28192:97:23","trueBody":{"id":7796,"nodeType":"Block","src":"28217:72:23","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":7792,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28268:2:23","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":7793,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7776,"src":"28272:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7791,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6383,"src":"28238:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7794,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28238:40:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7795,"nodeType":"RevertStatement","src":"28231:47:23"}]}}]},"documentation":{"id":7774,"nodeType":"StructuredDocumentation","src":"27763:307:23","text":" @dev Returns the downcasted int96 from int256, reverting on\n overflow (when the input is less than smallest int96 or\n greater than largest int96).\n Counterpart to Solidity's `int96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":7799,"implemented":true,"kind":"function","modifiers":[],"name":"toInt96","nameLocation":"28084:7:23","nodeType":"FunctionDefinition","parameters":{"id":7777,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7776,"mutability":"mutable","name":"value","nameLocation":"28099:5:23","nodeType":"VariableDeclaration","scope":7799,"src":"28092:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7775,"name":"int256","nodeType":"ElementaryTypeName","src":"28092:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28091:14:23"},"returnParameters":{"id":7780,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7779,"mutability":"mutable","name":"downcasted","nameLocation":"28135:10:23","nodeType":"VariableDeclaration","scope":7799,"src":"28129:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"},"typeName":{"id":7778,"name":"int96","nodeType":"ElementaryTypeName","src":"28129:5:23","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"visibility":"internal"}],"src":"28128:18:23"},"scope":8126,"src":"28075:220:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7824,"nodeType":"Block","src":"28685:148:23","statements":[{"expression":{"id":7812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7807,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7805,"src":"28695:10:23","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7810,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7802,"src":"28714:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7809,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28708:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"},"typeName":{"id":7808,"name":"int88","nodeType":"ElementaryTypeName","src":"28708:5:23","typeDescriptions":{}}},"id":7811,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28708:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"src":"28695:25:23","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"id":7813,"nodeType":"ExpressionStatement","src":"28695:25:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7814,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7805,"src":"28734:10:23","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7815,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7802,"src":"28748:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28734:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7823,"nodeType":"IfStatement","src":"28730:97:23","trueBody":{"id":7822,"nodeType":"Block","src":"28755:72:23","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":7818,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28806:2:23","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":7819,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7802,"src":"28810:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7817,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6383,"src":"28776:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7820,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28776:40:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7821,"nodeType":"RevertStatement","src":"28769:47:23"}]}}]},"documentation":{"id":7800,"nodeType":"StructuredDocumentation","src":"28301:307:23","text":" @dev Returns the downcasted int88 from int256, reverting on\n overflow (when the input is less than smallest int88 or\n greater than largest int88).\n Counterpart to Solidity's `int88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":7825,"implemented":true,"kind":"function","modifiers":[],"name":"toInt88","nameLocation":"28622:7:23","nodeType":"FunctionDefinition","parameters":{"id":7803,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7802,"mutability":"mutable","name":"value","nameLocation":"28637:5:23","nodeType":"VariableDeclaration","scope":7825,"src":"28630:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7801,"name":"int256","nodeType":"ElementaryTypeName","src":"28630:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28629:14:23"},"returnParameters":{"id":7806,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7805,"mutability":"mutable","name":"downcasted","nameLocation":"28673:10:23","nodeType":"VariableDeclaration","scope":7825,"src":"28667:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"},"typeName":{"id":7804,"name":"int88","nodeType":"ElementaryTypeName","src":"28667:5:23","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"visibility":"internal"}],"src":"28666:18:23"},"scope":8126,"src":"28613:220:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7850,"nodeType":"Block","src":"29223:148:23","statements":[{"expression":{"id":7838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7833,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7831,"src":"29233:10:23","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7836,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7828,"src":"29252:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7835,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29246:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"},"typeName":{"id":7834,"name":"int80","nodeType":"ElementaryTypeName","src":"29246:5:23","typeDescriptions":{}}},"id":7837,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29246:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"src":"29233:25:23","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"id":7839,"nodeType":"ExpressionStatement","src":"29233:25:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7840,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7831,"src":"29272:10:23","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7841,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7828,"src":"29286:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29272:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7849,"nodeType":"IfStatement","src":"29268:97:23","trueBody":{"id":7848,"nodeType":"Block","src":"29293:72:23","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":7844,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29344:2:23","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":7845,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7828,"src":"29348:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7843,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6383,"src":"29314:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7846,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29314:40:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7847,"nodeType":"RevertStatement","src":"29307:47:23"}]}}]},"documentation":{"id":7826,"nodeType":"StructuredDocumentation","src":"28839:307:23","text":" @dev Returns the downcasted int80 from int256, reverting on\n overflow (when the input is less than smallest int80 or\n greater than largest int80).\n Counterpart to Solidity's `int80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":7851,"implemented":true,"kind":"function","modifiers":[],"name":"toInt80","nameLocation":"29160:7:23","nodeType":"FunctionDefinition","parameters":{"id":7829,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7828,"mutability":"mutable","name":"value","nameLocation":"29175:5:23","nodeType":"VariableDeclaration","scope":7851,"src":"29168:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7827,"name":"int256","nodeType":"ElementaryTypeName","src":"29168:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29167:14:23"},"returnParameters":{"id":7832,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7831,"mutability":"mutable","name":"downcasted","nameLocation":"29211:10:23","nodeType":"VariableDeclaration","scope":7851,"src":"29205:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"},"typeName":{"id":7830,"name":"int80","nodeType":"ElementaryTypeName","src":"29205:5:23","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"visibility":"internal"}],"src":"29204:18:23"},"scope":8126,"src":"29151:220:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7876,"nodeType":"Block","src":"29761:148:23","statements":[{"expression":{"id":7864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7859,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7857,"src":"29771:10:23","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7862,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7854,"src":"29790:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7861,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29784:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"},"typeName":{"id":7860,"name":"int72","nodeType":"ElementaryTypeName","src":"29784:5:23","typeDescriptions":{}}},"id":7863,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29784:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"src":"29771:25:23","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"id":7865,"nodeType":"ExpressionStatement","src":"29771:25:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7866,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7857,"src":"29810:10:23","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7867,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7854,"src":"29824:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29810:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7875,"nodeType":"IfStatement","src":"29806:97:23","trueBody":{"id":7874,"nodeType":"Block","src":"29831:72:23","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":7870,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29882:2:23","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":7871,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7854,"src":"29886:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7869,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6383,"src":"29852:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7872,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29852:40:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7873,"nodeType":"RevertStatement","src":"29845:47:23"}]}}]},"documentation":{"id":7852,"nodeType":"StructuredDocumentation","src":"29377:307:23","text":" @dev Returns the downcasted int72 from int256, reverting on\n overflow (when the input is less than smallest int72 or\n greater than largest int72).\n Counterpart to Solidity's `int72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":7877,"implemented":true,"kind":"function","modifiers":[],"name":"toInt72","nameLocation":"29698:7:23","nodeType":"FunctionDefinition","parameters":{"id":7855,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7854,"mutability":"mutable","name":"value","nameLocation":"29713:5:23","nodeType":"VariableDeclaration","scope":7877,"src":"29706:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7853,"name":"int256","nodeType":"ElementaryTypeName","src":"29706:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29705:14:23"},"returnParameters":{"id":7858,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7857,"mutability":"mutable","name":"downcasted","nameLocation":"29749:10:23","nodeType":"VariableDeclaration","scope":7877,"src":"29743:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"},"typeName":{"id":7856,"name":"int72","nodeType":"ElementaryTypeName","src":"29743:5:23","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"visibility":"internal"}],"src":"29742:18:23"},"scope":8126,"src":"29689:220:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7902,"nodeType":"Block","src":"30299:148:23","statements":[{"expression":{"id":7890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7885,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7883,"src":"30309:10:23","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7888,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7880,"src":"30328:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7887,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30322:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":7886,"name":"int64","nodeType":"ElementaryTypeName","src":"30322:5:23","typeDescriptions":{}}},"id":7889,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30322:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"src":"30309:25:23","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":7891,"nodeType":"ExpressionStatement","src":"30309:25:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7892,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7883,"src":"30348:10:23","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7893,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7880,"src":"30362:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30348:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7901,"nodeType":"IfStatement","src":"30344:97:23","trueBody":{"id":7900,"nodeType":"Block","src":"30369:72:23","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":7896,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30420:2:23","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":7897,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7880,"src":"30424:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7895,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6383,"src":"30390:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7898,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30390:40:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7899,"nodeType":"RevertStatement","src":"30383:47:23"}]}}]},"documentation":{"id":7878,"nodeType":"StructuredDocumentation","src":"29915:307:23","text":" @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":7903,"implemented":true,"kind":"function","modifiers":[],"name":"toInt64","nameLocation":"30236:7:23","nodeType":"FunctionDefinition","parameters":{"id":7881,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7880,"mutability":"mutable","name":"value","nameLocation":"30251:5:23","nodeType":"VariableDeclaration","scope":7903,"src":"30244:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7879,"name":"int256","nodeType":"ElementaryTypeName","src":"30244:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30243:14:23"},"returnParameters":{"id":7884,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7883,"mutability":"mutable","name":"downcasted","nameLocation":"30287:10:23","nodeType":"VariableDeclaration","scope":7903,"src":"30281:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":7882,"name":"int64","nodeType":"ElementaryTypeName","src":"30281:5:23","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"30280:18:23"},"scope":8126,"src":"30227:220:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7928,"nodeType":"Block","src":"30837:148:23","statements":[{"expression":{"id":7916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7911,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7909,"src":"30847:10:23","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7914,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7906,"src":"30866:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7913,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30860:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"},"typeName":{"id":7912,"name":"int56","nodeType":"ElementaryTypeName","src":"30860:5:23","typeDescriptions":{}}},"id":7915,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30860:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"src":"30847:25:23","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"id":7917,"nodeType":"ExpressionStatement","src":"30847:25:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7918,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7909,"src":"30886:10:23","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7919,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7906,"src":"30900:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30886:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7927,"nodeType":"IfStatement","src":"30882:97:23","trueBody":{"id":7926,"nodeType":"Block","src":"30907:72:23","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":7922,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30958:2:23","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":7923,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7906,"src":"30962:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7921,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6383,"src":"30928:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7924,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30928:40:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7925,"nodeType":"RevertStatement","src":"30921:47:23"}]}}]},"documentation":{"id":7904,"nodeType":"StructuredDocumentation","src":"30453:307:23","text":" @dev Returns the downcasted int56 from int256, reverting on\n overflow (when the input is less than smallest int56 or\n greater than largest int56).\n Counterpart to Solidity's `int56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":7929,"implemented":true,"kind":"function","modifiers":[],"name":"toInt56","nameLocation":"30774:7:23","nodeType":"FunctionDefinition","parameters":{"id":7907,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7906,"mutability":"mutable","name":"value","nameLocation":"30789:5:23","nodeType":"VariableDeclaration","scope":7929,"src":"30782:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7905,"name":"int256","nodeType":"ElementaryTypeName","src":"30782:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30781:14:23"},"returnParameters":{"id":7910,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7909,"mutability":"mutable","name":"downcasted","nameLocation":"30825:10:23","nodeType":"VariableDeclaration","scope":7929,"src":"30819:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":7908,"name":"int56","nodeType":"ElementaryTypeName","src":"30819:5:23","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"}],"src":"30818:18:23"},"scope":8126,"src":"30765:220:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7954,"nodeType":"Block","src":"31375:148:23","statements":[{"expression":{"id":7942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7937,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7935,"src":"31385:10:23","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7940,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7932,"src":"31404:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7939,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31398:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"},"typeName":{"id":7938,"name":"int48","nodeType":"ElementaryTypeName","src":"31398:5:23","typeDescriptions":{}}},"id":7941,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31398:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"src":"31385:25:23","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"id":7943,"nodeType":"ExpressionStatement","src":"31385:25:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7944,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7935,"src":"31424:10:23","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7945,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7932,"src":"31438:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31424:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7953,"nodeType":"IfStatement","src":"31420:97:23","trueBody":{"id":7952,"nodeType":"Block","src":"31445:72:23","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":7948,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31496:2:23","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":7949,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7932,"src":"31500:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7947,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6383,"src":"31466:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7950,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31466:40:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7951,"nodeType":"RevertStatement","src":"31459:47:23"}]}}]},"documentation":{"id":7930,"nodeType":"StructuredDocumentation","src":"30991:307:23","text":" @dev Returns the downcasted int48 from int256, reverting on\n overflow (when the input is less than smallest int48 or\n greater than largest int48).\n Counterpart to Solidity's `int48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":7955,"implemented":true,"kind":"function","modifiers":[],"name":"toInt48","nameLocation":"31312:7:23","nodeType":"FunctionDefinition","parameters":{"id":7933,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7932,"mutability":"mutable","name":"value","nameLocation":"31327:5:23","nodeType":"VariableDeclaration","scope":7955,"src":"31320:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7931,"name":"int256","nodeType":"ElementaryTypeName","src":"31320:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31319:14:23"},"returnParameters":{"id":7936,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7935,"mutability":"mutable","name":"downcasted","nameLocation":"31363:10:23","nodeType":"VariableDeclaration","scope":7955,"src":"31357:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"},"typeName":{"id":7934,"name":"int48","nodeType":"ElementaryTypeName","src":"31357:5:23","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"visibility":"internal"}],"src":"31356:18:23"},"scope":8126,"src":"31303:220:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7980,"nodeType":"Block","src":"31913:148:23","statements":[{"expression":{"id":7968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7963,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7961,"src":"31923:10:23","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7966,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7958,"src":"31942:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7965,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31936:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"},"typeName":{"id":7964,"name":"int40","nodeType":"ElementaryTypeName","src":"31936:5:23","typeDescriptions":{}}},"id":7967,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31936:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"src":"31923:25:23","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"id":7969,"nodeType":"ExpressionStatement","src":"31923:25:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7970,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7961,"src":"31962:10:23","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7971,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7958,"src":"31976:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31962:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7979,"nodeType":"IfStatement","src":"31958:97:23","trueBody":{"id":7978,"nodeType":"Block","src":"31983:72:23","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":7974,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32034:2:23","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":7975,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7958,"src":"32038:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7973,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6383,"src":"32004:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7976,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32004:40:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7977,"nodeType":"RevertStatement","src":"31997:47:23"}]}}]},"documentation":{"id":7956,"nodeType":"StructuredDocumentation","src":"31529:307:23","text":" @dev Returns the downcasted int40 from int256, reverting on\n overflow (when the input is less than smallest int40 or\n greater than largest int40).\n Counterpart to Solidity's `int40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":7981,"implemented":true,"kind":"function","modifiers":[],"name":"toInt40","nameLocation":"31850:7:23","nodeType":"FunctionDefinition","parameters":{"id":7959,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7958,"mutability":"mutable","name":"value","nameLocation":"31865:5:23","nodeType":"VariableDeclaration","scope":7981,"src":"31858:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7957,"name":"int256","nodeType":"ElementaryTypeName","src":"31858:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31857:14:23"},"returnParameters":{"id":7962,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7961,"mutability":"mutable","name":"downcasted","nameLocation":"31901:10:23","nodeType":"VariableDeclaration","scope":7981,"src":"31895:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"},"typeName":{"id":7960,"name":"int40","nodeType":"ElementaryTypeName","src":"31895:5:23","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"visibility":"internal"}],"src":"31894:18:23"},"scope":8126,"src":"31841:220:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8006,"nodeType":"Block","src":"32451:148:23","statements":[{"expression":{"id":7994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7989,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7987,"src":"32461:10:23","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7992,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7984,"src":"32480:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7991,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32474:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":7990,"name":"int32","nodeType":"ElementaryTypeName","src":"32474:5:23","typeDescriptions":{}}},"id":7993,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32474:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"32461:25:23","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":7995,"nodeType":"ExpressionStatement","src":"32461:25:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7996,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7987,"src":"32500:10:23","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7997,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7984,"src":"32514:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"32500:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8005,"nodeType":"IfStatement","src":"32496:97:23","trueBody":{"id":8004,"nodeType":"Block","src":"32521:72:23","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":8000,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32572:2:23","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":8001,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7984,"src":"32576:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7999,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6383,"src":"32542:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8002,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32542:40:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8003,"nodeType":"RevertStatement","src":"32535:47:23"}]}}]},"documentation":{"id":7982,"nodeType":"StructuredDocumentation","src":"32067:307:23","text":" @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":8007,"implemented":true,"kind":"function","modifiers":[],"name":"toInt32","nameLocation":"32388:7:23","nodeType":"FunctionDefinition","parameters":{"id":7985,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7984,"mutability":"mutable","name":"value","nameLocation":"32403:5:23","nodeType":"VariableDeclaration","scope":8007,"src":"32396:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7983,"name":"int256","nodeType":"ElementaryTypeName","src":"32396:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32395:14:23"},"returnParameters":{"id":7988,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7987,"mutability":"mutable","name":"downcasted","nameLocation":"32439:10:23","nodeType":"VariableDeclaration","scope":8007,"src":"32433:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":7986,"name":"int32","nodeType":"ElementaryTypeName","src":"32433:5:23","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"}],"src":"32432:18:23"},"scope":8126,"src":"32379:220:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8032,"nodeType":"Block","src":"32989:148:23","statements":[{"expression":{"id":8020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8015,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8013,"src":"32999:10:23","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8018,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8010,"src":"33018:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8017,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33012:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":8016,"name":"int24","nodeType":"ElementaryTypeName","src":"33012:5:23","typeDescriptions":{}}},"id":8019,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33012:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"32999:25:23","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":8021,"nodeType":"ExpressionStatement","src":"32999:25:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8022,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8013,"src":"33038:10:23","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8023,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8010,"src":"33052:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33038:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8031,"nodeType":"IfStatement","src":"33034:97:23","trueBody":{"id":8030,"nodeType":"Block","src":"33059:72:23","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":8026,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33110:2:23","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":8027,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8010,"src":"33114:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8025,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6383,"src":"33080:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8028,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33080:40:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8029,"nodeType":"RevertStatement","src":"33073:47:23"}]}}]},"documentation":{"id":8008,"nodeType":"StructuredDocumentation","src":"32605:307:23","text":" @dev Returns the downcasted int24 from int256, reverting on\n overflow (when the input is less than smallest int24 or\n greater than largest int24).\n Counterpart to Solidity's `int24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":8033,"implemented":true,"kind":"function","modifiers":[],"name":"toInt24","nameLocation":"32926:7:23","nodeType":"FunctionDefinition","parameters":{"id":8011,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8010,"mutability":"mutable","name":"value","nameLocation":"32941:5:23","nodeType":"VariableDeclaration","scope":8033,"src":"32934:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8009,"name":"int256","nodeType":"ElementaryTypeName","src":"32934:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32933:14:23"},"returnParameters":{"id":8014,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8013,"mutability":"mutable","name":"downcasted","nameLocation":"32977:10:23","nodeType":"VariableDeclaration","scope":8033,"src":"32971:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":8012,"name":"int24","nodeType":"ElementaryTypeName","src":"32971:5:23","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"32970:18:23"},"scope":8126,"src":"32917:220:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8058,"nodeType":"Block","src":"33527:148:23","statements":[{"expression":{"id":8046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8041,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8039,"src":"33537:10:23","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8044,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8036,"src":"33556:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8043,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33550:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"},"typeName":{"id":8042,"name":"int16","nodeType":"ElementaryTypeName","src":"33550:5:23","typeDescriptions":{}}},"id":8045,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33550:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"src":"33537:25:23","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"id":8047,"nodeType":"ExpressionStatement","src":"33537:25:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8048,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8039,"src":"33576:10:23","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8049,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8036,"src":"33590:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33576:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8057,"nodeType":"IfStatement","src":"33572:97:23","trueBody":{"id":8056,"nodeType":"Block","src":"33597:72:23","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":8052,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33648:2:23","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":8053,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8036,"src":"33652:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8051,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6383,"src":"33618:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8054,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33618:40:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8055,"nodeType":"RevertStatement","src":"33611:47:23"}]}}]},"documentation":{"id":8034,"nodeType":"StructuredDocumentation","src":"33143:307:23","text":" @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":8059,"implemented":true,"kind":"function","modifiers":[],"name":"toInt16","nameLocation":"33464:7:23","nodeType":"FunctionDefinition","parameters":{"id":8037,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8036,"mutability":"mutable","name":"value","nameLocation":"33479:5:23","nodeType":"VariableDeclaration","scope":8059,"src":"33472:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8035,"name":"int256","nodeType":"ElementaryTypeName","src":"33472:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33471:14:23"},"returnParameters":{"id":8040,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8039,"mutability":"mutable","name":"downcasted","nameLocation":"33515:10:23","nodeType":"VariableDeclaration","scope":8059,"src":"33509:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"},"typeName":{"id":8038,"name":"int16","nodeType":"ElementaryTypeName","src":"33509:5:23","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"visibility":"internal"}],"src":"33508:18:23"},"scope":8126,"src":"33455:220:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8084,"nodeType":"Block","src":"34058:146:23","statements":[{"expression":{"id":8072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8067,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8065,"src":"34068:10:23","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8070,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8062,"src":"34086:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8069,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34081:4:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":8068,"name":"int8","nodeType":"ElementaryTypeName","src":"34081:4:23","typeDescriptions":{}}},"id":8071,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34081:11:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"src":"34068:24:23","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"id":8073,"nodeType":"ExpressionStatement","src":"34068:24:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8074,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8065,"src":"34106:10:23","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8075,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8062,"src":"34120:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"34106:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8083,"nodeType":"IfStatement","src":"34102:96:23","trueBody":{"id":8082,"nodeType":"Block","src":"34127:71:23","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":8078,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34178:1:23","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":8079,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8062,"src":"34181:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8077,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6383,"src":"34148:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8080,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34148:39:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8081,"nodeType":"RevertStatement","src":"34141:46:23"}]}}]},"documentation":{"id":8060,"nodeType":"StructuredDocumentation","src":"33681:302:23","text":" @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":8085,"implemented":true,"kind":"function","modifiers":[],"name":"toInt8","nameLocation":"33997:6:23","nodeType":"FunctionDefinition","parameters":{"id":8063,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8062,"mutability":"mutable","name":"value","nameLocation":"34011:5:23","nodeType":"VariableDeclaration","scope":8085,"src":"34004:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8061,"name":"int256","nodeType":"ElementaryTypeName","src":"34004:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34003:14:23"},"returnParameters":{"id":8066,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8065,"mutability":"mutable","name":"downcasted","nameLocation":"34046:10:23","nodeType":"VariableDeclaration","scope":8085,"src":"34041:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"},"typeName":{"id":8064,"name":"int8","nodeType":"ElementaryTypeName","src":"34041:4:23","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"visibility":"internal"}],"src":"34040:17:23"},"scope":8126,"src":"33988:216:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8114,"nodeType":"Block","src":"34444:250:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8093,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8088,"src":"34557:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"arguments":[{"expression":{"arguments":[{"id":8098,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34578:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":8097,"name":"int256","nodeType":"ElementaryTypeName","src":"34578:6:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":8096,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"34573:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8099,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34573:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":8100,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"34586:3:23","memberName":"max","nodeType":"MemberAccess","src":"34573:16:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8095,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34565:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":8094,"name":"uint256","nodeType":"ElementaryTypeName","src":"34565:7:23","typeDescriptions":{}}},"id":8101,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34565:25:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34557:33:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8108,"nodeType":"IfStatement","src":"34553:105:23","trueBody":{"id":8107,"nodeType":"Block","src":"34592:66:23","statements":[{"errorCall":{"arguments":[{"id":8104,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8088,"src":"34641:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8103,"name":"SafeCastOverflowedUintToInt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6388,"src":"34613:27:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":8105,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34613:34:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8106,"nodeType":"RevertStatement","src":"34606:41:23"}]}},{"expression":{"arguments":[{"id":8111,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8088,"src":"34681:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8110,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34674:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":8109,"name":"int256","nodeType":"ElementaryTypeName","src":"34674:6:23","typeDescriptions":{}}},"id":8112,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34674:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":8092,"id":8113,"nodeType":"Return","src":"34667:20:23"}]},"documentation":{"id":8086,"nodeType":"StructuredDocumentation","src":"34210:165:23","text":" @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256."},"id":8115,"implemented":true,"kind":"function","modifiers":[],"name":"toInt256","nameLocation":"34389:8:23","nodeType":"FunctionDefinition","parameters":{"id":8089,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8088,"mutability":"mutable","name":"value","nameLocation":"34406:5:23","nodeType":"VariableDeclaration","scope":8115,"src":"34398:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8087,"name":"uint256","nodeType":"ElementaryTypeName","src":"34398:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34397:15:23"},"returnParameters":{"id":8092,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8091,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8115,"src":"34436:6:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8090,"name":"int256","nodeType":"ElementaryTypeName","src":"34436:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34435:8:23"},"scope":8126,"src":"34380:314:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8124,"nodeType":"Block","src":"34853:87:23","statements":[{"AST":{"nodeType":"YulBlock","src":"34888:46:23","statements":[{"nodeType":"YulAssignment","src":"34902:22:23","value":{"arguments":[{"arguments":[{"name":"b","nodeType":"YulIdentifier","src":"34921:1:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"34914:6:23"},"nodeType":"YulFunctionCall","src":"34914:9:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"34907:6:23"},"nodeType":"YulFunctionCall","src":"34907:17:23"},"variableNames":[{"name":"u","nodeType":"YulIdentifier","src":"34902:1:23"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":8118,"isOffset":false,"isSlot":false,"src":"34921:1:23","valueSize":1},{"declaration":8121,"isOffset":false,"isSlot":false,"src":"34902:1:23","valueSize":1}],"flags":["memory-safe"],"id":8123,"nodeType":"InlineAssembly","src":"34863:71:23"}]},"documentation":{"id":8116,"nodeType":"StructuredDocumentation","src":"34700:90:23","text":" @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump."},"id":8125,"implemented":true,"kind":"function","modifiers":[],"name":"toUint","nameLocation":"34804:6:23","nodeType":"FunctionDefinition","parameters":{"id":8119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8118,"mutability":"mutable","name":"b","nameLocation":"34816:1:23","nodeType":"VariableDeclaration","scope":8125,"src":"34811:6:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8117,"name":"bool","nodeType":"ElementaryTypeName","src":"34811:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"34810:8:23"},"returnParameters":{"id":8122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8121,"mutability":"mutable","name":"u","nameLocation":"34850:1:23","nodeType":"VariableDeclaration","scope":8125,"src":"34842:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8120,"name":"uint256","nodeType":"ElementaryTypeName","src":"34842:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34841:11:23"},"scope":8126,"src":"34795:145:23","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":8127,"src":"769:34173:23","usedErrors":[6371,6376,6383,6388],"usedEvents":[]}],"src":"192:34751:23"},"id":23},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SafeCast":[8126],"SignedMath":[8270]},"id":8271,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":8128,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:24"},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":8130,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8271,"sourceUnit":8127,"src":"135:40:24","symbolAliases":[{"foreign":{"id":8129,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8126,"src":"143:8:24","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":8131,"nodeType":"StructuredDocumentation","src":"177:80:24","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":8270,"linearizedBaseContracts":[8270],"name":"SignedMath","nameLocation":"266:10:24","nodeType":"ContractDefinition","nodes":[{"body":{"id":8160,"nodeType":"Block","src":"746:215:24","statements":[{"id":8159,"nodeType":"UncheckedBlock","src":"756:199:24","statements":[{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8143,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8138,"src":"894:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8144,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8136,"src":"900:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":8145,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8138,"src":"904:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"900:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":8147,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"899:7:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"arguments":[{"id":8152,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8134,"src":"932:9:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":8150,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8126,"src":"916:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8126_$","typeString":"type(library SafeCast)"}},"id":8151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"925:6:24","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8125,"src":"916:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":8153,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"916:26:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8149,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"909:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":8148,"name":"int256","nodeType":"ElementaryTypeName","src":"909:6:24","typeDescriptions":{}}},"id":8154,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"909:34:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"899:44:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":8156,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"898:46:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"894:50:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":8142,"id":8158,"nodeType":"Return","src":"887:57:24"}]}]},"documentation":{"id":8132,"nodeType":"StructuredDocumentation","src":"283:374:24","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":8161,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"671:7:24","nodeType":"FunctionDefinition","parameters":{"id":8139,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8134,"mutability":"mutable","name":"condition","nameLocation":"684:9:24","nodeType":"VariableDeclaration","scope":8161,"src":"679:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8133,"name":"bool","nodeType":"ElementaryTypeName","src":"679:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":8136,"mutability":"mutable","name":"a","nameLocation":"702:1:24","nodeType":"VariableDeclaration","scope":8161,"src":"695:8:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8135,"name":"int256","nodeType":"ElementaryTypeName","src":"695:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":8138,"mutability":"mutable","name":"b","nameLocation":"712:1:24","nodeType":"VariableDeclaration","scope":8161,"src":"705:8:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8137,"name":"int256","nodeType":"ElementaryTypeName","src":"705:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"678:36:24"},"returnParameters":{"id":8142,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8141,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8161,"src":"738:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8140,"name":"int256","nodeType":"ElementaryTypeName","src":"738:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"737:8:24"},"scope":8270,"src":"662:299:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8179,"nodeType":"Block","src":"1102:44:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8172,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8164,"src":"1127:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":8173,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8166,"src":"1131:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1127:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":8175,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8164,"src":"1134:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":8176,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8166,"src":"1137:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8171,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8161,"src":"1119:7:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":8177,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1119:20:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":8170,"id":8178,"nodeType":"Return","src":"1112:27:24"}]},"documentation":{"id":8162,"nodeType":"StructuredDocumentation","src":"967:66:24","text":" @dev Returns the largest of two signed numbers."},"id":8180,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"1047:3:24","nodeType":"FunctionDefinition","parameters":{"id":8167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8164,"mutability":"mutable","name":"a","nameLocation":"1058:1:24","nodeType":"VariableDeclaration","scope":8180,"src":"1051:8:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8163,"name":"int256","nodeType":"ElementaryTypeName","src":"1051:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":8166,"mutability":"mutable","name":"b","nameLocation":"1068:1:24","nodeType":"VariableDeclaration","scope":8180,"src":"1061:8:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8165,"name":"int256","nodeType":"ElementaryTypeName","src":"1061:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1050:20:24"},"returnParameters":{"id":8170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8169,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8180,"src":"1094:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8168,"name":"int256","nodeType":"ElementaryTypeName","src":"1094:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1093:8:24"},"scope":8270,"src":"1038:108:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8198,"nodeType":"Block","src":"1288:44:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8191,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8183,"src":"1313:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":8192,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8185,"src":"1317:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1313:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":8194,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8183,"src":"1320:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":8195,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8185,"src":"1323:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8190,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8161,"src":"1305:7:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":8196,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1305:20:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":8189,"id":8197,"nodeType":"Return","src":"1298:27:24"}]},"documentation":{"id":8181,"nodeType":"StructuredDocumentation","src":"1152:67:24","text":" @dev Returns the smallest of two signed numbers."},"id":8199,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"1233:3:24","nodeType":"FunctionDefinition","parameters":{"id":8186,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8183,"mutability":"mutable","name":"a","nameLocation":"1244:1:24","nodeType":"VariableDeclaration","scope":8199,"src":"1237:8:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8182,"name":"int256","nodeType":"ElementaryTypeName","src":"1237:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":8185,"mutability":"mutable","name":"b","nameLocation":"1254:1:24","nodeType":"VariableDeclaration","scope":8199,"src":"1247:8:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8184,"name":"int256","nodeType":"ElementaryTypeName","src":"1247:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1236:20:24"},"returnParameters":{"id":8189,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8188,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8199,"src":"1280:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8187,"name":"int256","nodeType":"ElementaryTypeName","src":"1280:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1279:8:24"},"scope":8270,"src":"1224:108:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8242,"nodeType":"Block","src":"1537:162:24","statements":[{"assignments":[8210],"declarations":[{"constant":false,"id":8210,"mutability":"mutable","name":"x","nameLocation":"1606:1:24","nodeType":"VariableDeclaration","scope":8242,"src":"1599:8:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8209,"name":"int256","nodeType":"ElementaryTypeName","src":"1599:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":8223,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8211,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8202,"src":"1611:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":8212,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8204,"src":"1615:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1611:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":8214,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1610:7:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8217,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8215,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8202,"src":"1622:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":8216,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8204,"src":"1626:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1622:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":8218,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1621:7:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":8219,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1632:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1621:12:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":8221,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1620:14:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1610:24:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"1599:35:24"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8224,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8210,"src":"1651:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":8229,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8210,"src":"1671:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8228,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1663:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":8227,"name":"uint256","nodeType":"ElementaryTypeName","src":"1663:7:24","typeDescriptions":{}}},"id":8230,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1663:10:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":8231,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1677:3:24","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"1663:17:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8226,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1656:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":8225,"name":"int256","nodeType":"ElementaryTypeName","src":"1656:6:24","typeDescriptions":{}}},"id":8233,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1656:25:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8234,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8202,"src":"1685:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":8235,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8204,"src":"1689:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1685:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":8237,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1684:7:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1656:35:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":8239,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1655:37:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1651:41:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":8208,"id":8241,"nodeType":"Return","src":"1644:48:24"}]},"documentation":{"id":8200,"nodeType":"StructuredDocumentation","src":"1338:126:24","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":8243,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"1478:7:24","nodeType":"FunctionDefinition","parameters":{"id":8205,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8202,"mutability":"mutable","name":"a","nameLocation":"1493:1:24","nodeType":"VariableDeclaration","scope":8243,"src":"1486:8:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8201,"name":"int256","nodeType":"ElementaryTypeName","src":"1486:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":8204,"mutability":"mutable","name":"b","nameLocation":"1503:1:24","nodeType":"VariableDeclaration","scope":8243,"src":"1496:8:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8203,"name":"int256","nodeType":"ElementaryTypeName","src":"1496:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1485:20:24"},"returnParameters":{"id":8208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8207,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8243,"src":"1529:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8206,"name":"int256","nodeType":"ElementaryTypeName","src":"1529:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1528:8:24"},"scope":8270,"src":"1469:230:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8268,"nodeType":"Block","src":"1843:767:24","statements":[{"id":8267,"nodeType":"UncheckedBlock","src":"1853:751:24","statements":[{"assignments":[8252],"declarations":[{"constant":false,"id":8252,"mutability":"mutable","name":"mask","nameLocation":"2424:4:24","nodeType":"VariableDeclaration","scope":8267,"src":"2417:11:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8251,"name":"int256","nodeType":"ElementaryTypeName","src":"2417:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":8256,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8253,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8246,"src":"2431:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":8254,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2436:3:24","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"2431:8:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"2417:22:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8259,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8246,"src":"2576:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":8260,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8252,"src":"2580:4:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2576:8:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":8262,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2575:10:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":8263,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8252,"src":"2588:4:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2575:17:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8258,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2567:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":8257,"name":"uint256","nodeType":"ElementaryTypeName","src":"2567:7:24","typeDescriptions":{}}},"id":8265,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2567:26:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8250,"id":8266,"nodeType":"Return","src":"2560:33:24"}]}]},"documentation":{"id":8244,"nodeType":"StructuredDocumentation","src":"1705:78:24","text":" @dev Returns the absolute unsigned value of a signed value."},"id":8269,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1797:3:24","nodeType":"FunctionDefinition","parameters":{"id":8247,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8246,"mutability":"mutable","name":"n","nameLocation":"1808:1:24","nodeType":"VariableDeclaration","scope":8269,"src":"1801:8:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8245,"name":"int256","nodeType":"ElementaryTypeName","src":"1801:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1800:10:24"},"returnParameters":{"id":8250,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8249,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8269,"src":"1834:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8248,"name":"uint256","nodeType":"ElementaryTypeName","src":"1834:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1833:9:24"},"scope":8270,"src":"1788:822:24","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":8271,"src":"258:2354:24","usedErrors":[],"usedEvents":[]}],"src":"109:2504:24"},"id":24},"contracts/IPDocV5.sol":{"ast":{"absolutePath":"contracts/IPDocV5.sol","exportedSymbols":{"AccessControl":[295],"ERC1155":[1432],"ERC1155Burnable":[1677],"ERC1155Pausable":[1716],"ERC1155Supply":[1898],"ERC1155URIStorage":[1986],"IPDocV5":[8664]},"id":8665,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":8272,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"81:24:25"},{"absolutePath":"@openzeppelin/contracts/access/AccessControl.sol","file":"@openzeppelin/contracts/access/AccessControl.sol","id":8274,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8665,"sourceUnit":296,"src":"107:79:25","symbolAliases":[{"foreign":{"id":8273,"name":"AccessControl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":295,"src":"115:13:25","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/ERC1155.sol","file":"@openzeppelin/contracts/token/ERC1155/ERC1155.sol","id":8276,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8665,"sourceUnit":1433,"src":"187:74:25","symbolAliases":[{"foreign":{"id":8275,"name":"ERC1155","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1432,"src":"195:7:25","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol","file":"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol","id":8278,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8665,"sourceUnit":1678,"src":"262:101:25","symbolAliases":[{"foreign":{"id":8277,"name":"ERC1155Burnable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1677,"src":"270:15:25","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Pausable.sol","file":"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Pausable.sol","id":8280,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8665,"sourceUnit":1717,"src":"364:101:25","symbolAliases":[{"foreign":{"id":8279,"name":"ERC1155Pausable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1716,"src":"372:15:25","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol","file":"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol","id":8282,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8665,"sourceUnit":1899,"src":"466:97:25","symbolAliases":[{"foreign":{"id":8281,"name":"ERC1155Supply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1898,"src":"474:13:25","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155URIStorage.sol","file":"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155URIStorage.sol","id":8284,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8665,"sourceUnit":1987,"src":"564:105:25","symbolAliases":[{"foreign":{"id":8283,"name":"ERC1155URIStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1986,"src":"572:17:25","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":8286,"name":"ERC1155","nameLocations":["739:7:25"],"nodeType":"IdentifierPath","referencedDeclaration":1432,"src":"739:7:25"},"id":8287,"nodeType":"InheritanceSpecifier","src":"739:7:25"},{"baseName":{"id":8288,"name":"AccessControl","nameLocations":["748:13:25"],"nodeType":"IdentifierPath","referencedDeclaration":295,"src":"748:13:25"},"id":8289,"nodeType":"InheritanceSpecifier","src":"748:13:25"},{"baseName":{"id":8290,"name":"ERC1155Pausable","nameLocations":["763:15:25"],"nodeType":"IdentifierPath","referencedDeclaration":1716,"src":"763:15:25"},"id":8291,"nodeType":"InheritanceSpecifier","src":"763:15:25"},{"baseName":{"id":8292,"name":"ERC1155Burnable","nameLocations":["780:15:25"],"nodeType":"IdentifierPath","referencedDeclaration":1677,"src":"780:15:25"},"id":8293,"nodeType":"InheritanceSpecifier","src":"780:15:25"},{"baseName":{"id":8294,"name":"ERC1155Supply","nameLocations":["797:13:25"],"nodeType":"IdentifierPath","referencedDeclaration":1898,"src":"797:13:25"},"id":8295,"nodeType":"InheritanceSpecifier","src":"797:13:25"},{"baseName":{"id":8296,"name":"ERC1155URIStorage","nameLocations":["812:17:25"],"nodeType":"IdentifierPath","referencedDeclaration":1986,"src":"812:17:25"},"id":8297,"nodeType":"InheritanceSpecifier","src":"812:17:25"}],"canonicalName":"IPDocV5","contractDependencies":[],"contractKind":"contract","documentation":{"id":8285,"nodeType":"StructuredDocumentation","src":"671:48:25","text":"@custom:security-contact andy@shipstone.com"},"fullyImplemented":true,"id":8664,"linearizedBaseContracts":[8664,1986,1898,1677,1716,3265,295,1432,515,2002,1555,4743,4755,378,3096],"name":"IPDocV5","nameLocation":"728:7:25","nodeType":"ContractDefinition","nodes":[{"constant":true,"functionSelector":"7f345710","id":8302,"mutability":"constant","name":"URI_SETTER_ROLE","nameLocation":"860:15:25","nodeType":"VariableDeclaration","scope":8664,"src":"836:70:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8298,"name":"bytes32","nodeType":"ElementaryTypeName","src":"836:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"5552495f5345545445525f524f4c45","id":8300,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"888:17:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_7804d923f43a17d325d77e781528e0793b2edd9890ab45fc64efd7b4b427744c","typeString":"literal_string \"URI_SETTER_ROLE\""},"value":"URI_SETTER_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_7804d923f43a17d325d77e781528e0793b2edd9890ab45fc64efd7b4b427744c","typeString":"literal_string \"URI_SETTER_ROLE\""}],"id":8299,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"878:9:25","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":8301,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"878:28:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":true,"functionSelector":"e63ab1e9","id":8307,"mutability":"constant","name":"PAUSER_ROLE","nameLocation":"936:11:25","nodeType":"VariableDeclaration","scope":8664,"src":"912:62:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8303,"name":"bytes32","nodeType":"ElementaryTypeName","src":"912:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"5041555345525f524f4c45","id":8305,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"960:13:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a","typeString":"literal_string \"PAUSER_ROLE\""},"value":"PAUSER_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a","typeString":"literal_string \"PAUSER_ROLE\""}],"id":8304,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"950:9:25","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":8306,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"950:24:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":true,"functionSelector":"d5391393","id":8312,"mutability":"constant","name":"MINTER_ROLE","nameLocation":"1004:11:25","nodeType":"VariableDeclaration","scope":8664,"src":"980:62:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8308,"name":"bytes32","nodeType":"ElementaryTypeName","src":"980:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"4d494e5445525f524f4c45","id":8310,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1028:13:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6","typeString":"literal_string \"MINTER_ROLE\""},"value":"MINTER_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6","typeString":"literal_string \"MINTER_ROLE\""}],"id":8309,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1018:9:25","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":8311,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1018:24:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":false,"id":8316,"mutability":"mutable","name":"_tokenIdMap","nameLocation":"1084:11:25","nodeType":"VariableDeclaration","scope":8664,"src":"1048:47:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"typeName":{"id":8315,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":8313,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1056:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"1048:27:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":8314,"name":"uint256","nodeType":"ElementaryTypeName","src":"1067:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":8320,"mutability":"mutable","name":"_reverseTokenIdMap","nameLocation":"1137:18:25","nodeType":"VariableDeclaration","scope":8664,"src":"1101:54:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bytes32_$","typeString":"mapping(uint256 => bytes32)"},"typeName":{"id":8319,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":8317,"name":"uint256","nodeType":"ElementaryTypeName","src":"1109:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1101:27:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bytes32_$","typeString":"mapping(uint256 => bytes32)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":8318,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1120:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},"visibility":"private"},{"constant":false,"id":8323,"mutability":"mutable","name":"_nextTokenId","nameLocation":"1177:12:25","nodeType":"VariableDeclaration","scope":8664,"src":"1161:32:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8321,"name":"uint256","nodeType":"ElementaryTypeName","src":"1161:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":8322,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1192:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"anonymous":false,"eventSelector":"ea3e0acfc42d04765cb7947585765a242d0fd12a634edfb22c44cf42a363b2b8","id":8329,"name":"IDCreated","nameLocation":"1206:9:25","nodeType":"EventDefinition","parameters":{"id":8328,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8325,"indexed":true,"mutability":"mutable","name":"externalId","nameLocation":"1232:10:25","nodeType":"VariableDeclaration","scope":8329,"src":"1216:26:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8324,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1216:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":8327,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"1260:7:25","nodeType":"VariableDeclaration","scope":8329,"src":"1244:23:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8326,"name":"uint256","nodeType":"ElementaryTypeName","src":"1244:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1215:53:25"},"src":"1200:69:25"},{"body":{"id":8371,"nodeType":"Block","src":"1416:459:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":8336,"name":"_tokenIdMap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8316,"src":"1484:11:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":8338,"indexExpression":{"id":8337,"name":"externalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8331,"src":"1496:10:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1484:23:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":8339,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1511:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1484:28:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8346,"nodeType":"IfStatement","src":"1480:89:25","trueBody":{"id":8345,"nodeType":"Block","src":"1514:55:25","statements":[{"expression":{"baseExpression":{"id":8341,"name":"_tokenIdMap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8316,"src":"1535:11:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":8343,"indexExpression":{"id":8342,"name":"externalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8331,"src":"1547:10:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1535:23:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8335,"id":8344,"nodeType":"Return","src":"1528:30:25"}]}},{"assignments":[8348],"declarations":[{"constant":false,"id":8348,"mutability":"mutable","name":"newId","nameLocation":"1633:5:25","nodeType":"VariableDeclaration","scope":8371,"src":"1625:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8347,"name":"uint256","nodeType":"ElementaryTypeName","src":"1625:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8351,"initialValue":{"id":8350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1641:14:25","subExpression":{"id":8349,"name":"_nextTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8323,"src":"1641:12:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1625:30:25"},{"expression":{"id":8356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8352,"name":"_tokenIdMap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8316,"src":"1714:11:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":8354,"indexExpression":{"id":8353,"name":"externalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8331,"src":"1726:10:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1714:23:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8355,"name":"newId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8348,"src":"1740:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1714:31:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8357,"nodeType":"ExpressionStatement","src":"1714:31:25"},{"expression":{"id":8362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8358,"name":"_reverseTokenIdMap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8320,"src":"1755:18:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bytes32_$","typeString":"mapping(uint256 => bytes32)"}},"id":8360,"indexExpression":{"id":8359,"name":"newId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8348,"src":"1774:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1755:25:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8361,"name":"externalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8331,"src":"1783:10:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"1755:38:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":8363,"nodeType":"ExpressionStatement","src":"1755:38:25"},{"eventCall":{"arguments":[{"id":8365,"name":"externalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8331,"src":"1827:10:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":8366,"name":"newId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8348,"src":"1839:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8364,"name":"IDCreated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8329,"src":"1817:9:25","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_uint256_$returns$__$","typeString":"function (bytes32,uint256)"}},"id":8367,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1817:28:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8368,"nodeType":"EmitStatement","src":"1812:33:25"},{"expression":{"id":8369,"name":"newId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8348,"src":"1863:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8335,"id":8370,"nodeType":"Return","src":"1856:12:25"}]},"id":8372,"implemented":true,"kind":"function","modifiers":[],"name":"_createId","nameLocation":"1359:9:25","nodeType":"FunctionDefinition","parameters":{"id":8332,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8331,"mutability":"mutable","name":"externalId","nameLocation":"1377:10:25","nodeType":"VariableDeclaration","scope":8372,"src":"1369:18:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8330,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1369:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1368:20:25"},"returnParameters":{"id":8335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8334,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8372,"src":"1407:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8333,"name":"uint256","nodeType":"ElementaryTypeName","src":"1407:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1406:9:25"},"scope":8664,"src":"1350:525:25","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":8386,"nodeType":"Block","src":"1966:43:25","statements":[{"expression":{"arguments":[{"id":8383,"name":"externalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8374,"src":"1991:10:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":8382,"name":"_createId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8372,"src":"1981:9:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$returns$_t_uint256_$","typeString":"function (bytes32) returns (uint256)"}},"id":8384,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1981:21:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8381,"id":8385,"nodeType":"Return","src":"1974:28:25"}]},"functionSelector":"f07f5520","id":8387,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":8377,"name":"MINTER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8312,"src":"1935:11:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":8378,"kind":"modifierInvocation","modifierName":{"id":8376,"name":"onlyRole","nameLocations":["1926:8:25"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"1926:8:25"},"nodeType":"ModifierInvocation","src":"1926:21:25"}],"name":"createId","nameLocation":"1890:8:25","nodeType":"FunctionDefinition","parameters":{"id":8375,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8374,"mutability":"mutable","name":"externalId","nameLocation":"1907:10:25","nodeType":"VariableDeclaration","scope":8387,"src":"1899:18:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8373,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1899:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1898:20:25"},"returnParameters":{"id":8381,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8380,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8387,"src":"1957:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8379,"name":"uint256","nodeType":"ElementaryTypeName","src":"1957:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1956:9:25"},"scope":8664,"src":"1881:128:25","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":8436,"nodeType":"Block","src":"2119:210:25","statements":[{"assignments":[8403],"declarations":[{"constant":false,"id":8403,"mutability":"mutable","name":"ids","nameLocation":"2146:3:25","nodeType":"VariableDeclaration","scope":8436,"src":"2129:20:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":8401,"name":"uint256","nodeType":"ElementaryTypeName","src":"2129:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8402,"nodeType":"ArrayTypeName","src":"2129:9:25","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":8410,"initialValue":{"arguments":[{"expression":{"id":8407,"name":"externalIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8390,"src":"2166:11:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":8408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2178:6:25","memberName":"length","nodeType":"MemberAccess","src":"2166:18:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8406,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2152:13:25","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":8404,"name":"uint256","nodeType":"ElementaryTypeName","src":"2156:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8405,"nodeType":"ArrayTypeName","src":"2156:9:25","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":8409,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2152:33:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"2129:56:25"},{"body":{"id":8432,"nodeType":"Block","src":"2244:59:25","statements":[{"expression":{"id":8430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8422,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8403,"src":"2258:3:25","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":8424,"indexExpression":{"id":8423,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8412,"src":"2262:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2258:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"baseExpression":{"id":8426,"name":"externalIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8390,"src":"2277:11:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":8428,"indexExpression":{"id":8427,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8412,"src":"2289:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2277:14:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":8425,"name":"_createId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8372,"src":"2267:9:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$returns$_t_uint256_$","typeString":"function (bytes32) returns (uint256)"}},"id":8429,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2267:25:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2258:34:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8431,"nodeType":"ExpressionStatement","src":"2258:34:25"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8415,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8412,"src":"2215:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":8416,"name":"externalIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8390,"src":"2219:11:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":8417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2231:6:25","memberName":"length","nodeType":"MemberAccess","src":"2219:18:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2215:22:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8433,"initializationExpression":{"assignments":[8412],"declarations":[{"constant":false,"id":8412,"mutability":"mutable","name":"i","nameLocation":"2208:1:25","nodeType":"VariableDeclaration","scope":8433,"src":"2200:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8411,"name":"uint256","nodeType":"ElementaryTypeName","src":"2200:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8414,"initialValue":{"hexValue":"30","id":8413,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2212:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2200:13:25"},"loopExpression":{"expression":{"id":8420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2239:3:25","subExpression":{"id":8419,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8412,"src":"2239:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8421,"nodeType":"ExpressionStatement","src":"2239:3:25"},"nodeType":"ForStatement","src":"2195:108:25"},{"expression":{"id":8434,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8403,"src":"2319:3:25","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":8398,"id":8435,"nodeType":"Return","src":"2312:10:25"}]},"functionSelector":"09dca9ce","id":8437,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":8393,"name":"MINTER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8312,"src":"2079:11:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":8394,"kind":"modifierInvocation","modifierName":{"id":8392,"name":"onlyRole","nameLocations":["2070:8:25"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"2070:8:25"},"nodeType":"ModifierInvocation","src":"2070:21:25"}],"name":"createIds","nameLocation":"2023:9:25","nodeType":"FunctionDefinition","parameters":{"id":8391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8390,"mutability":"mutable","name":"externalIds","nameLocation":"2050:11:25","nodeType":"VariableDeclaration","scope":8437,"src":"2033:28:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":8388,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2033:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":8389,"nodeType":"ArrayTypeName","src":"2033:9:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"2032:30:25"},"returnParameters":{"id":8398,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8397,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8437,"src":"2101:16:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":8395,"name":"uint256","nodeType":"ElementaryTypeName","src":"2101:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8396,"nodeType":"ArrayTypeName","src":"2101:9:25","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2100:18:25"},"scope":8664,"src":"2014:315:25","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":8448,"nodeType":"Block","src":"2466:51:25","statements":[{"expression":{"baseExpression":{"id":8444,"name":"_reverseTokenIdMap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8320,"src":"2483:18:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bytes32_$","typeString":"mapping(uint256 => bytes32)"}},"id":8446,"indexExpression":{"id":8445,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8439,"src":"2502:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2483:27:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":8443,"id":8447,"nodeType":"Return","src":"2476:34:25"}]},"functionSelector":"ee037bf9","id":8449,"implemented":true,"kind":"function","modifiers":[],"name":"getExternalId","nameLocation":"2405:13:25","nodeType":"FunctionDefinition","parameters":{"id":8440,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8439,"mutability":"mutable","name":"tokenId","nameLocation":"2427:7:25","nodeType":"VariableDeclaration","scope":8449,"src":"2419:15:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8438,"name":"uint256","nodeType":"ElementaryTypeName","src":"2419:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2418:17:25"},"returnParameters":{"id":8443,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8442,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8449,"src":"2457:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8441,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2457:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2456:9:25"},"scope":8664,"src":"2396:121:25","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":8460,"nodeType":"Block","src":"2587:47:25","statements":[{"expression":{"baseExpression":{"id":8456,"name":"_tokenIdMap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8316,"src":"2604:11:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":8458,"indexExpression":{"id":8457,"name":"externalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8451,"src":"2616:10:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2604:23:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8455,"id":8459,"nodeType":"Return","src":"2597:30:25"}]},"functionSelector":"e5569773","id":8461,"implemented":true,"kind":"function","modifiers":[],"name":"getId","nameLocation":"2531:5:25","nodeType":"FunctionDefinition","parameters":{"id":8452,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8451,"mutability":"mutable","name":"externalId","nameLocation":"2545:10:25","nodeType":"VariableDeclaration","scope":8461,"src":"2537:18:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8450,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2537:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2536:20:25"},"returnParameters":{"id":8455,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8454,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8461,"src":"2578:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8453,"name":"uint256","nodeType":"ElementaryTypeName","src":"2578:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2577:9:25"},"scope":8664,"src":"2522:112:25","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":8495,"nodeType":"Block","src":"2783:194:25","statements":[{"expression":{"arguments":[{"id":8476,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":29,"src":"2804:18:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":8477,"name":"defaultAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8463,"src":"2824:12:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":8475,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"2793:10:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":8478,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2793:44:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8479,"nodeType":"ExpressionStatement","src":"2793:44:25"},{"expression":{"arguments":[{"id":8481,"name":"URI_SETTER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8302,"src":"2858:15:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":8482,"name":"defaultAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8463,"src":"2875:12:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":8480,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"2847:10:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":8483,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2847:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8484,"nodeType":"ExpressionStatement","src":"2847:41:25"},{"expression":{"arguments":[{"id":8486,"name":"PAUSER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8307,"src":"2909:11:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":8487,"name":"pauser","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8465,"src":"2922:6:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":8485,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"2898:10:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":8488,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2898:31:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8489,"nodeType":"ExpressionStatement","src":"2898:31:25"},{"expression":{"arguments":[{"id":8491,"name":"MINTER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8312,"src":"2950:11:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":8492,"name":"minter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8467,"src":"2963:6:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":8490,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"2939:10:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":8493,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2939:31:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8494,"nodeType":"ExpressionStatement","src":"2939:31:25"}]},"id":8496,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"68747470733a2f2f73616665696465612e6e65742f646f632f7b69647d","id":8470,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2726:31:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_06c6318f859c8001a420a673114da9437af140737c57f7e28a25eccb10bf3fbd","typeString":"literal_string \"https://safeidea.net/doc/{id}\""},"value":"https://safeidea.net/doc/{id}"}],"id":8471,"kind":"baseConstructorSpecifier","modifierName":{"id":8469,"name":"ERC1155","nameLocations":["2718:7:25"],"nodeType":"IdentifierPath","referencedDeclaration":1432,"src":"2718:7:25"},"nodeType":"ModifierInvocation","src":"2718:40:25"},{"arguments":[],"id":8473,"kind":"baseConstructorSpecifier","modifierName":{"id":8472,"name":"ERC1155URIStorage","nameLocations":["2759:17:25"],"nodeType":"IdentifierPath","referencedDeclaration":1986,"src":"2759:17:25"},"nodeType":"ModifierInvocation","src":"2759:19:25"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":8468,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8463,"mutability":"mutable","name":"defaultAdmin","nameLocation":"2664:12:25","nodeType":"VariableDeclaration","scope":8496,"src":"2656:20:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8462,"name":"address","nodeType":"ElementaryTypeName","src":"2656:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8465,"mutability":"mutable","name":"pauser","nameLocation":"2686:6:25","nodeType":"VariableDeclaration","scope":8496,"src":"2678:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8464,"name":"address","nodeType":"ElementaryTypeName","src":"2678:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8467,"mutability":"mutable","name":"minter","nameLocation":"2702:6:25","nodeType":"VariableDeclaration","scope":8496,"src":"2694:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8466,"name":"address","nodeType":"ElementaryTypeName","src":"2694:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2655:54:25"},"returnParameters":{"id":8474,"nodeType":"ParameterList","parameters":[],"src":"2783:0:25"},"scope":8664,"src":"2644:333:25","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[618,1952],"body":{"id":8511,"nodeType":"Block","src":"3094:42:25","statements":[{"expression":{"arguments":[{"id":8508,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8498,"src":"3121:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8506,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"3111:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_IPDocV5_$8664_$","typeString":"type(contract super IPDocV5)"}},"id":8507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3117:3:25","memberName":"uri","nodeType":"MemberAccess","referencedDeclaration":1952,"src":"3111:9:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) view returns (string memory)"}},"id":8509,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3111:18:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":8505,"id":8510,"nodeType":"Return","src":"3104:25:25"}]},"functionSelector":"0e89341c","id":8512,"implemented":true,"kind":"function","modifiers":[],"name":"uri","nameLocation":"2992:3:25","nodeType":"FunctionDefinition","overrides":{"id":8502,"nodeType":"OverrideSpecifier","overrides":[{"id":8500,"name":"ERC1155","nameLocations":["3042:7:25"],"nodeType":"IdentifierPath","referencedDeclaration":1432,"src":"3042:7:25"},{"id":8501,"name":"ERC1155URIStorage","nameLocations":["3051:17:25"],"nodeType":"IdentifierPath","referencedDeclaration":1986,"src":"3051:17:25"}],"src":"3033:36:25"},"parameters":{"id":8499,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8498,"mutability":"mutable","name":"tokenId","nameLocation":"3004:7:25","nodeType":"VariableDeclaration","scope":8512,"src":"2996:15:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8497,"name":"uint256","nodeType":"ElementaryTypeName","src":"2996:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2995:17:25"},"returnParameters":{"id":8505,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8504,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8512,"src":"3079:13:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8503,"name":"string","nodeType":"ElementaryTypeName","src":"3079:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3078:15:25"},"scope":8664,"src":"2983:153:25","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":8524,"nodeType":"Block","src":"3222:37:25","statements":[{"expression":{"arguments":[{"id":8521,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8514,"src":"3244:7:25","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":8520,"name":"_setBaseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1985,"src":"3232:11:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory)"}},"id":8522,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3232:20:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8523,"nodeType":"ExpressionStatement","src":"3232:20:25"}]},"functionSelector":"55f804b3","id":8525,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":8517,"name":"URI_SETTER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8302,"src":"3205:15:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":8518,"kind":"modifierInvocation","modifierName":{"id":8516,"name":"onlyRole","nameLocations":["3196:8:25"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"3196:8:25"},"nodeType":"ModifierInvocation","src":"3196:25:25"}],"name":"setBaseURI","nameLocation":"3155:10:25","nodeType":"FunctionDefinition","parameters":{"id":8515,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8514,"mutability":"mutable","name":"baseURI","nameLocation":"3180:7:25","nodeType":"VariableDeclaration","scope":8525,"src":"3166:21:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8513,"name":"string","nodeType":"ElementaryTypeName","src":"3166:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3165:23:25"},"returnParameters":{"id":8519,"nodeType":"ParameterList","parameters":[],"src":"3222:0:25"},"scope":8664,"src":"3146:113:25","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":8540,"nodeType":"Block","src":"3364:43:25","statements":[{"expression":{"arguments":[{"id":8536,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8527,"src":"3382:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8537,"name":"tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8529,"src":"3391:8:25","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":8535,"name":"_setURI","nodeType":"Identifier","overloadedDeclarations":[1974,1193],"referencedDeclaration":1974,"src":"3374:7:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,string memory)"}},"id":8538,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3374:26:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8539,"nodeType":"ExpressionStatement","src":"3374:26:25"}]},"functionSelector":"162094c4","id":8541,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":8532,"name":"URI_SETTER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8302,"src":"3347:15:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":8533,"kind":"modifierInvocation","modifierName":{"id":8531,"name":"onlyRole","nameLocations":["3338:8:25"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"3338:8:25"},"nodeType":"ModifierInvocation","src":"3338:25:25"}],"name":"setTokenURI","nameLocation":"3278:11:25","nodeType":"FunctionDefinition","parameters":{"id":8530,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8527,"mutability":"mutable","name":"tokenId","nameLocation":"3298:7:25","nodeType":"VariableDeclaration","scope":8541,"src":"3290:15:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8526,"name":"uint256","nodeType":"ElementaryTypeName","src":"3290:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8529,"mutability":"mutable","name":"tokenURI","nameLocation":"3321:8:25","nodeType":"VariableDeclaration","scope":8541,"src":"3307:22:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8528,"name":"string","nodeType":"ElementaryTypeName","src":"3307:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3289:41:25"},"returnParameters":{"id":8534,"nodeType":"ParameterList","parameters":[],"src":"3364:0:25"},"scope":8664,"src":"3269:138:25","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":8553,"nodeType":"Block","src":"3488:32:25","statements":[{"expression":{"arguments":[{"id":8550,"name":"newuri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8543,"src":"3506:6:25","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":8549,"name":"_setURI","nodeType":"Identifier","overloadedDeclarations":[1974,1193],"referencedDeclaration":1193,"src":"3498:7:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory)"}},"id":8551,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3498:15:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8552,"nodeType":"ExpressionStatement","src":"3498:15:25"}]},"functionSelector":"02fe5305","id":8554,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":8546,"name":"URI_SETTER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8302,"src":"3471:15:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":8547,"kind":"modifierInvocation","modifierName":{"id":8545,"name":"onlyRole","nameLocations":["3462:8:25"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"3462:8:25"},"nodeType":"ModifierInvocation","src":"3462:25:25"}],"name":"setURI","nameLocation":"3426:6:25","nodeType":"FunctionDefinition","parameters":{"id":8544,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8543,"mutability":"mutable","name":"newuri","nameLocation":"3447:6:25","nodeType":"VariableDeclaration","scope":8554,"src":"3433:20:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8542,"name":"string","nodeType":"ElementaryTypeName","src":"3433:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3432:22:25"},"returnParameters":{"id":8548,"nodeType":"ParameterList","parameters":[],"src":"3488:0:25"},"scope":8664,"src":"3417:103:25","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":8563,"nodeType":"Block","src":"3572:25:25","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":8560,"name":"_pause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3248,"src":"3582:6:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":8561,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3582:8:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8562,"nodeType":"ExpressionStatement","src":"3582:8:25"}]},"functionSelector":"8456cb59","id":8564,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":8557,"name":"PAUSER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8307,"src":"3559:11:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":8558,"kind":"modifierInvocation","modifierName":{"id":8556,"name":"onlyRole","nameLocations":["3550:8:25"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"3550:8:25"},"nodeType":"ModifierInvocation","src":"3550:21:25"}],"name":"pause","nameLocation":"3535:5:25","nodeType":"FunctionDefinition","parameters":{"id":8555,"nodeType":"ParameterList","parameters":[],"src":"3540:2:25"},"returnParameters":{"id":8559,"nodeType":"ParameterList","parameters":[],"src":"3572:0:25"},"scope":8664,"src":"3526:71:25","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":8573,"nodeType":"Block","src":"3651:27:25","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":8570,"name":"_unpause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3264,"src":"3661:8:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":8571,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3661:10:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8572,"nodeType":"ExpressionStatement","src":"3661:10:25"}]},"functionSelector":"3f4ba83a","id":8574,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":8567,"name":"PAUSER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8307,"src":"3638:11:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":8568,"kind":"modifierInvocation","modifierName":{"id":8566,"name":"onlyRole","nameLocations":["3629:8:25"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"3629:8:25"},"nodeType":"ModifierInvocation","src":"3629:21:25"}],"name":"unpause","nameLocation":"3612:7:25","nodeType":"FunctionDefinition","parameters":{"id":8565,"nodeType":"ParameterList","parameters":[],"src":"3619:2:25"},"returnParameters":{"id":8569,"nodeType":"ParameterList","parameters":[],"src":"3651:0:25"},"scope":8664,"src":"3603:75:25","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":8595,"nodeType":"Block","src":"3811:49:25","statements":[{"expression":{"arguments":[{"id":8589,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8576,"src":"3827:7:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8590,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8578,"src":"3836:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8591,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8580,"src":"3840:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8592,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8582,"src":"3848:4:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":8588,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1245,"src":"3821:5:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,uint256,bytes memory)"}},"id":8593,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3821:32:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8594,"nodeType":"ExpressionStatement","src":"3821:32:25"}]},"functionSelector":"731133e9","id":8596,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":8585,"name":"MINTER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8312,"src":"3794:11:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":8586,"kind":"modifierInvocation","modifierName":{"id":8584,"name":"onlyRole","nameLocations":["3785:8:25"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"3785:8:25"},"nodeType":"ModifierInvocation","src":"3785:21:25"}],"name":"mint","nameLocation":"3693:4:25","nodeType":"FunctionDefinition","parameters":{"id":8583,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8576,"mutability":"mutable","name":"account","nameLocation":"3706:7:25","nodeType":"VariableDeclaration","scope":8596,"src":"3698:15:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8575,"name":"address","nodeType":"ElementaryTypeName","src":"3698:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8578,"mutability":"mutable","name":"id","nameLocation":"3723:2:25","nodeType":"VariableDeclaration","scope":8596,"src":"3715:10:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8577,"name":"uint256","nodeType":"ElementaryTypeName","src":"3715:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8580,"mutability":"mutable","name":"amount","nameLocation":"3735:6:25","nodeType":"VariableDeclaration","scope":8596,"src":"3727:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8579,"name":"uint256","nodeType":"ElementaryTypeName","src":"3727:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8582,"mutability":"mutable","name":"data","nameLocation":"3756:4:25","nodeType":"VariableDeclaration","scope":8596,"src":"3743:17:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":8581,"name":"bytes","nodeType":"ElementaryTypeName","src":"3743:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3697:64:25"},"returnParameters":{"id":8587,"nodeType":"ParameterList","parameters":[],"src":"3811:0:25"},"scope":8664,"src":"3684:176:25","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":8619,"nodeType":"Block","src":"4013:51:25","statements":[{"expression":{"arguments":[{"id":8613,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8598,"src":"4034:2:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8614,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8601,"src":"4038:3:25","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":8615,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8604,"src":"4043:7:25","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":8616,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8606,"src":"4052:4:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":8612,"name":"_mintBatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1286,"src":"4023:10:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":8617,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4023:34:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8618,"nodeType":"ExpressionStatement","src":"4023:34:25"}]},"functionSelector":"1f7fdffa","id":8620,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":8609,"name":"MINTER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8312,"src":"3996:11:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":8610,"kind":"modifierInvocation","modifierName":{"id":8608,"name":"onlyRole","nameLocations":["3987:8:25"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"3987:8:25"},"nodeType":"ModifierInvocation","src":"3987:21:25"}],"name":"mintBatch","nameLocation":"3875:9:25","nodeType":"FunctionDefinition","parameters":{"id":8607,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8598,"mutability":"mutable","name":"to","nameLocation":"3893:2:25","nodeType":"VariableDeclaration","scope":8620,"src":"3885:10:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8597,"name":"address","nodeType":"ElementaryTypeName","src":"3885:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8601,"mutability":"mutable","name":"ids","nameLocation":"3914:3:25","nodeType":"VariableDeclaration","scope":8620,"src":"3897:20:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":8599,"name":"uint256","nodeType":"ElementaryTypeName","src":"3897:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8600,"nodeType":"ArrayTypeName","src":"3897:9:25","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":8604,"mutability":"mutable","name":"amounts","nameLocation":"3936:7:25","nodeType":"VariableDeclaration","scope":8620,"src":"3919:24:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":8602,"name":"uint256","nodeType":"ElementaryTypeName","src":"3919:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8603,"nodeType":"ArrayTypeName","src":"3919:9:25","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":8606,"mutability":"mutable","name":"data","nameLocation":"3958:4:25","nodeType":"VariableDeclaration","scope":8620,"src":"3945:17:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":8605,"name":"bytes","nodeType":"ElementaryTypeName","src":"3945:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3884:79:25"},"returnParameters":{"id":8611,"nodeType":"ParameterList","parameters":[],"src":"4013:0:25"},"scope":8664,"src":"3866:198:25","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[981,1715,1897],"body":{"id":8646,"nodeType":"Block","src":"4307:53:25","statements":[{"expression":{"arguments":[{"id":8640,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8622,"src":"4331:4:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8641,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8624,"src":"4337:2:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8642,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8627,"src":"4341:3:25","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":8643,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8630,"src":"4346:6:25","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"expression":{"id":8637,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"4317:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_IPDocV5_$8664_$","typeString":"type(contract super IPDocV5)"}},"id":8639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4323:7:25","memberName":"_update","nodeType":"MemberAccess","referencedDeclaration":1897,"src":"4317:13:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory)"}},"id":8644,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4317:36:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8645,"nodeType":"ExpressionStatement","src":"4317:36:25"}]},"id":8647,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"4147:7:25","nodeType":"FunctionDefinition","overrides":{"id":8635,"nodeType":"OverrideSpecifier","overrides":[{"id":8632,"name":"ERC1155","nameLocations":["4262:7:25"],"nodeType":"IdentifierPath","referencedDeclaration":1432,"src":"4262:7:25"},{"id":8633,"name":"ERC1155Pausable","nameLocations":["4271:15:25"],"nodeType":"IdentifierPath","referencedDeclaration":1716,"src":"4271:15:25"},{"id":8634,"name":"ERC1155Supply","nameLocations":["4288:13:25"],"nodeType":"IdentifierPath","referencedDeclaration":1898,"src":"4288:13:25"}],"src":"4253:49:25"},"parameters":{"id":8631,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8622,"mutability":"mutable","name":"from","nameLocation":"4163:4:25","nodeType":"VariableDeclaration","scope":8647,"src":"4155:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8621,"name":"address","nodeType":"ElementaryTypeName","src":"4155:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8624,"mutability":"mutable","name":"to","nameLocation":"4177:2:25","nodeType":"VariableDeclaration","scope":8647,"src":"4169:10:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8623,"name":"address","nodeType":"ElementaryTypeName","src":"4169:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8627,"mutability":"mutable","name":"ids","nameLocation":"4198:3:25","nodeType":"VariableDeclaration","scope":8647,"src":"4181:20:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":8625,"name":"uint256","nodeType":"ElementaryTypeName","src":"4181:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8626,"nodeType":"ArrayTypeName","src":"4181:9:25","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":8630,"mutability":"mutable","name":"values","nameLocation":"4220:6:25","nodeType":"VariableDeclaration","scope":8647,"src":"4203:23:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":8628,"name":"uint256","nodeType":"ElementaryTypeName","src":"4203:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8629,"nodeType":"ArrayTypeName","src":"4203:9:25","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"4154:73:25"},"returnParameters":{"id":8636,"nodeType":"ParameterList","parameters":[],"src":"4307:0:25"},"scope":8664,"src":"4138:222:25","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[62,607],"body":{"id":8662,"nodeType":"Block","src":"4509:60:25","statements":[{"expression":{"arguments":[{"id":8659,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8649,"src":"4550:11:25","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":8657,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"4526:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_IPDocV5_$8664_$","typeString":"type(contract super IPDocV5)"}},"id":8658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4532:17:25","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":62,"src":"4526:23:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":8660,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4526:36:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":8656,"id":8661,"nodeType":"Return","src":"4519:43:25"}]},"functionSelector":"01ffc9a7","id":8663,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"4375:17:25","nodeType":"FunctionDefinition","overrides":{"id":8653,"nodeType":"OverrideSpecifier","overrides":[{"id":8651,"name":"ERC1155","nameLocations":["4458:7:25"],"nodeType":"IdentifierPath","referencedDeclaration":1432,"src":"4458:7:25"},{"id":8652,"name":"AccessControl","nameLocations":["4467:13:25"],"nodeType":"IdentifierPath","referencedDeclaration":295,"src":"4467:13:25"}],"src":"4449:32:25"},"parameters":{"id":8650,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8649,"mutability":"mutable","name":"interfaceId","nameLocation":"4400:11:25","nodeType":"VariableDeclaration","scope":8663,"src":"4393:18:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":8648,"name":"bytes4","nodeType":"ElementaryTypeName","src":"4393:6:25","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"4392:20:25"},"returnParameters":{"id":8656,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8655,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8663,"src":"4499:4:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8654,"name":"bool","nodeType":"ElementaryTypeName","src":"4499:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4498:6:25"},"scope":8664,"src":"4366:203:25","stateMutability":"view","virtual":false,"visibility":"public"}],"scope":8665,"src":"719:3852:25","usedErrors":[305,308,480,485,490,497,502,507,514,3170,3173],"usedEvents":[317,326,335,1452,1467,1476,1483,3162,3167,8329]}],"src":"81:4491:25"},"id":25}},"contracts":{"@openzeppelin/contracts/access/AccessControl.sol":{"AccessControl":{"abi":[{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46326c0bb1e296b67185e81c918e0b40501b8b6386165855df0a3f3c634b6a80\",\"dweb:/ipfs/QmTwyrDYtsxsk6pymJTK94PnEpzsmkpUxFuzEiakDopy4Z\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xc1c2a7f1563b77050dc6d507db9f4ada5d042c1f6a9ddbffdc49c77cdc0a1606\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd54abb96a6156d9a761f6fdad1d3004bc48d2d4fce47f40a3f91a7ae83fc3a1\",\"dweb:/ipfs/QmUrFSGkTDJ7WaZ6qPVVe3Gn5uN2viPb7x7QQ35UX4DofX\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/access/IAccessControl.sol":{"IAccessControl":{"abi":[{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC-165 detection.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xc1c2a7f1563b77050dc6d507db9f4ada5d042c1f6a9ddbffdc49c77cdc0a1606\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd54abb96a6156d9a761f6fdad1d3004bc48d2d4fce47f40a3f91a7ae83fc3a1\",\"dweb:/ipfs/QmUrFSGkTDJ7WaZ6qPVVe3Gn5uN2viPb7x7QQ35UX4DofX\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"IERC1155Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}"},"IERC20Errors":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}"},"IERC721Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC1155/ERC1155.sol":{"ERC1155":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"uri","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"balanceOf(address,uint256)":"00fdd58e","balanceOfBatch(address[],uint256[])":"4e1273f4","isApprovedForAll(address,address)":"e985e9c5","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"2eb2c2d6","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","uri(uint256)":"0e89341c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the basic standard multi-token. See https://eips.ethereum.org/EIPS/eip-1155 Originally based on code by Enjin: https://github.com/enjin/erc-1155\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"constructor\":{\"details\":\"See {_setURI}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the ERC]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":\"ERC1155\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0x22933f0f4897ff70a991c3baebfbc2574fd052dc4bae7fcafec45b07c1f23dd3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://13674cffad18cec55f013056496d7d2e3a34bd7bdbe23d1ef0c7588088c73367\",\"dweb:/ipfs/QmcBkrwxNvCApG48Gyby2L6qCNtuhaFncGpbJt3zuukTmu\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x68d6fdbeb467192c3627a46aa7bf5cbb73267363b740abc511f521a5a41a446e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ce608c19d5e917c60f9c8aa3e5f0eb05b326280ac0a235e8bb9a848a3a64a91\",\"dweb:/ipfs/QmdLPsWQJj7JvRae8MM13GEo4PBXaEFmD4b4heqcyMJNPG\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x61a23d601c2ab69dd726ac55058604cbda98e1d728ba31a51c379a3f9eeea715\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d8cbb06152d82ebdd5ba1d33454e5759492040f309a82637c7e99c948a04fa20\",\"dweb:/ipfs/QmQQuLr6WSfLu97pMEh6XLefk99TSj9k5Qu1zXGPepwGiK\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0x35d120c427299af1525aaf07955314d9e36a62f14408eb93dec71a2e001f74d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://743e38acf441eece428c008be399c40a3ca5b2d595d58faf656cbdbac1a45374\",\"dweb:/ipfs/QmcWDuWkndox3dxa5P7ZgpKy3iuQKkxBq1cR9hPV1ZzAfa\"]},\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol\":{\"keccak256\":\"0x30afe9013aaeb3ba735284a9310792776f57a3b2db6fc1d99628f2c47287f5cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c675b740746031092efcedb2e18179f05fce8ba482de64e982715e4aa16bc90\",\"dweb:/ipfs/QmVdUD89qYudLc88k5AsuQ6VWyz9SE1c6UXrVK32Yqh1YS\"]},\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0xaf9586854de33dc9d3a7160cad8170fdfb4119d02a44bad90ba16d71d701cc92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c15a02762b0a51d66e36be135c27de656093fc09292fa743df8484b87d4486ea\",\"dweb:/ipfs/QmbEozFrt5XwC9nzDFuXvN1RF3hQVwKYNi8c2R4bFvYJ2X\"]},\"@openzeppelin/contracts/utils/Comparators.sol\":{\"keccak256\":\"0x302eecd8cf323b4690e3494a7d960b3cbce077032ab8ef655b323cdd136cec58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49ba706f1bc476d68fe6c1fad75517acea4e9e275be0989b548e292eb3a3eacd\",\"dweb:/ipfs/QmeBpvcdGWzWMKTQESUCEhHgnEQYYATVwPxLMxa6vMT7jC\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/SlotDerivation.sol\":{\"keccak256\":\"0x8447b57b63810fe2e367c09496a966f143ec0e825d71ddb9fce2506cff84b618\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://996cb48f793bf151555045b37138e36b3cdb31d6bc6552d3149285260be00cfb\",\"dweb:/ipfs/QmcLaTTMNVbkMx58xhkp6GeFt4V3GtSyupZuaKG3vYW2Zc\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC1155/IERC1155.sol":{"IERC1155":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"balanceOf(address,uint256)":"00fdd58e","balanceOfBatch(address[],uint256[])":"4e1273f4","isApprovedForAll(address,address)":"e985e9c5","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"2eb2c2d6","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC-1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[ERC].\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the value of tokens of token type `id` owned by `account`.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments. Requirements: - `ids` and `values` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers a `value` amount of tokens of type `id` from `from` to `to`. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155Received} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `value` amount. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the zero address.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":\"IERC1155\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x68d6fdbeb467192c3627a46aa7bf5cbb73267363b740abc511f521a5a41a446e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ce608c19d5e917c60f9c8aa3e5f0eb05b326280ac0a235e8bb9a848a3a64a91\",\"dweb:/ipfs/QmdLPsWQJj7JvRae8MM13GEo4PBXaEFmD4b4heqcyMJNPG\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol":{"IERC1155Receiver":{"abi":[{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC1155BatchReceived","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC1155Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)":"bc197c81","onERC1155Received(address,address,uint256,uint256,bytes)":"f23a6e61","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface that must be implemented by smart contracts in order to receive ERC-1155 token transfers.\",\"kind\":\"dev\",\"methods\":{\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Handles the receipt of a multiple ERC-1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` (i.e. 0xbc197c81, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"ids\":\"An array containing ids of each token being transferred (order and length must match values array)\",\"operator\":\"The address which initiated the batch transfer (i.e. msg.sender)\",\"values\":\"An array containing amounts of each token being transferred (order and length must match ids array)\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\"}},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"details\":\"Handles the receipt of a single ERC-1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` (i.e. 0xf23a6e61, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"id\":\"The ID of the token being transferred\",\"operator\":\"The address which initiated the transfer (i.e. msg.sender)\",\"value\":\"The amount of tokens being transferred\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":\"IERC1155Receiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x61a23d601c2ab69dd726ac55058604cbda98e1d728ba31a51c379a3f9eeea715\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d8cbb06152d82ebdd5ba1d33454e5759492040f309a82637c7e99c948a04fa20\",\"dweb:/ipfs/QmQQuLr6WSfLu97pMEh6XLefk99TSj9k5Qu1zXGPepwGiK\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol":{"ERC1155Burnable":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"burnBatch","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"uri","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"balanceOf(address,uint256)":"00fdd58e","balanceOfBatch(address[],uint256[])":"4e1273f4","burn(address,uint256,uint256)":"f5298aca","burnBatch(address,uint256[],uint256[])":"6b20c454","isApprovedForAll(address,address)":"e985e9c5","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"2eb2c2d6","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","uri(uint256)":"0e89341c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"burnBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {ERC1155} that allows token holders to destroy both their own tokens and those that they have been approved to use.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the ERC]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":\"ERC1155Burnable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0x22933f0f4897ff70a991c3baebfbc2574fd052dc4bae7fcafec45b07c1f23dd3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://13674cffad18cec55f013056496d7d2e3a34bd7bdbe23d1ef0c7588088c73367\",\"dweb:/ipfs/QmcBkrwxNvCApG48Gyby2L6qCNtuhaFncGpbJt3zuukTmu\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x68d6fdbeb467192c3627a46aa7bf5cbb73267363b740abc511f521a5a41a446e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ce608c19d5e917c60f9c8aa3e5f0eb05b326280ac0a235e8bb9a848a3a64a91\",\"dweb:/ipfs/QmdLPsWQJj7JvRae8MM13GEo4PBXaEFmD4b4heqcyMJNPG\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x61a23d601c2ab69dd726ac55058604cbda98e1d728ba31a51c379a3f9eeea715\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d8cbb06152d82ebdd5ba1d33454e5759492040f309a82637c7e99c948a04fa20\",\"dweb:/ipfs/QmQQuLr6WSfLu97pMEh6XLefk99TSj9k5Qu1zXGPepwGiK\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":{\"keccak256\":\"0xdfab949ba677f4b122d0c14225e6db7ca8a65524e2f00049e57b04f68eceeb87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://25d240211d484954a409a8870c3a971af9e2eb6b6d0ab46b50c193c4a1576006\",\"dweb:/ipfs/QmdzSJoJ6iqoWrGKNeDjV4KVfCqna7Vc7AMoQxpxTdTMpF\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0x35d120c427299af1525aaf07955314d9e36a62f14408eb93dec71a2e001f74d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://743e38acf441eece428c008be399c40a3ca5b2d595d58faf656cbdbac1a45374\",\"dweb:/ipfs/QmcWDuWkndox3dxa5P7ZgpKy3iuQKkxBq1cR9hPV1ZzAfa\"]},\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol\":{\"keccak256\":\"0x30afe9013aaeb3ba735284a9310792776f57a3b2db6fc1d99628f2c47287f5cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c675b740746031092efcedb2e18179f05fce8ba482de64e982715e4aa16bc90\",\"dweb:/ipfs/QmVdUD89qYudLc88k5AsuQ6VWyz9SE1c6UXrVK32Yqh1YS\"]},\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0xaf9586854de33dc9d3a7160cad8170fdfb4119d02a44bad90ba16d71d701cc92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c15a02762b0a51d66e36be135c27de656093fc09292fa743df8484b87d4486ea\",\"dweb:/ipfs/QmbEozFrt5XwC9nzDFuXvN1RF3hQVwKYNi8c2R4bFvYJ2X\"]},\"@openzeppelin/contracts/utils/Comparators.sol\":{\"keccak256\":\"0x302eecd8cf323b4690e3494a7d960b3cbce077032ab8ef655b323cdd136cec58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49ba706f1bc476d68fe6c1fad75517acea4e9e275be0989b548e292eb3a3eacd\",\"dweb:/ipfs/QmeBpvcdGWzWMKTQESUCEhHgnEQYYATVwPxLMxa6vMT7jC\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/SlotDerivation.sol\":{\"keccak256\":\"0x8447b57b63810fe2e367c09496a966f143ec0e825d71ddb9fce2506cff84b618\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://996cb48f793bf151555045b37138e36b3cdb31d6bc6552d3149285260be00cfb\",\"dweb:/ipfs/QmcLaTTMNVbkMx58xhkp6GeFt4V3GtSyupZuaKG3vYW2Zc\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Pausable.sol":{"ERC1155Pausable":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"},{"inputs":[],"name":"EnforcedPause","type":"error"},{"inputs":[],"name":"ExpectedPause","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"uri","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"balanceOf(address,uint256)":"00fdd58e","balanceOfBatch(address[],uint256[])":"4e1273f4","isApprovedForAll(address,address)":"e985e9c5","paused()":"5c975abb","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"2eb2c2d6","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","uri(uint256)":"0e89341c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC-1155 token with pausable token transfers, minting and burning. Useful for scenarios such as preventing trades until the end of an evaluation period, or having an emergency switch for freezing all token transfers in the event of a large bug. IMPORTANT: This contract does not include public pause and unpause functions. In addition to inheriting this contract, you must define both functions, invoking the {Pausable-_pause} and {Pausable-_unpause} internal functions, with appropriate access control, e.g. using {AccessControl} or {Ownable}. Not doing so will make the contract pause mechanism of the contract unreachable, and thus unusable.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}],\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}]},\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the ERC]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Pausable.sol\":\"ERC1155Pausable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0x22933f0f4897ff70a991c3baebfbc2574fd052dc4bae7fcafec45b07c1f23dd3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://13674cffad18cec55f013056496d7d2e3a34bd7bdbe23d1ef0c7588088c73367\",\"dweb:/ipfs/QmcBkrwxNvCApG48Gyby2L6qCNtuhaFncGpbJt3zuukTmu\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x68d6fdbeb467192c3627a46aa7bf5cbb73267363b740abc511f521a5a41a446e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ce608c19d5e917c60f9c8aa3e5f0eb05b326280ac0a235e8bb9a848a3a64a91\",\"dweb:/ipfs/QmdLPsWQJj7JvRae8MM13GEo4PBXaEFmD4b4heqcyMJNPG\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x61a23d601c2ab69dd726ac55058604cbda98e1d728ba31a51c379a3f9eeea715\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d8cbb06152d82ebdd5ba1d33454e5759492040f309a82637c7e99c948a04fa20\",\"dweb:/ipfs/QmQQuLr6WSfLu97pMEh6XLefk99TSj9k5Qu1zXGPepwGiK\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Pausable.sol\":{\"keccak256\":\"0x8caf50b64528a487bc45c6cf89b514adbbdaae20aaf6e98a834c5e74c914c660\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6408411bf7a72026f5fee578ff58f4fb0f6951e6ee7092776b81f563931dd704\",\"dweb:/ipfs/QmeFjtJxSKFRD5LjREUds1bptQzqHs7gwPtrHBdDfzumJC\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0x35d120c427299af1525aaf07955314d9e36a62f14408eb93dec71a2e001f74d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://743e38acf441eece428c008be399c40a3ca5b2d595d58faf656cbdbac1a45374\",\"dweb:/ipfs/QmcWDuWkndox3dxa5P7ZgpKy3iuQKkxBq1cR9hPV1ZzAfa\"]},\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol\":{\"keccak256\":\"0x30afe9013aaeb3ba735284a9310792776f57a3b2db6fc1d99628f2c47287f5cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c675b740746031092efcedb2e18179f05fce8ba482de64e982715e4aa16bc90\",\"dweb:/ipfs/QmVdUD89qYudLc88k5AsuQ6VWyz9SE1c6UXrVK32Yqh1YS\"]},\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0xaf9586854de33dc9d3a7160cad8170fdfb4119d02a44bad90ba16d71d701cc92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c15a02762b0a51d66e36be135c27de656093fc09292fa743df8484b87d4486ea\",\"dweb:/ipfs/QmbEozFrt5XwC9nzDFuXvN1RF3hQVwKYNi8c2R4bFvYJ2X\"]},\"@openzeppelin/contracts/utils/Comparators.sol\":{\"keccak256\":\"0x302eecd8cf323b4690e3494a7d960b3cbce077032ab8ef655b323cdd136cec58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49ba706f1bc476d68fe6c1fad75517acea4e9e275be0989b548e292eb3a3eacd\",\"dweb:/ipfs/QmeBpvcdGWzWMKTQESUCEhHgnEQYYATVwPxLMxa6vMT7jC\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xb2e5f50762c27fb4b123e3619c3c02bdcba5e515309382e5bfb6f7d6486510bd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1a4b83328c98d518a2699c2cbe9e9b055e78aa57fa8639f1b88deb8b3750b5dc\",\"dweb:/ipfs/QmXdcYj5v7zQxXFPULShHkR5p4Wa2zYuupbHnFdV3cHYtc\"]},\"@openzeppelin/contracts/utils/SlotDerivation.sol\":{\"keccak256\":\"0x8447b57b63810fe2e367c09496a966f143ec0e825d71ddb9fce2506cff84b618\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://996cb48f793bf151555045b37138e36b3cdb31d6bc6552d3149285260be00cfb\",\"dweb:/ipfs/QmcLaTTMNVbkMx58xhkp6GeFt4V3GtSyupZuaKG3vYW2Zc\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol":{"ERC1155Supply":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"exists","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"uri","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"balanceOf(address,uint256)":"00fdd58e","balanceOfBatch(address[],uint256[])":"4e1273f4","exists(uint256)":"4f558e79","isApprovedForAll(address,address)":"e985e9c5","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"2eb2c2d6","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","totalSupply()":"18160ddd","totalSupply(uint256)":"bd85b039","uri(uint256)":"0e89341c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of ERC-1155 that adds tracking of total supply per id. Useful for scenarios where Fungible and Non-fungible tokens have to be clearly identified. Note: While a totalSupply of 1 might mean the corresponding is an NFT, there is no guarantees that no other token with the same id are not going to be minted. NOTE: This contract implies a global limit of 2**256 - 1 to the number of tokens that can be minted. CAUTION: This extension should not be added in an upgrade to an already deployed contract.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"exists(uint256)\":{\"details\":\"Indicates whether any token exist with a given id, or not.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"totalSupply()\":{\"details\":\"Total value of tokens.\"},\"totalSupply(uint256)\":{\"details\":\"Total value of tokens in with a given id.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the ERC]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":\"ERC1155Supply\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0x22933f0f4897ff70a991c3baebfbc2574fd052dc4bae7fcafec45b07c1f23dd3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://13674cffad18cec55f013056496d7d2e3a34bd7bdbe23d1ef0c7588088c73367\",\"dweb:/ipfs/QmcBkrwxNvCApG48Gyby2L6qCNtuhaFncGpbJt3zuukTmu\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x68d6fdbeb467192c3627a46aa7bf5cbb73267363b740abc511f521a5a41a446e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ce608c19d5e917c60f9c8aa3e5f0eb05b326280ac0a235e8bb9a848a3a64a91\",\"dweb:/ipfs/QmdLPsWQJj7JvRae8MM13GEo4PBXaEFmD4b4heqcyMJNPG\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x61a23d601c2ab69dd726ac55058604cbda98e1d728ba31a51c379a3f9eeea715\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d8cbb06152d82ebdd5ba1d33454e5759492040f309a82637c7e99c948a04fa20\",\"dweb:/ipfs/QmQQuLr6WSfLu97pMEh6XLefk99TSj9k5Qu1zXGPepwGiK\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":{\"keccak256\":\"0xf1ad6c52c43d20b37c6324a7b7543a408d5cb3e609fa8ea164d29209ac3ca0ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://997802f43f4b5c13814b9f858ff1d97135973119a020f12364502ae712a2aaba\",\"dweb:/ipfs/QmdhpM7YW5sZkiPxxahPbCP3AbUeqvPp4N8xNPFPBW5BnG\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0x35d120c427299af1525aaf07955314d9e36a62f14408eb93dec71a2e001f74d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://743e38acf441eece428c008be399c40a3ca5b2d595d58faf656cbdbac1a45374\",\"dweb:/ipfs/QmcWDuWkndox3dxa5P7ZgpKy3iuQKkxBq1cR9hPV1ZzAfa\"]},\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol\":{\"keccak256\":\"0x30afe9013aaeb3ba735284a9310792776f57a3b2db6fc1d99628f2c47287f5cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c675b740746031092efcedb2e18179f05fce8ba482de64e982715e4aa16bc90\",\"dweb:/ipfs/QmVdUD89qYudLc88k5AsuQ6VWyz9SE1c6UXrVK32Yqh1YS\"]},\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0xaf9586854de33dc9d3a7160cad8170fdfb4119d02a44bad90ba16d71d701cc92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c15a02762b0a51d66e36be135c27de656093fc09292fa743df8484b87d4486ea\",\"dweb:/ipfs/QmbEozFrt5XwC9nzDFuXvN1RF3hQVwKYNi8c2R4bFvYJ2X\"]},\"@openzeppelin/contracts/utils/Comparators.sol\":{\"keccak256\":\"0x302eecd8cf323b4690e3494a7d960b3cbce077032ab8ef655b323cdd136cec58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49ba706f1bc476d68fe6c1fad75517acea4e9e275be0989b548e292eb3a3eacd\",\"dweb:/ipfs/QmeBpvcdGWzWMKTQESUCEhHgnEQYYATVwPxLMxa6vMT7jC\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/SlotDerivation.sol\":{\"keccak256\":\"0x8447b57b63810fe2e367c09496a966f143ec0e825d71ddb9fce2506cff84b618\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://996cb48f793bf151555045b37138e36b3cdb31d6bc6552d3149285260be00cfb\",\"dweb:/ipfs/QmcLaTTMNVbkMx58xhkp6GeFt4V3GtSyupZuaKG3vYW2Zc\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155URIStorage.sol":{"ERC1155URIStorage":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"uri","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"balanceOf(address,uint256)":"00fdd58e","balanceOfBatch(address[],uint256[])":"4e1273f4","isApprovedForAll(address,address)":"e985e9c5","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"2eb2c2d6","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","uri(uint256)":"0e89341c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC-1155 token with storage based token URI management. Inspired by the {ERC721URIStorage} extension\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the concatenation of the `_baseURI` and the token-specific uri if the latter is set This enables the following behaviors: - if `_tokenURIs[tokenId]` is set, then the result is the concatenation   of `_baseURI` and `_tokenURIs[tokenId]` (keep in mind that `_baseURI`   is empty per default); - if `_tokenURIs[tokenId]` is NOT set then we fallback to `super.uri()`   which in most cases will contain `ERC1155._uri`; - if `_tokenURIs[tokenId]` is NOT set, and if the parents do not have a   uri value set, then the result is empty.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155URIStorage.sol\":\"ERC1155URIStorage\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0x22933f0f4897ff70a991c3baebfbc2574fd052dc4bae7fcafec45b07c1f23dd3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://13674cffad18cec55f013056496d7d2e3a34bd7bdbe23d1ef0c7588088c73367\",\"dweb:/ipfs/QmcBkrwxNvCApG48Gyby2L6qCNtuhaFncGpbJt3zuukTmu\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x68d6fdbeb467192c3627a46aa7bf5cbb73267363b740abc511f521a5a41a446e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ce608c19d5e917c60f9c8aa3e5f0eb05b326280ac0a235e8bb9a848a3a64a91\",\"dweb:/ipfs/QmdLPsWQJj7JvRae8MM13GEo4PBXaEFmD4b4heqcyMJNPG\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x61a23d601c2ab69dd726ac55058604cbda98e1d728ba31a51c379a3f9eeea715\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d8cbb06152d82ebdd5ba1d33454e5759492040f309a82637c7e99c948a04fa20\",\"dweb:/ipfs/QmQQuLr6WSfLu97pMEh6XLefk99TSj9k5Qu1zXGPepwGiK\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155URIStorage.sol\":{\"keccak256\":\"0x80b9723f553df46ffdbcab394b08623ab4a5a6bcb2112c1af8e2ec6bf7bb57d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3baec0f4007a80970e3974e60465e106a0b7391cb83a95c9c39734b006405921\",\"dweb:/ipfs/QmUVSU1yPHD5UmHZQ6k9Vr3sKU2xXM6LE6zwJgN15PKgUw\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0x35d120c427299af1525aaf07955314d9e36a62f14408eb93dec71a2e001f74d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://743e38acf441eece428c008be399c40a3ca5b2d595d58faf656cbdbac1a45374\",\"dweb:/ipfs/QmcWDuWkndox3dxa5P7ZgpKy3iuQKkxBq1cR9hPV1ZzAfa\"]},\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol\":{\"keccak256\":\"0x30afe9013aaeb3ba735284a9310792776f57a3b2db6fc1d99628f2c47287f5cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c675b740746031092efcedb2e18179f05fce8ba482de64e982715e4aa16bc90\",\"dweb:/ipfs/QmVdUD89qYudLc88k5AsuQ6VWyz9SE1c6UXrVK32Yqh1YS\"]},\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0xaf9586854de33dc9d3a7160cad8170fdfb4119d02a44bad90ba16d71d701cc92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c15a02762b0a51d66e36be135c27de656093fc09292fa743df8484b87d4486ea\",\"dweb:/ipfs/QmbEozFrt5XwC9nzDFuXvN1RF3hQVwKYNi8c2R4bFvYJ2X\"]},\"@openzeppelin/contracts/utils/Comparators.sol\":{\"keccak256\":\"0x302eecd8cf323b4690e3494a7d960b3cbce077032ab8ef655b323cdd136cec58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49ba706f1bc476d68fe6c1fad75517acea4e9e275be0989b548e292eb3a3eacd\",\"dweb:/ipfs/QmeBpvcdGWzWMKTQESUCEhHgnEQYYATVwPxLMxa6vMT7jC\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/SlotDerivation.sol\":{\"keccak256\":\"0x8447b57b63810fe2e367c09496a966f143ec0e825d71ddb9fce2506cff84b618\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://996cb48f793bf151555045b37138e36b3cdb31d6bc6552d3149285260be00cfb\",\"dweb:/ipfs/QmcLaTTMNVbkMx58xhkp6GeFt4V3GtSyupZuaKG3vYW2Zc\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x44f87e91783e88415bde66f1a63f6c7f0076f2d511548820407d5c95643ac56c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://13a51bc2b23827744dcf5bad10c69e72528cf015a6fe48c93632cdb2c0eb1251\",\"dweb:/ipfs/QmZwPA47Yqgje1qtkdEFEja8ntTahMStYzKf5q3JRnaR7d\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol":{"IERC1155MetadataURI":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"uri","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"balanceOf(address,uint256)":"00fdd58e","balanceOfBatch(address[],uint256[])":"4e1273f4","isApprovedForAll(address,address)":"e985e9c5","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"2eb2c2d6","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","uri(uint256)":"0e89341c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the optional ERC1155MetadataExtension interface, as defined in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[ERC].\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the value of tokens of token type `id` owned by `account`.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments. Requirements: - `ids` and `values` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers a `value` amount of tokens of type `id` from `from` to `to`. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155Received} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `value` amount. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the zero address.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"uri(uint256)\":{\"details\":\"Returns the URI for token type `id`. If the `\\\\{id\\\\}` substring is present in the URI, it must be replaced by clients with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":\"IERC1155MetadataURI\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x68d6fdbeb467192c3627a46aa7bf5cbb73267363b740abc511f521a5a41a446e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ce608c19d5e917c60f9c8aa3e5f0eb05b326280ac0a235e8bb9a848a3a64a91\",\"dweb:/ipfs/QmdLPsWQJj7JvRae8MM13GEo4PBXaEFmD4b4heqcyMJNPG\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0x35d120c427299af1525aaf07955314d9e36a62f14408eb93dec71a2e001f74d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://743e38acf441eece428c008be399c40a3ca5b2d595d58faf656cbdbac1a45374\",\"dweb:/ipfs/QmcWDuWkndox3dxa5P7ZgpKy3iuQKkxBq1cR9hPV1ZzAfa\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol":{"ERC1155Utils":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205d9410df5879a48816a2df45866469d4d5cd649c55e06dfc855fde9640d5c4ad64736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5D SWAP5 LT 0xDF PC PUSH26 0xA48816A2DF45866469D4D5CD649C55E06DFC855FDE9640D5C4AD PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"439:3094:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205d9410df5879a48816a2df45866469d4d5cd649c55e06dfc855fde9640d5c4ad64736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5D SWAP5 LT 0xDF PC PUSH26 0xA48816A2DF45866469D4D5CD649C55E06DFC855FDE9640D5C4AD PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"439:3094:11:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library that provide common ERC-1155 utility functions. See https://eips.ethereum.org/EIPS/eip-1155[ERC-1155]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol\":\"ERC1155Utils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x61a23d601c2ab69dd726ac55058604cbda98e1d728ba31a51c379a3f9eeea715\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d8cbb06152d82ebdd5ba1d33454e5759492040f309a82637c7e99c948a04fa20\",\"dweb:/ipfs/QmQQuLr6WSfLu97pMEh6XLefk99TSj9k5Qu1zXGPepwGiK\"]},\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol\":{\"keccak256\":\"0x30afe9013aaeb3ba735284a9310792776f57a3b2db6fc1d99628f2c47287f5cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c675b740746031092efcedb2e18179f05fce8ba482de64e982715e4aa16bc90\",\"dweb:/ipfs/QmVdUD89qYudLc88k5AsuQ6VWyz9SE1c6UXrVK32Yqh1YS\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Arrays.sol":{"Arrays":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122020db2b4cf082e50e6a6d6d0439996a357ca3ed00a19bdfa72a1e023c7aae1a2764736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 KECCAK256 0xDB 0x2B 0x4C CREATE DUP3 0xE5 0xE PUSH11 0x6D6D0439996A357CA3ED00 LOG1 SWAP12 0xDF 0xA7 0x2A 0x1E MUL EXTCODECOPY PUSH27 0xAE1A2764736F6C6343000814003300000000000000000000000000 ","sourceMap":"459:17881:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122020db2b4cf082e50e6a6d6d0439996a357ca3ed00a19bdfa72a1e023c7aae1a2764736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 KECCAK256 0xDB 0x2B 0x4C CREATE DUP3 0xE5 0xE PUSH11 0x6D6D0439996A357CA3ED00 LOG1 SWAP12 0xDF 0xA7 0x2A 0x1E MUL EXTCODECOPY PUSH27 0xAE1A2764736F6C6343000814003300000000000000000000000000 ","sourceMap":"459:17881:12:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to array types.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Arrays.sol\":\"Arrays\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0xaf9586854de33dc9d3a7160cad8170fdfb4119d02a44bad90ba16d71d701cc92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c15a02762b0a51d66e36be135c27de656093fc09292fa743df8484b87d4486ea\",\"dweb:/ipfs/QmbEozFrt5XwC9nzDFuXvN1RF3hQVwKYNi8c2R4bFvYJ2X\"]},\"@openzeppelin/contracts/utils/Comparators.sol\":{\"keccak256\":\"0x302eecd8cf323b4690e3494a7d960b3cbce077032ab8ef655b323cdd136cec58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49ba706f1bc476d68fe6c1fad75517acea4e9e275be0989b548e292eb3a3eacd\",\"dweb:/ipfs/QmeBpvcdGWzWMKTQESUCEhHgnEQYYATVwPxLMxa6vMT7jC\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/SlotDerivation.sol\":{\"keccak256\":\"0x8447b57b63810fe2e367c09496a966f143ec0e825d71ddb9fce2506cff84b618\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://996cb48f793bf151555045b37138e36b3cdb31d6bc6552d3149285260be00cfb\",\"dweb:/ipfs/QmcLaTTMNVbkMx58xhkp6GeFt4V3GtSyupZuaKG3vYW2Zc\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Comparators.sol":{"Comparators":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220aa83c19260ff3c8ce9c1ecc0bd2652fdb9549eb4967fb3a44ca1b2cf5d4a704d64736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAA DUP4 0xC1 SWAP3 PUSH1 0xFF EXTCODECOPY DUP13 0xE9 0xC1 0xEC 0xC0 0xBD 0x26 MSTORE REVERT 0xB9 SLOAD SWAP15 0xB4 SWAP7 PUSH32 0xB3A44CA1B2CF5D4A704D64736F6C634300081400330000000000000000000000 ","sourceMap":"224:218:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220aa83c19260ff3c8ce9c1ecc0bd2652fdb9549eb4967fb3a44ca1b2cf5d4a704d64736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAA DUP4 0xC1 SWAP3 PUSH1 0xFF EXTCODECOPY DUP13 0xE9 0xC1 0xEC 0xC0 0xBD 0x26 MSTORE REVERT 0xB9 SLOAD SWAP15 0xB4 SWAP7 PUSH32 0xB3A44CA1B2CF5D4A704D64736F6C634300081400330000000000000000000000 ","sourceMap":"224:218:13:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides a set of functions to compare values. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Comparators.sol\":\"Comparators\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Comparators.sol\":{\"keccak256\":\"0x302eecd8cf323b4690e3494a7d960b3cbce077032ab8ef655b323cdd136cec58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49ba706f1bc476d68fe6c1fad75517acea4e9e275be0989b548e292eb3a3eacd\",\"dweb:/ipfs/QmeBpvcdGWzWMKTQESUCEhHgnEQYYATVwPxLMxa6vMT7jC\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Panic.sol":{"Panic":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202672d2a23e458693f6ba1440f70db5954b011cca38f915e3138b6836c3d4ea7464736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x26 PUSH19 0xD2A23E458693F6BA1440F70DB5954B011CCA38 0xF9 ISZERO 0xE3 SGT DUP12 PUSH9 0x36C3D4EA7464736F6C PUSH4 0x43000814 STOP CALLER ","sourceMap":"657:1315:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202672d2a23e458693f6ba1440f70db5954b011cca38f915e3138b6836c3d4ea7464736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x26 PUSH19 0xD2A23E458693F6BA1440F70DB5954B011CCA38 0xF9 ISZERO 0xE3 SGT DUP12 PUSH9 0x36C3D4EA7464736F6C PUSH4 0x43000814 STOP CALLER ","sourceMap":"657:1315:15:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Helper library for emitting standardized panic codes. ```solidity contract Example {      using Panic for uint256;      // Use any of the declared internal constants      function foo() { Panic.GENERIC.panic(); }      // Alternatively      function foo() { Panic.panic(Panic.GENERIC); } } ``` Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ARRAY_OUT_OF_BOUNDS\":{\"details\":\"array out of bounds access\"},\"ASSERT\":{\"details\":\"used by the assert() builtin\"},\"DIVISION_BY_ZERO\":{\"details\":\"division or modulo by zero\"},\"EMPTY_ARRAY_POP\":{\"details\":\"empty array pop\"},\"ENUM_CONVERSION_ERROR\":{\"details\":\"enum conversion error\"},\"GENERIC\":{\"details\":\"generic / unspecified error\"},\"INVALID_INTERNAL_FUNCTION\":{\"details\":\"calling invalid internal function\"},\"RESOURCE_ERROR\":{\"details\":\"resource error (too large allocation or too large array)\"},\"STORAGE_ENCODING_ERROR\":{\"details\":\"invalid encoding in storage\"},\"UNDER_OVERFLOW\":{\"details\":\"arithmetic underflow or overflow\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Panic.sol\":\"Panic\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Pausable.sol":{"Pausable":{"abi":[{"inputs":[],"name":"EnforcedPause","type":"error"},{"inputs":[],"name":"ExpectedPause","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"paused()":"5c975abb"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"errors\":{\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}]},\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract in unpaused state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xb2e5f50762c27fb4b123e3619c3c02bdcba5e515309382e5bfb6f7d6486510bd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1a4b83328c98d518a2699c2cbe9e9b055e78aa57fa8639f1b88deb8b3750b5dc\",\"dweb:/ipfs/QmXdcYj5v7zQxXFPULShHkR5p4Wa2zYuupbHnFdV3cHYtc\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/SlotDerivation.sol":{"SlotDerivation":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122010a81c65bf6f36d60e6bfd6deddd15b713a1d99f89d7c68d50fd3729ae57ee5864736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LT 0xA8 SHR PUSH6 0xBF6F36D60E6B REVERT PUSH14 0xEDDD15B713A1D99F89D7C68D50FD CALLDATACOPY 0x29 0xAE JUMPI 0xEE PC PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"1598:3723:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122010a81c65bf6f36d60e6bfd6deddd15b713a1d99f89d7c68d50fd3729ae57ee5864736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LT 0xA8 SHR PUSH6 0xBF6F36D60E6B REVERT PUSH14 0xEDDD15B713A1D99F89D7C68D50FD CALLDATACOPY 0x29 0xAE JUMPI 0xEE PC PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"1598:3723:17:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for computing storage (and transient storage) locations from namespaces and deriving slots corresponding to standard patterns. The derivation method for array and mapping matches the storage layout used by the solidity language / compiler. See https://docs.soliditylang.org/en/v0.8.20/internals/layout_in_storage.html#mappings-and-dynamic-arrays[Solidity docs for mappings and dynamic arrays.]. Example usage: ```solidity contract Example {     // Add the library methods     using StorageSlot for bytes32;     using SlotDerivation for bytes32;     // Declare a namespace     string private constant _NAMESPACE = \\\"<namespace>\\\" // eg. OpenZeppelin.Slot     function setValueInNamespace(uint256 key, address newValue) internal {         _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value = newValue;     }     function getValueInNamespace(uint256 key) internal view returns (address) {         return _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value;     } } ``` TIP: Consider using this library along with {StorageSlot}. NOTE: This library provides a way to manipulate storage locations in a non-standard way. Tooling for checking upgrade safety will ignore the slots accessed through this library. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/SlotDerivation.sol\":\"SlotDerivation\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/SlotDerivation.sol\":{\"keccak256\":\"0x8447b57b63810fe2e367c09496a966f143ec0e825d71ddb9fce2506cff84b618\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://996cb48f793bf151555045b37138e36b3cdb31d6bc6552d3149285260be00cfb\",\"dweb:/ipfs/QmcLaTTMNVbkMx58xhkp6GeFt4V3GtSyupZuaKG3vYW2Zc\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/StorageSlot.sol":{"StorageSlot":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e720a9c2a57f6209f7f2521024ac618e6a0af2a0d030646748b683fc73f60af064736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE7 KECCAK256 0xA9 0xC2 0xA5 PUSH32 0x6209F7F2521024AC618E6A0AF2A0D030646748B683FC73F60AF064736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"1407:2774:18:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e720a9c2a57f6209f7f2521024ac618e6a0af2a0d030646748b683fc73f60af064736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE7 KECCAK256 0xA9 0xC2 0xA5 PUSH32 0x6209F7F2521024AC618E6A0AF2A0D030646748B683FC73F60AF064736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"1407:2774:18:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC-1967 implementation slot: ```solidity contract ERC1967 {     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` TIP: Consider using this library along with {SlotDerivation}.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"length","type":"uint256"}],"name":"StringsInsufficientHexLength","type":"error"},{"inputs":[],"name":"StringsInvalidAddressFormat","type":"error"},{"inputs":[],"name":"StringsInvalidChar","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220324c39d5297afb136187e0a02fa806c282a2d4d9d4ba345dc57f45522daa24fb64736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ORIGIN 0x4C CODECOPY 0xD5 0x29 PUSH27 0xFB136187E0A02FA806C282A2D4D9D4BA345DC57F45522DAA24FB64 PUSH20 0x6F6C634300081400330000000000000000000000 ","sourceMap":"297:16541:19:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220324c39d5297afb136187e0a02fa806c282a2d4d9d4ba345dc57f45522daa24fb64736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ORIGIN 0x4C CODECOPY 0xD5 0x29 PUSH27 0xFB136187E0A02FA806C282A2D4D9D4BA345DC57F45522DAA24FB64 PUSH20 0x6F6C634300081400330000000000000000000000 ","sourceMap":"297:16541:19:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StringsInvalidAddressFormat\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StringsInvalidChar\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}],\"StringsInvalidAddressFormat()\":[{\"details\":\"The string being parsed is not a properly formatted address.\"}],\"StringsInvalidChar()\":[{\"details\":\"The string being parsed contains characters that are not in scope of the given base.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x44f87e91783e88415bde66f1a63f6c7f0076f2d511548820407d5c95643ac56c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://13a51bc2b23827744dcf5bad10c69e72528cf015a6fe48c93632cdb2c0eb1251\",\"dweb:/ipfs/QmZwPA47Yqgje1qtkdEFEja8ntTahMStYzKf5q3JRnaR7d\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122077b13a6b811363169a34dc3026c435f66e1a245ec08d364ff325e78b6f413bd064736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH24 0xB13A6B811363169A34DC3026C435F66E1A245EC08D364FF3 0x25 0xE7 DUP12 PUSH16 0x413BD064736F6C634300081400330000 ","sourceMap":"281:28026:22:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122077b13a6b811363169a34dc3026c435f66e1a245ec08d364ff325e78b6f413bd064736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH24 0xB13A6B811363169A34DC3026C435F66E1A245EC08D364FF3 0x25 0xE7 DUP12 PUSH16 0x413BD064736F6C634300081400330000 ","sourceMap":"281:28026:22:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"SafeCast":{"abi":[{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntDowncast","type":"error"},{"inputs":[{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntToUint","type":"error"},{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintDowncast","type":"error"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintToInt","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220316339f60b3fd1858de7f836dab11b96a56ba64a0fc65a8a88172d93a655ae7464736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BALANCE PUSH4 0x39F60B3F 0xD1 DUP6 DUP14 0xE7 0xF8 CALLDATASIZE 0xDA 0xB1 SHL SWAP7 0xA5 PUSH12 0xA64A0FC65A8A88172D93A655 0xAE PUSH21 0x64736F6C6343000814003300000000000000000000 ","sourceMap":"769:34173:23:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220316339f60b3fd1858de7f836dab11b96a56ba64a0fc65a8a88172d93a655ae7464736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BALANCE PUSH4 0x39F60B3F 0xD1 DUP6 DUP14 0xE7 0xF8 CALLDATASIZE 0xDA 0xB1 SHL SWAP7 0xA5 PUSH12 0xA64A0FC65A8A88172D93A655 0xAE PUSH21 0x64736F6C6343000814003300000000000000000000 ","sourceMap":"769:34173:23:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntToUint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintToInt\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"errors\":{\"SafeCastOverflowedIntDowncast(uint8,int256)\":[{\"details\":\"Value doesn't fit in an int of `bits` size.\"}],\"SafeCastOverflowedIntToUint(int256)\":[{\"details\":\"An int value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintToInt(uint256)\":[{\"details\":\"An uint value doesn't fit in an int of `bits` size.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220473cbf930ed596e4ec76a1dda41503ab8a3aef35c98db76f2bcec0ef4066bcb664736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFBALANCE EXTCODECOPY 0xBF SWAP4 0xE 0xD5 SWAP7 0xE4 0xEC PUSH23 0xA1DDA41503AB8A3AEF35C98DB76F2BCEC0EF4066BCB664 PUSH20 0x6F6C634300081400330000000000000000000000 ","sourceMap":"258:2354:24:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220473cbf930ed596e4ec76a1dda41503ab8a3aef35c98db76f2bcec0ef4066bcb664736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFBALANCE EXTCODECOPY 0xBF SWAP4 0xE 0xD5 SWAP7 0xE4 0xEC PUSH23 0xA1DDA41503AB8A3AEF35C98DB76F2BCEC0EF4066BCB664 PUSH20 0x6F6C634300081400330000000000000000000000 ","sourceMap":"258:2354:24:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"contracts/IPDocV5.sol":{"IPDocV5":{"abi":[{"inputs":[{"internalType":"address","name":"defaultAdmin","type":"address"},{"internalType":"address","name":"pauser","type":"address"},{"internalType":"address","name":"minter","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"},{"inputs":[],"name":"EnforcedPause","type":"error"},{"inputs":[],"name":"ExpectedPause","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"externalId","type":"bytes32"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"IDCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MINTER_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"PAUSER_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"URI_SETTER_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"burnBatch","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"externalId","type":"bytes32"}],"name":"createId","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32[]","name":"externalIds","type":"bytes32[]"}],"name":"createIds","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"exists","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getExternalId","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"externalId","type":"bytes32"}],"name":"getId","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"mintBatch","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"pause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"baseURI","type":"string"}],"name":"setBaseURI","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"string","name":"tokenURI","type":"string"}],"name":"setTokenURI","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"newuri","type":"string"}],"name":"setURI","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"unpause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"uri","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_3182":{"entryPoint":null,"id":3182,"parameterSlots":0,"returnSlots":0},"@_576":{"entryPoint":null,"id":576,"parameterSlots":1,"returnSlots":0},"@_8496":{"entryPoint":null,"id":8496,"parameterSlots":3,"returnSlots":0},"@_grantRole_256":{"entryPoint":397,"id":256,"parameterSlots":2,"returnSlots":1},"@_msgSender_3078":{"entryPoint":764,"id":3078,"parameterSlots":0,"returnSlots":1},"@_setURI_1193":{"entryPoint":376,"id":1193,"parameterSlots":1,"returnSlots":0},"@hasRole_80":{"entryPoint":657,"id":80,"parameterSlots":2,"returnSlots":1},"abi_decode_t_address_fromMemory":{"entryPoint":1720,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_addresst_address_fromMemory":{"entryPoint":1743,"id":null,"parameterSlots":2,"returnSlots":3},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":930,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":772,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":1251,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_address":{"entryPoint":1674,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":1642,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":1066,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":1212,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_uint256_to_t_uint256":{"entryPoint":1086,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":1406,"id":null,"parameterSlots":2,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":951,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":877,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":1376,"id":null,"parameterSlots":2,"returnSlots":1},"identity":{"entryPoint":1076,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":1344,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x22":{"entryPoint":830,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":783,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":1126,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":1637,"id":null,"parameterSlots":0,"returnSlots":0},"shift_left_dynamic":{"entryPoint":967,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":1331,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":1184,"id":null,"parameterSlots":2,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":980,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":1136,"id":null,"parameterSlots":3,"returnSlots":0},"validator_revert_t_address":{"entryPoint":1694,"id":null,"parameterSlots":1,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":1179,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:6738:26","statements":[{"body":{"nodeType":"YulBlock","src":"66:40:26","statements":[{"nodeType":"YulAssignment","src":"77:22:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"93:5:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"87:5:26"},"nodeType":"YulFunctionCall","src":"87:12:26"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"77:6:26"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"49:5:26","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"59:6:26","type":""}],"src":"7:99:26"},{"body":{"nodeType":"YulBlock","src":"140:152:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"157:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"160:77:26","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"150:6:26"},"nodeType":"YulFunctionCall","src":"150:88:26"},"nodeType":"YulExpressionStatement","src":"150:88:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"254:1:26","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"257:4:26","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"247:6:26"},"nodeType":"YulFunctionCall","src":"247:15:26"},"nodeType":"YulExpressionStatement","src":"247:15:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"278:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"281:4:26","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"271:6:26"},"nodeType":"YulFunctionCall","src":"271:15:26"},"nodeType":"YulExpressionStatement","src":"271:15:26"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"112:180:26"},{"body":{"nodeType":"YulBlock","src":"326:152:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"343:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"346:77:26","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"336:6:26"},"nodeType":"YulFunctionCall","src":"336:88:26"},"nodeType":"YulExpressionStatement","src":"336:88:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"440:1:26","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"443:4:26","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"433:6:26"},"nodeType":"YulFunctionCall","src":"433:15:26"},"nodeType":"YulExpressionStatement","src":"433:15:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"464:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"467:4:26","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"457:6:26"},"nodeType":"YulFunctionCall","src":"457:15:26"},"nodeType":"YulExpressionStatement","src":"457:15:26"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"298:180:26"},{"body":{"nodeType":"YulBlock","src":"535:269:26","statements":[{"nodeType":"YulAssignment","src":"545:22:26","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"559:4:26"},{"kind":"number","nodeType":"YulLiteral","src":"565:1:26","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"555:3:26"},"nodeType":"YulFunctionCall","src":"555:12:26"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"545:6:26"}]},{"nodeType":"YulVariableDeclaration","src":"576:38:26","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"606:4:26"},{"kind":"number","nodeType":"YulLiteral","src":"612:1:26","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"602:3:26"},"nodeType":"YulFunctionCall","src":"602:12:26"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"580:18:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"653:51:26","statements":[{"nodeType":"YulAssignment","src":"667:27:26","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"681:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"689:4:26","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"677:3:26"},"nodeType":"YulFunctionCall","src":"677:17:26"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"667:6:26"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"633:18:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"626:6:26"},"nodeType":"YulFunctionCall","src":"626:26:26"},"nodeType":"YulIf","src":"623:81:26"},{"body":{"nodeType":"YulBlock","src":"756:42:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"770:16:26"},"nodeType":"YulFunctionCall","src":"770:18:26"},"nodeType":"YulExpressionStatement","src":"770:18:26"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"720:18:26"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"743:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"751:2:26","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"740:2:26"},"nodeType":"YulFunctionCall","src":"740:14:26"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"717:2:26"},"nodeType":"YulFunctionCall","src":"717:38:26"},"nodeType":"YulIf","src":"714:84:26"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"519:4:26","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"528:6:26","type":""}],"src":"484:320:26"},{"body":{"nodeType":"YulBlock","src":"864:87:26","statements":[{"nodeType":"YulAssignment","src":"874:11:26","value":{"name":"ptr","nodeType":"YulIdentifier","src":"882:3:26"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"874:4:26"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"902:1:26","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"905:3:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"895:6:26"},"nodeType":"YulFunctionCall","src":"895:14:26"},"nodeType":"YulExpressionStatement","src":"895:14:26"},{"nodeType":"YulAssignment","src":"918:26:26","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"936:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"939:4:26","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"926:9:26"},"nodeType":"YulFunctionCall","src":"926:18:26"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"918:4:26"}]}]},"name":"array_dataslot_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"851:3:26","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"859:4:26","type":""}],"src":"810:141:26"},{"body":{"nodeType":"YulBlock","src":"1001:49:26","statements":[{"nodeType":"YulAssignment","src":"1011:33:26","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1029:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"1036:2:26","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1025:3:26"},"nodeType":"YulFunctionCall","src":"1025:14:26"},{"kind":"number","nodeType":"YulLiteral","src":"1041:2:26","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"1021:3:26"},"nodeType":"YulFunctionCall","src":"1021:23:26"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"1011:6:26"}]}]},"name":"divide_by_32_ceil","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"984:5:26","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"994:6:26","type":""}],"src":"957:93:26"},{"body":{"nodeType":"YulBlock","src":"1109:54:26","statements":[{"nodeType":"YulAssignment","src":"1119:37:26","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"1144:4:26"},{"name":"value","nodeType":"YulIdentifier","src":"1150:5:26"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1140:3:26"},"nodeType":"YulFunctionCall","src":"1140:16:26"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"1119:8:26"}]}]},"name":"shift_left_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"1084:4:26","type":""},{"name":"value","nodeType":"YulTypedName","src":"1090:5:26","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"1100:8:26","type":""}],"src":"1056:107:26"},{"body":{"nodeType":"YulBlock","src":"1245:317:26","statements":[{"nodeType":"YulVariableDeclaration","src":"1255:35:26","value":{"arguments":[{"name":"shiftBytes","nodeType":"YulIdentifier","src":"1276:10:26"},{"kind":"number","nodeType":"YulLiteral","src":"1288:1:26","type":"","value":"8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"1272:3:26"},"nodeType":"YulFunctionCall","src":"1272:18:26"},"variables":[{"name":"shiftBits","nodeType":"YulTypedName","src":"1259:9:26","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1299:109:26","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"1330:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"1341:66:26","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"1311:18:26"},"nodeType":"YulFunctionCall","src":"1311:97:26"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"1303:4:26","type":""}]},{"nodeType":"YulAssignment","src":"1417:51:26","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"1448:9:26"},{"name":"toInsert","nodeType":"YulIdentifier","src":"1459:8:26"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"1429:18:26"},"nodeType":"YulFunctionCall","src":"1429:39:26"},"variableNames":[{"name":"toInsert","nodeType":"YulIdentifier","src":"1417:8:26"}]},{"nodeType":"YulAssignment","src":"1477:30:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1490:5:26"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"1501:4:26"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1497:3:26"},"nodeType":"YulFunctionCall","src":"1497:9:26"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1486:3:26"},"nodeType":"YulFunctionCall","src":"1486:21:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1477:5:26"}]},{"nodeType":"YulAssignment","src":"1516:40:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1529:5:26"},{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"1540:8:26"},{"name":"mask","nodeType":"YulIdentifier","src":"1550:4:26"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1536:3:26"},"nodeType":"YulFunctionCall","src":"1536:19:26"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1526:2:26"},"nodeType":"YulFunctionCall","src":"1526:30:26"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"1516:6:26"}]}]},"name":"update_byte_slice_dynamic32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1206:5:26","type":""},{"name":"shiftBytes","nodeType":"YulTypedName","src":"1213:10:26","type":""},{"name":"toInsert","nodeType":"YulTypedName","src":"1225:8:26","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"1238:6:26","type":""}],"src":"1169:393:26"},{"body":{"nodeType":"YulBlock","src":"1613:32:26","statements":[{"nodeType":"YulAssignment","src":"1623:16:26","value":{"name":"value","nodeType":"YulIdentifier","src":"1634:5:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1623:7:26"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1595:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1605:7:26","type":""}],"src":"1568:77:26"},{"body":{"nodeType":"YulBlock","src":"1683:28:26","statements":[{"nodeType":"YulAssignment","src":"1693:12:26","value":{"name":"value","nodeType":"YulIdentifier","src":"1700:5:26"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"1693:3:26"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1669:5:26","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"1679:3:26","type":""}],"src":"1651:60:26"},{"body":{"nodeType":"YulBlock","src":"1777:82:26","statements":[{"nodeType":"YulAssignment","src":"1787:66:26","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1845:5:26"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"1827:17:26"},"nodeType":"YulFunctionCall","src":"1827:24:26"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"1818:8:26"},"nodeType":"YulFunctionCall","src":"1818:34:26"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"1800:17:26"},"nodeType":"YulFunctionCall","src":"1800:53:26"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"1787:9:26"}]}]},"name":"convert_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1757:5:26","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"1767:9:26","type":""}],"src":"1717:142:26"},{"body":{"nodeType":"YulBlock","src":"1912:28:26","statements":[{"nodeType":"YulAssignment","src":"1922:12:26","value":{"name":"value","nodeType":"YulIdentifier","src":"1929:5:26"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"1922:3:26"}]}]},"name":"prepare_store_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1898:5:26","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"1908:3:26","type":""}],"src":"1865:75:26"},{"body":{"nodeType":"YulBlock","src":"2022:193:26","statements":[{"nodeType":"YulVariableDeclaration","src":"2032:63:26","value":{"arguments":[{"name":"value_0","nodeType":"YulIdentifier","src":"2087:7:26"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"2056:30:26"},"nodeType":"YulFunctionCall","src":"2056:39:26"},"variables":[{"name":"convertedValue_0","nodeType":"YulTypedName","src":"2036:16:26","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2111:4:26"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2151:4:26"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"2145:5:26"},"nodeType":"YulFunctionCall","src":"2145:11:26"},{"name":"offset","nodeType":"YulIdentifier","src":"2158:6:26"},{"arguments":[{"name":"convertedValue_0","nodeType":"YulIdentifier","src":"2190:16:26"}],"functionName":{"name":"prepare_store_t_uint256","nodeType":"YulIdentifier","src":"2166:23:26"},"nodeType":"YulFunctionCall","src":"2166:41:26"}],"functionName":{"name":"update_byte_slice_dynamic32","nodeType":"YulIdentifier","src":"2117:27:26"},"nodeType":"YulFunctionCall","src":"2117:91:26"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2104:6:26"},"nodeType":"YulFunctionCall","src":"2104:105:26"},"nodeType":"YulExpressionStatement","src":"2104:105:26"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"1999:4:26","type":""},{"name":"offset","nodeType":"YulTypedName","src":"2005:6:26","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"2013:7:26","type":""}],"src":"1946:269:26"},{"body":{"nodeType":"YulBlock","src":"2270:24:26","statements":[{"nodeType":"YulAssignment","src":"2280:8:26","value":{"kind":"number","nodeType":"YulLiteral","src":"2287:1:26","type":"","value":"0"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"2280:3:26"}]}]},"name":"zero_value_for_split_t_uint256","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"2266:3:26","type":""}],"src":"2221:73:26"},{"body":{"nodeType":"YulBlock","src":"2353:136:26","statements":[{"nodeType":"YulVariableDeclaration","src":"2363:46:26","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nodeType":"YulIdentifier","src":"2377:30:26"},"nodeType":"YulFunctionCall","src":"2377:32:26"},"variables":[{"name":"zero_0","nodeType":"YulTypedName","src":"2367:6:26","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2462:4:26"},{"name":"offset","nodeType":"YulIdentifier","src":"2468:6:26"},{"name":"zero_0","nodeType":"YulIdentifier","src":"2476:6:26"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"2418:43:26"},"nodeType":"YulFunctionCall","src":"2418:65:26"},"nodeType":"YulExpressionStatement","src":"2418:65:26"}]},"name":"storage_set_to_zero_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"2339:4:26","type":""},{"name":"offset","nodeType":"YulTypedName","src":"2345:6:26","type":""}],"src":"2300:189:26"},{"body":{"nodeType":"YulBlock","src":"2545:136:26","statements":[{"body":{"nodeType":"YulBlock","src":"2612:63:26","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2656:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"2663:1:26","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nodeType":"YulIdentifier","src":"2626:29:26"},"nodeType":"YulFunctionCall","src":"2626:39:26"},"nodeType":"YulExpressionStatement","src":"2626:39:26"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2565:5:26"},{"name":"end","nodeType":"YulIdentifier","src":"2572:3:26"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2562:2:26"},"nodeType":"YulFunctionCall","src":"2562:14:26"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2577:26:26","statements":[{"nodeType":"YulAssignment","src":"2579:22:26","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2592:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"2599:1:26","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2588:3:26"},"nodeType":"YulFunctionCall","src":"2588:13:26"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"2579:5:26"}]}]},"pre":{"nodeType":"YulBlock","src":"2559:2:26","statements":[]},"src":"2555:120:26"}]},"name":"clear_storage_range_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"2533:5:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"2540:3:26","type":""}],"src":"2495:186:26"},{"body":{"nodeType":"YulBlock","src":"2766:464:26","statements":[{"body":{"nodeType":"YulBlock","src":"2792:431:26","statements":[{"nodeType":"YulVariableDeclaration","src":"2806:54:26","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2854:5:26"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"2822:31:26"},"nodeType":"YulFunctionCall","src":"2822:38:26"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"2810:8:26","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2873:63:26","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"2896:8:26"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"2924:10:26"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"2906:17:26"},"nodeType":"YulFunctionCall","src":"2906:29:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2892:3:26"},"nodeType":"YulFunctionCall","src":"2892:44:26"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"2877:11:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"3093:27:26","statements":[{"nodeType":"YulAssignment","src":"3095:23:26","value":{"name":"dataArea","nodeType":"YulIdentifier","src":"3110:8:26"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"3095:11:26"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"3077:10:26"},{"kind":"number","nodeType":"YulLiteral","src":"3089:2:26","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3074:2:26"},"nodeType":"YulFunctionCall","src":"3074:18:26"},"nodeType":"YulIf","src":"3071:49:26"},{"expression":{"arguments":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"3162:11:26"},{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"3179:8:26"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"3207:3:26"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"3189:17:26"},"nodeType":"YulFunctionCall","src":"3189:22:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3175:3:26"},"nodeType":"YulFunctionCall","src":"3175:37:26"}],"functionName":{"name":"clear_storage_range_t_bytes1","nodeType":"YulIdentifier","src":"3133:28:26"},"nodeType":"YulFunctionCall","src":"3133:80:26"},"nodeType":"YulExpressionStatement","src":"3133:80:26"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"2783:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"2788:2:26","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2780:2:26"},"nodeType":"YulFunctionCall","src":"2780:11:26"},"nodeType":"YulIf","src":"2777:446:26"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"2742:5:26","type":""},{"name":"len","nodeType":"YulTypedName","src":"2749:3:26","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"2754:10:26","type":""}],"src":"2687:543:26"},{"body":{"nodeType":"YulBlock","src":"3299:54:26","statements":[{"nodeType":"YulAssignment","src":"3309:37:26","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"3334:4:26"},{"name":"value","nodeType":"YulIdentifier","src":"3340:5:26"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"3330:3:26"},"nodeType":"YulFunctionCall","src":"3330:16:26"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"3309:8:26"}]}]},"name":"shift_right_unsigned_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"3274:4:26","type":""},{"name":"value","nodeType":"YulTypedName","src":"3280:5:26","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"3290:8:26","type":""}],"src":"3236:117:26"},{"body":{"nodeType":"YulBlock","src":"3410:118:26","statements":[{"nodeType":"YulVariableDeclaration","src":"3420:68:26","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3469:1:26","type":"","value":"8"},{"name":"bytes","nodeType":"YulIdentifier","src":"3472:5:26"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"3465:3:26"},"nodeType":"YulFunctionCall","src":"3465:13:26"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3484:1:26","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3480:3:26"},"nodeType":"YulFunctionCall","src":"3480:6:26"}],"functionName":{"name":"shift_right_unsigned_dynamic","nodeType":"YulIdentifier","src":"3436:28:26"},"nodeType":"YulFunctionCall","src":"3436:51:26"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3432:3:26"},"nodeType":"YulFunctionCall","src":"3432:56:26"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"3424:4:26","type":""}]},{"nodeType":"YulAssignment","src":"3497:25:26","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3511:4:26"},{"name":"mask","nodeType":"YulIdentifier","src":"3517:4:26"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3507:3:26"},"nodeType":"YulFunctionCall","src":"3507:15:26"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3497:6:26"}]}]},"name":"mask_bytes_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"3387:4:26","type":""},{"name":"bytes","nodeType":"YulTypedName","src":"3393:5:26","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"3403:6:26","type":""}],"src":"3359:169:26"},{"body":{"nodeType":"YulBlock","src":"3614:214:26","statements":[{"nodeType":"YulAssignment","src":"3747:37:26","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3774:4:26"},{"name":"len","nodeType":"YulIdentifier","src":"3780:3:26"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"3755:18:26"},"nodeType":"YulFunctionCall","src":"3755:29:26"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"3747:4:26"}]},{"nodeType":"YulAssignment","src":"3793:29:26","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3804:4:26"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3814:1:26","type":"","value":"2"},{"name":"len","nodeType":"YulIdentifier","src":"3817:3:26"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"3810:3:26"},"nodeType":"YulFunctionCall","src":"3810:11:26"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"3801:2:26"},"nodeType":"YulFunctionCall","src":"3801:21:26"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"3793:4:26"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"3595:4:26","type":""},{"name":"len","nodeType":"YulTypedName","src":"3601:3:26","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"3609:4:26","type":""}],"src":"3533:295:26"},{"body":{"nodeType":"YulBlock","src":"3925:1303:26","statements":[{"nodeType":"YulVariableDeclaration","src":"3936:51:26","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3983:3:26"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"3950:32:26"},"nodeType":"YulFunctionCall","src":"3950:37:26"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"3940:6:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"4072:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"4074:16:26"},"nodeType":"YulFunctionCall","src":"4074:18:26"},"nodeType":"YulExpressionStatement","src":"4074:18:26"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"4044:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"4052:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4041:2:26"},"nodeType":"YulFunctionCall","src":"4041:30:26"},"nodeType":"YulIf","src":"4038:56:26"},{"nodeType":"YulVariableDeclaration","src":"4104:52:26","value":{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4150:4:26"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"4144:5:26"},"nodeType":"YulFunctionCall","src":"4144:11:26"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"4118:25:26"},"nodeType":"YulFunctionCall","src":"4118:38:26"},"variables":[{"name":"oldLen","nodeType":"YulTypedName","src":"4108:6:26","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4249:4:26"},{"name":"oldLen","nodeType":"YulIdentifier","src":"4255:6:26"},{"name":"newLen","nodeType":"YulIdentifier","src":"4263:6:26"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulIdentifier","src":"4203:45:26"},"nodeType":"YulFunctionCall","src":"4203:67:26"},"nodeType":"YulExpressionStatement","src":"4203:67:26"},{"nodeType":"YulVariableDeclaration","src":"4280:18:26","value":{"kind":"number","nodeType":"YulLiteral","src":"4297:1:26","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"4284:9:26","type":""}]},{"nodeType":"YulAssignment","src":"4308:17:26","value":{"kind":"number","nodeType":"YulLiteral","src":"4321:4:26","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"4308:9:26"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"4372:611:26","statements":[{"nodeType":"YulVariableDeclaration","src":"4386:37:26","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"4405:6:26"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4417:4:26","type":"","value":"0x1f"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4413:3:26"},"nodeType":"YulFunctionCall","src":"4413:9:26"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4401:3:26"},"nodeType":"YulFunctionCall","src":"4401:22:26"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"4390:7:26","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4437:51:26","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4483:4:26"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"4451:31:26"},"nodeType":"YulFunctionCall","src":"4451:37:26"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"4441:6:26","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4501:10:26","value":{"kind":"number","nodeType":"YulLiteral","src":"4510:1:26","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"4505:1:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"4569:163:26","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"4594:6:26"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4612:3:26"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"4617:9:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4608:3:26"},"nodeType":"YulFunctionCall","src":"4608:19:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4602:5:26"},"nodeType":"YulFunctionCall","src":"4602:26:26"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"4587:6:26"},"nodeType":"YulFunctionCall","src":"4587:42:26"},"nodeType":"YulExpressionStatement","src":"4587:42:26"},{"nodeType":"YulAssignment","src":"4646:24:26","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"4660:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"4668:1:26","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4656:3:26"},"nodeType":"YulFunctionCall","src":"4656:14:26"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"4646:6:26"}]},{"nodeType":"YulAssignment","src":"4687:31:26","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"4704:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"4715:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4700:3:26"},"nodeType":"YulFunctionCall","src":"4700:18:26"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"4687:9:26"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4535:1:26"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"4538:7:26"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4532:2:26"},"nodeType":"YulFunctionCall","src":"4532:14:26"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"4547:21:26","statements":[{"nodeType":"YulAssignment","src":"4549:17:26","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4558:1:26"},{"kind":"number","nodeType":"YulLiteral","src":"4561:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4554:3:26"},"nodeType":"YulFunctionCall","src":"4554:12:26"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"4549:1:26"}]}]},"pre":{"nodeType":"YulBlock","src":"4528:3:26","statements":[]},"src":"4524:208:26"},{"body":{"nodeType":"YulBlock","src":"4768:156:26","statements":[{"nodeType":"YulVariableDeclaration","src":"4786:43:26","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4813:3:26"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"4818:9:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4809:3:26"},"nodeType":"YulFunctionCall","src":"4809:19:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4803:5:26"},"nodeType":"YulFunctionCall","src":"4803:26:26"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"4790:9:26","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"4853:6:26"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"4880:9:26"},{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"4895:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"4903:4:26","type":"","value":"0x1f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4891:3:26"},"nodeType":"YulFunctionCall","src":"4891:17:26"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"4861:18:26"},"nodeType":"YulFunctionCall","src":"4861:48:26"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"4846:6:26"},"nodeType":"YulFunctionCall","src":"4846:64:26"},"nodeType":"YulExpressionStatement","src":"4846:64:26"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"4751:7:26"},{"name":"newLen","nodeType":"YulIdentifier","src":"4760:6:26"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4748:2:26"},"nodeType":"YulFunctionCall","src":"4748:19:26"},"nodeType":"YulIf","src":"4745:179:26"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4944:4:26"},{"arguments":[{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"4958:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"4966:1:26","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"4954:3:26"},"nodeType":"YulFunctionCall","src":"4954:14:26"},{"kind":"number","nodeType":"YulLiteral","src":"4970:1:26","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4950:3:26"},"nodeType":"YulFunctionCall","src":"4950:22:26"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"4937:6:26"},"nodeType":"YulFunctionCall","src":"4937:36:26"},"nodeType":"YulExpressionStatement","src":"4937:36:26"}]},"nodeType":"YulCase","src":"4365:618:26","value":{"kind":"number","nodeType":"YulLiteral","src":"4370:1:26","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"5000:222:26","statements":[{"nodeType":"YulVariableDeclaration","src":"5014:14:26","value":{"kind":"number","nodeType":"YulLiteral","src":"5027:1:26","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"5018:5:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"5051:67:26","statements":[{"nodeType":"YulAssignment","src":"5069:35:26","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5088:3:26"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"5093:9:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5084:3:26"},"nodeType":"YulFunctionCall","src":"5084:19:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5078:5:26"},"nodeType":"YulFunctionCall","src":"5078:26:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"5069:5:26"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"5044:6:26"},"nodeType":"YulIf","src":"5041:77:26"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5138:4:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5197:5:26"},{"name":"newLen","nodeType":"YulIdentifier","src":"5204:6:26"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"5144:52:26"},"nodeType":"YulFunctionCall","src":"5144:67:26"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"5131:6:26"},"nodeType":"YulFunctionCall","src":"5131:81:26"},"nodeType":"YulExpressionStatement","src":"5131:81:26"}]},"nodeType":"YulCase","src":"4992:230:26","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"4345:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"4353:2:26","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4342:2:26"},"nodeType":"YulFunctionCall","src":"4342:14:26"},"nodeType":"YulSwitch","src":"4335:887:26"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"3914:4:26","type":""},{"name":"src","nodeType":"YulTypedName","src":"3920:3:26","type":""}],"src":"3833:1395:26"},{"body":{"nodeType":"YulBlock","src":"5274:35:26","statements":[{"nodeType":"YulAssignment","src":"5284:19:26","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5300:2:26","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5294:5:26"},"nodeType":"YulFunctionCall","src":"5294:9:26"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"5284:6:26"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"5267:6:26","type":""}],"src":"5234:75:26"},{"body":{"nodeType":"YulBlock","src":"5404:28:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5421:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5424:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5414:6:26"},"nodeType":"YulFunctionCall","src":"5414:12:26"},"nodeType":"YulExpressionStatement","src":"5414:12:26"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"5315:117:26"},{"body":{"nodeType":"YulBlock","src":"5527:28:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5544:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5547:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5537:6:26"},"nodeType":"YulFunctionCall","src":"5537:12:26"},"nodeType":"YulExpressionStatement","src":"5537:12:26"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"5438:117:26"},{"body":{"nodeType":"YulBlock","src":"5606:81:26","statements":[{"nodeType":"YulAssignment","src":"5616:65:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5631:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"5638:42:26","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5627:3:26"},"nodeType":"YulFunctionCall","src":"5627:54:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"5616:7:26"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5588:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"5598:7:26","type":""}],"src":"5561:126:26"},{"body":{"nodeType":"YulBlock","src":"5738:51:26","statements":[{"nodeType":"YulAssignment","src":"5748:35:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5777:5:26"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"5759:17:26"},"nodeType":"YulFunctionCall","src":"5759:24:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"5748:7:26"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5720:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"5730:7:26","type":""}],"src":"5693:96:26"},{"body":{"nodeType":"YulBlock","src":"5838:79:26","statements":[{"body":{"nodeType":"YulBlock","src":"5895:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5904:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5907:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5897:6:26"},"nodeType":"YulFunctionCall","src":"5897:12:26"},"nodeType":"YulExpressionStatement","src":"5897:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5861:5:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5886:5:26"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"5868:17:26"},"nodeType":"YulFunctionCall","src":"5868:24:26"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"5858:2:26"},"nodeType":"YulFunctionCall","src":"5858:35:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5851:6:26"},"nodeType":"YulFunctionCall","src":"5851:43:26"},"nodeType":"YulIf","src":"5848:63:26"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5831:5:26","type":""}],"src":"5795:122:26"},{"body":{"nodeType":"YulBlock","src":"5986:80:26","statements":[{"nodeType":"YulAssignment","src":"5996:22:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6011:6:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6005:5:26"},"nodeType":"YulFunctionCall","src":"6005:13:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"5996:5:26"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6054:5:26"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"6027:26:26"},"nodeType":"YulFunctionCall","src":"6027:33:26"},"nodeType":"YulExpressionStatement","src":"6027:33:26"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"5964:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"5972:3:26","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"5980:5:26","type":""}],"src":"5923:143:26"},{"body":{"nodeType":"YulBlock","src":"6183:552:26","statements":[{"body":{"nodeType":"YulBlock","src":"6229:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"6231:77:26"},"nodeType":"YulFunctionCall","src":"6231:79:26"},"nodeType":"YulExpressionStatement","src":"6231:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6204:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"6213:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6200:3:26"},"nodeType":"YulFunctionCall","src":"6200:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"6225:2:26","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6196:3:26"},"nodeType":"YulFunctionCall","src":"6196:32:26"},"nodeType":"YulIf","src":"6193:119:26"},{"nodeType":"YulBlock","src":"6322:128:26","statements":[{"nodeType":"YulVariableDeclaration","src":"6337:15:26","value":{"kind":"number","nodeType":"YulLiteral","src":"6351:1:26","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6341:6:26","type":""}]},{"nodeType":"YulAssignment","src":"6366:74:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6412:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"6423:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6408:3:26"},"nodeType":"YulFunctionCall","src":"6408:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6432:7:26"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"6376:31:26"},"nodeType":"YulFunctionCall","src":"6376:64:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6366:6:26"}]}]},{"nodeType":"YulBlock","src":"6460:129:26","statements":[{"nodeType":"YulVariableDeclaration","src":"6475:16:26","value":{"kind":"number","nodeType":"YulLiteral","src":"6489:2:26","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6479:6:26","type":""}]},{"nodeType":"YulAssignment","src":"6505:74:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6551:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"6562:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6547:3:26"},"nodeType":"YulFunctionCall","src":"6547:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6571:7:26"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"6515:31:26"},"nodeType":"YulFunctionCall","src":"6515:64:26"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"6505:6:26"}]}]},{"nodeType":"YulBlock","src":"6599:129:26","statements":[{"nodeType":"YulVariableDeclaration","src":"6614:16:26","value":{"kind":"number","nodeType":"YulLiteral","src":"6628:2:26","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6618:6:26","type":""}]},{"nodeType":"YulAssignment","src":"6644:74:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6690:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"6701:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6686:3:26"},"nodeType":"YulFunctionCall","src":"6686:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6710:7:26"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"6654:31:26"},"nodeType":"YulFunctionCall","src":"6654:64:26"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"6644:6:26"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6137:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6148:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6160:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6168:6:26","type":""},{"name":"value2","nodeType":"YulTypedName","src":"6176:6:26","type":""}],"src":"6072:663:26"}]},"contents":"{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n","id":26,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"608060405260405180602001604052806000815250600790816200002491906200057e565b506001600b553480156200003757600080fd5b50604051620044e8380380620044e883398181016040528101906200005d9190620006cf565b6040518060400160405280601d81526020017f68747470733a2f2f73616665696465612e6e65742f646f632f7b69647d000000815250620000a4816200017860201b60201c565b506000600460006101000a81548160ff021916908315150217905550620000d56000801b846200018d60201b60201c565b50620001087f7804d923f43a17d325d77e781528e0793b2edd9890ab45fc64efd7b4b427744c846200018d60201b60201c565b506200013b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a836200018d60201b60201c565b506200016e7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6826200018d60201b60201c565b505050506200072b565b80600290816200018991906200057e565b5050565b6000620001a183836200029160201b60201c565b620002865760016003600085815260200190815260200160002060000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555062000222620002fc60201b60201c565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a4600190506200028b565b600090505b92915050565b60006003600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600033905090565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200038657607f821691505b6020821081036200039c576200039b6200033e565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620004067fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620003c7565b620004128683620003c7565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b60006200045f6200045962000453846200042a565b62000434565b6200042a565b9050919050565b6000819050919050565b6200047b836200043e565b620004936200048a8262000466565b848454620003d4565b825550505050565b600090565b620004aa6200049b565b620004b781848462000470565b505050565b5b81811015620004df57620004d3600082620004a0565b600181019050620004bd565b5050565b601f8211156200052e57620004f881620003a2565b6200050384620003b7565b8101602085101562000513578190505b6200052b6200052285620003b7565b830182620004bc565b50505b505050565b600082821c905092915050565b6000620005536000198460080262000533565b1980831691505092915050565b60006200056e838362000540565b9150826002028217905092915050565b620005898262000304565b67ffffffffffffffff811115620005a557620005a46200030f565b5b620005b182546200036d565b620005be828285620004e3565b600060209050601f831160018114620005f65760008415620005e1578287015190505b620005ed858262000560565b8655506200065d565b601f1984166200060686620003a2565b60005b82811015620006305784890151825560018201915060208501945060208101905062000609565b868310156200065057848901516200064c601f89168262000540565b8355505b6001600288020188555050505b505050505050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062000697826200066a565b9050919050565b620006a9816200068a565b8114620006b557600080fd5b50565b600081519050620006c9816200069e565b92915050565b600080600060608486031215620006eb57620006ea62000665565b5b6000620006fb86828701620006b8565b93505060206200070e86828701620006b8565b92505060406200072186828701620006b8565b9150509250925092565b613dad806200073b6000396000f3fe608060405234801561001057600080fd5b50600436106102055760003560e01c80636b20c4541161011a578063d5391393116100ad578063e985e9c51161007c578063e985e9c5146105e6578063ee037bf914610616578063f07f552014610646578063f242432a14610676578063f5298aca1461069257610205565b8063d53913931461055e578063d547741f1461057c578063e556977314610598578063e63ab1e9146105c857610205565b806391d14854116100e957806391d14854146104c4578063a217fddf146104f4578063a22cb46514610512578063bd85b0391461052e57610205565b80636b20c45414610464578063731133e9146104805780637f3457101461049c5780638456cb59146104ba57610205565b8063248a9ca31161019d5780633f4ba83a1161016c5780633f4ba83a146103c05780634e1273f4146103ca5780634f558e79146103fa57806355f804b31461042a5780635c975abb1461044657610205565b8063248a9ca31461033c5780632eb2c2d61461036c5780632f2ff15d1461038857806336568abe146103a457610205565b80630e89341c116101d95780630e89341c146102b6578063162094c4146102e657806318160ddd146103025780631f7fdffa1461032057610205565b8062fdd58e1461020a57806301ffc9a71461023a57806302fe53051461026a57806309dca9ce14610286575b600080fd5b610224600480360381019061021f91906128f9565b6106ae565b6040516102319190612948565b60405180910390f35b610254600480360381019061024f91906129bb565b610708565b6040516102619190612a03565b60405180910390f35b610284600480360381019061027f9190612b64565b61071a565b005b6102a0600480360381019061029b9190612cab565b610751565b6040516102ad9190612db2565b60405180910390f35b6102d060048036038101906102cb9190612dd4565b610837565b6040516102dd9190612e80565b60405180910390f35b61030060048036038101906102fb9190612ea2565b610849565b005b61030a610882565b6040516103179190612948565b60405180910390f35b61033a60048036038101906103359190613062565b61088c565b005b6103566004803603810190610351919061311d565b6108c9565b6040516103639190613159565b60405180910390f35b61038660048036038101906103819190613174565b6108e9565b005b6103a2600480360381019061039d9190613243565b610991565b005b6103be60048036038101906103b99190613243565b6109b3565b005b6103c8610a2e565b005b6103e460048036038101906103df9190613346565b610a63565b6040516103f19190612db2565b60405180910390f35b610414600480360381019061040f9190612dd4565b610b72565b6040516104219190612a03565b60405180910390f35b610444600480360381019061043f9190612b64565b610b86565b005b61044e610bbd565b60405161045b9190612a03565b60405180910390f35b61047e600480360381019061047991906133be565b610bd4565b005b61049a60048036038101906104959190613449565b610c80565b005b6104a4610cbd565b6040516104b19190613159565b60405180910390f35b6104c2610ce1565b005b6104de60048036038101906104d99190613243565b610d16565b6040516104eb9190612a03565b60405180910390f35b6104fc610d81565b6040516105099190613159565b60405180910390f35b61052c600480360381019061052791906134f8565b610d88565b005b61054860048036038101906105439190612dd4565b610d9e565b6040516105559190612948565b60405180910390f35b610566610dbb565b6040516105739190613159565b60405180910390f35b61059660048036038101906105919190613243565b610ddf565b005b6105b260048036038101906105ad919061311d565b610e01565b6040516105bf9190612948565b60405180910390f35b6105d0610e1e565b6040516105dd9190613159565b60405180910390f35b61060060048036038101906105fb9190613538565b610e42565b60405161060d9190612a03565b60405180910390f35b610630600480360381019061062b9190612dd4565b610ed6565b60405161063d9190613159565b60405180910390f35b610660600480360381019061065b919061311d565b610ef3565b60405161066d9190612948565b60405180910390f35b610690600480360381019061068b9190613578565b610f30565b005b6106ac60048036038101906106a7919061360f565b610fd8565b005b600080600083815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600061071382611084565b9050919050565b7f7804d923f43a17d325d77e781528e0793b2edd9890ab45fc64efd7b4b427744c610744816110fe565b61074d82611112565b5050565b60607f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a661077d816110fe565b6000835167ffffffffffffffff81111561079a57610799612a39565b5b6040519080825280602002602001820160405280156107c85781602001602082028036833780820191505090505b50905060005b845181101561082c576107fa8582815181106107ed576107ec613662565b5b6020026020010151611125565b82828151811061080d5761080c613662565b5b6020026020010181815250508080610824906136c0565b9150506107ce565b508092505050919050565b6060610842826111df565b9050919050565b7f7804d923f43a17d325d77e781528e0793b2edd9890ab45fc64efd7b4b427744c610873816110fe565b61087d83836112c4565b505050565b6000600654905090565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a66108b6816110fe565b6108c285858585611329565b5050505050565b600060036000838152602001908152602001600020600101549050919050565b60006108f36113af565b90508073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff161415801561093857506109368682610e42565b155b1561097c5780866040517fe237d922000000000000000000000000000000000000000000000000000000008152600401610973929190613717565b60405180910390fd5b61098986868686866113b7565b505050505050565b61099a826108c9565b6109a3816110fe565b6109ad83836114af565b50505050565b6109bb6113af565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610a1f576040517f6697b23200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610a2982826115a1565b505050565b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a610a58816110fe565b610a60611694565b50565b60608151835114610aaf57815183516040517f5b059991000000000000000000000000000000000000000000000000000000008152600401610aa6929190613740565b60405180910390fd5b6000835167ffffffffffffffff811115610acc57610acb612a39565b5b604051908082528060200260200182016040528015610afa5781602001602082028036833780820191505090505b50905060005b8451811015610b6757610b37610b1f82876116f790919063ffffffff16565b610b32838761170b90919063ffffffff16565b6106ae565b828281518110610b4a57610b49613662565b5b60200260200101818152505080610b60906136c0565b9050610b00565b508091505092915050565b600080610b7e83610d9e565b119050919050565b7f7804d923f43a17d325d77e781528e0793b2edd9890ab45fc64efd7b4b427744c610bb0816110fe565b610bb98261171f565b5050565b6000600460009054906101000a900460ff16905090565b610bdc6113af565b73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614158015610c255750610c2383610c1e6113af565b610e42565b155b15610c7057610c326113af565b836040517fe237d922000000000000000000000000000000000000000000000000000000008152600401610c67929190613717565b60405180910390fd5b610c7b838383611732565b505050565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6610caa816110fe565b610cb6858585856117c6565b5050505050565b7f7804d923f43a17d325d77e781528e0793b2edd9890ab45fc64efd7b4b427744c81565b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a610d0b816110fe565b610d1361185f565b50565b60006003600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000801b81565b610d9a610d936113af565b83836118c2565b5050565b600060056000838152602001908152602001600020549050919050565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b610de8826108c9565b610df1816110fe565b610dfb83836115a1565b50505050565b600060096000838152602001908152602001600020549050919050565b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a81565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000600a6000838152602001908152602001600020549050919050565b60007f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6610f1f816110fe565b610f2883611125565b915050919050565b6000610f3a6113af565b90508073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1614158015610f7f5750610f7d8682610e42565b155b15610fc35780866040517fe237d922000000000000000000000000000000000000000000000000000000008152600401610fba929190613717565b60405180910390fd5b610fd08686868686611a32565b505050505050565b610fe06113af565b73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141580156110295750611027836110226113af565b610e42565b155b15611074576110366113af565b836040517fe237d92200000000000000000000000000000000000000000000000000000000815260040161106b929190613717565b60405180910390fd5b61107f838383611b3d565b505050565b60007f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806110f757506110f682611be4565b5b9050919050565b61110f8161110a6113af565b611cc6565b50565b80600290816111219190613975565b5050565b60008060096000848152602001908152602001600020541461115c57600960008381526020019081526020016000205490506111da565b6000600b6000815480929190611171906136c0565b91905055905080600960008581526020019081526020016000208190555082600a60008381526020019081526020016000208190555080837fea3e0acfc42d04765cb7947585765a242d0fd12a634edfb22c44cf42a363b2b860405160405180910390a3809150505b919050565b6060600060086000848152602001908152602001600020805461120190613798565b80601f016020809104026020016040519081016040528092919081815260200182805461122d90613798565b801561127a5780601f1061124f5761010080835404028352916020019161127a565b820191906000526020600020905b81548152906001019060200180831161125d57829003601f168201915b5050505050905060008151116112985761129383611d17565b6112bc565b6007816040516020016112ac929190613b06565b6040516020818303038152906040525b915050919050565b806008600084815260200190815260200160002090816112e49190613975565b50817f6bb7ff708619ba0610cba295a58592e0451dee2622938c8755667688daf3529b61131084610837565b60405161131d9190612e80565b60405180910390a25050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff160361139b5760006040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016113929190613b2a565b60405180910390fd5b6113a9600085858585611dab565b50505050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036114295760006040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016114209190613b2a565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff160361149b5760006040517f01a835140000000000000000000000000000000000000000000000000000000081526004016114929190613b2a565b60405180910390fd5b6114a88585858585611dab565b5050505050565b60006114bb8383610d16565b6115965760016003600085815260200190815260200160002060000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506115336113af565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a46001905061159b565b600090505b92915050565b60006115ad8383610d16565b156116895760006003600085815260200190815260200160002060000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506116266113af565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a46001905061168e565b600090505b92915050565b61169c611e5d565b6000600460006101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6116e06113af565b6040516116ed9190613b2a565b60405180910390a1565b600060208202602084010151905092915050565b600060208202602084010151905092915050565b806007908161172e9190613975565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036117a45760006040517f01a8351400000000000000000000000000000000000000000000000000000000815260040161179b9190613b2a565b60405180910390fd5b6117c1836000848460405180602001604052806000815250611dab565b505050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036118385760006040517f57f447ce00000000000000000000000000000000000000000000000000000000815260040161182f9190613b2a565b60405180910390fd5b6000806118458585611e9d565b91509150611857600087848487611dab565b505050505050565b611867611ecd565b6001600460006101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586118ab6113af565b6040516118b89190613b2a565b60405180910390a1565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036119345760006040517fced3e10000000000000000000000000000000000000000000000000000000000815260040161192b9190613b2a565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051611a259190612a03565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611aa45760006040517f57f447ce000000000000000000000000000000000000000000000000000000008152600401611a9b9190613b2a565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1603611b165760006040517f01a83514000000000000000000000000000000000000000000000000000000008152600401611b0d9190613b2a565b60405180910390fd5b600080611b238585611e9d565b91509150611b348787848487611dab565b50505050505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611baf5760006040517f01a83514000000000000000000000000000000000000000000000000000000008152600401611ba69190613b2a565b60405180910390fd5b600080611bbc8484611e9d565b91509150611bdd856000848460405180602001604052806000815250611dab565b5050505050565b60007fd9b67a26000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480611caf57507f0e89341c000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80611cbf5750611cbe82611f0e565b5b9050919050565b611cd08282610d16565b611d135780826040517fe2517d3f000000000000000000000000000000000000000000000000000000008152600401611d0a929190613b45565b60405180910390fd5b5050565b606060028054611d2690613798565b80601f0160208091040260200160405190810160405280929190818152602001828054611d5290613798565b8015611d9f5780601f10611d7457610100808354040283529160200191611d9f565b820191906000526020600020905b815481529060010190602001808311611d8257829003601f168201915b50505050509050919050565b611db785858585611f78565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614611e56576000611df56113af565b90506001845103611e45576000611e1660008661170b90919063ffffffff16565b90506000611e2e60008661170b90919063ffffffff16565b9050611e3e838989858589611f8a565b5050611e54565b611e5381878787878761213e565b5b505b5050505050565b611e65610bbd565b611e9b576040517f8dfc202b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b60608060405191506001825283602083015260408201905060018152826020820152604081016040529250929050565b611ed5610bbd565b15611f0c576040517fd93c066500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b611f84848484846122f2565b50505050565b60008473ffffffffffffffffffffffffffffffffffffffff163b1115612136578373ffffffffffffffffffffffffffffffffffffffff1663f23a6e6187878686866040518663ffffffff1660e01b8152600401611feb959493929190613bc3565b6020604051808303816000875af192505050801561202757506040513d601f19601f820116820180604052508101906120249190613c32565b60015b6120ab573d8060008114612057576040519150601f19603f3d011682016040523d82523d6000602084013e61205c565b606091505b5060008151036120a357846040517f57f447ce00000000000000000000000000000000000000000000000000000000815260040161209a9190613b2a565b60405180910390fd5b805181602001fd5b63f23a6e6160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461213457846040517f57f447ce00000000000000000000000000000000000000000000000000000000815260040161212b9190613b2a565b60405180910390fd5b505b505050505050565b60008473ffffffffffffffffffffffffffffffffffffffff163b11156122ea578373ffffffffffffffffffffffffffffffffffffffff1663bc197c8187878686866040518663ffffffff1660e01b815260040161219f959493929190613c5f565b6020604051808303816000875af19250505080156121db57506040513d601f19601f820116820180604052508101906121d89190613c32565b60015b61225f573d806000811461220b576040519150601f19603f3d011682016040523d82523d6000602084013e612210565b606091505b50600081510361225757846040517f57f447ce00000000000000000000000000000000000000000000000000000000815260040161224e9190613b2a565b60405180910390fd5b805181602001fd5b63bc197c8160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146122e857846040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016122df9190613b2a565b60405180910390fd5b505b505050505050565b6122fe84848484612489565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036123ce576000805b83518110156123b2576000612354828561170b90919063ffffffff16565b9050806005600061236e858961170b90919063ffffffff16565b8152602001908152602001600020600082825461238b9190613cc7565b92505081905550808361239e9190613cc7565b925050806123ab906136c0565b9050612336565b5080600660008282546123c59190613cc7565b92505081905550505b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603612483576000805b8351811015612470576000612424828561170b90919063ffffffff16565b9050806005600061243e858961170b90919063ffffffff16565b81526020019081526020016000206000828254039250508190555080830192505080612469906136c0565b9050612406565b5080600660008282540392505081905550505b50505050565b612491611ecd565b61249d848484846124a3565b50505050565b80518251146124ed57815181516040517f5b0599910000000000000000000000000000000000000000000000000000000081526004016124e4929190613740565b60405180910390fd5b60006124f76113af565b905060005b835181101561270c57600061251a828661170b90919063ffffffff16565b90506000612531838661170b90919063ffffffff16565b9050600073ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff161461265e57600080600084815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101561260657888183856040517f03dee4c50000000000000000000000000000000000000000000000000000000081526004016125fd9493929190613cfb565b60405180910390fd5b81810360008085815260200190815260200160002060008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff16146126f9578060008084815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546126f19190613cc7565b925050819055505b505080612705906136c0565b90506124fc565b5060018351036127cb57600061272c60008561170b90919063ffffffff16565b9050600061274460008561170b90919063ffffffff16565b90508573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f6285856040516127bc929190613740565b60405180910390a4505061284a565b8373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8686604051612841929190613d40565b60405180910390a45b5050505050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061289082612865565b9050919050565b6128a081612885565b81146128ab57600080fd5b50565b6000813590506128bd81612897565b92915050565b6000819050919050565b6128d6816128c3565b81146128e157600080fd5b50565b6000813590506128f3816128cd565b92915050565b600080604083850312156129105761290f61285b565b5b600061291e858286016128ae565b925050602061292f858286016128e4565b9150509250929050565b612942816128c3565b82525050565b600060208201905061295d6000830184612939565b92915050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61299881612963565b81146129a357600080fd5b50565b6000813590506129b58161298f565b92915050565b6000602082840312156129d1576129d061285b565b5b60006129df848285016129a6565b91505092915050565b60008115159050919050565b6129fd816129e8565b82525050565b6000602082019050612a1860008301846129f4565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b612a7182612a28565b810181811067ffffffffffffffff82111715612a9057612a8f612a39565b5b80604052505050565b6000612aa3612851565b9050612aaf8282612a68565b919050565b600067ffffffffffffffff821115612acf57612ace612a39565b5b612ad882612a28565b9050602081019050919050565b82818337600083830152505050565b6000612b07612b0284612ab4565b612a99565b905082815260208101848484011115612b2357612b22612a23565b5b612b2e848285612ae5565b509392505050565b600082601f830112612b4b57612b4a612a1e565b5b8135612b5b848260208601612af4565b91505092915050565b600060208284031215612b7a57612b7961285b565b5b600082013567ffffffffffffffff811115612b9857612b97612860565b5b612ba484828501612b36565b91505092915050565b600067ffffffffffffffff821115612bc857612bc7612a39565b5b602082029050602081019050919050565b600080fd5b6000819050919050565b612bf181612bde565b8114612bfc57600080fd5b50565b600081359050612c0e81612be8565b92915050565b6000612c27612c2284612bad565b612a99565b90508083825260208201905060208402830185811115612c4a57612c49612bd9565b5b835b81811015612c735780612c5f8882612bff565b845260208401935050602081019050612c4c565b5050509392505050565b600082601f830112612c9257612c91612a1e565b5b8135612ca2848260208601612c14565b91505092915050565b600060208284031215612cc157612cc061285b565b5b600082013567ffffffffffffffff811115612cdf57612cde612860565b5b612ceb84828501612c7d565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b612d29816128c3565b82525050565b6000612d3b8383612d20565b60208301905092915050565b6000602082019050919050565b6000612d5f82612cf4565b612d698185612cff565b9350612d7483612d10565b8060005b83811015612da5578151612d8c8882612d2f565b9750612d9783612d47565b925050600181019050612d78565b5085935050505092915050565b60006020820190508181036000830152612dcc8184612d54565b905092915050565b600060208284031215612dea57612de961285b565b5b6000612df8848285016128e4565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015612e3b578082015181840152602081019050612e20565b60008484015250505050565b6000612e5282612e01565b612e5c8185612e0c565b9350612e6c818560208601612e1d565b612e7581612a28565b840191505092915050565b60006020820190508181036000830152612e9a8184612e47565b905092915050565b60008060408385031215612eb957612eb861285b565b5b6000612ec7858286016128e4565b925050602083013567ffffffffffffffff811115612ee857612ee7612860565b5b612ef485828601612b36565b9150509250929050565b600067ffffffffffffffff821115612f1957612f18612a39565b5b602082029050602081019050919050565b6000612f3d612f3884612efe565b612a99565b90508083825260208201905060208402830185811115612f6057612f5f612bd9565b5b835b81811015612f895780612f7588826128e4565b845260208401935050602081019050612f62565b5050509392505050565b600082601f830112612fa857612fa7612a1e565b5b8135612fb8848260208601612f2a565b91505092915050565b600067ffffffffffffffff821115612fdc57612fdb612a39565b5b612fe582612a28565b9050602081019050919050565b600061300561300084612fc1565b612a99565b90508281526020810184848401111561302157613020612a23565b5b61302c848285612ae5565b509392505050565b600082601f83011261304957613048612a1e565b5b8135613059848260208601612ff2565b91505092915050565b6000806000806080858703121561307c5761307b61285b565b5b600061308a878288016128ae565b945050602085013567ffffffffffffffff8111156130ab576130aa612860565b5b6130b787828801612f93565b935050604085013567ffffffffffffffff8111156130d8576130d7612860565b5b6130e487828801612f93565b925050606085013567ffffffffffffffff81111561310557613104612860565b5b61311187828801613034565b91505092959194509250565b6000602082840312156131335761313261285b565b5b600061314184828501612bff565b91505092915050565b61315381612bde565b82525050565b600060208201905061316e600083018461314a565b92915050565b600080600080600060a086880312156131905761318f61285b565b5b600061319e888289016128ae565b95505060206131af888289016128ae565b945050604086013567ffffffffffffffff8111156131d0576131cf612860565b5b6131dc88828901612f93565b935050606086013567ffffffffffffffff8111156131fd576131fc612860565b5b61320988828901612f93565b925050608086013567ffffffffffffffff81111561322a57613229612860565b5b61323688828901613034565b9150509295509295909350565b6000806040838503121561325a5761325961285b565b5b600061326885828601612bff565b9250506020613279858286016128ae565b9150509250929050565b600067ffffffffffffffff82111561329e5761329d612a39565b5b602082029050602081019050919050565b60006132c26132bd84613283565b612a99565b905080838252602082019050602084028301858111156132e5576132e4612bd9565b5b835b8181101561330e57806132fa88826128ae565b8452602084019350506020810190506132e7565b5050509392505050565b600082601f83011261332d5761332c612a1e565b5b813561333d8482602086016132af565b91505092915050565b6000806040838503121561335d5761335c61285b565b5b600083013567ffffffffffffffff81111561337b5761337a612860565b5b61338785828601613318565b925050602083013567ffffffffffffffff8111156133a8576133a7612860565b5b6133b485828601612f93565b9150509250929050565b6000806000606084860312156133d7576133d661285b565b5b60006133e5868287016128ae565b935050602084013567ffffffffffffffff81111561340657613405612860565b5b61341286828701612f93565b925050604084013567ffffffffffffffff81111561343357613432612860565b5b61343f86828701612f93565b9150509250925092565b600080600080608085870312156134635761346261285b565b5b6000613471878288016128ae565b9450506020613482878288016128e4565b9350506040613493878288016128e4565b925050606085013567ffffffffffffffff8111156134b4576134b3612860565b5b6134c087828801613034565b91505092959194509250565b6134d5816129e8565b81146134e057600080fd5b50565b6000813590506134f2816134cc565b92915050565b6000806040838503121561350f5761350e61285b565b5b600061351d858286016128ae565b925050602061352e858286016134e3565b9150509250929050565b6000806040838503121561354f5761354e61285b565b5b600061355d858286016128ae565b925050602061356e858286016128ae565b9150509250929050565b600080600080600060a086880312156135945761359361285b565b5b60006135a2888289016128ae565b95505060206135b3888289016128ae565b94505060406135c4888289016128e4565b93505060606135d5888289016128e4565b925050608086013567ffffffffffffffff8111156135f6576135f5612860565b5b61360288828901613034565b9150509295509295909350565b6000806000606084860312156136285761362761285b565b5b6000613636868287016128ae565b9350506020613647868287016128e4565b9250506040613658868287016128e4565b9150509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006136cb826128c3565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036136fd576136fc613691565b5b600182019050919050565b61371181612885565b82525050565b600060408201905061372c6000830185613708565b6137396020830184613708565b9392505050565b60006040820190506137556000830185612939565b6137626020830184612939565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806137b057607f821691505b6020821081036137c3576137c2613769565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b60006008830261382b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826137ee565b61383586836137ee565b95508019841693508086168417925050509392505050565b6000819050919050565b600061387261386d613868846128c3565b61384d565b6128c3565b9050919050565b6000819050919050565b61388c83613857565b6138a061389882613879565b8484546137fb565b825550505050565b600090565b6138b56138a8565b6138c0818484613883565b505050565b5b818110156138e4576138d96000826138ad565b6001810190506138c6565b5050565b601f821115613929576138fa816137c9565b613903846137de565b81016020851015613912578190505b61392661391e856137de565b8301826138c5565b50505b505050565b600082821c905092915050565b600061394c6000198460080261392e565b1980831691505092915050565b6000613965838361393b565b9150826002028217905092915050565b61397e82612e01565b67ffffffffffffffff81111561399757613996612a39565b5b6139a18254613798565b6139ac8282856138e8565b600060209050601f8311600181146139df57600084156139cd578287015190505b6139d78582613959565b865550613a3f565b601f1984166139ed866137c9565b60005b82811015613a15578489015182556001820191506020850194506020810190506139f0565b86831015613a325784890151613a2e601f89168261393b565b8355505b6001600288020188555050505b505050505050565b600081905092915050565b60008154613a5f81613798565b613a698186613a47565b94506001821660008114613a845760018114613a9957613acc565b60ff1983168652811515820286019350613acc565b613aa2856137c9565b60005b83811015613ac457815481890152600182019150602081019050613aa5565b838801955050505b50505092915050565b6000613ae082612e01565b613aea8185613a47565b9350613afa818560208601612e1d565b80840191505092915050565b6000613b128285613a52565b9150613b1e8284613ad5565b91508190509392505050565b6000602082019050613b3f6000830184613708565b92915050565b6000604082019050613b5a6000830185613708565b613b67602083018461314a565b9392505050565b600081519050919050565b600082825260208201905092915050565b6000613b9582613b6e565b613b9f8185613b79565b9350613baf818560208601612e1d565b613bb881612a28565b840191505092915050565b600060a082019050613bd86000830188613708565b613be56020830187613708565b613bf26040830186612939565b613bff6060830185612939565b8181036080830152613c118184613b8a565b90509695505050505050565b600081519050613c2c8161298f565b92915050565b600060208284031215613c4857613c4761285b565b5b6000613c5684828501613c1d565b91505092915050565b600060a082019050613c746000830188613708565b613c816020830187613708565b8181036040830152613c938186612d54565b90508181036060830152613ca78185612d54565b90508181036080830152613cbb8184613b8a565b90509695505050505050565b6000613cd2826128c3565b9150613cdd836128c3565b9250828201905080821115613cf557613cf4613691565b5b92915050565b6000608082019050613d106000830187613708565b613d1d6020830186612939565b613d2a6040830185612939565b613d376060830184612939565b95945050505050565b60006040820190508181036000830152613d5a8185612d54565b90508181036020830152613d6e8184612d54565b9050939250505056fea2646970667358221220014f3e7bfb2c52c8c5213173fcfacca42c36254903ed2d1ed85499c71831afa164736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x7 SWAP1 DUP2 PUSH3 0x24 SWAP2 SWAP1 PUSH3 0x57E JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0xB SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x37 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x44E8 CODESIZE SUB DUP1 PUSH3 0x44E8 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x5D SWAP2 SWAP1 PUSH3 0x6CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1D DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x68747470733A2F2F73616665696465612E6E65742F646F632F7B69647D000000 DUP2 MSTORE POP PUSH3 0xA4 DUP2 PUSH3 0x178 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH3 0xD5 PUSH1 0x0 DUP1 SHL DUP5 PUSH3 0x18D PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH3 0x108 PUSH32 0x7804D923F43A17D325D77E781528E0793B2EDD9890AB45FC64EFD7B4B427744C DUP5 PUSH3 0x18D PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH3 0x13B PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A DUP4 PUSH3 0x18D PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH3 0x16E PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP3 PUSH3 0x18D PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP POP PUSH3 0x72B JUMP JUMPDEST DUP1 PUSH1 0x2 SWAP1 DUP2 PUSH3 0x189 SWAP2 SWAP1 PUSH3 0x57E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1A1 DUP4 DUP4 PUSH3 0x291 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x286 JUMPI PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH3 0x222 PUSH3 0x2FC PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH3 0x28B JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x386 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x39C JUMPI PUSH3 0x39B PUSH3 0x33E JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x406 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x3C7 JUMP JUMPDEST PUSH3 0x412 DUP7 DUP4 PUSH3 0x3C7 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x45F PUSH3 0x459 PUSH3 0x453 DUP5 PUSH3 0x42A JUMP JUMPDEST PUSH3 0x434 JUMP JUMPDEST PUSH3 0x42A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x47B DUP4 PUSH3 0x43E JUMP JUMPDEST PUSH3 0x493 PUSH3 0x48A DUP3 PUSH3 0x466 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x3D4 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x4AA PUSH3 0x49B JUMP JUMPDEST PUSH3 0x4B7 DUP2 DUP5 DUP5 PUSH3 0x470 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x4DF JUMPI PUSH3 0x4D3 PUSH1 0x0 DUP3 PUSH3 0x4A0 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x4BD JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x52E JUMPI PUSH3 0x4F8 DUP2 PUSH3 0x3A2 JUMP JUMPDEST PUSH3 0x503 DUP5 PUSH3 0x3B7 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x513 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x52B PUSH3 0x522 DUP6 PUSH3 0x3B7 JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x4BC JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x553 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x533 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x56E DUP4 DUP4 PUSH3 0x540 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x589 DUP3 PUSH3 0x304 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x5A5 JUMPI PUSH3 0x5A4 PUSH3 0x30F JUMP JUMPDEST JUMPDEST PUSH3 0x5B1 DUP3 SLOAD PUSH3 0x36D JUMP JUMPDEST PUSH3 0x5BE DUP3 DUP3 DUP6 PUSH3 0x4E3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x5F6 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x5E1 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x5ED DUP6 DUP3 PUSH3 0x560 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x65D JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x606 DUP7 PUSH3 0x3A2 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x630 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x609 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x650 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x64C PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x540 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x697 DUP3 PUSH3 0x66A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x6A9 DUP2 PUSH3 0x68A JUMP JUMPDEST DUP2 EQ PUSH3 0x6B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x6C9 DUP2 PUSH3 0x69E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x6EB JUMPI PUSH3 0x6EA PUSH3 0x665 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x6FB DUP7 DUP3 DUP8 ADD PUSH3 0x6B8 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH3 0x70E DUP7 DUP3 DUP8 ADD PUSH3 0x6B8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH3 0x721 DUP7 DUP3 DUP8 ADD PUSH3 0x6B8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x3DAD DUP1 PUSH3 0x73B PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x205 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6B20C454 GT PUSH2 0x11A JUMPI DUP1 PUSH4 0xD5391393 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xE985E9C5 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x5E6 JUMPI DUP1 PUSH4 0xEE037BF9 EQ PUSH2 0x616 JUMPI DUP1 PUSH4 0xF07F5520 EQ PUSH2 0x646 JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x676 JUMPI DUP1 PUSH4 0xF5298ACA EQ PUSH2 0x692 JUMPI PUSH2 0x205 JUMP JUMPDEST DUP1 PUSH4 0xD5391393 EQ PUSH2 0x55E JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x57C JUMPI DUP1 PUSH4 0xE5569773 EQ PUSH2 0x598 JUMPI DUP1 PUSH4 0xE63AB1E9 EQ PUSH2 0x5C8 JUMPI PUSH2 0x205 JUMP JUMPDEST DUP1 PUSH4 0x91D14854 GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x4C4 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x4F4 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x512 JUMPI DUP1 PUSH4 0xBD85B039 EQ PUSH2 0x52E JUMPI PUSH2 0x205 JUMP JUMPDEST DUP1 PUSH4 0x6B20C454 EQ PUSH2 0x464 JUMPI DUP1 PUSH4 0x731133E9 EQ PUSH2 0x480 JUMPI DUP1 PUSH4 0x7F345710 EQ PUSH2 0x49C JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x4BA JUMPI PUSH2 0x205 JUMP JUMPDEST DUP1 PUSH4 0x248A9CA3 GT PUSH2 0x19D JUMPI DUP1 PUSH4 0x3F4BA83A GT PUSH2 0x16C JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x3C0 JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x3CA JUMPI DUP1 PUSH4 0x4F558E79 EQ PUSH2 0x3FA JUMPI DUP1 PUSH4 0x55F804B3 EQ PUSH2 0x42A JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x446 JUMPI PUSH2 0x205 JUMP JUMPDEST DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x33C JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x36C JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x388 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x3A4 JUMPI PUSH2 0x205 JUMP JUMPDEST DUP1 PUSH4 0xE89341C GT PUSH2 0x1D9 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0x2B6 JUMPI DUP1 PUSH4 0x162094C4 EQ PUSH2 0x2E6 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x302 JUMPI DUP1 PUSH4 0x1F7FDFFA EQ PUSH2 0x320 JUMPI PUSH2 0x205 JUMP JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x20A JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x23A JUMPI DUP1 PUSH4 0x2FE5305 EQ PUSH2 0x26A JUMPI DUP1 PUSH4 0x9DCA9CE EQ PUSH2 0x286 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x224 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21F SWAP2 SWAP1 PUSH2 0x28F9 JUMP JUMPDEST PUSH2 0x6AE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x231 SWAP2 SWAP1 PUSH2 0x2948 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x254 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x24F SWAP2 SWAP1 PUSH2 0x29BB JUMP JUMPDEST PUSH2 0x708 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x261 SWAP2 SWAP1 PUSH2 0x2A03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x284 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x27F SWAP2 SWAP1 PUSH2 0x2B64 JUMP JUMPDEST PUSH2 0x71A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2A0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29B SWAP2 SWAP1 PUSH2 0x2CAB JUMP JUMPDEST PUSH2 0x751 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AD SWAP2 SWAP1 PUSH2 0x2DB2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2CB SWAP2 SWAP1 PUSH2 0x2DD4 JUMP JUMPDEST PUSH2 0x837 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2DD SWAP2 SWAP1 PUSH2 0x2E80 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x300 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2FB SWAP2 SWAP1 PUSH2 0x2EA2 JUMP JUMPDEST PUSH2 0x849 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x30A PUSH2 0x882 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x317 SWAP2 SWAP1 PUSH2 0x2948 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x33A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x335 SWAP2 SWAP1 PUSH2 0x3062 JUMP JUMPDEST PUSH2 0x88C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x356 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x351 SWAP2 SWAP1 PUSH2 0x311D JUMP JUMPDEST PUSH2 0x8C9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x363 SWAP2 SWAP1 PUSH2 0x3159 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x386 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x381 SWAP2 SWAP1 PUSH2 0x3174 JUMP JUMPDEST PUSH2 0x8E9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3A2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x39D SWAP2 SWAP1 PUSH2 0x3243 JUMP JUMPDEST PUSH2 0x991 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3BE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3B9 SWAP2 SWAP1 PUSH2 0x3243 JUMP JUMPDEST PUSH2 0x9B3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3C8 PUSH2 0xA2E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3E4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3DF SWAP2 SWAP1 PUSH2 0x3346 JUMP JUMPDEST PUSH2 0xA63 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3F1 SWAP2 SWAP1 PUSH2 0x2DB2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x414 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x40F SWAP2 SWAP1 PUSH2 0x2DD4 JUMP JUMPDEST PUSH2 0xB72 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x421 SWAP2 SWAP1 PUSH2 0x2A03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x444 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x43F SWAP2 SWAP1 PUSH2 0x2B64 JUMP JUMPDEST PUSH2 0xB86 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x44E PUSH2 0xBBD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x45B SWAP2 SWAP1 PUSH2 0x2A03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x47E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x479 SWAP2 SWAP1 PUSH2 0x33BE JUMP JUMPDEST PUSH2 0xBD4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x49A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x495 SWAP2 SWAP1 PUSH2 0x3449 JUMP JUMPDEST PUSH2 0xC80 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4A4 PUSH2 0xCBD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4B1 SWAP2 SWAP1 PUSH2 0x3159 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4C2 PUSH2 0xCE1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4DE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4D9 SWAP2 SWAP1 PUSH2 0x3243 JUMP JUMPDEST PUSH2 0xD16 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4EB SWAP2 SWAP1 PUSH2 0x2A03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4FC PUSH2 0xD81 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x509 SWAP2 SWAP1 PUSH2 0x3159 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x52C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x527 SWAP2 SWAP1 PUSH2 0x34F8 JUMP JUMPDEST PUSH2 0xD88 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x548 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x543 SWAP2 SWAP1 PUSH2 0x2DD4 JUMP JUMPDEST PUSH2 0xD9E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x555 SWAP2 SWAP1 PUSH2 0x2948 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x566 PUSH2 0xDBB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x573 SWAP2 SWAP1 PUSH2 0x3159 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x596 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x591 SWAP2 SWAP1 PUSH2 0x3243 JUMP JUMPDEST PUSH2 0xDDF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5AD SWAP2 SWAP1 PUSH2 0x311D JUMP JUMPDEST PUSH2 0xE01 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5BF SWAP2 SWAP1 PUSH2 0x2948 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5D0 PUSH2 0xE1E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5DD SWAP2 SWAP1 PUSH2 0x3159 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x600 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5FB SWAP2 SWAP1 PUSH2 0x3538 JUMP JUMPDEST PUSH2 0xE42 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x60D SWAP2 SWAP1 PUSH2 0x2A03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x630 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x62B SWAP2 SWAP1 PUSH2 0x2DD4 JUMP JUMPDEST PUSH2 0xED6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x63D SWAP2 SWAP1 PUSH2 0x3159 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x660 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x65B SWAP2 SWAP1 PUSH2 0x311D JUMP JUMPDEST PUSH2 0xEF3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x66D SWAP2 SWAP1 PUSH2 0x2948 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x690 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x68B SWAP2 SWAP1 PUSH2 0x3578 JUMP JUMPDEST PUSH2 0xF30 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6AC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6A7 SWAP2 SWAP1 PUSH2 0x360F JUMP JUMPDEST PUSH2 0xFD8 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x713 DUP3 PUSH2 0x1084 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x7804D923F43A17D325D77E781528E0793B2EDD9890AB45FC64EFD7B4B427744C PUSH2 0x744 DUP2 PUSH2 0x10FE JUMP JUMPDEST PUSH2 0x74D DUP3 PUSH2 0x1112 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 PUSH2 0x77D DUP2 PUSH2 0x10FE JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x79A JUMPI PUSH2 0x799 PUSH2 0x2A39 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x7C8 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x82C JUMPI PUSH2 0x7FA DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x7ED JUMPI PUSH2 0x7EC PUSH2 0x3662 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1125 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x80D JUMPI PUSH2 0x80C PUSH2 0x3662 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 DUP1 PUSH2 0x824 SWAP1 PUSH2 0x36C0 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x7CE JUMP JUMPDEST POP DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x842 DUP3 PUSH2 0x11DF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x7804D923F43A17D325D77E781528E0793B2EDD9890AB45FC64EFD7B4B427744C PUSH2 0x873 DUP2 PUSH2 0x10FE JUMP JUMPDEST PUSH2 0x87D DUP4 DUP4 PUSH2 0x12C4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 PUSH2 0x8B6 DUP2 PUSH2 0x10FE JUMP JUMPDEST PUSH2 0x8C2 DUP6 DUP6 DUP6 DUP6 PUSH2 0x1329 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8F3 PUSH2 0x13AF JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x938 JUMPI POP PUSH2 0x936 DUP7 DUP3 PUSH2 0xE42 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x97C JUMPI DUP1 DUP7 PUSH1 0x40 MLOAD PUSH32 0xE237D92200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x973 SWAP3 SWAP2 SWAP1 PUSH2 0x3717 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x989 DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0x13B7 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x99A DUP3 PUSH2 0x8C9 JUMP JUMPDEST PUSH2 0x9A3 DUP2 PUSH2 0x10FE JUMP JUMPDEST PUSH2 0x9AD DUP4 DUP4 PUSH2 0x14AF JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x9BB PUSH2 0x13AF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xA1F JUMPI PUSH1 0x40 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA29 DUP3 DUP3 PUSH2 0x15A1 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A PUSH2 0xA58 DUP2 PUSH2 0x10FE JUMP JUMPDEST PUSH2 0xA60 PUSH2 0x1694 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0xAAF JUMPI DUP2 MLOAD DUP4 MLOAD PUSH1 0x40 MLOAD PUSH32 0x5B05999100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAA6 SWAP3 SWAP2 SWAP1 PUSH2 0x3740 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xACC JUMPI PUSH2 0xACB PUSH2 0x2A39 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xAFA JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0xB67 JUMPI PUSH2 0xB37 PUSH2 0xB1F DUP3 DUP8 PUSH2 0x16F7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xB32 DUP4 DUP8 PUSH2 0x170B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x6AE JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xB4A JUMPI PUSH2 0xB49 PUSH2 0x3662 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 PUSH2 0xB60 SWAP1 PUSH2 0x36C0 JUMP JUMPDEST SWAP1 POP PUSH2 0xB00 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xB7E DUP4 PUSH2 0xD9E JUMP JUMPDEST GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x7804D923F43A17D325D77E781528E0793B2EDD9890AB45FC64EFD7B4B427744C PUSH2 0xBB0 DUP2 PUSH2 0x10FE JUMP JUMPDEST PUSH2 0xBB9 DUP3 PUSH2 0x171F JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xBDC PUSH2 0x13AF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0xC25 JUMPI POP PUSH2 0xC23 DUP4 PUSH2 0xC1E PUSH2 0x13AF JUMP JUMPDEST PUSH2 0xE42 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0xC70 JUMPI PUSH2 0xC32 PUSH2 0x13AF JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD PUSH32 0xE237D92200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC67 SWAP3 SWAP2 SWAP1 PUSH2 0x3717 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC7B DUP4 DUP4 DUP4 PUSH2 0x1732 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 PUSH2 0xCAA DUP2 PUSH2 0x10FE JUMP JUMPDEST PUSH2 0xCB6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x17C6 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH32 0x7804D923F43A17D325D77E781528E0793B2EDD9890AB45FC64EFD7B4B427744C DUP2 JUMP JUMPDEST PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A PUSH2 0xD0B DUP2 PUSH2 0x10FE JUMP JUMPDEST PUSH2 0xD13 PUSH2 0x185F JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH2 0xD9A PUSH2 0xD93 PUSH2 0x13AF JUMP JUMPDEST DUP4 DUP4 PUSH2 0x18C2 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP2 JUMP JUMPDEST PUSH2 0xDE8 DUP3 PUSH2 0x8C9 JUMP JUMPDEST PUSH2 0xDF1 DUP2 PUSH2 0x10FE JUMP JUMPDEST PUSH2 0xDFB DUP4 DUP4 PUSH2 0x15A1 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 PUSH2 0xF1F DUP2 PUSH2 0x10FE JUMP JUMPDEST PUSH2 0xF28 DUP4 PUSH2 0x1125 JUMP JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF3A PUSH2 0x13AF JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0xF7F JUMPI POP PUSH2 0xF7D DUP7 DUP3 PUSH2 0xE42 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0xFC3 JUMPI DUP1 DUP7 PUSH1 0x40 MLOAD PUSH32 0xE237D92200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFBA SWAP3 SWAP2 SWAP1 PUSH2 0x3717 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xFD0 DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0x1A32 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xFE0 PUSH2 0x13AF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x1029 JUMPI POP PUSH2 0x1027 DUP4 PUSH2 0x1022 PUSH2 0x13AF JUMP JUMPDEST PUSH2 0xE42 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x1074 JUMPI PUSH2 0x1036 PUSH2 0x13AF JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD PUSH32 0xE237D92200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x106B SWAP3 SWAP2 SWAP1 PUSH2 0x3717 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x107F DUP4 DUP4 DUP4 PUSH2 0x1B3D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x10F7 JUMPI POP PUSH2 0x10F6 DUP3 PUSH2 0x1BE4 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x110F DUP2 PUSH2 0x110A PUSH2 0x13AF JUMP JUMPDEST PUSH2 0x1CC6 JUMP JUMPDEST POP JUMP JUMPDEST DUP1 PUSH1 0x2 SWAP1 DUP2 PUSH2 0x1121 SWAP2 SWAP1 PUSH2 0x3975 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x9 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ PUSH2 0x115C JUMPI PUSH1 0x9 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH2 0x11DA JUMP JUMPDEST PUSH1 0x0 PUSH1 0xB PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x1171 SWAP1 PUSH2 0x36C0 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE SWAP1 POP DUP1 PUSH1 0x9 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0xA PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 DUP4 PUSH32 0xEA3E0ACFC42D04765CB7947585765A242D0FD12A634EDFB22C44CF42A363B2B8 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 SWAP2 POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH2 0x1201 SWAP1 PUSH2 0x3798 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x122D SWAP1 PUSH2 0x3798 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x127A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x124F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x127A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x125D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x1298 JUMPI PUSH2 0x1293 DUP4 PUSH2 0x1D17 JUMP JUMPDEST PUSH2 0x12BC JUMP JUMPDEST PUSH1 0x7 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x12AC SWAP3 SWAP2 SWAP1 PUSH2 0x3B06 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 PUSH1 0x8 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 DUP2 PUSH2 0x12E4 SWAP2 SWAP1 PUSH2 0x3975 JUMP JUMPDEST POP DUP2 PUSH32 0x6BB7FF708619BA0610CBA295A58592E0451DEE2622938C8755667688DAF3529B PUSH2 0x1310 DUP5 PUSH2 0x837 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x131D SWAP2 SWAP1 PUSH2 0x2E80 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x139B JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1392 SWAP2 SWAP1 PUSH2 0x3B2A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x13A9 PUSH1 0x0 DUP6 DUP6 DUP6 DUP6 PUSH2 0x1DAB JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1429 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1420 SWAP2 SWAP1 PUSH2 0x3B2A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x149B JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1A8351400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1492 SWAP2 SWAP1 PUSH2 0x3B2A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x14A8 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x1DAB JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14BB DUP4 DUP4 PUSH2 0xD16 JUMP JUMPDEST PUSH2 0x1596 JUMPI PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x1533 PUSH2 0x13AF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x159B JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15AD DUP4 DUP4 PUSH2 0xD16 JUMP JUMPDEST ISZERO PUSH2 0x1689 JUMPI PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x1626 PUSH2 0x13AF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x168E JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x169C PUSH2 0x1E5D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0x16E0 PUSH2 0x13AF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16ED SWAP2 SWAP1 PUSH2 0x3B2A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MUL PUSH1 0x20 DUP5 ADD ADD MLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MUL PUSH1 0x20 DUP5 ADD ADD MLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 PUSH1 0x7 SWAP1 DUP2 PUSH2 0x172E SWAP2 SWAP1 PUSH2 0x3975 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x17A4 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1A8351400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x179B SWAP2 SWAP1 PUSH2 0x3B2A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x17C1 DUP4 PUSH1 0x0 DUP5 DUP5 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1DAB JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1838 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x182F SWAP2 SWAP1 PUSH2 0x3B2A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1845 DUP6 DUP6 PUSH2 0x1E9D JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x1857 PUSH1 0x0 DUP8 DUP5 DUP5 DUP8 PUSH2 0x1DAB JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1867 PUSH2 0x1ECD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x18AB PUSH2 0x13AF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18B8 SWAP2 SWAP1 PUSH2 0x3B2A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1934 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xCED3E10000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x192B SWAP2 SWAP1 PUSH2 0x3B2A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1A25 SWAP2 SWAP1 PUSH2 0x2A03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1AA4 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A9B SWAP2 SWAP1 PUSH2 0x3B2A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1B16 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1A8351400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B0D SWAP2 SWAP1 PUSH2 0x3B2A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1B23 DUP6 DUP6 PUSH2 0x1E9D JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x1B34 DUP8 DUP8 DUP5 DUP5 DUP8 PUSH2 0x1DAB JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1BAF JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1A8351400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BA6 SWAP2 SWAP1 PUSH2 0x3B2A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1BBC DUP5 DUP5 PUSH2 0x1E9D JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x1BDD DUP6 PUSH1 0x0 DUP5 DUP5 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1DAB JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xD9B67A2600000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x1CAF JUMPI POP PUSH32 0xE89341C00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x1CBF JUMPI POP PUSH2 0x1CBE DUP3 PUSH2 0x1F0E JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1CD0 DUP3 DUP3 PUSH2 0xD16 JUMP JUMPDEST PUSH2 0x1D13 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D0A SWAP3 SWAP2 SWAP1 PUSH2 0x3B45 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x1D26 SWAP1 PUSH2 0x3798 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1D52 SWAP1 PUSH2 0x3798 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1D9F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1D74 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1D9F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1D82 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1DB7 DUP6 DUP6 DUP6 DUP6 PUSH2 0x1F78 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1E56 JUMPI PUSH1 0x0 PUSH2 0x1DF5 PUSH2 0x13AF JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP5 MLOAD SUB PUSH2 0x1E45 JUMPI PUSH1 0x0 PUSH2 0x1E16 PUSH1 0x0 DUP7 PUSH2 0x170B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1E2E PUSH1 0x0 DUP7 PUSH2 0x170B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x1E3E DUP4 DUP10 DUP10 DUP6 DUP6 DUP10 PUSH2 0x1F8A JUMP JUMPDEST POP POP PUSH2 0x1E54 JUMP JUMPDEST PUSH2 0x1E53 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x213E JUMP JUMPDEST JUMPDEST POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1E65 PUSH2 0xBBD JUMP JUMPDEST PUSH2 0x1E9B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8DFC202B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1 DUP3 MSTORE DUP4 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH1 0x1 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD PUSH1 0x40 MSTORE SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1ED5 PUSH2 0xBBD JUMP JUMPDEST ISZERO PUSH2 0x1F0C JUMPI PUSH1 0x40 MLOAD PUSH32 0xD93C066500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F84 DUP5 DUP5 DUP5 DUP5 PUSH2 0x22F2 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x2136 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF23A6E61 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1FEB SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3BC3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x2027 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2024 SWAP2 SWAP1 PUSH2 0x3C32 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x20AB JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2057 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x205C JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x20A3 JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x209A SWAP2 SWAP1 PUSH2 0x3B2A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0xF23A6E61 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x2134 JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x212B SWAP2 SWAP1 PUSH2 0x3B2A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x22EA JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xBC197C81 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x219F SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3C5F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x21DB JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x21D8 SWAP2 SWAP1 PUSH2 0x3C32 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x225F JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x220B JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2210 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x2257 JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x224E SWAP2 SWAP1 PUSH2 0x3B2A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0xBC197C81 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x22E8 JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x22DF SWAP2 SWAP1 PUSH2 0x3B2A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x22FE DUP5 DUP5 DUP5 DUP5 PUSH2 0x2489 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x23CE JUMPI PUSH1 0x0 DUP1 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x23B2 JUMPI PUSH1 0x0 PUSH2 0x2354 DUP3 DUP6 PUSH2 0x170B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x5 PUSH1 0x0 PUSH2 0x236E DUP6 DUP10 PUSH2 0x170B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x238B SWAP2 SWAP1 PUSH2 0x3CC7 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 DUP4 PUSH2 0x239E SWAP2 SWAP1 PUSH2 0x3CC7 JUMP JUMPDEST SWAP3 POP POP DUP1 PUSH2 0x23AB SWAP1 PUSH2 0x36C0 JUMP JUMPDEST SWAP1 POP PUSH2 0x2336 JUMP JUMPDEST POP DUP1 PUSH1 0x6 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x23C5 SWAP2 SWAP1 PUSH2 0x3CC7 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2483 JUMPI PUSH1 0x0 DUP1 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x2470 JUMPI PUSH1 0x0 PUSH2 0x2424 DUP3 DUP6 PUSH2 0x170B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x5 PUSH1 0x0 PUSH2 0x243E DUP6 DUP10 PUSH2 0x170B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 DUP4 ADD SWAP3 POP POP DUP1 PUSH2 0x2469 SWAP1 PUSH2 0x36C0 JUMP JUMPDEST SWAP1 POP PUSH2 0x2406 JUMP JUMPDEST POP DUP1 PUSH1 0x6 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x2491 PUSH2 0x1ECD JUMP JUMPDEST PUSH2 0x249D DUP5 DUP5 DUP5 DUP5 PUSH2 0x24A3 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ PUSH2 0x24ED JUMPI DUP2 MLOAD DUP2 MLOAD PUSH1 0x40 MLOAD PUSH32 0x5B05999100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x24E4 SWAP3 SWAP2 SWAP1 PUSH2 0x3740 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x24F7 PUSH2 0x13AF JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x270C JUMPI PUSH1 0x0 PUSH2 0x251A DUP3 DUP7 PUSH2 0x170B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2531 DUP4 DUP7 PUSH2 0x170B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x265E JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x2606 JUMPI DUP9 DUP2 DUP4 DUP6 PUSH1 0x40 MLOAD PUSH32 0x3DEE4C500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x25FD SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3CFB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x26F9 JUMPI DUP1 PUSH1 0x0 DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x26F1 SWAP2 SWAP1 PUSH2 0x3CC7 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST POP POP DUP1 PUSH2 0x2705 SWAP1 PUSH2 0x36C0 JUMP JUMPDEST SWAP1 POP PUSH2 0x24FC JUMP JUMPDEST POP PUSH1 0x1 DUP4 MLOAD SUB PUSH2 0x27CB JUMPI PUSH1 0x0 PUSH2 0x272C PUSH1 0x0 DUP6 PUSH2 0x170B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2744 PUSH1 0x0 DUP6 PUSH2 0x170B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x27BC SWAP3 SWAP2 SWAP1 PUSH2 0x3740 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP PUSH2 0x284A JUMP JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x2841 SWAP3 SWAP2 SWAP1 PUSH2 0x3D40 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2890 DUP3 PUSH2 0x2865 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x28A0 DUP2 PUSH2 0x2885 JUMP JUMPDEST DUP2 EQ PUSH2 0x28AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x28BD DUP2 PUSH2 0x2897 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x28D6 DUP2 PUSH2 0x28C3 JUMP JUMPDEST DUP2 EQ PUSH2 0x28E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x28F3 DUP2 PUSH2 0x28CD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2910 JUMPI PUSH2 0x290F PUSH2 0x285B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x291E DUP6 DUP3 DUP7 ADD PUSH2 0x28AE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x292F DUP6 DUP3 DUP7 ADD PUSH2 0x28E4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x2942 DUP2 PUSH2 0x28C3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x295D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2939 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2998 DUP2 PUSH2 0x2963 JUMP JUMPDEST DUP2 EQ PUSH2 0x29A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x29B5 DUP2 PUSH2 0x298F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x29D1 JUMPI PUSH2 0x29D0 PUSH2 0x285B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x29DF DUP5 DUP3 DUP6 ADD PUSH2 0x29A6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x29FD DUP2 PUSH2 0x29E8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2A18 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x29F4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x2A71 DUP3 PUSH2 0x2A28 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x2A90 JUMPI PUSH2 0x2A8F PUSH2 0x2A39 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2AA3 PUSH2 0x2851 JUMP JUMPDEST SWAP1 POP PUSH2 0x2AAF DUP3 DUP3 PUSH2 0x2A68 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2ACF JUMPI PUSH2 0x2ACE PUSH2 0x2A39 JUMP JUMPDEST JUMPDEST PUSH2 0x2AD8 DUP3 PUSH2 0x2A28 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B07 PUSH2 0x2B02 DUP5 PUSH2 0x2AB4 JUMP JUMPDEST PUSH2 0x2A99 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x2B23 JUMPI PUSH2 0x2B22 PUSH2 0x2A23 JUMP JUMPDEST JUMPDEST PUSH2 0x2B2E DUP5 DUP3 DUP6 PUSH2 0x2AE5 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2B4B JUMPI PUSH2 0x2B4A PUSH2 0x2A1E JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2B5B DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2AF4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2B7A JUMPI PUSH2 0x2B79 PUSH2 0x285B JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2B98 JUMPI PUSH2 0x2B97 PUSH2 0x2860 JUMP JUMPDEST JUMPDEST PUSH2 0x2BA4 DUP5 DUP3 DUP6 ADD PUSH2 0x2B36 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2BC8 JUMPI PUSH2 0x2BC7 PUSH2 0x2A39 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2BF1 DUP2 PUSH2 0x2BDE JUMP JUMPDEST DUP2 EQ PUSH2 0x2BFC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2C0E DUP2 PUSH2 0x2BE8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C27 PUSH2 0x2C22 DUP5 PUSH2 0x2BAD JUMP JUMPDEST PUSH2 0x2A99 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x2C4A JUMPI PUSH2 0x2C49 PUSH2 0x2BD9 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2C73 JUMPI DUP1 PUSH2 0x2C5F DUP9 DUP3 PUSH2 0x2BFF JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2C4C JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2C92 JUMPI PUSH2 0x2C91 PUSH2 0x2A1E JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2CA2 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2C14 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2CC1 JUMPI PUSH2 0x2CC0 PUSH2 0x285B JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2CDF JUMPI PUSH2 0x2CDE PUSH2 0x2860 JUMP JUMPDEST JUMPDEST PUSH2 0x2CEB DUP5 DUP3 DUP6 ADD PUSH2 0x2C7D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2D29 DUP2 PUSH2 0x28C3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D3B DUP4 DUP4 PUSH2 0x2D20 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D5F DUP3 PUSH2 0x2CF4 JUMP JUMPDEST PUSH2 0x2D69 DUP2 DUP6 PUSH2 0x2CFF JUMP JUMPDEST SWAP4 POP PUSH2 0x2D74 DUP4 PUSH2 0x2D10 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2DA5 JUMPI DUP2 MLOAD PUSH2 0x2D8C DUP9 DUP3 PUSH2 0x2D2F JUMP JUMPDEST SWAP8 POP PUSH2 0x2D97 DUP4 PUSH2 0x2D47 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2D78 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2DCC DUP2 DUP5 PUSH2 0x2D54 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2DEA JUMPI PUSH2 0x2DE9 PUSH2 0x285B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2DF8 DUP5 DUP3 DUP6 ADD PUSH2 0x28E4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2E3B JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2E20 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E52 DUP3 PUSH2 0x2E01 JUMP JUMPDEST PUSH2 0x2E5C DUP2 DUP6 PUSH2 0x2E0C JUMP JUMPDEST SWAP4 POP PUSH2 0x2E6C DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2E1D JUMP JUMPDEST PUSH2 0x2E75 DUP2 PUSH2 0x2A28 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2E9A DUP2 DUP5 PUSH2 0x2E47 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2EB9 JUMPI PUSH2 0x2EB8 PUSH2 0x285B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2EC7 DUP6 DUP3 DUP7 ADD PUSH2 0x28E4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2EE8 JUMPI PUSH2 0x2EE7 PUSH2 0x2860 JUMP JUMPDEST JUMPDEST PUSH2 0x2EF4 DUP6 DUP3 DUP7 ADD PUSH2 0x2B36 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2F19 JUMPI PUSH2 0x2F18 PUSH2 0x2A39 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F3D PUSH2 0x2F38 DUP5 PUSH2 0x2EFE JUMP JUMPDEST PUSH2 0x2A99 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x2F60 JUMPI PUSH2 0x2F5F PUSH2 0x2BD9 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2F89 JUMPI DUP1 PUSH2 0x2F75 DUP9 DUP3 PUSH2 0x28E4 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2F62 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2FA8 JUMPI PUSH2 0x2FA7 PUSH2 0x2A1E JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2FB8 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2F2A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2FDC JUMPI PUSH2 0x2FDB PUSH2 0x2A39 JUMP JUMPDEST JUMPDEST PUSH2 0x2FE5 DUP3 PUSH2 0x2A28 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3005 PUSH2 0x3000 DUP5 PUSH2 0x2FC1 JUMP JUMPDEST PUSH2 0x2A99 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x3021 JUMPI PUSH2 0x3020 PUSH2 0x2A23 JUMP JUMPDEST JUMPDEST PUSH2 0x302C DUP5 DUP3 DUP6 PUSH2 0x2AE5 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3049 JUMPI PUSH2 0x3048 PUSH2 0x2A1E JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x3059 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2FF2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x307C JUMPI PUSH2 0x307B PUSH2 0x285B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x308A DUP8 DUP3 DUP9 ADD PUSH2 0x28AE JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x30AB JUMPI PUSH2 0x30AA PUSH2 0x2860 JUMP JUMPDEST JUMPDEST PUSH2 0x30B7 DUP8 DUP3 DUP9 ADD PUSH2 0x2F93 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x30D8 JUMPI PUSH2 0x30D7 PUSH2 0x2860 JUMP JUMPDEST JUMPDEST PUSH2 0x30E4 DUP8 DUP3 DUP9 ADD PUSH2 0x2F93 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3105 JUMPI PUSH2 0x3104 PUSH2 0x2860 JUMP JUMPDEST JUMPDEST PUSH2 0x3111 DUP8 DUP3 DUP9 ADD PUSH2 0x3034 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3133 JUMPI PUSH2 0x3132 PUSH2 0x285B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3141 DUP5 DUP3 DUP6 ADD PUSH2 0x2BFF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3153 DUP2 PUSH2 0x2BDE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x316E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x314A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x3190 JUMPI PUSH2 0x318F PUSH2 0x285B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x319E DUP9 DUP3 DUP10 ADD PUSH2 0x28AE JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x31AF DUP9 DUP3 DUP10 ADD PUSH2 0x28AE JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x31D0 JUMPI PUSH2 0x31CF PUSH2 0x2860 JUMP JUMPDEST JUMPDEST PUSH2 0x31DC DUP9 DUP3 DUP10 ADD PUSH2 0x2F93 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x31FD JUMPI PUSH2 0x31FC PUSH2 0x2860 JUMP JUMPDEST JUMPDEST PUSH2 0x3209 DUP9 DUP3 DUP10 ADD PUSH2 0x2F93 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x322A JUMPI PUSH2 0x3229 PUSH2 0x2860 JUMP JUMPDEST JUMPDEST PUSH2 0x3236 DUP9 DUP3 DUP10 ADD PUSH2 0x3034 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x325A JUMPI PUSH2 0x3259 PUSH2 0x285B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3268 DUP6 DUP3 DUP7 ADD PUSH2 0x2BFF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3279 DUP6 DUP3 DUP7 ADD PUSH2 0x28AE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x329E JUMPI PUSH2 0x329D PUSH2 0x2A39 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x32C2 PUSH2 0x32BD DUP5 PUSH2 0x3283 JUMP JUMPDEST PUSH2 0x2A99 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x32E5 JUMPI PUSH2 0x32E4 PUSH2 0x2BD9 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x330E JUMPI DUP1 PUSH2 0x32FA DUP9 DUP3 PUSH2 0x28AE JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x32E7 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x332D JUMPI PUSH2 0x332C PUSH2 0x2A1E JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x333D DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x32AF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x335D JUMPI PUSH2 0x335C PUSH2 0x285B JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x337B JUMPI PUSH2 0x337A PUSH2 0x2860 JUMP JUMPDEST JUMPDEST PUSH2 0x3387 DUP6 DUP3 DUP7 ADD PUSH2 0x3318 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x33A8 JUMPI PUSH2 0x33A7 PUSH2 0x2860 JUMP JUMPDEST JUMPDEST PUSH2 0x33B4 DUP6 DUP3 DUP7 ADD PUSH2 0x2F93 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x33D7 JUMPI PUSH2 0x33D6 PUSH2 0x285B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x33E5 DUP7 DUP3 DUP8 ADD PUSH2 0x28AE JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3406 JUMPI PUSH2 0x3405 PUSH2 0x2860 JUMP JUMPDEST JUMPDEST PUSH2 0x3412 DUP7 DUP3 DUP8 ADD PUSH2 0x2F93 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3433 JUMPI PUSH2 0x3432 PUSH2 0x2860 JUMP JUMPDEST JUMPDEST PUSH2 0x343F DUP7 DUP3 DUP8 ADD PUSH2 0x2F93 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x3463 JUMPI PUSH2 0x3462 PUSH2 0x285B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3471 DUP8 DUP3 DUP9 ADD PUSH2 0x28AE JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x3482 DUP8 DUP3 DUP9 ADD PUSH2 0x28E4 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x3493 DUP8 DUP3 DUP9 ADD PUSH2 0x28E4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x34B4 JUMPI PUSH2 0x34B3 PUSH2 0x2860 JUMP JUMPDEST JUMPDEST PUSH2 0x34C0 DUP8 DUP3 DUP9 ADD PUSH2 0x3034 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH2 0x34D5 DUP2 PUSH2 0x29E8 JUMP JUMPDEST DUP2 EQ PUSH2 0x34E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x34F2 DUP2 PUSH2 0x34CC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x350F JUMPI PUSH2 0x350E PUSH2 0x285B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x351D DUP6 DUP3 DUP7 ADD PUSH2 0x28AE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x352E DUP6 DUP3 DUP7 ADD PUSH2 0x34E3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x354F JUMPI PUSH2 0x354E PUSH2 0x285B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x355D DUP6 DUP3 DUP7 ADD PUSH2 0x28AE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x356E DUP6 DUP3 DUP7 ADD PUSH2 0x28AE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x3594 JUMPI PUSH2 0x3593 PUSH2 0x285B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x35A2 DUP9 DUP3 DUP10 ADD PUSH2 0x28AE JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x35B3 DUP9 DUP3 DUP10 ADD PUSH2 0x28AE JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x35C4 DUP9 DUP3 DUP10 ADD PUSH2 0x28E4 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x35D5 DUP9 DUP3 DUP10 ADD PUSH2 0x28E4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x35F6 JUMPI PUSH2 0x35F5 PUSH2 0x2860 JUMP JUMPDEST JUMPDEST PUSH2 0x3602 DUP9 DUP3 DUP10 ADD PUSH2 0x3034 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3628 JUMPI PUSH2 0x3627 PUSH2 0x285B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3636 DUP7 DUP3 DUP8 ADD PUSH2 0x28AE JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x3647 DUP7 DUP3 DUP8 ADD PUSH2 0x28E4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x3658 DUP7 DUP3 DUP8 ADD PUSH2 0x28E4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x36CB DUP3 PUSH2 0x28C3 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x36FD JUMPI PUSH2 0x36FC PUSH2 0x3691 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3711 DUP2 PUSH2 0x2885 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x372C PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x3708 JUMP JUMPDEST PUSH2 0x3739 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3708 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3755 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2939 JUMP JUMPDEST PUSH2 0x3762 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2939 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x37B0 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x37C3 JUMPI PUSH2 0x37C2 PUSH2 0x3769 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x382B PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x37EE JUMP JUMPDEST PUSH2 0x3835 DUP7 DUP4 PUSH2 0x37EE JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3872 PUSH2 0x386D PUSH2 0x3868 DUP5 PUSH2 0x28C3 JUMP JUMPDEST PUSH2 0x384D JUMP JUMPDEST PUSH2 0x28C3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x388C DUP4 PUSH2 0x3857 JUMP JUMPDEST PUSH2 0x38A0 PUSH2 0x3898 DUP3 PUSH2 0x3879 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x37FB JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x38B5 PUSH2 0x38A8 JUMP JUMPDEST PUSH2 0x38C0 DUP2 DUP5 DUP5 PUSH2 0x3883 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x38E4 JUMPI PUSH2 0x38D9 PUSH1 0x0 DUP3 PUSH2 0x38AD JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x38C6 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x3929 JUMPI PUSH2 0x38FA DUP2 PUSH2 0x37C9 JUMP JUMPDEST PUSH2 0x3903 DUP5 PUSH2 0x37DE JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x3912 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x3926 PUSH2 0x391E DUP6 PUSH2 0x37DE JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x38C5 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x394C PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x392E JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3965 DUP4 DUP4 PUSH2 0x393B JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x397E DUP3 PUSH2 0x2E01 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3997 JUMPI PUSH2 0x3996 PUSH2 0x2A39 JUMP JUMPDEST JUMPDEST PUSH2 0x39A1 DUP3 SLOAD PUSH2 0x3798 JUMP JUMPDEST PUSH2 0x39AC DUP3 DUP3 DUP6 PUSH2 0x38E8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x39DF JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x39CD JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x39D7 DUP6 DUP3 PUSH2 0x3959 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x3A3F JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x39ED DUP7 PUSH2 0x37C9 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x3A15 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x39F0 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x3A32 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x3A2E PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x393B JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SLOAD PUSH2 0x3A5F DUP2 PUSH2 0x3798 JUMP JUMPDEST PUSH2 0x3A69 DUP2 DUP7 PUSH2 0x3A47 JUMP JUMPDEST SWAP5 POP PUSH1 0x1 DUP3 AND PUSH1 0x0 DUP2 EQ PUSH2 0x3A84 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x3A99 JUMPI PUSH2 0x3ACC JUMP JUMPDEST PUSH1 0xFF NOT DUP4 AND DUP7 MSTORE DUP2 ISZERO ISZERO DUP3 MUL DUP7 ADD SWAP4 POP PUSH2 0x3ACC JUMP JUMPDEST PUSH2 0x3AA2 DUP6 PUSH2 0x37C9 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3AC4 JUMPI DUP2 SLOAD DUP2 DUP10 ADD MSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3AA5 JUMP JUMPDEST DUP4 DUP9 ADD SWAP6 POP POP POP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3AE0 DUP3 PUSH2 0x2E01 JUMP JUMPDEST PUSH2 0x3AEA DUP2 DUP6 PUSH2 0x3A47 JUMP JUMPDEST SWAP4 POP PUSH2 0x3AFA DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2E1D JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B12 DUP3 DUP6 PUSH2 0x3A52 JUMP JUMPDEST SWAP2 POP PUSH2 0x3B1E DUP3 DUP5 PUSH2 0x3AD5 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3B3F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3708 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3B5A PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x3708 JUMP JUMPDEST PUSH2 0x3B67 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x314A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B95 DUP3 PUSH2 0x3B6E JUMP JUMPDEST PUSH2 0x3B9F DUP2 DUP6 PUSH2 0x3B79 JUMP JUMPDEST SWAP4 POP PUSH2 0x3BAF DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2E1D JUMP JUMPDEST PUSH2 0x3BB8 DUP2 PUSH2 0x2A28 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x3BD8 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x3708 JUMP JUMPDEST PUSH2 0x3BE5 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x3708 JUMP JUMPDEST PUSH2 0x3BF2 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x2939 JUMP JUMPDEST PUSH2 0x3BFF PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x2939 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x3C11 DUP2 DUP5 PUSH2 0x3B8A JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3C2C DUP2 PUSH2 0x298F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3C48 JUMPI PUSH2 0x3C47 PUSH2 0x285B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3C56 DUP5 DUP3 DUP6 ADD PUSH2 0x3C1D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x3C74 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x3708 JUMP JUMPDEST PUSH2 0x3C81 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x3708 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x3C93 DUP2 DUP7 PUSH2 0x2D54 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x3CA7 DUP2 DUP6 PUSH2 0x2D54 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x3CBB DUP2 DUP5 PUSH2 0x3B8A JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3CD2 DUP3 PUSH2 0x28C3 JUMP JUMPDEST SWAP2 POP PUSH2 0x3CDD DUP4 PUSH2 0x28C3 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x3CF5 JUMPI PUSH2 0x3CF4 PUSH2 0x3691 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x3D10 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x3708 JUMP JUMPDEST PUSH2 0x3D1D PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x2939 JUMP JUMPDEST PUSH2 0x3D2A PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x2939 JUMP JUMPDEST PUSH2 0x3D37 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x2939 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3D5A DUP2 DUP6 PUSH2 0x2D54 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x3D6E DUP2 DUP5 PUSH2 0x2D54 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADD 0x4F RETURNDATACOPY PUSH28 0xFB2C52C8C5213173FCFACCA42C36254903ED2D1ED85499C71831AFA1 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"719:3852:25:-:0;;;479:28:9;;;;;;;;;;;;;;;;;;;:::i;:::-;;1192:1:25;1161:32;;2644:333;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1249:62:3;;;;;;;;;;;;;;;;;1291:13;1299:4;1291:7;;;:13;;:::i;:::-;1249:62;1241:5:16;1231:7;;:15;;;;;;;;;;;;;;;;;;2793:44:25::2;2232:4:0;2804:18:25::0;::::2;2824:12;2793:10;;;:44;;:::i;:::-;;2847:41;878:28;2875:12;2847:10;;;:41;;:::i;:::-;;2898:31;950:24;2922:6;2898:10;;;:31;;:::i;:::-;;2939;1018:24;2963:6;2939:10;;;:31;;:::i;:::-;;2644:333:::0;;;719:3852;;10290:86:3;10363:6;10356:4;:13;;;;;;:::i;:::-;;10290:86;:::o;6179:316:0:-;6256:4;6277:22;6285:4;6291:7;6277;;;:22;;:::i;:::-;6272:217;;6347:4;6315:6;:12;6322:4;6315:12;;;;;;;;;;;:20;;:29;6336:7;6315:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;6397:12;:10;;;:12;;:::i;:::-;6370:40;;6388:7;6370:40;;6382:4;6370:40;;;;;;;;;;6431:4;6424:11;;;;6272:217;6473:5;6466:12;;6179:316;;;;;:::o;2854:136::-;2931:4;2954:6;:12;2961:4;2954:12;;;;;;;;;;;:20;;:29;2975:7;2954:29;;;;;;;;;;;;;;;;;;;;;;;;;2947:36;;2854:136;;;;:::o;656:96:14:-;709:7;735:10;728:17;;656:96;:::o;7:99:26:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:180::-;160:77;157:1;150:88;257:4;254:1;247:15;281:4;278:1;271:15;298:180;346:77;343:1;336:88;443:4;440:1;433:15;467:4;464:1;457:15;484:320;528:6;565:1;559:4;555:12;545:22;;612:1;606:4;602:12;633:18;623:81;;689:4;681:6;677:17;667:27;;623:81;751:2;743:6;740:14;720:18;717:38;714:84;;770:18;;:::i;:::-;714:84;535:269;484:320;;;:::o;810:141::-;859:4;882:3;874:11;;905:3;902:1;895:14;939:4;936:1;926:18;918:26;;810:141;;;:::o;957:93::-;994:6;1041:2;1036;1029:5;1025:14;1021:23;1011:33;;957:93;;;:::o;1056:107::-;1100:8;1150:5;1144:4;1140:16;1119:37;;1056:107;;;;:::o;1169:393::-;1238:6;1288:1;1276:10;1272:18;1311:97;1341:66;1330:9;1311:97;:::i;:::-;1429:39;1459:8;1448:9;1429:39;:::i;:::-;1417:51;;1501:4;1497:9;1490:5;1486:21;1477:30;;1550:4;1540:8;1536:19;1529:5;1526:30;1516:40;;1245:317;;1169:393;;;;;:::o;1568:77::-;1605:7;1634:5;1623:16;;1568:77;;;:::o;1651:60::-;1679:3;1700:5;1693:12;;1651:60;;;:::o;1717:142::-;1767:9;1800:53;1818:34;1827:24;1845:5;1827:24;:::i;:::-;1818:34;:::i;:::-;1800:53;:::i;:::-;1787:66;;1717:142;;;:::o;1865:75::-;1908:3;1929:5;1922:12;;1865:75;;;:::o;1946:269::-;2056:39;2087:7;2056:39;:::i;:::-;2117:91;2166:41;2190:16;2166:41;:::i;:::-;2158:6;2151:4;2145:11;2117:91;:::i;:::-;2111:4;2104:105;2022:193;1946:269;;;:::o;2221:73::-;2266:3;2221:73;:::o;2300:189::-;2377:32;;:::i;:::-;2418:65;2476:6;2468;2462:4;2418:65;:::i;:::-;2353:136;2300:189;;:::o;2495:186::-;2555:120;2572:3;2565:5;2562:14;2555:120;;;2626:39;2663:1;2656:5;2626:39;:::i;:::-;2599:1;2592:5;2588:13;2579:22;;2555:120;;;2495:186;;:::o;2687:543::-;2788:2;2783:3;2780:11;2777:446;;;2822:38;2854:5;2822:38;:::i;:::-;2906:29;2924:10;2906:29;:::i;:::-;2896:8;2892:44;3089:2;3077:10;3074:18;3071:49;;;3110:8;3095:23;;3071:49;3133:80;3189:22;3207:3;3189:22;:::i;:::-;3179:8;3175:37;3162:11;3133:80;:::i;:::-;2792:431;;2777:446;2687:543;;;:::o;3236:117::-;3290:8;3340:5;3334:4;3330:16;3309:37;;3236:117;;;;:::o;3359:169::-;3403:6;3436:51;3484:1;3480:6;3472:5;3469:1;3465:13;3436:51;:::i;:::-;3432:56;3517:4;3511;3507:15;3497:25;;3410:118;3359:169;;;;:::o;3533:295::-;3609:4;3755:29;3780:3;3774:4;3755:29;:::i;:::-;3747:37;;3817:3;3814:1;3810:11;3804:4;3801:21;3793:29;;3533:295;;;;:::o;3833:1395::-;3950:37;3983:3;3950:37;:::i;:::-;4052:18;4044:6;4041:30;4038:56;;;4074:18;;:::i;:::-;4038:56;4118:38;4150:4;4144:11;4118:38;:::i;:::-;4203:67;4263:6;4255;4249:4;4203:67;:::i;:::-;4297:1;4321:4;4308:17;;4353:2;4345:6;4342:14;4370:1;4365:618;;;;5027:1;5044:6;5041:77;;;5093:9;5088:3;5084:19;5078:26;5069:35;;5041:77;5144:67;5204:6;5197:5;5144:67;:::i;:::-;5138:4;5131:81;5000:222;4335:887;;4365:618;4417:4;4413:9;4405:6;4401:22;4451:37;4483:4;4451:37;:::i;:::-;4510:1;4524:208;4538:7;4535:1;4532:14;4524:208;;;4617:9;4612:3;4608:19;4602:26;4594:6;4587:42;4668:1;4660:6;4656:14;4646:24;;4715:2;4704:9;4700:18;4687:31;;4561:4;4558:1;4554:12;4549:17;;4524:208;;;4760:6;4751:7;4748:19;4745:179;;;4818:9;4813:3;4809:19;4803:26;4861:48;4903:4;4895:6;4891:17;4880:9;4861:48;:::i;:::-;4853:6;4846:64;4768:156;4745:179;4970:1;4966;4958:6;4954:14;4950:22;4944:4;4937:36;4372:611;;;4335:887;;3925:1303;;;3833:1395;;:::o;5315:117::-;5424:1;5421;5414:12;5561:126;5598:7;5638:42;5631:5;5627:54;5616:65;;5561:126;;;:::o;5693:96::-;5730:7;5759:24;5777:5;5759:24;:::i;:::-;5748:35;;5693:96;;;:::o;5795:122::-;5868:24;5886:5;5868:24;:::i;:::-;5861:5;5858:35;5848:63;;5907:1;5904;5897:12;5848:63;5795:122;:::o;5923:143::-;5980:5;6011:6;6005:13;5996:22;;6027:33;6054:5;6027:33;:::i;:::-;5923:143;;;;:::o;6072:663::-;6160:6;6168;6176;6225:2;6213:9;6204:7;6200:23;6196:32;6193:119;;;6231:79;;:::i;:::-;6193:119;6351:1;6376:64;6432:7;6423:6;6412:9;6408:22;6376:64;:::i;:::-;6366:74;;6322:128;6489:2;6515:64;6571:7;6562:6;6551:9;6547:22;6515:64;:::i;:::-;6505:74;;6460:129;6628:2;6654:64;6710:7;6701:6;6690:9;6686:22;6654:64;:::i;:::-;6644:74;;6599:129;6072:663;;;;;:::o;719:3852:25:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@DEFAULT_ADMIN_ROLE_29":{"entryPoint":3457,"id":29,"parameterSlots":0,"returnSlots":0},"@MINTER_ROLE_8312":{"entryPoint":3515,"id":8312,"parameterSlots":0,"returnSlots":0},"@PAUSER_ROLE_8307":{"entryPoint":3614,"id":8307,"parameterSlots":0,"returnSlots":0},"@URI_SETTER_ROLE_8302":{"entryPoint":3261,"id":8302,"parameterSlots":0,"returnSlots":0},"@_asSingletonArrays_1431":{"entryPoint":7837,"id":1431,"parameterSlots":2,"returnSlots":2},"@_burnBatch_1375":{"entryPoint":5938,"id":1375,"parameterSlots":3,"returnSlots":0},"@_burn_1336":{"entryPoint":6973,"id":1336,"parameterSlots":3,"returnSlots":0},"@_checkRole_114":{"entryPoint":7366,"id":114,"parameterSlots":2,"returnSlots":0},"@_checkRole_93":{"entryPoint":4350,"id":93,"parameterSlots":1,"returnSlots":0},"@_createId_8372":{"entryPoint":4389,"id":8372,"parameterSlots":1,"returnSlots":1},"@_grantRole_256":{"entryPoint":5295,"id":256,"parameterSlots":2,"returnSlots":1},"@_mintBatch_1286":{"entryPoint":4905,"id":1286,"parameterSlots":4,"returnSlots":0},"@_mint_1245":{"entryPoint":6086,"id":1245,"parameterSlots":4,"returnSlots":0},"@_msgSender_3078":{"entryPoint":5039,"id":3078,"parameterSlots":0,"returnSlots":1},"@_pause_3248":{"entryPoint":6239,"id":3248,"parameterSlots":0,"returnSlots":0},"@_requireNotPaused_3219":{"entryPoint":7885,"id":3219,"parameterSlots":0,"returnSlots":0},"@_requirePaused_3232":{"entryPoint":7773,"id":3232,"parameterSlots":0,"returnSlots":0},"@_revokeRole_294":{"entryPoint":5537,"id":294,"parameterSlots":2,"returnSlots":1},"@_safeBatchTransferFrom_1182":{"entryPoint":5047,"id":1182,"parameterSlots":5,"returnSlots":0},"@_safeTransferFrom_1127":{"entryPoint":6706,"id":1127,"parameterSlots":5,"returnSlots":0},"@_setApprovalForAll_1415":{"entryPoint":6338,"id":1415,"parameterSlots":3,"returnSlots":0},"@_setBaseURI_1985":{"entryPoint":5919,"id":1985,"parameterSlots":1,"returnSlots":0},"@_setURI_1193":{"entryPoint":4370,"id":1193,"parameterSlots":1,"returnSlots":0},"@_setURI_1974":{"entryPoint":4804,"id":1974,"parameterSlots":2,"returnSlots":0},"@_unpause_3264":{"entryPoint":5780,"id":3264,"parameterSlots":0,"returnSlots":0},"@_updateWithAcceptanceCheck_1061":{"entryPoint":7595,"id":1061,"parameterSlots":5,"returnSlots":0},"@_update_1715":{"entryPoint":9353,"id":1715,"parameterSlots":4,"returnSlots":0},"@_update_1897":{"entryPoint":8946,"id":1897,"parameterSlots":4,"returnSlots":0},"@_update_8647":{"entryPoint":8056,"id":8647,"parameterSlots":4,"returnSlots":0},"@_update_981":{"entryPoint":9379,"id":981,"parameterSlots":4,"returnSlots":0},"@balanceOfBatch_705":{"entryPoint":2659,"id":705,"parameterSlots":2,"returnSlots":1},"@balanceOf_635":{"entryPoint":1710,"id":635,"parameterSlots":2,"returnSlots":1},"@burnBatch_1676":{"entryPoint":3028,"id":1676,"parameterSlots":3,"returnSlots":0},"@burn_1639":{"entryPoint":4056,"id":1639,"parameterSlots":3,"returnSlots":0},"@checkOnERC1155BatchReceived_2155":{"entryPoint":8510,"id":2155,"parameterSlots":6,"returnSlots":0},"@checkOnERC1155Received_2081":{"entryPoint":8074,"id":2081,"parameterSlots":6,"returnSlots":0},"@createId_8387":{"entryPoint":3827,"id":8387,"parameterSlots":1,"returnSlots":1},"@createIds_8437":{"entryPoint":1873,"id":8437,"parameterSlots":1,"returnSlots":1},"@exists_1772":{"entryPoint":2930,"id":1772,"parameterSlots":1,"returnSlots":1},"@getExternalId_8449":{"entryPoint":3798,"id":8449,"parameterSlots":1,"returnSlots":1},"@getId_8461":{"entryPoint":3585,"id":8461,"parameterSlots":1,"returnSlots":1},"@getRoleAdmin_128":{"entryPoint":2249,"id":128,"parameterSlots":1,"returnSlots":1},"@grantRole_147":{"entryPoint":2449,"id":147,"parameterSlots":2,"returnSlots":0},"@hasRole_80":{"entryPoint":3350,"id":80,"parameterSlots":2,"returnSlots":1},"@isApprovedForAll_738":{"entryPoint":3650,"id":738,"parameterSlots":2,"returnSlots":1},"@mintBatch_8620":{"entryPoint":2188,"id":8620,"parameterSlots":4,"returnSlots":0},"@mint_8596":{"entryPoint":3200,"id":8596,"parameterSlots":4,"returnSlots":0},"@pause_8564":{"entryPoint":3297,"id":8564,"parameterSlots":0,"returnSlots":0},"@paused_3207":{"entryPoint":3005,"id":3207,"parameterSlots":0,"returnSlots":1},"@renounceRole_189":{"entryPoint":2483,"id":189,"parameterSlots":2,"returnSlots":0},"@revokeRole_166":{"entryPoint":3551,"id":166,"parameterSlots":2,"returnSlots":0},"@safeBatchTransferFrom_828":{"entryPoint":2281,"id":828,"parameterSlots":5,"returnSlots":0},"@safeTransferFrom_782":{"entryPoint":3888,"id":782,"parameterSlots":5,"returnSlots":0},"@setApprovalForAll_721":{"entryPoint":3464,"id":721,"parameterSlots":2,"returnSlots":0},"@setBaseURI_8525":{"entryPoint":2950,"id":8525,"parameterSlots":1,"returnSlots":0},"@setTokenURI_8541":{"entryPoint":2121,"id":8541,"parameterSlots":2,"returnSlots":0},"@setURI_8554":{"entryPoint":1818,"id":8554,"parameterSlots":1,"returnSlots":0},"@supportsInterface_4742":{"entryPoint":7950,"id":4742,"parameterSlots":1,"returnSlots":1},"@supportsInterface_607":{"entryPoint":7140,"id":607,"parameterSlots":1,"returnSlots":1},"@supportsInterface_62":{"entryPoint":4228,"id":62,"parameterSlots":1,"returnSlots":1},"@supportsInterface_8663":{"entryPoint":1800,"id":8663,"parameterSlots":1,"returnSlots":1},"@totalSupply_1748":{"entryPoint":3486,"id":1748,"parameterSlots":1,"returnSlots":1},"@totalSupply_1757":{"entryPoint":2178,"id":1757,"parameterSlots":0,"returnSlots":1},"@unpause_8574":{"entryPoint":2606,"id":8574,"parameterSlots":0,"returnSlots":0},"@unsafeMemoryAccess_2974":{"entryPoint":5879,"id":2974,"parameterSlots":2,"returnSlots":1},"@unsafeMemoryAccess_3000":{"entryPoint":5899,"id":3000,"parameterSlots":2,"returnSlots":1},"@uri_1952":{"entryPoint":4575,"id":1952,"parameterSlots":1,"returnSlots":1},"@uri_618":{"entryPoint":7447,"id":618,"parameterSlots":1,"returnSlots":1},"@uri_8512":{"entryPoint":2103,"id":8512,"parameterSlots":1,"returnSlots":1},"abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr":{"entryPoint":12975,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_t_array$_t_bytes32_$dyn_memory_ptr":{"entryPoint":11284,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":12074,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_t_bytes_memory_ptr":{"entryPoint":12274,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_t_string_memory_ptr":{"entryPoint":10996,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":10414,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_array$_t_address_$dyn_memory_ptr":{"entryPoint":13080,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_array$_t_bytes32_$dyn_memory_ptr":{"entryPoint":11389,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":12179,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool":{"entryPoint":13539,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32":{"entryPoint":11263,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4":{"entryPoint":10662,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4_fromMemory":{"entryPoint":15389,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_memory_ptr":{"entryPoint":12340,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_string_memory_ptr":{"entryPoint":11062,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":10468,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":13624,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr":{"entryPoint":12660,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr":{"entryPoint":13688,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":13246,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr":{"entryPoint":12386,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_addresst_bool":{"entryPoint":13560,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":10489,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256t_uint256":{"entryPoint":13839,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_uint256t_uint256t_bytes_memory_ptr":{"entryPoint":13385,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":13126,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_array$_t_bytes32_$dyn_memory_ptr":{"entryPoint":11435,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32":{"entryPoint":12573,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32t_address":{"entryPoint":12867,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes4":{"entryPoint":10683,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes4_fromMemory":{"entryPoint":15410,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptr":{"entryPoint":11108,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":11732,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_string_memory_ptr":{"entryPoint":11938,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encodeUpdatedPos_t_uint256_to_t_uint256":{"entryPoint":11567,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":14088,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack":{"entryPoint":11604,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":10740,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":12618,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack":{"entryPoint":15242,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":11847,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":15061,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_storage_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":14930,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256":{"entryPoint":11552,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":10553,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_string_storage_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":15110,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":15146,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed":{"entryPoint":14103,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":15455,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":15299,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed":{"entryPoint":15173,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":15611,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":11698,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":15680,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":10755,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":12633,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":11904,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":10568,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":14144,"id":null,"parameterSlots":3,"returnSlots":1},"allocate_memory":{"entryPoint":10905,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":10321,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_array$_t_address_$dyn_memory_ptr":{"entryPoint":12931,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_t_array$_t_bytes32_$dyn_memory_ptr":{"entryPoint":11181,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":12030,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_t_bytes_memory_ptr":{"entryPoint":12225,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":10932,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":11536,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":14281,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":11508,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":15214,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":11777,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":11591,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack":{"entryPoint":11519,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack":{"entryPoint":15225,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":11788,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":14919,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":15559,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":14568,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_address":{"entryPoint":10373,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":10728,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":11230,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes4":{"entryPoint":10595,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":10341,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":10435,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":14533,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_uint256_to_t_uint256":{"entryPoint":14423,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":14709,"id":null,"parameterSlots":2,"returnSlots":0},"copy_calldata_to_memory_with_cleanup":{"entryPoint":10981,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":11805,"id":null,"parameterSlots":3,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":14302,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":14232,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":14681,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":10856,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":14413,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint256":{"entryPoint":14016,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":14651,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":13969,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":14185,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":13922,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":10809,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":14457,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":10782,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":11225,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":10787,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":10336,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":10331,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":10792,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":14318,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":14638,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":14509,"id":null,"parameterSlots":2,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":14331,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":14467,"id":null,"parameterSlots":3,"returnSlots":0},"validator_revert_t_address":{"entryPoint":10391,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":13516,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes32":{"entryPoint":11240,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes4":{"entryPoint":10639,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":10445,"id":null,"parameterSlots":1,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":14504,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:39608:26","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:26","statements":[{"nodeType":"YulAssignment","src":"57:19:26","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:26","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:26"},"nodeType":"YulFunctionCall","src":"67:9:26"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:26"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:26","type":""}],"src":"7:75:26"},{"body":{"nodeType":"YulBlock","src":"177:28:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:26"},"nodeType":"YulFunctionCall","src":"187:12:26"},"nodeType":"YulExpressionStatement","src":"187:12:26"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:26"},{"body":{"nodeType":"YulBlock","src":"300:28:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:26"},"nodeType":"YulFunctionCall","src":"310:12:26"},"nodeType":"YulExpressionStatement","src":"310:12:26"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:26"},{"body":{"nodeType":"YulBlock","src":"379:81:26","statements":[{"nodeType":"YulAssignment","src":"389:65:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"404:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"411:42:26","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"400:3:26"},"nodeType":"YulFunctionCall","src":"400:54:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:26"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:26","type":""}],"src":"334:126:26"},{"body":{"nodeType":"YulBlock","src":"511:51:26","statements":[{"nodeType":"YulAssignment","src":"521:35:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"550:5:26"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"532:17:26"},"nodeType":"YulFunctionCall","src":"532:24:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"521:7:26"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"493:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"503:7:26","type":""}],"src":"466:96:26"},{"body":{"nodeType":"YulBlock","src":"611:79:26","statements":[{"body":{"nodeType":"YulBlock","src":"668:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"677:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"680:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"670:6:26"},"nodeType":"YulFunctionCall","src":"670:12:26"},"nodeType":"YulExpressionStatement","src":"670:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"634:5:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"659:5:26"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"641:17:26"},"nodeType":"YulFunctionCall","src":"641:24:26"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"631:2:26"},"nodeType":"YulFunctionCall","src":"631:35:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"624:6:26"},"nodeType":"YulFunctionCall","src":"624:43:26"},"nodeType":"YulIf","src":"621:63:26"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"604:5:26","type":""}],"src":"568:122:26"},{"body":{"nodeType":"YulBlock","src":"748:87:26","statements":[{"nodeType":"YulAssignment","src":"758:29:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"780:6:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"767:12:26"},"nodeType":"YulFunctionCall","src":"767:20:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"758:5:26"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"823:5:26"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"796:26:26"},"nodeType":"YulFunctionCall","src":"796:33:26"},"nodeType":"YulExpressionStatement","src":"796:33:26"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"726:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"734:3:26","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"742:5:26","type":""}],"src":"696:139:26"},{"body":{"nodeType":"YulBlock","src":"886:32:26","statements":[{"nodeType":"YulAssignment","src":"896:16:26","value":{"name":"value","nodeType":"YulIdentifier","src":"907:5:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"896:7:26"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"868:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"878:7:26","type":""}],"src":"841:77:26"},{"body":{"nodeType":"YulBlock","src":"967:79:26","statements":[{"body":{"nodeType":"YulBlock","src":"1024:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1033:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1036:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1026:6:26"},"nodeType":"YulFunctionCall","src":"1026:12:26"},"nodeType":"YulExpressionStatement","src":"1026:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"990:5:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1015:5:26"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"997:17:26"},"nodeType":"YulFunctionCall","src":"997:24:26"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"987:2:26"},"nodeType":"YulFunctionCall","src":"987:35:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"980:6:26"},"nodeType":"YulFunctionCall","src":"980:43:26"},"nodeType":"YulIf","src":"977:63:26"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"960:5:26","type":""}],"src":"924:122:26"},{"body":{"nodeType":"YulBlock","src":"1104:87:26","statements":[{"nodeType":"YulAssignment","src":"1114:29:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1136:6:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1123:12:26"},"nodeType":"YulFunctionCall","src":"1123:20:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1114:5:26"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1179:5:26"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"1152:26:26"},"nodeType":"YulFunctionCall","src":"1152:33:26"},"nodeType":"YulExpressionStatement","src":"1152:33:26"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1082:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"1090:3:26","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1098:5:26","type":""}],"src":"1052:139:26"},{"body":{"nodeType":"YulBlock","src":"1280:391:26","statements":[{"body":{"nodeType":"YulBlock","src":"1326:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1328:77:26"},"nodeType":"YulFunctionCall","src":"1328:79:26"},"nodeType":"YulExpressionStatement","src":"1328:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1301:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"1310:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1297:3:26"},"nodeType":"YulFunctionCall","src":"1297:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"1322:2:26","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1293:3:26"},"nodeType":"YulFunctionCall","src":"1293:32:26"},"nodeType":"YulIf","src":"1290:119:26"},{"nodeType":"YulBlock","src":"1419:117:26","statements":[{"nodeType":"YulVariableDeclaration","src":"1434:15:26","value":{"kind":"number","nodeType":"YulLiteral","src":"1448:1:26","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1438:6:26","type":""}]},{"nodeType":"YulAssignment","src":"1463:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1498:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"1509:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1494:3:26"},"nodeType":"YulFunctionCall","src":"1494:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1518:7:26"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1473:20:26"},"nodeType":"YulFunctionCall","src":"1473:53:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1463:6:26"}]}]},{"nodeType":"YulBlock","src":"1546:118:26","statements":[{"nodeType":"YulVariableDeclaration","src":"1561:16:26","value":{"kind":"number","nodeType":"YulLiteral","src":"1575:2:26","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1565:6:26","type":""}]},{"nodeType":"YulAssignment","src":"1591:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1626:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"1637:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1622:3:26"},"nodeType":"YulFunctionCall","src":"1622:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1646:7:26"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"1601:20:26"},"nodeType":"YulFunctionCall","src":"1601:53:26"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1591:6:26"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1242:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1253:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1265:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1273:6:26","type":""}],"src":"1197:474:26"},{"body":{"nodeType":"YulBlock","src":"1742:53:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1759:3:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1782:5:26"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"1764:17:26"},"nodeType":"YulFunctionCall","src":"1764:24:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1752:6:26"},"nodeType":"YulFunctionCall","src":"1752:37:26"},"nodeType":"YulExpressionStatement","src":"1752:37:26"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1730:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1737:3:26","type":""}],"src":"1677:118:26"},{"body":{"nodeType":"YulBlock","src":"1899:124:26","statements":[{"nodeType":"YulAssignment","src":"1909:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1921:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"1932:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1917:3:26"},"nodeType":"YulFunctionCall","src":"1917:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1909:4:26"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1989:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2002:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"2013:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1998:3:26"},"nodeType":"YulFunctionCall","src":"1998:17:26"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"1945:43:26"},"nodeType":"YulFunctionCall","src":"1945:71:26"},"nodeType":"YulExpressionStatement","src":"1945:71:26"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1871:9:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1883:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1894:4:26","type":""}],"src":"1801:222:26"},{"body":{"nodeType":"YulBlock","src":"2073:105:26","statements":[{"nodeType":"YulAssignment","src":"2083:89:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2098:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"2105:66:26","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2094:3:26"},"nodeType":"YulFunctionCall","src":"2094:78:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2083:7:26"}]}]},"name":"cleanup_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2055:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2065:7:26","type":""}],"src":"2029:149:26"},{"body":{"nodeType":"YulBlock","src":"2226:78:26","statements":[{"body":{"nodeType":"YulBlock","src":"2282:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2291:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2294:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2284:6:26"},"nodeType":"YulFunctionCall","src":"2284:12:26"},"nodeType":"YulExpressionStatement","src":"2284:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2249:5:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2273:5:26"}],"functionName":{"name":"cleanup_t_bytes4","nodeType":"YulIdentifier","src":"2256:16:26"},"nodeType":"YulFunctionCall","src":"2256:23:26"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2246:2:26"},"nodeType":"YulFunctionCall","src":"2246:34:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2239:6:26"},"nodeType":"YulFunctionCall","src":"2239:42:26"},"nodeType":"YulIf","src":"2236:62:26"}]},"name":"validator_revert_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2219:5:26","type":""}],"src":"2184:120:26"},{"body":{"nodeType":"YulBlock","src":"2361:86:26","statements":[{"nodeType":"YulAssignment","src":"2371:29:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2393:6:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2380:12:26"},"nodeType":"YulFunctionCall","src":"2380:20:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2371:5:26"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2435:5:26"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"2409:25:26"},"nodeType":"YulFunctionCall","src":"2409:32:26"},"nodeType":"YulExpressionStatement","src":"2409:32:26"}]},"name":"abi_decode_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2339:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"2347:3:26","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2355:5:26","type":""}],"src":"2310:137:26"},{"body":{"nodeType":"YulBlock","src":"2518:262:26","statements":[{"body":{"nodeType":"YulBlock","src":"2564:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2566:77:26"},"nodeType":"YulFunctionCall","src":"2566:79:26"},"nodeType":"YulExpressionStatement","src":"2566:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2539:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"2548:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2535:3:26"},"nodeType":"YulFunctionCall","src":"2535:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"2560:2:26","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2531:3:26"},"nodeType":"YulFunctionCall","src":"2531:32:26"},"nodeType":"YulIf","src":"2528:119:26"},{"nodeType":"YulBlock","src":"2657:116:26","statements":[{"nodeType":"YulVariableDeclaration","src":"2672:15:26","value":{"kind":"number","nodeType":"YulLiteral","src":"2686:1:26","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2676:6:26","type":""}]},{"nodeType":"YulAssignment","src":"2701:62:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2735:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"2746:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2731:3:26"},"nodeType":"YulFunctionCall","src":"2731:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2755:7:26"}],"functionName":{"name":"abi_decode_t_bytes4","nodeType":"YulIdentifier","src":"2711:19:26"},"nodeType":"YulFunctionCall","src":"2711:52:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2701:6:26"}]}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2488:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2499:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2511:6:26","type":""}],"src":"2453:327:26"},{"body":{"nodeType":"YulBlock","src":"2828:48:26","statements":[{"nodeType":"YulAssignment","src":"2838:32:26","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2863:5:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2856:6:26"},"nodeType":"YulFunctionCall","src":"2856:13:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2849:6:26"},"nodeType":"YulFunctionCall","src":"2849:21:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2838:7:26"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2810:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2820:7:26","type":""}],"src":"2786:90:26"},{"body":{"nodeType":"YulBlock","src":"2941:50:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2958:3:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2978:5:26"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"2963:14:26"},"nodeType":"YulFunctionCall","src":"2963:21:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2951:6:26"},"nodeType":"YulFunctionCall","src":"2951:34:26"},"nodeType":"YulExpressionStatement","src":"2951:34:26"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2929:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2936:3:26","type":""}],"src":"2882:109:26"},{"body":{"nodeType":"YulBlock","src":"3089:118:26","statements":[{"nodeType":"YulAssignment","src":"3099:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3111:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"3122:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3107:3:26"},"nodeType":"YulFunctionCall","src":"3107:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3099:4:26"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3173:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3186:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"3197:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3182:3:26"},"nodeType":"YulFunctionCall","src":"3182:17:26"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"3135:37:26"},"nodeType":"YulFunctionCall","src":"3135:65:26"},"nodeType":"YulExpressionStatement","src":"3135:65:26"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3061:9:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3073:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3084:4:26","type":""}],"src":"2997:210:26"},{"body":{"nodeType":"YulBlock","src":"3302:28:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3319:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3322:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3312:6:26"},"nodeType":"YulFunctionCall","src":"3312:12:26"},"nodeType":"YulExpressionStatement","src":"3312:12:26"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"3213:117:26"},{"body":{"nodeType":"YulBlock","src":"3425:28:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3442:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3445:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3435:6:26"},"nodeType":"YulFunctionCall","src":"3435:12:26"},"nodeType":"YulExpressionStatement","src":"3435:12:26"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"3336:117:26"},{"body":{"nodeType":"YulBlock","src":"3507:54:26","statements":[{"nodeType":"YulAssignment","src":"3517:38:26","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3535:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"3542:2:26","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3531:3:26"},"nodeType":"YulFunctionCall","src":"3531:14:26"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3551:2:26","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3547:3:26"},"nodeType":"YulFunctionCall","src":"3547:7:26"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3527:3:26"},"nodeType":"YulFunctionCall","src":"3527:28:26"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3517:6:26"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3490:5:26","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"3500:6:26","type":""}],"src":"3459:102:26"},{"body":{"nodeType":"YulBlock","src":"3595:152:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3612:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3615:77:26","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3605:6:26"},"nodeType":"YulFunctionCall","src":"3605:88:26"},"nodeType":"YulExpressionStatement","src":"3605:88:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3709:1:26","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3712:4:26","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3702:6:26"},"nodeType":"YulFunctionCall","src":"3702:15:26"},"nodeType":"YulExpressionStatement","src":"3702:15:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3733:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3736:4:26","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3726:6:26"},"nodeType":"YulFunctionCall","src":"3726:15:26"},"nodeType":"YulExpressionStatement","src":"3726:15:26"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"3567:180:26"},{"body":{"nodeType":"YulBlock","src":"3796:238:26","statements":[{"nodeType":"YulVariableDeclaration","src":"3806:58:26","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3828:6:26"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"3858:4:26"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"3836:21:26"},"nodeType":"YulFunctionCall","src":"3836:27:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3824:3:26"},"nodeType":"YulFunctionCall","src":"3824:40:26"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"3810:10:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"3975:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"3977:16:26"},"nodeType":"YulFunctionCall","src":"3977:18:26"},"nodeType":"YulExpressionStatement","src":"3977:18:26"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"3918:10:26"},{"kind":"number","nodeType":"YulLiteral","src":"3930:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3915:2:26"},"nodeType":"YulFunctionCall","src":"3915:34:26"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"3954:10:26"},{"name":"memPtr","nodeType":"YulIdentifier","src":"3966:6:26"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3951:2:26"},"nodeType":"YulFunctionCall","src":"3951:22:26"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"3912:2:26"},"nodeType":"YulFunctionCall","src":"3912:62:26"},"nodeType":"YulIf","src":"3909:88:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4013:2:26","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"4017:10:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4006:6:26"},"nodeType":"YulFunctionCall","src":"4006:22:26"},"nodeType":"YulExpressionStatement","src":"4006:22:26"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"3782:6:26","type":""},{"name":"size","nodeType":"YulTypedName","src":"3790:4:26","type":""}],"src":"3753:281:26"},{"body":{"nodeType":"YulBlock","src":"4081:88:26","statements":[{"nodeType":"YulAssignment","src":"4091:30:26","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"4101:18:26"},"nodeType":"YulFunctionCall","src":"4101:20:26"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"4091:6:26"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"4150:6:26"},{"name":"size","nodeType":"YulIdentifier","src":"4158:4:26"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"4130:19:26"},"nodeType":"YulFunctionCall","src":"4130:33:26"},"nodeType":"YulExpressionStatement","src":"4130:33:26"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"4065:4:26","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"4074:6:26","type":""}],"src":"4040:129:26"},{"body":{"nodeType":"YulBlock","src":"4242:241:26","statements":[{"body":{"nodeType":"YulBlock","src":"4347:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"4349:16:26"},"nodeType":"YulFunctionCall","src":"4349:18:26"},"nodeType":"YulExpressionStatement","src":"4349:18:26"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4319:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"4327:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4316:2:26"},"nodeType":"YulFunctionCall","src":"4316:30:26"},"nodeType":"YulIf","src":"4313:56:26"},{"nodeType":"YulAssignment","src":"4379:37:26","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4409:6:26"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"4387:21:26"},"nodeType":"YulFunctionCall","src":"4387:29:26"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"4379:4:26"}]},{"nodeType":"YulAssignment","src":"4453:23:26","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"4465:4:26"},{"kind":"number","nodeType":"YulLiteral","src":"4471:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4461:3:26"},"nodeType":"YulFunctionCall","src":"4461:15:26"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"4453:4:26"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"4226:6:26","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"4237:4:26","type":""}],"src":"4175:308:26"},{"body":{"nodeType":"YulBlock","src":"4553:82:26","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"4576:3:26"},{"name":"src","nodeType":"YulIdentifier","src":"4581:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"4586:6:26"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"4563:12:26"},"nodeType":"YulFunctionCall","src":"4563:30:26"},"nodeType":"YulExpressionStatement","src":"4563:30:26"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"4613:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"4618:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4609:3:26"},"nodeType":"YulFunctionCall","src":"4609:16:26"},{"kind":"number","nodeType":"YulLiteral","src":"4627:1:26","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4602:6:26"},"nodeType":"YulFunctionCall","src":"4602:27:26"},"nodeType":"YulExpressionStatement","src":"4602:27:26"}]},"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"4535:3:26","type":""},{"name":"dst","nodeType":"YulTypedName","src":"4540:3:26","type":""},{"name":"length","nodeType":"YulTypedName","src":"4545:6:26","type":""}],"src":"4489:146:26"},{"body":{"nodeType":"YulBlock","src":"4725:341:26","statements":[{"nodeType":"YulAssignment","src":"4735:75:26","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4802:6:26"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"4760:41:26"},"nodeType":"YulFunctionCall","src":"4760:49:26"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"4744:15:26"},"nodeType":"YulFunctionCall","src":"4744:66:26"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"4735:5:26"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"4826:5:26"},{"name":"length","nodeType":"YulIdentifier","src":"4833:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4819:6:26"},"nodeType":"YulFunctionCall","src":"4819:21:26"},"nodeType":"YulExpressionStatement","src":"4819:21:26"},{"nodeType":"YulVariableDeclaration","src":"4849:27:26","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"4864:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"4871:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4860:3:26"},"nodeType":"YulFunctionCall","src":"4860:16:26"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"4853:3:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"4914:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"4916:77:26"},"nodeType":"YulFunctionCall","src":"4916:79:26"},"nodeType":"YulExpressionStatement","src":"4916:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4895:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"4900:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4891:3:26"},"nodeType":"YulFunctionCall","src":"4891:16:26"},{"name":"end","nodeType":"YulIdentifier","src":"4909:3:26"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4888:2:26"},"nodeType":"YulFunctionCall","src":"4888:25:26"},"nodeType":"YulIf","src":"4885:112:26"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5043:3:26"},{"name":"dst","nodeType":"YulIdentifier","src":"5048:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"5053:6:26"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"5006:36:26"},"nodeType":"YulFunctionCall","src":"5006:54:26"},"nodeType":"YulExpressionStatement","src":"5006:54:26"}]},"name":"abi_decode_available_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"4698:3:26","type":""},{"name":"length","nodeType":"YulTypedName","src":"4703:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"4711:3:26","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"4719:5:26","type":""}],"src":"4641:425:26"},{"body":{"nodeType":"YulBlock","src":"5148:278:26","statements":[{"body":{"nodeType":"YulBlock","src":"5197:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"5199:77:26"},"nodeType":"YulFunctionCall","src":"5199:79:26"},"nodeType":"YulExpressionStatement","src":"5199:79:26"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5176:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"5184:4:26","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5172:3:26"},"nodeType":"YulFunctionCall","src":"5172:17:26"},{"name":"end","nodeType":"YulIdentifier","src":"5191:3:26"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5168:3:26"},"nodeType":"YulFunctionCall","src":"5168:27:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5161:6:26"},"nodeType":"YulFunctionCall","src":"5161:35:26"},"nodeType":"YulIf","src":"5158:122:26"},{"nodeType":"YulVariableDeclaration","src":"5289:34:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5316:6:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5303:12:26"},"nodeType":"YulFunctionCall","src":"5303:20:26"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"5293:6:26","type":""}]},{"nodeType":"YulAssignment","src":"5332:88:26","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5393:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"5401:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5389:3:26"},"nodeType":"YulFunctionCall","src":"5389:17:26"},{"name":"length","nodeType":"YulIdentifier","src":"5408:6:26"},{"name":"end","nodeType":"YulIdentifier","src":"5416:3:26"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"5341:47:26"},"nodeType":"YulFunctionCall","src":"5341:79:26"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"5332:5:26"}]}]},"name":"abi_decode_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"5126:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"5134:3:26","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"5142:5:26","type":""}],"src":"5086:340:26"},{"body":{"nodeType":"YulBlock","src":"5508:433:26","statements":[{"body":{"nodeType":"YulBlock","src":"5554:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5556:77:26"},"nodeType":"YulFunctionCall","src":"5556:79:26"},"nodeType":"YulExpressionStatement","src":"5556:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5529:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"5538:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5525:3:26"},"nodeType":"YulFunctionCall","src":"5525:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"5550:2:26","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5521:3:26"},"nodeType":"YulFunctionCall","src":"5521:32:26"},"nodeType":"YulIf","src":"5518:119:26"},{"nodeType":"YulBlock","src":"5647:287:26","statements":[{"nodeType":"YulVariableDeclaration","src":"5662:45:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5693:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"5704:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5689:3:26"},"nodeType":"YulFunctionCall","src":"5689:17:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5676:12:26"},"nodeType":"YulFunctionCall","src":"5676:31:26"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5666:6:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"5754:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"5756:77:26"},"nodeType":"YulFunctionCall","src":"5756:79:26"},"nodeType":"YulExpressionStatement","src":"5756:79:26"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5726:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"5734:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5723:2:26"},"nodeType":"YulFunctionCall","src":"5723:30:26"},"nodeType":"YulIf","src":"5720:117:26"},{"nodeType":"YulAssignment","src":"5851:73:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5896:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"5907:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5892:3:26"},"nodeType":"YulFunctionCall","src":"5892:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5916:7:26"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"5861:30:26"},"nodeType":"YulFunctionCall","src":"5861:63:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5851:6:26"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5478:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5489:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5501:6:26","type":""}],"src":"5432:509:26"},{"body":{"nodeType":"YulBlock","src":"6029:229:26","statements":[{"body":{"nodeType":"YulBlock","src":"6134:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"6136:16:26"},"nodeType":"YulFunctionCall","src":"6136:18:26"},"nodeType":"YulExpressionStatement","src":"6136:18:26"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6106:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"6114:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6103:2:26"},"nodeType":"YulFunctionCall","src":"6103:30:26"},"nodeType":"YulIf","src":"6100:56:26"},{"nodeType":"YulAssignment","src":"6166:25:26","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6178:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"6186:4:26","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"6174:3:26"},"nodeType":"YulFunctionCall","src":"6174:17:26"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"6166:4:26"}]},{"nodeType":"YulAssignment","src":"6228:23:26","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"6240:4:26"},{"kind":"number","nodeType":"YulLiteral","src":"6246:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6236:3:26"},"nodeType":"YulFunctionCall","src":"6236:15:26"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"6228:4:26"}]}]},"name":"array_allocation_size_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"6013:6:26","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"6024:4:26","type":""}],"src":"5947:311:26"},{"body":{"nodeType":"YulBlock","src":"6353:28:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6370:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6373:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6363:6:26"},"nodeType":"YulFunctionCall","src":"6363:12:26"},"nodeType":"YulExpressionStatement","src":"6363:12:26"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulFunctionDefinition","src":"6264:117:26"},{"body":{"nodeType":"YulBlock","src":"6432:32:26","statements":[{"nodeType":"YulAssignment","src":"6442:16:26","value":{"name":"value","nodeType":"YulIdentifier","src":"6453:5:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"6442:7:26"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6414:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"6424:7:26","type":""}],"src":"6387:77:26"},{"body":{"nodeType":"YulBlock","src":"6513:79:26","statements":[{"body":{"nodeType":"YulBlock","src":"6570:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6579:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6582:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6572:6:26"},"nodeType":"YulFunctionCall","src":"6572:12:26"},"nodeType":"YulExpressionStatement","src":"6572:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6536:5:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6561:5:26"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"6543:17:26"},"nodeType":"YulFunctionCall","src":"6543:24:26"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6533:2:26"},"nodeType":"YulFunctionCall","src":"6533:35:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6526:6:26"},"nodeType":"YulFunctionCall","src":"6526:43:26"},"nodeType":"YulIf","src":"6523:63:26"}]},"name":"validator_revert_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6506:5:26","type":""}],"src":"6470:122:26"},{"body":{"nodeType":"YulBlock","src":"6650:87:26","statements":[{"nodeType":"YulAssignment","src":"6660:29:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6682:6:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6669:12:26"},"nodeType":"YulFunctionCall","src":"6669:20:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"6660:5:26"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6725:5:26"}],"functionName":{"name":"validator_revert_t_bytes32","nodeType":"YulIdentifier","src":"6698:26:26"},"nodeType":"YulFunctionCall","src":"6698:33:26"},"nodeType":"YulExpressionStatement","src":"6698:33:26"}]},"name":"abi_decode_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"6628:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"6636:3:26","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"6644:5:26","type":""}],"src":"6598:139:26"},{"body":{"nodeType":"YulBlock","src":"6862:608:26","statements":[{"nodeType":"YulAssignment","src":"6872:90:26","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6954:6:26"}],"functionName":{"name":"array_allocation_size_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"6897:56:26"},"nodeType":"YulFunctionCall","src":"6897:64:26"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"6881:15:26"},"nodeType":"YulFunctionCall","src":"6881:81:26"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"6872:5:26"}]},{"nodeType":"YulVariableDeclaration","src":"6971:16:26","value":{"name":"array","nodeType":"YulIdentifier","src":"6982:5:26"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"6975:3:26","type":""}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"7004:5:26"},{"name":"length","nodeType":"YulIdentifier","src":"7011:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6997:6:26"},"nodeType":"YulFunctionCall","src":"6997:21:26"},"nodeType":"YulExpressionStatement","src":"6997:21:26"},{"nodeType":"YulAssignment","src":"7027:23:26","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"7038:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"7045:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7034:3:26"},"nodeType":"YulFunctionCall","src":"7034:16:26"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"7027:3:26"}]},{"nodeType":"YulVariableDeclaration","src":"7060:44:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7078:6:26"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7090:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"7098:4:26","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"7086:3:26"},"nodeType":"YulFunctionCall","src":"7086:17:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7074:3:26"},"nodeType":"YulFunctionCall","src":"7074:30:26"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"7064:6:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"7132:103:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"7146:77:26"},"nodeType":"YulFunctionCall","src":"7146:79:26"},"nodeType":"YulExpressionStatement","src":"7146:79:26"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"7119:6:26"},{"name":"end","nodeType":"YulIdentifier","src":"7127:3:26"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7116:2:26"},"nodeType":"YulFunctionCall","src":"7116:15:26"},"nodeType":"YulIf","src":"7113:122:26"},{"body":{"nodeType":"YulBlock","src":"7320:144:26","statements":[{"nodeType":"YulVariableDeclaration","src":"7335:21:26","value":{"name":"src","nodeType":"YulIdentifier","src":"7353:3:26"},"variables":[{"name":"elementPos","nodeType":"YulTypedName","src":"7339:10:26","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"7377:3:26"},{"arguments":[{"name":"elementPos","nodeType":"YulIdentifier","src":"7403:10:26"},{"name":"end","nodeType":"YulIdentifier","src":"7415:3:26"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"7382:20:26"},"nodeType":"YulFunctionCall","src":"7382:37:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7370:6:26"},"nodeType":"YulFunctionCall","src":"7370:50:26"},"nodeType":"YulExpressionStatement","src":"7370:50:26"},{"nodeType":"YulAssignment","src":"7433:21:26","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"7444:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"7449:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7440:3:26"},"nodeType":"YulFunctionCall","src":"7440:14:26"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"7433:3:26"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7273:3:26"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"7278:6:26"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7270:2:26"},"nodeType":"YulFunctionCall","src":"7270:15:26"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"7286:25:26","statements":[{"nodeType":"YulAssignment","src":"7288:21:26","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7299:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"7304:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7295:3:26"},"nodeType":"YulFunctionCall","src":"7295:14:26"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"7288:3:26"}]}]},"pre":{"nodeType":"YulBlock","src":"7248:21:26","statements":[{"nodeType":"YulVariableDeclaration","src":"7250:17:26","value":{"name":"offset","nodeType":"YulIdentifier","src":"7261:6:26"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"7254:3:26","type":""}]}]},"src":"7244:220:26"}]},"name":"abi_decode_available_length_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"6832:6:26","type":""},{"name":"length","nodeType":"YulTypedName","src":"6840:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"6848:3:26","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"6856:5:26","type":""}],"src":"6760:710:26"},{"body":{"nodeType":"YulBlock","src":"7570:293:26","statements":[{"body":{"nodeType":"YulBlock","src":"7619:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"7621:77:26"},"nodeType":"YulFunctionCall","src":"7621:79:26"},"nodeType":"YulExpressionStatement","src":"7621:79:26"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7598:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"7606:4:26","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7594:3:26"},"nodeType":"YulFunctionCall","src":"7594:17:26"},{"name":"end","nodeType":"YulIdentifier","src":"7613:3:26"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7590:3:26"},"nodeType":"YulFunctionCall","src":"7590:27:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7583:6:26"},"nodeType":"YulFunctionCall","src":"7583:35:26"},"nodeType":"YulIf","src":"7580:122:26"},{"nodeType":"YulVariableDeclaration","src":"7711:34:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7738:6:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7725:12:26"},"nodeType":"YulFunctionCall","src":"7725:20:26"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"7715:6:26","type":""}]},{"nodeType":"YulAssignment","src":"7754:103:26","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7830:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"7838:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7826:3:26"},"nodeType":"YulFunctionCall","src":"7826:17:26"},{"name":"length","nodeType":"YulIdentifier","src":"7845:6:26"},{"name":"end","nodeType":"YulIdentifier","src":"7853:3:26"}],"functionName":{"name":"abi_decode_available_length_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"7763:62:26"},"nodeType":"YulFunctionCall","src":"7763:94:26"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"7754:5:26"}]}]},"name":"abi_decode_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"7548:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"7556:3:26","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"7564:5:26","type":""}],"src":"7493:370:26"},{"body":{"nodeType":"YulBlock","src":"7960:448:26","statements":[{"body":{"nodeType":"YulBlock","src":"8006:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"8008:77:26"},"nodeType":"YulFunctionCall","src":"8008:79:26"},"nodeType":"YulExpressionStatement","src":"8008:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7981:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"7990:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7977:3:26"},"nodeType":"YulFunctionCall","src":"7977:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"8002:2:26","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7973:3:26"},"nodeType":"YulFunctionCall","src":"7973:32:26"},"nodeType":"YulIf","src":"7970:119:26"},{"nodeType":"YulBlock","src":"8099:302:26","statements":[{"nodeType":"YulVariableDeclaration","src":"8114:45:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8145:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"8156:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8141:3:26"},"nodeType":"YulFunctionCall","src":"8141:17:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8128:12:26"},"nodeType":"YulFunctionCall","src":"8128:31:26"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8118:6:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"8206:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"8208:77:26"},"nodeType":"YulFunctionCall","src":"8208:79:26"},"nodeType":"YulExpressionStatement","src":"8208:79:26"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8178:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"8186:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8175:2:26"},"nodeType":"YulFunctionCall","src":"8175:30:26"},"nodeType":"YulIf","src":"8172:117:26"},{"nodeType":"YulAssignment","src":"8303:88:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8363:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"8374:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8359:3:26"},"nodeType":"YulFunctionCall","src":"8359:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8383:7:26"}],"functionName":{"name":"abi_decode_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"8313:45:26"},"nodeType":"YulFunctionCall","src":"8313:78:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"8303:6:26"}]}]}]},"name":"abi_decode_tuple_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7930:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7941:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7953:6:26","type":""}],"src":"7869:539:26"},{"body":{"nodeType":"YulBlock","src":"8488:40:26","statements":[{"nodeType":"YulAssignment","src":"8499:22:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8515:5:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8509:5:26"},"nodeType":"YulFunctionCall","src":"8509:12:26"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"8499:6:26"}]}]},"name":"array_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8471:5:26","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"8481:6:26","type":""}],"src":"8414:114:26"},{"body":{"nodeType":"YulBlock","src":"8645:73:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8662:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"8667:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8655:6:26"},"nodeType":"YulFunctionCall","src":"8655:19:26"},"nodeType":"YulExpressionStatement","src":"8655:19:26"},{"nodeType":"YulAssignment","src":"8683:29:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8702:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"8707:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8698:3:26"},"nodeType":"YulFunctionCall","src":"8698:14:26"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"8683:11:26"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8617:3:26","type":""},{"name":"length","nodeType":"YulTypedName","src":"8622:6:26","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"8633:11:26","type":""}],"src":"8534:184:26"},{"body":{"nodeType":"YulBlock","src":"8796:60:26","statements":[{"nodeType":"YulAssignment","src":"8806:11:26","value":{"name":"ptr","nodeType":"YulIdentifier","src":"8814:3:26"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"8806:4:26"}]},{"nodeType":"YulAssignment","src":"8827:22:26","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"8839:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"8844:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8835:3:26"},"nodeType":"YulFunctionCall","src":"8835:14:26"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"8827:4:26"}]}]},"name":"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"8783:3:26","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"8791:4:26","type":""}],"src":"8724:132:26"},{"body":{"nodeType":"YulBlock","src":"8917:53:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8934:3:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8957:5:26"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"8939:17:26"},"nodeType":"YulFunctionCall","src":"8939:24:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8927:6:26"},"nodeType":"YulFunctionCall","src":"8927:37:26"},"nodeType":"YulExpressionStatement","src":"8927:37:26"}]},"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8905:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"8912:3:26","type":""}],"src":"8862:108:26"},{"body":{"nodeType":"YulBlock","src":"9056:99:26","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9100:6:26"},{"name":"pos","nodeType":"YulIdentifier","src":"9108:3:26"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"9066:33:26"},"nodeType":"YulFunctionCall","src":"9066:46:26"},"nodeType":"YulExpressionStatement","src":"9066:46:26"},{"nodeType":"YulAssignment","src":"9121:28:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9139:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"9144:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9135:3:26"},"nodeType":"YulFunctionCall","src":"9135:14:26"},"variableNames":[{"name":"updatedPos","nodeType":"YulIdentifier","src":"9121:10:26"}]}]},"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nodeType":"YulTypedName","src":"9029:6:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"9037:3:26","type":""}],"returnVariables":[{"name":"updatedPos","nodeType":"YulTypedName","src":"9045:10:26","type":""}],"src":"8976:179:26"},{"body":{"nodeType":"YulBlock","src":"9236:38:26","statements":[{"nodeType":"YulAssignment","src":"9246:22:26","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"9258:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"9263:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9254:3:26"},"nodeType":"YulFunctionCall","src":"9254:14:26"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"9246:4:26"}]}]},"name":"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"9223:3:26","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"9231:4:26","type":""}],"src":"9161:113:26"},{"body":{"nodeType":"YulBlock","src":"9434:608:26","statements":[{"nodeType":"YulVariableDeclaration","src":"9444:68:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9506:5:26"}],"functionName":{"name":"array_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"9458:47:26"},"nodeType":"YulFunctionCall","src":"9458:54:26"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"9448:6:26","type":""}]},{"nodeType":"YulAssignment","src":"9521:93:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9602:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"9607:6:26"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9528:73:26"},"nodeType":"YulFunctionCall","src":"9528:86:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"9521:3:26"}]},{"nodeType":"YulVariableDeclaration","src":"9623:71:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9688:5:26"}],"functionName":{"name":"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"9638:49:26"},"nodeType":"YulFunctionCall","src":"9638:56:26"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"9627:7:26","type":""}]},{"nodeType":"YulVariableDeclaration","src":"9703:21:26","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"9717:7:26"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"9707:6:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"9793:224:26","statements":[{"nodeType":"YulVariableDeclaration","src":"9807:34:26","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"9834:6:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9828:5:26"},"nodeType":"YulFunctionCall","src":"9828:13:26"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"9811:13:26","type":""}]},{"nodeType":"YulAssignment","src":"9854:70:26","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"9905:13:26"},{"name":"pos","nodeType":"YulIdentifier","src":"9920:3:26"}],"functionName":{"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"9861:43:26"},"nodeType":"YulFunctionCall","src":"9861:63:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"9854:3:26"}]},{"nodeType":"YulAssignment","src":"9937:70:26","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"10000:6:26"}],"functionName":{"name":"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"9947:52:26"},"nodeType":"YulFunctionCall","src":"9947:60:26"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"9937:6:26"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"9755:1:26"},{"name":"length","nodeType":"YulIdentifier","src":"9758:6:26"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"9752:2:26"},"nodeType":"YulFunctionCall","src":"9752:13:26"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"9766:18:26","statements":[{"nodeType":"YulAssignment","src":"9768:14:26","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"9777:1:26"},{"kind":"number","nodeType":"YulLiteral","src":"9780:1:26","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9773:3:26"},"nodeType":"YulFunctionCall","src":"9773:9:26"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"9768:1:26"}]}]},"pre":{"nodeType":"YulBlock","src":"9737:14:26","statements":[{"nodeType":"YulVariableDeclaration","src":"9739:10:26","value":{"kind":"number","nodeType":"YulLiteral","src":"9748:1:26","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"9743:1:26","type":""}]}]},"src":"9733:284:26"},{"nodeType":"YulAssignment","src":"10026:10:26","value":{"name":"pos","nodeType":"YulIdentifier","src":"10033:3:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"10026:3:26"}]}]},"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9413:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"9420:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"9429:3:26","type":""}],"src":"9310:732:26"},{"body":{"nodeType":"YulBlock","src":"10196:225:26","statements":[{"nodeType":"YulAssignment","src":"10206:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10218:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"10229:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10214:3:26"},"nodeType":"YulFunctionCall","src":"10214:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10206:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10253:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"10264:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10249:3:26"},"nodeType":"YulFunctionCall","src":"10249:17:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10272:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"10278:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10268:3:26"},"nodeType":"YulFunctionCall","src":"10268:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10242:6:26"},"nodeType":"YulFunctionCall","src":"10242:47:26"},"nodeType":"YulExpressionStatement","src":"10242:47:26"},{"nodeType":"YulAssignment","src":"10298:116:26","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10400:6:26"},{"name":"tail","nodeType":"YulIdentifier","src":"10409:4:26"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10306:93:26"},"nodeType":"YulFunctionCall","src":"10306:108:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10298:4:26"}]}]},"name":"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10168:9:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10180:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10191:4:26","type":""}],"src":"10048:373:26"},{"body":{"nodeType":"YulBlock","src":"10493:263:26","statements":[{"body":{"nodeType":"YulBlock","src":"10539:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"10541:77:26"},"nodeType":"YulFunctionCall","src":"10541:79:26"},"nodeType":"YulExpressionStatement","src":"10541:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"10514:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"10523:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10510:3:26"},"nodeType":"YulFunctionCall","src":"10510:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"10535:2:26","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"10506:3:26"},"nodeType":"YulFunctionCall","src":"10506:32:26"},"nodeType":"YulIf","src":"10503:119:26"},{"nodeType":"YulBlock","src":"10632:117:26","statements":[{"nodeType":"YulVariableDeclaration","src":"10647:15:26","value":{"kind":"number","nodeType":"YulLiteral","src":"10661:1:26","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10651:6:26","type":""}]},{"nodeType":"YulAssignment","src":"10676:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10711:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"10722:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10707:3:26"},"nodeType":"YulFunctionCall","src":"10707:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10731:7:26"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"10686:20:26"},"nodeType":"YulFunctionCall","src":"10686:53:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"10676:6:26"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10463:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"10474:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"10486:6:26","type":""}],"src":"10427:329:26"},{"body":{"nodeType":"YulBlock","src":"10821:40:26","statements":[{"nodeType":"YulAssignment","src":"10832:22:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10848:5:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10842:5:26"},"nodeType":"YulFunctionCall","src":"10842:12:26"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"10832:6:26"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10804:5:26","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"10814:6:26","type":""}],"src":"10762:99:26"},{"body":{"nodeType":"YulBlock","src":"10963:73:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10980:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"10985:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10973:6:26"},"nodeType":"YulFunctionCall","src":"10973:19:26"},"nodeType":"YulExpressionStatement","src":"10973:19:26"},{"nodeType":"YulAssignment","src":"11001:29:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11020:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"11025:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11016:3:26"},"nodeType":"YulFunctionCall","src":"11016:14:26"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"11001:11:26"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"10935:3:26","type":""},{"name":"length","nodeType":"YulTypedName","src":"10940:6:26","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"10951:11:26","type":""}],"src":"10867:169:26"},{"body":{"nodeType":"YulBlock","src":"11104:184:26","statements":[{"nodeType":"YulVariableDeclaration","src":"11114:10:26","value":{"kind":"number","nodeType":"YulLiteral","src":"11123:1:26","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"11118:1:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"11183:63:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"11208:3:26"},{"name":"i","nodeType":"YulIdentifier","src":"11213:1:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11204:3:26"},"nodeType":"YulFunctionCall","src":"11204:11:26"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"11227:3:26"},{"name":"i","nodeType":"YulIdentifier","src":"11232:1:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11223:3:26"},"nodeType":"YulFunctionCall","src":"11223:11:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11217:5:26"},"nodeType":"YulFunctionCall","src":"11217:18:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11197:6:26"},"nodeType":"YulFunctionCall","src":"11197:39:26"},"nodeType":"YulExpressionStatement","src":"11197:39:26"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"11144:1:26"},{"name":"length","nodeType":"YulIdentifier","src":"11147:6:26"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"11141:2:26"},"nodeType":"YulFunctionCall","src":"11141:13:26"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"11155:19:26","statements":[{"nodeType":"YulAssignment","src":"11157:15:26","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"11166:1:26"},{"kind":"number","nodeType":"YulLiteral","src":"11169:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11162:3:26"},"nodeType":"YulFunctionCall","src":"11162:10:26"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"11157:1:26"}]}]},"pre":{"nodeType":"YulBlock","src":"11137:3:26","statements":[]},"src":"11133:113:26"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"11266:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"11271:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11262:3:26"},"nodeType":"YulFunctionCall","src":"11262:16:26"},{"kind":"number","nodeType":"YulLiteral","src":"11280:1:26","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11255:6:26"},"nodeType":"YulFunctionCall","src":"11255:27:26"},"nodeType":"YulExpressionStatement","src":"11255:27:26"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"11086:3:26","type":""},{"name":"dst","nodeType":"YulTypedName","src":"11091:3:26","type":""},{"name":"length","nodeType":"YulTypedName","src":"11096:6:26","type":""}],"src":"11042:246:26"},{"body":{"nodeType":"YulBlock","src":"11386:285:26","statements":[{"nodeType":"YulVariableDeclaration","src":"11396:53:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11443:5:26"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"11410:32:26"},"nodeType":"YulFunctionCall","src":"11410:39:26"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"11400:6:26","type":""}]},{"nodeType":"YulAssignment","src":"11458:78:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11524:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"11529:6:26"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11465:58:26"},"nodeType":"YulFunctionCall","src":"11465:71:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"11458:3:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11584:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"11591:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11580:3:26"},"nodeType":"YulFunctionCall","src":"11580:16:26"},{"name":"pos","nodeType":"YulIdentifier","src":"11598:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"11603:6:26"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"11545:34:26"},"nodeType":"YulFunctionCall","src":"11545:65:26"},"nodeType":"YulExpressionStatement","src":"11545:65:26"},{"nodeType":"YulAssignment","src":"11619:46:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11630:3:26"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"11657:6:26"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"11635:21:26"},"nodeType":"YulFunctionCall","src":"11635:29:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11626:3:26"},"nodeType":"YulFunctionCall","src":"11626:39:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"11619:3:26"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11367:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"11374:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"11382:3:26","type":""}],"src":"11294:377:26"},{"body":{"nodeType":"YulBlock","src":"11795:195:26","statements":[{"nodeType":"YulAssignment","src":"11805:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11817:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"11828:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11813:3:26"},"nodeType":"YulFunctionCall","src":"11813:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11805:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11852:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"11863:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11848:3:26"},"nodeType":"YulFunctionCall","src":"11848:17:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11871:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"11877:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11867:3:26"},"nodeType":"YulFunctionCall","src":"11867:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11841:6:26"},"nodeType":"YulFunctionCall","src":"11841:47:26"},"nodeType":"YulExpressionStatement","src":"11841:47:26"},{"nodeType":"YulAssignment","src":"11897:86:26","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11969:6:26"},{"name":"tail","nodeType":"YulIdentifier","src":"11978:4:26"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11905:63:26"},"nodeType":"YulFunctionCall","src":"11905:78:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11897:4:26"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11767:9:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11779:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11790:4:26","type":""}],"src":"11677:313:26"},{"body":{"nodeType":"YulBlock","src":"12089:561:26","statements":[{"body":{"nodeType":"YulBlock","src":"12135:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"12137:77:26"},"nodeType":"YulFunctionCall","src":"12137:79:26"},"nodeType":"YulExpressionStatement","src":"12137:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"12110:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"12119:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12106:3:26"},"nodeType":"YulFunctionCall","src":"12106:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"12131:2:26","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"12102:3:26"},"nodeType":"YulFunctionCall","src":"12102:32:26"},"nodeType":"YulIf","src":"12099:119:26"},{"nodeType":"YulBlock","src":"12228:117:26","statements":[{"nodeType":"YulVariableDeclaration","src":"12243:15:26","value":{"kind":"number","nodeType":"YulLiteral","src":"12257:1:26","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12247:6:26","type":""}]},{"nodeType":"YulAssignment","src":"12272:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12307:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"12318:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12303:3:26"},"nodeType":"YulFunctionCall","src":"12303:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12327:7:26"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"12282:20:26"},"nodeType":"YulFunctionCall","src":"12282:53:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"12272:6:26"}]}]},{"nodeType":"YulBlock","src":"12355:288:26","statements":[{"nodeType":"YulVariableDeclaration","src":"12370:46:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12401:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"12412:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12397:3:26"},"nodeType":"YulFunctionCall","src":"12397:18:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"12384:12:26"},"nodeType":"YulFunctionCall","src":"12384:32:26"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12374:6:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"12463:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"12465:77:26"},"nodeType":"YulFunctionCall","src":"12465:79:26"},"nodeType":"YulExpressionStatement","src":"12465:79:26"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"12435:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"12443:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"12432:2:26"},"nodeType":"YulFunctionCall","src":"12432:30:26"},"nodeType":"YulIf","src":"12429:117:26"},{"nodeType":"YulAssignment","src":"12560:73:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12605:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"12616:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12601:3:26"},"nodeType":"YulFunctionCall","src":"12601:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12625:7:26"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"12570:30:26"},"nodeType":"YulFunctionCall","src":"12570:63:26"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"12560:6:26"}]}]}]},"name":"abi_decode_tuple_t_uint256t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12051:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"12062:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"12074:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"12082:6:26","type":""}],"src":"11996:654:26"},{"body":{"nodeType":"YulBlock","src":"12738:229:26","statements":[{"body":{"nodeType":"YulBlock","src":"12843:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"12845:16:26"},"nodeType":"YulFunctionCall","src":"12845:18:26"},"nodeType":"YulExpressionStatement","src":"12845:18:26"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"12815:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"12823:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"12812:2:26"},"nodeType":"YulFunctionCall","src":"12812:30:26"},"nodeType":"YulIf","src":"12809:56:26"},{"nodeType":"YulAssignment","src":"12875:25:26","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"12887:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"12895:4:26","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"12883:3:26"},"nodeType":"YulFunctionCall","src":"12883:17:26"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"12875:4:26"}]},{"nodeType":"YulAssignment","src":"12937:23:26","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"12949:4:26"},{"kind":"number","nodeType":"YulLiteral","src":"12955:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12945:3:26"},"nodeType":"YulFunctionCall","src":"12945:15:26"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"12937:4:26"}]}]},"name":"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"12722:6:26","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"12733:4:26","type":""}],"src":"12656:311:26"},{"body":{"nodeType":"YulBlock","src":"13092:608:26","statements":[{"nodeType":"YulAssignment","src":"13102:90:26","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"13184:6:26"}],"functionName":{"name":"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"13127:56:26"},"nodeType":"YulFunctionCall","src":"13127:64:26"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"13111:15:26"},"nodeType":"YulFunctionCall","src":"13111:81:26"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"13102:5:26"}]},{"nodeType":"YulVariableDeclaration","src":"13201:16:26","value":{"name":"array","nodeType":"YulIdentifier","src":"13212:5:26"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"13205:3:26","type":""}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"13234:5:26"},{"name":"length","nodeType":"YulIdentifier","src":"13241:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13227:6:26"},"nodeType":"YulFunctionCall","src":"13227:21:26"},"nodeType":"YulExpressionStatement","src":"13227:21:26"},{"nodeType":"YulAssignment","src":"13257:23:26","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"13268:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"13275:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13264:3:26"},"nodeType":"YulFunctionCall","src":"13264:16:26"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"13257:3:26"}]},{"nodeType":"YulVariableDeclaration","src":"13290:44:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"13308:6:26"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"13320:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"13328:4:26","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"13316:3:26"},"nodeType":"YulFunctionCall","src":"13316:17:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13304:3:26"},"nodeType":"YulFunctionCall","src":"13304:30:26"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"13294:6:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"13362:103:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"13376:77:26"},"nodeType":"YulFunctionCall","src":"13376:79:26"},"nodeType":"YulExpressionStatement","src":"13376:79:26"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"13349:6:26"},{"name":"end","nodeType":"YulIdentifier","src":"13357:3:26"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"13346:2:26"},"nodeType":"YulFunctionCall","src":"13346:15:26"},"nodeType":"YulIf","src":"13343:122:26"},{"body":{"nodeType":"YulBlock","src":"13550:144:26","statements":[{"nodeType":"YulVariableDeclaration","src":"13565:21:26","value":{"name":"src","nodeType":"YulIdentifier","src":"13583:3:26"},"variables":[{"name":"elementPos","nodeType":"YulTypedName","src":"13569:10:26","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"13607:3:26"},{"arguments":[{"name":"elementPos","nodeType":"YulIdentifier","src":"13633:10:26"},{"name":"end","nodeType":"YulIdentifier","src":"13645:3:26"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"13612:20:26"},"nodeType":"YulFunctionCall","src":"13612:37:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13600:6:26"},"nodeType":"YulFunctionCall","src":"13600:50:26"},"nodeType":"YulExpressionStatement","src":"13600:50:26"},{"nodeType":"YulAssignment","src":"13663:21:26","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"13674:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"13679:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13670:3:26"},"nodeType":"YulFunctionCall","src":"13670:14:26"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"13663:3:26"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"13503:3:26"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"13508:6:26"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"13500:2:26"},"nodeType":"YulFunctionCall","src":"13500:15:26"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"13516:25:26","statements":[{"nodeType":"YulAssignment","src":"13518:21:26","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"13529:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"13534:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13525:3:26"},"nodeType":"YulFunctionCall","src":"13525:14:26"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"13518:3:26"}]}]},"pre":{"nodeType":"YulBlock","src":"13478:21:26","statements":[{"nodeType":"YulVariableDeclaration","src":"13480:17:26","value":{"name":"offset","nodeType":"YulIdentifier","src":"13491:6:26"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"13484:3:26","type":""}]}]},"src":"13474:220:26"}]},"name":"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"13062:6:26","type":""},{"name":"length","nodeType":"YulTypedName","src":"13070:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"13078:3:26","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"13086:5:26","type":""}],"src":"12990:710:26"},{"body":{"nodeType":"YulBlock","src":"13800:293:26","statements":[{"body":{"nodeType":"YulBlock","src":"13849:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"13851:77:26"},"nodeType":"YulFunctionCall","src":"13851:79:26"},"nodeType":"YulExpressionStatement","src":"13851:79:26"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"13828:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"13836:4:26","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13824:3:26"},"nodeType":"YulFunctionCall","src":"13824:17:26"},{"name":"end","nodeType":"YulIdentifier","src":"13843:3:26"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"13820:3:26"},"nodeType":"YulFunctionCall","src":"13820:27:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"13813:6:26"},"nodeType":"YulFunctionCall","src":"13813:35:26"},"nodeType":"YulIf","src":"13810:122:26"},{"nodeType":"YulVariableDeclaration","src":"13941:34:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"13968:6:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"13955:12:26"},"nodeType":"YulFunctionCall","src":"13955:20:26"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"13945:6:26","type":""}]},{"nodeType":"YulAssignment","src":"13984:103:26","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"14060:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"14068:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14056:3:26"},"nodeType":"YulFunctionCall","src":"14056:17:26"},{"name":"length","nodeType":"YulIdentifier","src":"14075:6:26"},{"name":"end","nodeType":"YulIdentifier","src":"14083:3:26"}],"functionName":{"name":"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"13993:62:26"},"nodeType":"YulFunctionCall","src":"13993:94:26"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"13984:5:26"}]}]},"name":"abi_decode_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"13778:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"13786:3:26","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"13794:5:26","type":""}],"src":"13723:370:26"},{"body":{"nodeType":"YulBlock","src":"14165:241:26","statements":[{"body":{"nodeType":"YulBlock","src":"14270:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"14272:16:26"},"nodeType":"YulFunctionCall","src":"14272:18:26"},"nodeType":"YulExpressionStatement","src":"14272:18:26"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"14242:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"14250:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"14239:2:26"},"nodeType":"YulFunctionCall","src":"14239:30:26"},"nodeType":"YulIf","src":"14236:56:26"},{"nodeType":"YulAssignment","src":"14302:37:26","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"14332:6:26"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"14310:21:26"},"nodeType":"YulFunctionCall","src":"14310:29:26"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"14302:4:26"}]},{"nodeType":"YulAssignment","src":"14376:23:26","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"14388:4:26"},{"kind":"number","nodeType":"YulLiteral","src":"14394:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14384:3:26"},"nodeType":"YulFunctionCall","src":"14384:15:26"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"14376:4:26"}]}]},"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"14149:6:26","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"14160:4:26","type":""}],"src":"14099:307:26"},{"body":{"nodeType":"YulBlock","src":"14495:340:26","statements":[{"nodeType":"YulAssignment","src":"14505:74:26","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"14571:6:26"}],"functionName":{"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"14530:40:26"},"nodeType":"YulFunctionCall","src":"14530:48:26"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"14514:15:26"},"nodeType":"YulFunctionCall","src":"14514:65:26"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"14505:5:26"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"14595:5:26"},{"name":"length","nodeType":"YulIdentifier","src":"14602:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14588:6:26"},"nodeType":"YulFunctionCall","src":"14588:21:26"},"nodeType":"YulExpressionStatement","src":"14588:21:26"},{"nodeType":"YulVariableDeclaration","src":"14618:27:26","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"14633:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"14640:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14629:3:26"},"nodeType":"YulFunctionCall","src":"14629:16:26"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"14622:3:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"14683:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"14685:77:26"},"nodeType":"YulFunctionCall","src":"14685:79:26"},"nodeType":"YulExpressionStatement","src":"14685:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"14664:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"14669:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14660:3:26"},"nodeType":"YulFunctionCall","src":"14660:16:26"},{"name":"end","nodeType":"YulIdentifier","src":"14678:3:26"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"14657:2:26"},"nodeType":"YulFunctionCall","src":"14657:25:26"},"nodeType":"YulIf","src":"14654:112:26"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"14812:3:26"},{"name":"dst","nodeType":"YulIdentifier","src":"14817:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"14822:6:26"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"14775:36:26"},"nodeType":"YulFunctionCall","src":"14775:54:26"},"nodeType":"YulExpressionStatement","src":"14775:54:26"}]},"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"14468:3:26","type":""},{"name":"length","nodeType":"YulTypedName","src":"14473:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"14481:3:26","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"14489:5:26","type":""}],"src":"14412:423:26"},{"body":{"nodeType":"YulBlock","src":"14915:277:26","statements":[{"body":{"nodeType":"YulBlock","src":"14964:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"14966:77:26"},"nodeType":"YulFunctionCall","src":"14966:79:26"},"nodeType":"YulExpressionStatement","src":"14966:79:26"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"14943:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"14951:4:26","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14939:3:26"},"nodeType":"YulFunctionCall","src":"14939:17:26"},{"name":"end","nodeType":"YulIdentifier","src":"14958:3:26"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"14935:3:26"},"nodeType":"YulFunctionCall","src":"14935:27:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"14928:6:26"},"nodeType":"YulFunctionCall","src":"14928:35:26"},"nodeType":"YulIf","src":"14925:122:26"},{"nodeType":"YulVariableDeclaration","src":"15056:34:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"15083:6:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"15070:12:26"},"nodeType":"YulFunctionCall","src":"15070:20:26"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"15060:6:26","type":""}]},{"nodeType":"YulAssignment","src":"15099:87:26","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"15159:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"15167:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15155:3:26"},"nodeType":"YulFunctionCall","src":"15155:17:26"},{"name":"length","nodeType":"YulIdentifier","src":"15174:6:26"},{"name":"end","nodeType":"YulIdentifier","src":"15182:3:26"}],"functionName":{"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"15108:46:26"},"nodeType":"YulFunctionCall","src":"15108:78:26"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"15099:5:26"}]}]},"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"14893:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"14901:3:26","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"14909:5:26","type":""}],"src":"14854:338:26"},{"body":{"nodeType":"YulBlock","src":"15374:1187:26","statements":[{"body":{"nodeType":"YulBlock","src":"15421:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"15423:77:26"},"nodeType":"YulFunctionCall","src":"15423:79:26"},"nodeType":"YulExpressionStatement","src":"15423:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"15395:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"15404:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15391:3:26"},"nodeType":"YulFunctionCall","src":"15391:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"15416:3:26","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"15387:3:26"},"nodeType":"YulFunctionCall","src":"15387:33:26"},"nodeType":"YulIf","src":"15384:120:26"},{"nodeType":"YulBlock","src":"15514:117:26","statements":[{"nodeType":"YulVariableDeclaration","src":"15529:15:26","value":{"kind":"number","nodeType":"YulLiteral","src":"15543:1:26","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"15533:6:26","type":""}]},{"nodeType":"YulAssignment","src":"15558:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15593:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"15604:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15589:3:26"},"nodeType":"YulFunctionCall","src":"15589:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"15613:7:26"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"15568:20:26"},"nodeType":"YulFunctionCall","src":"15568:53:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"15558:6:26"}]}]},{"nodeType":"YulBlock","src":"15641:303:26","statements":[{"nodeType":"YulVariableDeclaration","src":"15656:46:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15687:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"15698:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15683:3:26"},"nodeType":"YulFunctionCall","src":"15683:18:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"15670:12:26"},"nodeType":"YulFunctionCall","src":"15670:32:26"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"15660:6:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"15749:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"15751:77:26"},"nodeType":"YulFunctionCall","src":"15751:79:26"},"nodeType":"YulExpressionStatement","src":"15751:79:26"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"15721:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"15729:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"15718:2:26"},"nodeType":"YulFunctionCall","src":"15718:30:26"},"nodeType":"YulIf","src":"15715:117:26"},{"nodeType":"YulAssignment","src":"15846:88:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15906:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"15917:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15902:3:26"},"nodeType":"YulFunctionCall","src":"15902:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"15926:7:26"}],"functionName":{"name":"abi_decode_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"15856:45:26"},"nodeType":"YulFunctionCall","src":"15856:78:26"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"15846:6:26"}]}]},{"nodeType":"YulBlock","src":"15954:303:26","statements":[{"nodeType":"YulVariableDeclaration","src":"15969:46:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16000:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"16011:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15996:3:26"},"nodeType":"YulFunctionCall","src":"15996:18:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"15983:12:26"},"nodeType":"YulFunctionCall","src":"15983:32:26"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"15973:6:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"16062:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"16064:77:26"},"nodeType":"YulFunctionCall","src":"16064:79:26"},"nodeType":"YulExpressionStatement","src":"16064:79:26"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"16034:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"16042:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"16031:2:26"},"nodeType":"YulFunctionCall","src":"16031:30:26"},"nodeType":"YulIf","src":"16028:117:26"},{"nodeType":"YulAssignment","src":"16159:88:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16219:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"16230:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16215:3:26"},"nodeType":"YulFunctionCall","src":"16215:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"16239:7:26"}],"functionName":{"name":"abi_decode_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"16169:45:26"},"nodeType":"YulFunctionCall","src":"16169:78:26"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"16159:6:26"}]}]},{"nodeType":"YulBlock","src":"16267:287:26","statements":[{"nodeType":"YulVariableDeclaration","src":"16282:46:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16313:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"16324:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16309:3:26"},"nodeType":"YulFunctionCall","src":"16309:18:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"16296:12:26"},"nodeType":"YulFunctionCall","src":"16296:32:26"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"16286:6:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"16375:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"16377:77:26"},"nodeType":"YulFunctionCall","src":"16377:79:26"},"nodeType":"YulExpressionStatement","src":"16377:79:26"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"16347:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"16355:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"16344:2:26"},"nodeType":"YulFunctionCall","src":"16344:30:26"},"nodeType":"YulIf","src":"16341:117:26"},{"nodeType":"YulAssignment","src":"16472:72:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16516:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"16527:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16512:3:26"},"nodeType":"YulFunctionCall","src":"16512:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"16536:7:26"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"16482:29:26"},"nodeType":"YulFunctionCall","src":"16482:62:26"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"16472:6:26"}]}]}]},"name":"abi_decode_tuple_t_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15320:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"15331:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"15343:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"15351:6:26","type":""},{"name":"value2","nodeType":"YulTypedName","src":"15359:6:26","type":""},{"name":"value3","nodeType":"YulTypedName","src":"15367:6:26","type":""}],"src":"15198:1363:26"},{"body":{"nodeType":"YulBlock","src":"16633:263:26","statements":[{"body":{"nodeType":"YulBlock","src":"16679:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"16681:77:26"},"nodeType":"YulFunctionCall","src":"16681:79:26"},"nodeType":"YulExpressionStatement","src":"16681:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"16654:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"16663:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16650:3:26"},"nodeType":"YulFunctionCall","src":"16650:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"16675:2:26","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"16646:3:26"},"nodeType":"YulFunctionCall","src":"16646:32:26"},"nodeType":"YulIf","src":"16643:119:26"},{"nodeType":"YulBlock","src":"16772:117:26","statements":[{"nodeType":"YulVariableDeclaration","src":"16787:15:26","value":{"kind":"number","nodeType":"YulLiteral","src":"16801:1:26","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"16791:6:26","type":""}]},{"nodeType":"YulAssignment","src":"16816:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16851:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"16862:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16847:3:26"},"nodeType":"YulFunctionCall","src":"16847:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"16871:7:26"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"16826:20:26"},"nodeType":"YulFunctionCall","src":"16826:53:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"16816:6:26"}]}]}]},"name":"abi_decode_tuple_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16603:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"16614:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"16626:6:26","type":""}],"src":"16567:329:26"},{"body":{"nodeType":"YulBlock","src":"16967:53:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16984:3:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17007:5:26"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"16989:17:26"},"nodeType":"YulFunctionCall","src":"16989:24:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16977:6:26"},"nodeType":"YulFunctionCall","src":"16977:37:26"},"nodeType":"YulExpressionStatement","src":"16977:37:26"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"16955:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"16962:3:26","type":""}],"src":"16902:118:26"},{"body":{"nodeType":"YulBlock","src":"17124:124:26","statements":[{"nodeType":"YulAssignment","src":"17134:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17146:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"17157:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17142:3:26"},"nodeType":"YulFunctionCall","src":"17142:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17134:4:26"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"17214:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17227:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"17238:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17223:3:26"},"nodeType":"YulFunctionCall","src":"17223:17:26"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"17170:43:26"},"nodeType":"YulFunctionCall","src":"17170:71:26"},"nodeType":"YulExpressionStatement","src":"17170:71:26"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17096:9:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"17108:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17119:4:26","type":""}],"src":"17026:222:26"},{"body":{"nodeType":"YulBlock","src":"17447:1316:26","statements":[{"body":{"nodeType":"YulBlock","src":"17494:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"17496:77:26"},"nodeType":"YulFunctionCall","src":"17496:79:26"},"nodeType":"YulExpressionStatement","src":"17496:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"17468:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"17477:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17464:3:26"},"nodeType":"YulFunctionCall","src":"17464:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"17489:3:26","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"17460:3:26"},"nodeType":"YulFunctionCall","src":"17460:33:26"},"nodeType":"YulIf","src":"17457:120:26"},{"nodeType":"YulBlock","src":"17587:117:26","statements":[{"nodeType":"YulVariableDeclaration","src":"17602:15:26","value":{"kind":"number","nodeType":"YulLiteral","src":"17616:1:26","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"17606:6:26","type":""}]},{"nodeType":"YulAssignment","src":"17631:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17666:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"17677:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17662:3:26"},"nodeType":"YulFunctionCall","src":"17662:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"17686:7:26"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"17641:20:26"},"nodeType":"YulFunctionCall","src":"17641:53:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"17631:6:26"}]}]},{"nodeType":"YulBlock","src":"17714:118:26","statements":[{"nodeType":"YulVariableDeclaration","src":"17729:16:26","value":{"kind":"number","nodeType":"YulLiteral","src":"17743:2:26","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"17733:6:26","type":""}]},{"nodeType":"YulAssignment","src":"17759:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17794:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"17805:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17790:3:26"},"nodeType":"YulFunctionCall","src":"17790:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"17814:7:26"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"17769:20:26"},"nodeType":"YulFunctionCall","src":"17769:53:26"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"17759:6:26"}]}]},{"nodeType":"YulBlock","src":"17842:303:26","statements":[{"nodeType":"YulVariableDeclaration","src":"17857:46:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17888:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"17899:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17884:3:26"},"nodeType":"YulFunctionCall","src":"17884:18:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"17871:12:26"},"nodeType":"YulFunctionCall","src":"17871:32:26"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"17861:6:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"17950:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"17952:77:26"},"nodeType":"YulFunctionCall","src":"17952:79:26"},"nodeType":"YulExpressionStatement","src":"17952:79:26"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"17922:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"17930:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"17919:2:26"},"nodeType":"YulFunctionCall","src":"17919:30:26"},"nodeType":"YulIf","src":"17916:117:26"},{"nodeType":"YulAssignment","src":"18047:88:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18107:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"18118:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18103:3:26"},"nodeType":"YulFunctionCall","src":"18103:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"18127:7:26"}],"functionName":{"name":"abi_decode_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"18057:45:26"},"nodeType":"YulFunctionCall","src":"18057:78:26"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"18047:6:26"}]}]},{"nodeType":"YulBlock","src":"18155:303:26","statements":[{"nodeType":"YulVariableDeclaration","src":"18170:46:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18201:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"18212:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18197:3:26"},"nodeType":"YulFunctionCall","src":"18197:18:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"18184:12:26"},"nodeType":"YulFunctionCall","src":"18184:32:26"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"18174:6:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"18263:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"18265:77:26"},"nodeType":"YulFunctionCall","src":"18265:79:26"},"nodeType":"YulExpressionStatement","src":"18265:79:26"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"18235:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"18243:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"18232:2:26"},"nodeType":"YulFunctionCall","src":"18232:30:26"},"nodeType":"YulIf","src":"18229:117:26"},{"nodeType":"YulAssignment","src":"18360:88:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18420:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"18431:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18416:3:26"},"nodeType":"YulFunctionCall","src":"18416:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"18440:7:26"}],"functionName":{"name":"abi_decode_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"18370:45:26"},"nodeType":"YulFunctionCall","src":"18370:78:26"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"18360:6:26"}]}]},{"nodeType":"YulBlock","src":"18468:288:26","statements":[{"nodeType":"YulVariableDeclaration","src":"18483:47:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18514:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"18525:3:26","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18510:3:26"},"nodeType":"YulFunctionCall","src":"18510:19:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"18497:12:26"},"nodeType":"YulFunctionCall","src":"18497:33:26"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"18487:6:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"18577:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"18579:77:26"},"nodeType":"YulFunctionCall","src":"18579:79:26"},"nodeType":"YulExpressionStatement","src":"18579:79:26"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"18549:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"18557:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"18546:2:26"},"nodeType":"YulFunctionCall","src":"18546:30:26"},"nodeType":"YulIf","src":"18543:117:26"},{"nodeType":"YulAssignment","src":"18674:72:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18718:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"18729:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18714:3:26"},"nodeType":"YulFunctionCall","src":"18714:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"18738:7:26"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"18684:29:26"},"nodeType":"YulFunctionCall","src":"18684:62:26"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"18674:6:26"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17385:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"17396:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"17408:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"17416:6:26","type":""},{"name":"value2","nodeType":"YulTypedName","src":"17424:6:26","type":""},{"name":"value3","nodeType":"YulTypedName","src":"17432:6:26","type":""},{"name":"value4","nodeType":"YulTypedName","src":"17440:6:26","type":""}],"src":"17254:1509:26"},{"body":{"nodeType":"YulBlock","src":"18852:391:26","statements":[{"body":{"nodeType":"YulBlock","src":"18898:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"18900:77:26"},"nodeType":"YulFunctionCall","src":"18900:79:26"},"nodeType":"YulExpressionStatement","src":"18900:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"18873:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"18882:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"18869:3:26"},"nodeType":"YulFunctionCall","src":"18869:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"18894:2:26","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"18865:3:26"},"nodeType":"YulFunctionCall","src":"18865:32:26"},"nodeType":"YulIf","src":"18862:119:26"},{"nodeType":"YulBlock","src":"18991:117:26","statements":[{"nodeType":"YulVariableDeclaration","src":"19006:15:26","value":{"kind":"number","nodeType":"YulLiteral","src":"19020:1:26","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"19010:6:26","type":""}]},{"nodeType":"YulAssignment","src":"19035:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19070:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"19081:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19066:3:26"},"nodeType":"YulFunctionCall","src":"19066:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"19090:7:26"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"19045:20:26"},"nodeType":"YulFunctionCall","src":"19045:53:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"19035:6:26"}]}]},{"nodeType":"YulBlock","src":"19118:118:26","statements":[{"nodeType":"YulVariableDeclaration","src":"19133:16:26","value":{"kind":"number","nodeType":"YulLiteral","src":"19147:2:26","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"19137:6:26","type":""}]},{"nodeType":"YulAssignment","src":"19163:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19198:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"19209:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19194:3:26"},"nodeType":"YulFunctionCall","src":"19194:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"19218:7:26"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"19173:20:26"},"nodeType":"YulFunctionCall","src":"19173:53:26"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"19163:6:26"}]}]}]},"name":"abi_decode_tuple_t_bytes32t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18814:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"18825:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"18837:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"18845:6:26","type":""}],"src":"18769:474:26"},{"body":{"nodeType":"YulBlock","src":"19331:229:26","statements":[{"body":{"nodeType":"YulBlock","src":"19436:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"19438:16:26"},"nodeType":"YulFunctionCall","src":"19438:18:26"},"nodeType":"YulExpressionStatement","src":"19438:18:26"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"19408:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"19416:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"19405:2:26"},"nodeType":"YulFunctionCall","src":"19405:30:26"},"nodeType":"YulIf","src":"19402:56:26"},{"nodeType":"YulAssignment","src":"19468:25:26","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"19480:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"19488:4:26","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"19476:3:26"},"nodeType":"YulFunctionCall","src":"19476:17:26"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"19468:4:26"}]},{"nodeType":"YulAssignment","src":"19530:23:26","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"19542:4:26"},{"kind":"number","nodeType":"YulLiteral","src":"19548:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19538:3:26"},"nodeType":"YulFunctionCall","src":"19538:15:26"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"19530:4:26"}]}]},"name":"array_allocation_size_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"19315:6:26","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"19326:4:26","type":""}],"src":"19249:311:26"},{"body":{"nodeType":"YulBlock","src":"19685:608:26","statements":[{"nodeType":"YulAssignment","src":"19695:90:26","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"19777:6:26"}],"functionName":{"name":"array_allocation_size_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"19720:56:26"},"nodeType":"YulFunctionCall","src":"19720:64:26"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"19704:15:26"},"nodeType":"YulFunctionCall","src":"19704:81:26"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"19695:5:26"}]},{"nodeType":"YulVariableDeclaration","src":"19794:16:26","value":{"name":"array","nodeType":"YulIdentifier","src":"19805:5:26"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"19798:3:26","type":""}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"19827:5:26"},{"name":"length","nodeType":"YulIdentifier","src":"19834:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19820:6:26"},"nodeType":"YulFunctionCall","src":"19820:21:26"},"nodeType":"YulExpressionStatement","src":"19820:21:26"},{"nodeType":"YulAssignment","src":"19850:23:26","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"19861:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"19868:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19857:3:26"},"nodeType":"YulFunctionCall","src":"19857:16:26"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"19850:3:26"}]},{"nodeType":"YulVariableDeclaration","src":"19883:44:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"19901:6:26"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"19913:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"19921:4:26","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"19909:3:26"},"nodeType":"YulFunctionCall","src":"19909:17:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19897:3:26"},"nodeType":"YulFunctionCall","src":"19897:30:26"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"19887:6:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"19955:103:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"19969:77:26"},"nodeType":"YulFunctionCall","src":"19969:79:26"},"nodeType":"YulExpressionStatement","src":"19969:79:26"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"19942:6:26"},{"name":"end","nodeType":"YulIdentifier","src":"19950:3:26"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"19939:2:26"},"nodeType":"YulFunctionCall","src":"19939:15:26"},"nodeType":"YulIf","src":"19936:122:26"},{"body":{"nodeType":"YulBlock","src":"20143:144:26","statements":[{"nodeType":"YulVariableDeclaration","src":"20158:21:26","value":{"name":"src","nodeType":"YulIdentifier","src":"20176:3:26"},"variables":[{"name":"elementPos","nodeType":"YulTypedName","src":"20162:10:26","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"20200:3:26"},{"arguments":[{"name":"elementPos","nodeType":"YulIdentifier","src":"20226:10:26"},{"name":"end","nodeType":"YulIdentifier","src":"20238:3:26"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"20205:20:26"},"nodeType":"YulFunctionCall","src":"20205:37:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20193:6:26"},"nodeType":"YulFunctionCall","src":"20193:50:26"},"nodeType":"YulExpressionStatement","src":"20193:50:26"},{"nodeType":"YulAssignment","src":"20256:21:26","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"20267:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"20272:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20263:3:26"},"nodeType":"YulFunctionCall","src":"20263:14:26"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"20256:3:26"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"20096:3:26"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"20101:6:26"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"20093:2:26"},"nodeType":"YulFunctionCall","src":"20093:15:26"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"20109:25:26","statements":[{"nodeType":"YulAssignment","src":"20111:21:26","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"20122:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"20127:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20118:3:26"},"nodeType":"YulFunctionCall","src":"20118:14:26"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"20111:3:26"}]}]},"pre":{"nodeType":"YulBlock","src":"20071:21:26","statements":[{"nodeType":"YulVariableDeclaration","src":"20073:17:26","value":{"name":"offset","nodeType":"YulIdentifier","src":"20084:6:26"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"20077:3:26","type":""}]}]},"src":"20067:220:26"}]},"name":"abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"19655:6:26","type":""},{"name":"length","nodeType":"YulTypedName","src":"19663:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"19671:3:26","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"19679:5:26","type":""}],"src":"19583:710:26"},{"body":{"nodeType":"YulBlock","src":"20393:293:26","statements":[{"body":{"nodeType":"YulBlock","src":"20442:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"20444:77:26"},"nodeType":"YulFunctionCall","src":"20444:79:26"},"nodeType":"YulExpressionStatement","src":"20444:79:26"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"20421:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"20429:4:26","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20417:3:26"},"nodeType":"YulFunctionCall","src":"20417:17:26"},{"name":"end","nodeType":"YulIdentifier","src":"20436:3:26"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"20413:3:26"},"nodeType":"YulFunctionCall","src":"20413:27:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"20406:6:26"},"nodeType":"YulFunctionCall","src":"20406:35:26"},"nodeType":"YulIf","src":"20403:122:26"},{"nodeType":"YulVariableDeclaration","src":"20534:34:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"20561:6:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"20548:12:26"},"nodeType":"YulFunctionCall","src":"20548:20:26"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"20538:6:26","type":""}]},{"nodeType":"YulAssignment","src":"20577:103:26","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"20653:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"20661:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20649:3:26"},"nodeType":"YulFunctionCall","src":"20649:17:26"},{"name":"length","nodeType":"YulIdentifier","src":"20668:6:26"},{"name":"end","nodeType":"YulIdentifier","src":"20676:3:26"}],"functionName":{"name":"abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"20586:62:26"},"nodeType":"YulFunctionCall","src":"20586:94:26"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"20577:5:26"}]}]},"name":"abi_decode_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"20371:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"20379:3:26","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"20387:5:26","type":""}],"src":"20316:370:26"},{"body":{"nodeType":"YulBlock","src":"20825:761:26","statements":[{"body":{"nodeType":"YulBlock","src":"20871:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"20873:77:26"},"nodeType":"YulFunctionCall","src":"20873:79:26"},"nodeType":"YulExpressionStatement","src":"20873:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"20846:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"20855:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"20842:3:26"},"nodeType":"YulFunctionCall","src":"20842:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"20867:2:26","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"20838:3:26"},"nodeType":"YulFunctionCall","src":"20838:32:26"},"nodeType":"YulIf","src":"20835:119:26"},{"nodeType":"YulBlock","src":"20964:302:26","statements":[{"nodeType":"YulVariableDeclaration","src":"20979:45:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21010:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"21021:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21006:3:26"},"nodeType":"YulFunctionCall","src":"21006:17:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"20993:12:26"},"nodeType":"YulFunctionCall","src":"20993:31:26"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"20983:6:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"21071:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"21073:77:26"},"nodeType":"YulFunctionCall","src":"21073:79:26"},"nodeType":"YulExpressionStatement","src":"21073:79:26"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"21043:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"21051:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"21040:2:26"},"nodeType":"YulFunctionCall","src":"21040:30:26"},"nodeType":"YulIf","src":"21037:117:26"},{"nodeType":"YulAssignment","src":"21168:88:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21228:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"21239:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21224:3:26"},"nodeType":"YulFunctionCall","src":"21224:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"21248:7:26"}],"functionName":{"name":"abi_decode_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"21178:45:26"},"nodeType":"YulFunctionCall","src":"21178:78:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"21168:6:26"}]}]},{"nodeType":"YulBlock","src":"21276:303:26","statements":[{"nodeType":"YulVariableDeclaration","src":"21291:46:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21322:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"21333:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21318:3:26"},"nodeType":"YulFunctionCall","src":"21318:18:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"21305:12:26"},"nodeType":"YulFunctionCall","src":"21305:32:26"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"21295:6:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"21384:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"21386:77:26"},"nodeType":"YulFunctionCall","src":"21386:79:26"},"nodeType":"YulExpressionStatement","src":"21386:79:26"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"21356:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"21364:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"21353:2:26"},"nodeType":"YulFunctionCall","src":"21353:30:26"},"nodeType":"YulIf","src":"21350:117:26"},{"nodeType":"YulAssignment","src":"21481:88:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21541:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"21552:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21537:3:26"},"nodeType":"YulFunctionCall","src":"21537:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"21561:7:26"}],"functionName":{"name":"abi_decode_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"21491:45:26"},"nodeType":"YulFunctionCall","src":"21491:78:26"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"21481:6:26"}]}]}]},"name":"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20787:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"20798:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"20810:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"20818:6:26","type":""}],"src":"20692:894:26"},{"body":{"nodeType":"YulBlock","src":"21742:889:26","statements":[{"body":{"nodeType":"YulBlock","src":"21788:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"21790:77:26"},"nodeType":"YulFunctionCall","src":"21790:79:26"},"nodeType":"YulExpressionStatement","src":"21790:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"21763:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"21772:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"21759:3:26"},"nodeType":"YulFunctionCall","src":"21759:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"21784:2:26","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"21755:3:26"},"nodeType":"YulFunctionCall","src":"21755:32:26"},"nodeType":"YulIf","src":"21752:119:26"},{"nodeType":"YulBlock","src":"21881:117:26","statements":[{"nodeType":"YulVariableDeclaration","src":"21896:15:26","value":{"kind":"number","nodeType":"YulLiteral","src":"21910:1:26","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"21900:6:26","type":""}]},{"nodeType":"YulAssignment","src":"21925:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21960:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"21971:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21956:3:26"},"nodeType":"YulFunctionCall","src":"21956:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"21980:7:26"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"21935:20:26"},"nodeType":"YulFunctionCall","src":"21935:53:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"21925:6:26"}]}]},{"nodeType":"YulBlock","src":"22008:303:26","statements":[{"nodeType":"YulVariableDeclaration","src":"22023:46:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22054:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"22065:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22050:3:26"},"nodeType":"YulFunctionCall","src":"22050:18:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"22037:12:26"},"nodeType":"YulFunctionCall","src":"22037:32:26"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"22027:6:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"22116:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"22118:77:26"},"nodeType":"YulFunctionCall","src":"22118:79:26"},"nodeType":"YulExpressionStatement","src":"22118:79:26"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"22088:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"22096:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"22085:2:26"},"nodeType":"YulFunctionCall","src":"22085:30:26"},"nodeType":"YulIf","src":"22082:117:26"},{"nodeType":"YulAssignment","src":"22213:88:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22273:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"22284:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22269:3:26"},"nodeType":"YulFunctionCall","src":"22269:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"22293:7:26"}],"functionName":{"name":"abi_decode_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"22223:45:26"},"nodeType":"YulFunctionCall","src":"22223:78:26"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"22213:6:26"}]}]},{"nodeType":"YulBlock","src":"22321:303:26","statements":[{"nodeType":"YulVariableDeclaration","src":"22336:46:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22367:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"22378:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22363:3:26"},"nodeType":"YulFunctionCall","src":"22363:18:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"22350:12:26"},"nodeType":"YulFunctionCall","src":"22350:32:26"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"22340:6:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"22429:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"22431:77:26"},"nodeType":"YulFunctionCall","src":"22431:79:26"},"nodeType":"YulExpressionStatement","src":"22431:79:26"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"22401:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"22409:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"22398:2:26"},"nodeType":"YulFunctionCall","src":"22398:30:26"},"nodeType":"YulIf","src":"22395:117:26"},{"nodeType":"YulAssignment","src":"22526:88:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22586:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"22597:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22582:3:26"},"nodeType":"YulFunctionCall","src":"22582:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"22606:7:26"}],"functionName":{"name":"abi_decode_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"22536:45:26"},"nodeType":"YulFunctionCall","src":"22536:78:26"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"22526:6:26"}]}]}]},"name":"abi_decode_tuple_t_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21696:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"21707:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"21719:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"21727:6:26","type":""},{"name":"value2","nodeType":"YulTypedName","src":"21735:6:26","type":""}],"src":"21592:1039:26"},{"body":{"nodeType":"YulBlock","src":"22763:817:26","statements":[{"body":{"nodeType":"YulBlock","src":"22810:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"22812:77:26"},"nodeType":"YulFunctionCall","src":"22812:79:26"},"nodeType":"YulExpressionStatement","src":"22812:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"22784:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"22793:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"22780:3:26"},"nodeType":"YulFunctionCall","src":"22780:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"22805:3:26","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"22776:3:26"},"nodeType":"YulFunctionCall","src":"22776:33:26"},"nodeType":"YulIf","src":"22773:120:26"},{"nodeType":"YulBlock","src":"22903:117:26","statements":[{"nodeType":"YulVariableDeclaration","src":"22918:15:26","value":{"kind":"number","nodeType":"YulLiteral","src":"22932:1:26","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"22922:6:26","type":""}]},{"nodeType":"YulAssignment","src":"22947:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22982:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"22993:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22978:3:26"},"nodeType":"YulFunctionCall","src":"22978:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"23002:7:26"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"22957:20:26"},"nodeType":"YulFunctionCall","src":"22957:53:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"22947:6:26"}]}]},{"nodeType":"YulBlock","src":"23030:118:26","statements":[{"nodeType":"YulVariableDeclaration","src":"23045:16:26","value":{"kind":"number","nodeType":"YulLiteral","src":"23059:2:26","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"23049:6:26","type":""}]},{"nodeType":"YulAssignment","src":"23075:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23110:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"23121:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23106:3:26"},"nodeType":"YulFunctionCall","src":"23106:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"23130:7:26"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"23085:20:26"},"nodeType":"YulFunctionCall","src":"23085:53:26"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"23075:6:26"}]}]},{"nodeType":"YulBlock","src":"23158:118:26","statements":[{"nodeType":"YulVariableDeclaration","src":"23173:16:26","value":{"kind":"number","nodeType":"YulLiteral","src":"23187:2:26","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"23177:6:26","type":""}]},{"nodeType":"YulAssignment","src":"23203:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23238:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"23249:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23234:3:26"},"nodeType":"YulFunctionCall","src":"23234:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"23258:7:26"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"23213:20:26"},"nodeType":"YulFunctionCall","src":"23213:53:26"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"23203:6:26"}]}]},{"nodeType":"YulBlock","src":"23286:287:26","statements":[{"nodeType":"YulVariableDeclaration","src":"23301:46:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23332:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"23343:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23328:3:26"},"nodeType":"YulFunctionCall","src":"23328:18:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"23315:12:26"},"nodeType":"YulFunctionCall","src":"23315:32:26"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"23305:6:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"23394:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"23396:77:26"},"nodeType":"YulFunctionCall","src":"23396:79:26"},"nodeType":"YulExpressionStatement","src":"23396:79:26"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"23366:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"23374:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"23363:2:26"},"nodeType":"YulFunctionCall","src":"23363:30:26"},"nodeType":"YulIf","src":"23360:117:26"},{"nodeType":"YulAssignment","src":"23491:72:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23535:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"23546:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23531:3:26"},"nodeType":"YulFunctionCall","src":"23531:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"23555:7:26"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"23501:29:26"},"nodeType":"YulFunctionCall","src":"23501:62:26"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"23491:6:26"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256t_uint256t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22709:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"22720:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"22732:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"22740:6:26","type":""},{"name":"value2","nodeType":"YulTypedName","src":"22748:6:26","type":""},{"name":"value3","nodeType":"YulTypedName","src":"22756:6:26","type":""}],"src":"22637:943:26"},{"body":{"nodeType":"YulBlock","src":"23626:76:26","statements":[{"body":{"nodeType":"YulBlock","src":"23680:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23689:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"23692:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"23682:6:26"},"nodeType":"YulFunctionCall","src":"23682:12:26"},"nodeType":"YulExpressionStatement","src":"23682:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23649:5:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23671:5:26"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"23656:14:26"},"nodeType":"YulFunctionCall","src":"23656:21:26"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"23646:2:26"},"nodeType":"YulFunctionCall","src":"23646:32:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"23639:6:26"},"nodeType":"YulFunctionCall","src":"23639:40:26"},"nodeType":"YulIf","src":"23636:60:26"}]},"name":"validator_revert_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"23619:5:26","type":""}],"src":"23586:116:26"},{"body":{"nodeType":"YulBlock","src":"23757:84:26","statements":[{"nodeType":"YulAssignment","src":"23767:29:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"23789:6:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"23776:12:26"},"nodeType":"YulFunctionCall","src":"23776:20:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"23767:5:26"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23829:5:26"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"23805:23:26"},"nodeType":"YulFunctionCall","src":"23805:30:26"},"nodeType":"YulExpressionStatement","src":"23805:30:26"}]},"name":"abi_decode_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"23735:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"23743:3:26","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"23751:5:26","type":""}],"src":"23708:133:26"},{"body":{"nodeType":"YulBlock","src":"23927:388:26","statements":[{"body":{"nodeType":"YulBlock","src":"23973:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"23975:77:26"},"nodeType":"YulFunctionCall","src":"23975:79:26"},"nodeType":"YulExpressionStatement","src":"23975:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"23948:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"23957:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"23944:3:26"},"nodeType":"YulFunctionCall","src":"23944:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"23969:2:26","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"23940:3:26"},"nodeType":"YulFunctionCall","src":"23940:32:26"},"nodeType":"YulIf","src":"23937:119:26"},{"nodeType":"YulBlock","src":"24066:117:26","statements":[{"nodeType":"YulVariableDeclaration","src":"24081:15:26","value":{"kind":"number","nodeType":"YulLiteral","src":"24095:1:26","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"24085:6:26","type":""}]},{"nodeType":"YulAssignment","src":"24110:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24145:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"24156:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24141:3:26"},"nodeType":"YulFunctionCall","src":"24141:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"24165:7:26"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"24120:20:26"},"nodeType":"YulFunctionCall","src":"24120:53:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"24110:6:26"}]}]},{"nodeType":"YulBlock","src":"24193:115:26","statements":[{"nodeType":"YulVariableDeclaration","src":"24208:16:26","value":{"kind":"number","nodeType":"YulLiteral","src":"24222:2:26","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"24212:6:26","type":""}]},{"nodeType":"YulAssignment","src":"24238:60:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24270:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"24281:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24266:3:26"},"nodeType":"YulFunctionCall","src":"24266:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"24290:7:26"}],"functionName":{"name":"abi_decode_t_bool","nodeType":"YulIdentifier","src":"24248:17:26"},"nodeType":"YulFunctionCall","src":"24248:50:26"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"24238:6:26"}]}]}]},"name":"abi_decode_tuple_t_addresst_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"23889:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"23900:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"23912:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"23920:6:26","type":""}],"src":"23847:468:26"},{"body":{"nodeType":"YulBlock","src":"24404:391:26","statements":[{"body":{"nodeType":"YulBlock","src":"24450:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"24452:77:26"},"nodeType":"YulFunctionCall","src":"24452:79:26"},"nodeType":"YulExpressionStatement","src":"24452:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"24425:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"24434:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"24421:3:26"},"nodeType":"YulFunctionCall","src":"24421:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"24446:2:26","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"24417:3:26"},"nodeType":"YulFunctionCall","src":"24417:32:26"},"nodeType":"YulIf","src":"24414:119:26"},{"nodeType":"YulBlock","src":"24543:117:26","statements":[{"nodeType":"YulVariableDeclaration","src":"24558:15:26","value":{"kind":"number","nodeType":"YulLiteral","src":"24572:1:26","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"24562:6:26","type":""}]},{"nodeType":"YulAssignment","src":"24587:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24622:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"24633:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24618:3:26"},"nodeType":"YulFunctionCall","src":"24618:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"24642:7:26"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"24597:20:26"},"nodeType":"YulFunctionCall","src":"24597:53:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"24587:6:26"}]}]},{"nodeType":"YulBlock","src":"24670:118:26","statements":[{"nodeType":"YulVariableDeclaration","src":"24685:16:26","value":{"kind":"number","nodeType":"YulLiteral","src":"24699:2:26","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"24689:6:26","type":""}]},{"nodeType":"YulAssignment","src":"24715:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24750:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"24761:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24746:3:26"},"nodeType":"YulFunctionCall","src":"24746:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"24770:7:26"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"24725:20:26"},"nodeType":"YulFunctionCall","src":"24725:53:26"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"24715:6:26"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"24366:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"24377:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"24389:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"24397:6:26","type":""}],"src":"24321:474:26"},{"body":{"nodeType":"YulBlock","src":"24944:946:26","statements":[{"body":{"nodeType":"YulBlock","src":"24991:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"24993:77:26"},"nodeType":"YulFunctionCall","src":"24993:79:26"},"nodeType":"YulExpressionStatement","src":"24993:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"24965:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"24974:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"24961:3:26"},"nodeType":"YulFunctionCall","src":"24961:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"24986:3:26","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"24957:3:26"},"nodeType":"YulFunctionCall","src":"24957:33:26"},"nodeType":"YulIf","src":"24954:120:26"},{"nodeType":"YulBlock","src":"25084:117:26","statements":[{"nodeType":"YulVariableDeclaration","src":"25099:15:26","value":{"kind":"number","nodeType":"YulLiteral","src":"25113:1:26","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"25103:6:26","type":""}]},{"nodeType":"YulAssignment","src":"25128:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25163:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"25174:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25159:3:26"},"nodeType":"YulFunctionCall","src":"25159:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"25183:7:26"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"25138:20:26"},"nodeType":"YulFunctionCall","src":"25138:53:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"25128:6:26"}]}]},{"nodeType":"YulBlock","src":"25211:118:26","statements":[{"nodeType":"YulVariableDeclaration","src":"25226:16:26","value":{"kind":"number","nodeType":"YulLiteral","src":"25240:2:26","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"25230:6:26","type":""}]},{"nodeType":"YulAssignment","src":"25256:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25291:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"25302:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25287:3:26"},"nodeType":"YulFunctionCall","src":"25287:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"25311:7:26"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"25266:20:26"},"nodeType":"YulFunctionCall","src":"25266:53:26"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"25256:6:26"}]}]},{"nodeType":"YulBlock","src":"25339:118:26","statements":[{"nodeType":"YulVariableDeclaration","src":"25354:16:26","value":{"kind":"number","nodeType":"YulLiteral","src":"25368:2:26","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"25358:6:26","type":""}]},{"nodeType":"YulAssignment","src":"25384:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25419:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"25430:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25415:3:26"},"nodeType":"YulFunctionCall","src":"25415:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"25439:7:26"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"25394:20:26"},"nodeType":"YulFunctionCall","src":"25394:53:26"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"25384:6:26"}]}]},{"nodeType":"YulBlock","src":"25467:118:26","statements":[{"nodeType":"YulVariableDeclaration","src":"25482:16:26","value":{"kind":"number","nodeType":"YulLiteral","src":"25496:2:26","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"25486:6:26","type":""}]},{"nodeType":"YulAssignment","src":"25512:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25547:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"25558:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25543:3:26"},"nodeType":"YulFunctionCall","src":"25543:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"25567:7:26"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"25522:20:26"},"nodeType":"YulFunctionCall","src":"25522:53:26"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"25512:6:26"}]}]},{"nodeType":"YulBlock","src":"25595:288:26","statements":[{"nodeType":"YulVariableDeclaration","src":"25610:47:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25641:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"25652:3:26","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25637:3:26"},"nodeType":"YulFunctionCall","src":"25637:19:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"25624:12:26"},"nodeType":"YulFunctionCall","src":"25624:33:26"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"25614:6:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"25704:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"25706:77:26"},"nodeType":"YulFunctionCall","src":"25706:79:26"},"nodeType":"YulExpressionStatement","src":"25706:79:26"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"25676:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"25684:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"25673:2:26"},"nodeType":"YulFunctionCall","src":"25673:30:26"},"nodeType":"YulIf","src":"25670:117:26"},{"nodeType":"YulAssignment","src":"25801:72:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25845:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"25856:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25841:3:26"},"nodeType":"YulFunctionCall","src":"25841:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"25865:7:26"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"25811:29:26"},"nodeType":"YulFunctionCall","src":"25811:62:26"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"25801:6:26"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"24882:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"24893:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"24905:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"24913:6:26","type":""},{"name":"value2","nodeType":"YulTypedName","src":"24921:6:26","type":""},{"name":"value3","nodeType":"YulTypedName","src":"24929:6:26","type":""},{"name":"value4","nodeType":"YulTypedName","src":"24937:6:26","type":""}],"src":"24801:1089:26"},{"body":{"nodeType":"YulBlock","src":"25996:519:26","statements":[{"body":{"nodeType":"YulBlock","src":"26042:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"26044:77:26"},"nodeType":"YulFunctionCall","src":"26044:79:26"},"nodeType":"YulExpressionStatement","src":"26044:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"26017:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"26026:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"26013:3:26"},"nodeType":"YulFunctionCall","src":"26013:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"26038:2:26","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"26009:3:26"},"nodeType":"YulFunctionCall","src":"26009:32:26"},"nodeType":"YulIf","src":"26006:119:26"},{"nodeType":"YulBlock","src":"26135:117:26","statements":[{"nodeType":"YulVariableDeclaration","src":"26150:15:26","value":{"kind":"number","nodeType":"YulLiteral","src":"26164:1:26","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"26154:6:26","type":""}]},{"nodeType":"YulAssignment","src":"26179:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26214:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"26225:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26210:3:26"},"nodeType":"YulFunctionCall","src":"26210:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"26234:7:26"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"26189:20:26"},"nodeType":"YulFunctionCall","src":"26189:53:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"26179:6:26"}]}]},{"nodeType":"YulBlock","src":"26262:118:26","statements":[{"nodeType":"YulVariableDeclaration","src":"26277:16:26","value":{"kind":"number","nodeType":"YulLiteral","src":"26291:2:26","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"26281:6:26","type":""}]},{"nodeType":"YulAssignment","src":"26307:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26342:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"26353:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26338:3:26"},"nodeType":"YulFunctionCall","src":"26338:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"26362:7:26"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"26317:20:26"},"nodeType":"YulFunctionCall","src":"26317:53:26"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"26307:6:26"}]}]},{"nodeType":"YulBlock","src":"26390:118:26","statements":[{"nodeType":"YulVariableDeclaration","src":"26405:16:26","value":{"kind":"number","nodeType":"YulLiteral","src":"26419:2:26","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"26409:6:26","type":""}]},{"nodeType":"YulAssignment","src":"26435:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26470:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"26481:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26466:3:26"},"nodeType":"YulFunctionCall","src":"26466:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"26490:7:26"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"26445:20:26"},"nodeType":"YulFunctionCall","src":"26445:53:26"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"26435:6:26"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"25950:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"25961:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"25973:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"25981:6:26","type":""},{"name":"value2","nodeType":"YulTypedName","src":"25989:6:26","type":""}],"src":"25896:619:26"},{"body":{"nodeType":"YulBlock","src":"26549:152:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"26566:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"26569:77:26","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26559:6:26"},"nodeType":"YulFunctionCall","src":"26559:88:26"},"nodeType":"YulExpressionStatement","src":"26559:88:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"26663:1:26","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"26666:4:26","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26656:6:26"},"nodeType":"YulFunctionCall","src":"26656:15:26"},"nodeType":"YulExpressionStatement","src":"26656:15:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"26687:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"26690:4:26","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"26680:6:26"},"nodeType":"YulFunctionCall","src":"26680:15:26"},"nodeType":"YulExpressionStatement","src":"26680:15:26"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"26521:180:26"},{"body":{"nodeType":"YulBlock","src":"26735:152:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"26752:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"26755:77:26","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26745:6:26"},"nodeType":"YulFunctionCall","src":"26745:88:26"},"nodeType":"YulExpressionStatement","src":"26745:88:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"26849:1:26","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"26852:4:26","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26842:6:26"},"nodeType":"YulFunctionCall","src":"26842:15:26"},"nodeType":"YulExpressionStatement","src":"26842:15:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"26873:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"26876:4:26","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"26866:6:26"},"nodeType":"YulFunctionCall","src":"26866:15:26"},"nodeType":"YulExpressionStatement","src":"26866:15:26"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"26707:180:26"},{"body":{"nodeType":"YulBlock","src":"26936:190:26","statements":[{"nodeType":"YulAssignment","src":"26946:33:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"26973:5:26"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"26955:17:26"},"nodeType":"YulFunctionCall","src":"26955:24:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"26946:5:26"}]},{"body":{"nodeType":"YulBlock","src":"27069:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"27071:16:26"},"nodeType":"YulFunctionCall","src":"27071:18:26"},"nodeType":"YulExpressionStatement","src":"27071:18:26"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"26994:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"27001:66:26","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"26991:2:26"},"nodeType":"YulFunctionCall","src":"26991:77:26"},"nodeType":"YulIf","src":"26988:103:26"},{"nodeType":"YulAssignment","src":"27100:20:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"27111:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"27118:1:26","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27107:3:26"},"nodeType":"YulFunctionCall","src":"27107:13:26"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"27100:3:26"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"26922:5:26","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"26932:3:26","type":""}],"src":"26893:233:26"},{"body":{"nodeType":"YulBlock","src":"27197:53:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27214:3:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"27237:5:26"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"27219:17:26"},"nodeType":"YulFunctionCall","src":"27219:24:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27207:6:26"},"nodeType":"YulFunctionCall","src":"27207:37:26"},"nodeType":"YulExpressionStatement","src":"27207:37:26"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"27185:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"27192:3:26","type":""}],"src":"27132:118:26"},{"body":{"nodeType":"YulBlock","src":"27382:206:26","statements":[{"nodeType":"YulAssignment","src":"27392:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27404:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"27415:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27400:3:26"},"nodeType":"YulFunctionCall","src":"27400:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27392:4:26"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"27472:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27485:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"27496:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27481:3:26"},"nodeType":"YulFunctionCall","src":"27481:17:26"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"27428:43:26"},"nodeType":"YulFunctionCall","src":"27428:71:26"},"nodeType":"YulExpressionStatement","src":"27428:71:26"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"27553:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27566:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"27577:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27562:3:26"},"nodeType":"YulFunctionCall","src":"27562:18:26"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"27509:43:26"},"nodeType":"YulFunctionCall","src":"27509:72:26"},"nodeType":"YulExpressionStatement","src":"27509:72:26"}]},"name":"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"27346:9:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"27358:6:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"27366:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"27377:4:26","type":""}],"src":"27256:332:26"},{"body":{"nodeType":"YulBlock","src":"27720:206:26","statements":[{"nodeType":"YulAssignment","src":"27730:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27742:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"27753:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27738:3:26"},"nodeType":"YulFunctionCall","src":"27738:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27730:4:26"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"27810:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27823:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"27834:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27819:3:26"},"nodeType":"YulFunctionCall","src":"27819:17:26"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"27766:43:26"},"nodeType":"YulFunctionCall","src":"27766:71:26"},"nodeType":"YulExpressionStatement","src":"27766:71:26"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"27891:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27904:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"27915:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27900:3:26"},"nodeType":"YulFunctionCall","src":"27900:18:26"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"27847:43:26"},"nodeType":"YulFunctionCall","src":"27847:72:26"},"nodeType":"YulExpressionStatement","src":"27847:72:26"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"27684:9:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"27696:6:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"27704:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"27715:4:26","type":""}],"src":"27594:332:26"},{"body":{"nodeType":"YulBlock","src":"27960:152:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"27977:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"27980:77:26","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27970:6:26"},"nodeType":"YulFunctionCall","src":"27970:88:26"},"nodeType":"YulExpressionStatement","src":"27970:88:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"28074:1:26","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"28077:4:26","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28067:6:26"},"nodeType":"YulFunctionCall","src":"28067:15:26"},"nodeType":"YulExpressionStatement","src":"28067:15:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"28098:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"28101:4:26","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"28091:6:26"},"nodeType":"YulFunctionCall","src":"28091:15:26"},"nodeType":"YulExpressionStatement","src":"28091:15:26"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"27932:180:26"},{"body":{"nodeType":"YulBlock","src":"28169:269:26","statements":[{"nodeType":"YulAssignment","src":"28179:22:26","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"28193:4:26"},{"kind":"number","nodeType":"YulLiteral","src":"28199:1:26","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"28189:3:26"},"nodeType":"YulFunctionCall","src":"28189:12:26"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"28179:6:26"}]},{"nodeType":"YulVariableDeclaration","src":"28210:38:26","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"28240:4:26"},{"kind":"number","nodeType":"YulLiteral","src":"28246:1:26","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"28236:3:26"},"nodeType":"YulFunctionCall","src":"28236:12:26"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"28214:18:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"28287:51:26","statements":[{"nodeType":"YulAssignment","src":"28301:27:26","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"28315:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"28323:4:26","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"28311:3:26"},"nodeType":"YulFunctionCall","src":"28311:17:26"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"28301:6:26"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"28267:18:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"28260:6:26"},"nodeType":"YulFunctionCall","src":"28260:26:26"},"nodeType":"YulIf","src":"28257:81:26"},{"body":{"nodeType":"YulBlock","src":"28390:42:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"28404:16:26"},"nodeType":"YulFunctionCall","src":"28404:18:26"},"nodeType":"YulExpressionStatement","src":"28404:18:26"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"28354:18:26"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"28377:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"28385:2:26","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"28374:2:26"},"nodeType":"YulFunctionCall","src":"28374:14:26"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"28351:2:26"},"nodeType":"YulFunctionCall","src":"28351:38:26"},"nodeType":"YulIf","src":"28348:84:26"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"28153:4:26","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"28162:6:26","type":""}],"src":"28118:320:26"},{"body":{"nodeType":"YulBlock","src":"28498:87:26","statements":[{"nodeType":"YulAssignment","src":"28508:11:26","value":{"name":"ptr","nodeType":"YulIdentifier","src":"28516:3:26"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"28508:4:26"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"28536:1:26","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"28539:3:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28529:6:26"},"nodeType":"YulFunctionCall","src":"28529:14:26"},"nodeType":"YulExpressionStatement","src":"28529:14:26"},{"nodeType":"YulAssignment","src":"28552:26:26","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"28570:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"28573:4:26","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"28560:9:26"},"nodeType":"YulFunctionCall","src":"28560:18:26"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"28552:4:26"}]}]},"name":"array_dataslot_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"28485:3:26","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"28493:4:26","type":""}],"src":"28444:141:26"},{"body":{"nodeType":"YulBlock","src":"28635:49:26","statements":[{"nodeType":"YulAssignment","src":"28645:33:26","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"28663:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"28670:2:26","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28659:3:26"},"nodeType":"YulFunctionCall","src":"28659:14:26"},{"kind":"number","nodeType":"YulLiteral","src":"28675:2:26","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"28655:3:26"},"nodeType":"YulFunctionCall","src":"28655:23:26"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"28645:6:26"}]}]},"name":"divide_by_32_ceil","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"28618:5:26","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"28628:6:26","type":""}],"src":"28591:93:26"},{"body":{"nodeType":"YulBlock","src":"28743:54:26","statements":[{"nodeType":"YulAssignment","src":"28753:37:26","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"28778:4:26"},{"name":"value","nodeType":"YulIdentifier","src":"28784:5:26"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"28774:3:26"},"nodeType":"YulFunctionCall","src":"28774:16:26"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"28753:8:26"}]}]},"name":"shift_left_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"28718:4:26","type":""},{"name":"value","nodeType":"YulTypedName","src":"28724:5:26","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"28734:8:26","type":""}],"src":"28690:107:26"},{"body":{"nodeType":"YulBlock","src":"28879:317:26","statements":[{"nodeType":"YulVariableDeclaration","src":"28889:35:26","value":{"arguments":[{"name":"shiftBytes","nodeType":"YulIdentifier","src":"28910:10:26"},{"kind":"number","nodeType":"YulLiteral","src":"28922:1:26","type":"","value":"8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"28906:3:26"},"nodeType":"YulFunctionCall","src":"28906:18:26"},"variables":[{"name":"shiftBits","nodeType":"YulTypedName","src":"28893:9:26","type":""}]},{"nodeType":"YulVariableDeclaration","src":"28933:109:26","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"28964:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"28975:66:26","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"28945:18:26"},"nodeType":"YulFunctionCall","src":"28945:97:26"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"28937:4:26","type":""}]},{"nodeType":"YulAssignment","src":"29051:51:26","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"29082:9:26"},{"name":"toInsert","nodeType":"YulIdentifier","src":"29093:8:26"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"29063:18:26"},"nodeType":"YulFunctionCall","src":"29063:39:26"},"variableNames":[{"name":"toInsert","nodeType":"YulIdentifier","src":"29051:8:26"}]},{"nodeType":"YulAssignment","src":"29111:30:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"29124:5:26"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"29135:4:26"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"29131:3:26"},"nodeType":"YulFunctionCall","src":"29131:9:26"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"29120:3:26"},"nodeType":"YulFunctionCall","src":"29120:21:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"29111:5:26"}]},{"nodeType":"YulAssignment","src":"29150:40:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"29163:5:26"},{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"29174:8:26"},{"name":"mask","nodeType":"YulIdentifier","src":"29184:4:26"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"29170:3:26"},"nodeType":"YulFunctionCall","src":"29170:19:26"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"29160:2:26"},"nodeType":"YulFunctionCall","src":"29160:30:26"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"29150:6:26"}]}]},"name":"update_byte_slice_dynamic32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"28840:5:26","type":""},{"name":"shiftBytes","nodeType":"YulTypedName","src":"28847:10:26","type":""},{"name":"toInsert","nodeType":"YulTypedName","src":"28859:8:26","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"28872:6:26","type":""}],"src":"28803:393:26"},{"body":{"nodeType":"YulBlock","src":"29234:28:26","statements":[{"nodeType":"YulAssignment","src":"29244:12:26","value":{"name":"value","nodeType":"YulIdentifier","src":"29251:5:26"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"29244:3:26"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"29220:5:26","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"29230:3:26","type":""}],"src":"29202:60:26"},{"body":{"nodeType":"YulBlock","src":"29328:82:26","statements":[{"nodeType":"YulAssignment","src":"29338:66:26","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"29396:5:26"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"29378:17:26"},"nodeType":"YulFunctionCall","src":"29378:24:26"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"29369:8:26"},"nodeType":"YulFunctionCall","src":"29369:34:26"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"29351:17:26"},"nodeType":"YulFunctionCall","src":"29351:53:26"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"29338:9:26"}]}]},"name":"convert_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"29308:5:26","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"29318:9:26","type":""}],"src":"29268:142:26"},{"body":{"nodeType":"YulBlock","src":"29463:28:26","statements":[{"nodeType":"YulAssignment","src":"29473:12:26","value":{"name":"value","nodeType":"YulIdentifier","src":"29480:5:26"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"29473:3:26"}]}]},"name":"prepare_store_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"29449:5:26","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"29459:3:26","type":""}],"src":"29416:75:26"},{"body":{"nodeType":"YulBlock","src":"29573:193:26","statements":[{"nodeType":"YulVariableDeclaration","src":"29583:63:26","value":{"arguments":[{"name":"value_0","nodeType":"YulIdentifier","src":"29638:7:26"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"29607:30:26"},"nodeType":"YulFunctionCall","src":"29607:39:26"},"variables":[{"name":"convertedValue_0","nodeType":"YulTypedName","src":"29587:16:26","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"29662:4:26"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"29702:4:26"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"29696:5:26"},"nodeType":"YulFunctionCall","src":"29696:11:26"},{"name":"offset","nodeType":"YulIdentifier","src":"29709:6:26"},{"arguments":[{"name":"convertedValue_0","nodeType":"YulIdentifier","src":"29741:16:26"}],"functionName":{"name":"prepare_store_t_uint256","nodeType":"YulIdentifier","src":"29717:23:26"},"nodeType":"YulFunctionCall","src":"29717:41:26"}],"functionName":{"name":"update_byte_slice_dynamic32","nodeType":"YulIdentifier","src":"29668:27:26"},"nodeType":"YulFunctionCall","src":"29668:91:26"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"29655:6:26"},"nodeType":"YulFunctionCall","src":"29655:105:26"},"nodeType":"YulExpressionStatement","src":"29655:105:26"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"29550:4:26","type":""},{"name":"offset","nodeType":"YulTypedName","src":"29556:6:26","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"29564:7:26","type":""}],"src":"29497:269:26"},{"body":{"nodeType":"YulBlock","src":"29821:24:26","statements":[{"nodeType":"YulAssignment","src":"29831:8:26","value":{"kind":"number","nodeType":"YulLiteral","src":"29838:1:26","type":"","value":"0"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"29831:3:26"}]}]},"name":"zero_value_for_split_t_uint256","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"29817:3:26","type":""}],"src":"29772:73:26"},{"body":{"nodeType":"YulBlock","src":"29904:136:26","statements":[{"nodeType":"YulVariableDeclaration","src":"29914:46:26","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nodeType":"YulIdentifier","src":"29928:30:26"},"nodeType":"YulFunctionCall","src":"29928:32:26"},"variables":[{"name":"zero_0","nodeType":"YulTypedName","src":"29918:6:26","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"30013:4:26"},{"name":"offset","nodeType":"YulIdentifier","src":"30019:6:26"},{"name":"zero_0","nodeType":"YulIdentifier","src":"30027:6:26"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"29969:43:26"},"nodeType":"YulFunctionCall","src":"29969:65:26"},"nodeType":"YulExpressionStatement","src":"29969:65:26"}]},"name":"storage_set_to_zero_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"29890:4:26","type":""},{"name":"offset","nodeType":"YulTypedName","src":"29896:6:26","type":""}],"src":"29851:189:26"},{"body":{"nodeType":"YulBlock","src":"30096:136:26","statements":[{"body":{"nodeType":"YulBlock","src":"30163:63:26","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"30207:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"30214:1:26","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nodeType":"YulIdentifier","src":"30177:29:26"},"nodeType":"YulFunctionCall","src":"30177:39:26"},"nodeType":"YulExpressionStatement","src":"30177:39:26"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"30116:5:26"},{"name":"end","nodeType":"YulIdentifier","src":"30123:3:26"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"30113:2:26"},"nodeType":"YulFunctionCall","src":"30113:14:26"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"30128:26:26","statements":[{"nodeType":"YulAssignment","src":"30130:22:26","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"30143:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"30150:1:26","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30139:3:26"},"nodeType":"YulFunctionCall","src":"30139:13:26"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"30130:5:26"}]}]},"pre":{"nodeType":"YulBlock","src":"30110:2:26","statements":[]},"src":"30106:120:26"}]},"name":"clear_storage_range_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"30084:5:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"30091:3:26","type":""}],"src":"30046:186:26"},{"body":{"nodeType":"YulBlock","src":"30317:464:26","statements":[{"body":{"nodeType":"YulBlock","src":"30343:431:26","statements":[{"nodeType":"YulVariableDeclaration","src":"30357:54:26","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"30405:5:26"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"30373:31:26"},"nodeType":"YulFunctionCall","src":"30373:38:26"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"30361:8:26","type":""}]},{"nodeType":"YulVariableDeclaration","src":"30424:63:26","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"30447:8:26"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"30475:10:26"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"30457:17:26"},"nodeType":"YulFunctionCall","src":"30457:29:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30443:3:26"},"nodeType":"YulFunctionCall","src":"30443:44:26"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"30428:11:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"30644:27:26","statements":[{"nodeType":"YulAssignment","src":"30646:23:26","value":{"name":"dataArea","nodeType":"YulIdentifier","src":"30661:8:26"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"30646:11:26"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"30628:10:26"},{"kind":"number","nodeType":"YulLiteral","src":"30640:2:26","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"30625:2:26"},"nodeType":"YulFunctionCall","src":"30625:18:26"},"nodeType":"YulIf","src":"30622:49:26"},{"expression":{"arguments":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"30713:11:26"},{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"30730:8:26"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"30758:3:26"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"30740:17:26"},"nodeType":"YulFunctionCall","src":"30740:22:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30726:3:26"},"nodeType":"YulFunctionCall","src":"30726:37:26"}],"functionName":{"name":"clear_storage_range_t_bytes1","nodeType":"YulIdentifier","src":"30684:28:26"},"nodeType":"YulFunctionCall","src":"30684:80:26"},"nodeType":"YulExpressionStatement","src":"30684:80:26"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"30334:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"30339:2:26","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"30331:2:26"},"nodeType":"YulFunctionCall","src":"30331:11:26"},"nodeType":"YulIf","src":"30328:446:26"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"30293:5:26","type":""},{"name":"len","nodeType":"YulTypedName","src":"30300:3:26","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"30305:10:26","type":""}],"src":"30238:543:26"},{"body":{"nodeType":"YulBlock","src":"30850:54:26","statements":[{"nodeType":"YulAssignment","src":"30860:37:26","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"30885:4:26"},{"name":"value","nodeType":"YulIdentifier","src":"30891:5:26"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"30881:3:26"},"nodeType":"YulFunctionCall","src":"30881:16:26"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"30860:8:26"}]}]},"name":"shift_right_unsigned_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"30825:4:26","type":""},{"name":"value","nodeType":"YulTypedName","src":"30831:5:26","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"30841:8:26","type":""}],"src":"30787:117:26"},{"body":{"nodeType":"YulBlock","src":"30961:118:26","statements":[{"nodeType":"YulVariableDeclaration","src":"30971:68:26","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"31020:1:26","type":"","value":"8"},{"name":"bytes","nodeType":"YulIdentifier","src":"31023:5:26"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"31016:3:26"},"nodeType":"YulFunctionCall","src":"31016:13:26"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"31035:1:26","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"31031:3:26"},"nodeType":"YulFunctionCall","src":"31031:6:26"}],"functionName":{"name":"shift_right_unsigned_dynamic","nodeType":"YulIdentifier","src":"30987:28:26"},"nodeType":"YulFunctionCall","src":"30987:51:26"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"30983:3:26"},"nodeType":"YulFunctionCall","src":"30983:56:26"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"30975:4:26","type":""}]},{"nodeType":"YulAssignment","src":"31048:25:26","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"31062:4:26"},{"name":"mask","nodeType":"YulIdentifier","src":"31068:4:26"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"31058:3:26"},"nodeType":"YulFunctionCall","src":"31058:15:26"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"31048:6:26"}]}]},"name":"mask_bytes_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"30938:4:26","type":""},{"name":"bytes","nodeType":"YulTypedName","src":"30944:5:26","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"30954:6:26","type":""}],"src":"30910:169:26"},{"body":{"nodeType":"YulBlock","src":"31165:214:26","statements":[{"nodeType":"YulAssignment","src":"31298:37:26","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"31325:4:26"},{"name":"len","nodeType":"YulIdentifier","src":"31331:3:26"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"31306:18:26"},"nodeType":"YulFunctionCall","src":"31306:29:26"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"31298:4:26"}]},{"nodeType":"YulAssignment","src":"31344:29:26","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"31355:4:26"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"31365:1:26","type":"","value":"2"},{"name":"len","nodeType":"YulIdentifier","src":"31368:3:26"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"31361:3:26"},"nodeType":"YulFunctionCall","src":"31361:11:26"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"31352:2:26"},"nodeType":"YulFunctionCall","src":"31352:21:26"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"31344:4:26"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"31146:4:26","type":""},{"name":"len","nodeType":"YulTypedName","src":"31152:3:26","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"31160:4:26","type":""}],"src":"31084:295:26"},{"body":{"nodeType":"YulBlock","src":"31476:1303:26","statements":[{"nodeType":"YulVariableDeclaration","src":"31487:51:26","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"31534:3:26"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"31501:32:26"},"nodeType":"YulFunctionCall","src":"31501:37:26"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"31491:6:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"31623:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"31625:16:26"},"nodeType":"YulFunctionCall","src":"31625:18:26"},"nodeType":"YulExpressionStatement","src":"31625:18:26"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"31595:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"31603:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"31592:2:26"},"nodeType":"YulFunctionCall","src":"31592:30:26"},"nodeType":"YulIf","src":"31589:56:26"},{"nodeType":"YulVariableDeclaration","src":"31655:52:26","value":{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"31701:4:26"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"31695:5:26"},"nodeType":"YulFunctionCall","src":"31695:11:26"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"31669:25:26"},"nodeType":"YulFunctionCall","src":"31669:38:26"},"variables":[{"name":"oldLen","nodeType":"YulTypedName","src":"31659:6:26","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"31800:4:26"},{"name":"oldLen","nodeType":"YulIdentifier","src":"31806:6:26"},{"name":"newLen","nodeType":"YulIdentifier","src":"31814:6:26"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulIdentifier","src":"31754:45:26"},"nodeType":"YulFunctionCall","src":"31754:67:26"},"nodeType":"YulExpressionStatement","src":"31754:67:26"},{"nodeType":"YulVariableDeclaration","src":"31831:18:26","value":{"kind":"number","nodeType":"YulLiteral","src":"31848:1:26","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"31835:9:26","type":""}]},{"nodeType":"YulAssignment","src":"31859:17:26","value":{"kind":"number","nodeType":"YulLiteral","src":"31872:4:26","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"31859:9:26"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"31923:611:26","statements":[{"nodeType":"YulVariableDeclaration","src":"31937:37:26","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"31956:6:26"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"31968:4:26","type":"","value":"0x1f"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"31964:3:26"},"nodeType":"YulFunctionCall","src":"31964:9:26"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"31952:3:26"},"nodeType":"YulFunctionCall","src":"31952:22:26"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"31941:7:26","type":""}]},{"nodeType":"YulVariableDeclaration","src":"31988:51:26","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"32034:4:26"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"32002:31:26"},"nodeType":"YulFunctionCall","src":"32002:37:26"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"31992:6:26","type":""}]},{"nodeType":"YulVariableDeclaration","src":"32052:10:26","value":{"kind":"number","nodeType":"YulLiteral","src":"32061:1:26","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"32056:1:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"32120:163:26","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"32145:6:26"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"32163:3:26"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"32168:9:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32159:3:26"},"nodeType":"YulFunctionCall","src":"32159:19:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"32153:5:26"},"nodeType":"YulFunctionCall","src":"32153:26:26"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"32138:6:26"},"nodeType":"YulFunctionCall","src":"32138:42:26"},"nodeType":"YulExpressionStatement","src":"32138:42:26"},{"nodeType":"YulAssignment","src":"32197:24:26","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"32211:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"32219:1:26","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32207:3:26"},"nodeType":"YulFunctionCall","src":"32207:14:26"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"32197:6:26"}]},{"nodeType":"YulAssignment","src":"32238:31:26","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"32255:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"32266:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32251:3:26"},"nodeType":"YulFunctionCall","src":"32251:18:26"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"32238:9:26"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"32086:1:26"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"32089:7:26"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"32083:2:26"},"nodeType":"YulFunctionCall","src":"32083:14:26"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"32098:21:26","statements":[{"nodeType":"YulAssignment","src":"32100:17:26","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"32109:1:26"},{"kind":"number","nodeType":"YulLiteral","src":"32112:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32105:3:26"},"nodeType":"YulFunctionCall","src":"32105:12:26"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"32100:1:26"}]}]},"pre":{"nodeType":"YulBlock","src":"32079:3:26","statements":[]},"src":"32075:208:26"},{"body":{"nodeType":"YulBlock","src":"32319:156:26","statements":[{"nodeType":"YulVariableDeclaration","src":"32337:43:26","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"32364:3:26"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"32369:9:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32360:3:26"},"nodeType":"YulFunctionCall","src":"32360:19:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"32354:5:26"},"nodeType":"YulFunctionCall","src":"32354:26:26"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"32341:9:26","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"32404:6:26"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"32431:9:26"},{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"32446:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"32454:4:26","type":"","value":"0x1f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"32442:3:26"},"nodeType":"YulFunctionCall","src":"32442:17:26"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"32412:18:26"},"nodeType":"YulFunctionCall","src":"32412:48:26"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"32397:6:26"},"nodeType":"YulFunctionCall","src":"32397:64:26"},"nodeType":"YulExpressionStatement","src":"32397:64:26"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"32302:7:26"},{"name":"newLen","nodeType":"YulIdentifier","src":"32311:6:26"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"32299:2:26"},"nodeType":"YulFunctionCall","src":"32299:19:26"},"nodeType":"YulIf","src":"32296:179:26"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"32495:4:26"},{"arguments":[{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"32509:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"32517:1:26","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"32505:3:26"},"nodeType":"YulFunctionCall","src":"32505:14:26"},{"kind":"number","nodeType":"YulLiteral","src":"32521:1:26","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32501:3:26"},"nodeType":"YulFunctionCall","src":"32501:22:26"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"32488:6:26"},"nodeType":"YulFunctionCall","src":"32488:36:26"},"nodeType":"YulExpressionStatement","src":"32488:36:26"}]},"nodeType":"YulCase","src":"31916:618:26","value":{"kind":"number","nodeType":"YulLiteral","src":"31921:1:26","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"32551:222:26","statements":[{"nodeType":"YulVariableDeclaration","src":"32565:14:26","value":{"kind":"number","nodeType":"YulLiteral","src":"32578:1:26","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"32569:5:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"32602:67:26","statements":[{"nodeType":"YulAssignment","src":"32620:35:26","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"32639:3:26"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"32644:9:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32635:3:26"},"nodeType":"YulFunctionCall","src":"32635:19:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"32629:5:26"},"nodeType":"YulFunctionCall","src":"32629:26:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"32620:5:26"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"32595:6:26"},"nodeType":"YulIf","src":"32592:77:26"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"32689:4:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"32748:5:26"},{"name":"newLen","nodeType":"YulIdentifier","src":"32755:6:26"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"32695:52:26"},"nodeType":"YulFunctionCall","src":"32695:67:26"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"32682:6:26"},"nodeType":"YulFunctionCall","src":"32682:81:26"},"nodeType":"YulExpressionStatement","src":"32682:81:26"}]},"nodeType":"YulCase","src":"32543:230:26","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"31896:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"31904:2:26","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"31893:2:26"},"nodeType":"YulFunctionCall","src":"31893:14:26"},"nodeType":"YulSwitch","src":"31886:887:26"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"31465:4:26","type":""},{"name":"src","nodeType":"YulTypedName","src":"31471:3:26","type":""}],"src":"31384:1395:26"},{"body":{"nodeType":"YulBlock","src":"32899:34:26","statements":[{"nodeType":"YulAssignment","src":"32909:18:26","value":{"name":"pos","nodeType":"YulIdentifier","src":"32924:3:26"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"32909:11:26"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"32871:3:26","type":""},{"name":"length","nodeType":"YulTypedName","src":"32876:6:26","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"32887:11:26","type":""}],"src":"32785:148:26"},{"body":{"nodeType":"YulBlock","src":"33070:767:26","statements":[{"nodeType":"YulVariableDeclaration","src":"33080:29:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"33103:5:26"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"33097:5:26"},"nodeType":"YulFunctionCall","src":"33097:12:26"},"variables":[{"name":"slotValue","nodeType":"YulTypedName","src":"33084:9:26","type":""}]},{"nodeType":"YulVariableDeclaration","src":"33118:50:26","value":{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"33158:9:26"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"33132:25:26"},"nodeType":"YulFunctionCall","src":"33132:36:26"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"33122:6:26","type":""}]},{"nodeType":"YulAssignment","src":"33177:96:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"33261:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"33266:6:26"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"33184:76:26"},"nodeType":"YulFunctionCall","src":"33184:89:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"33177:3:26"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"33322:159:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"33375:3:26"},{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"33384:9:26"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"33399:4:26","type":"","value":"0xff"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"33395:3:26"},"nodeType":"YulFunctionCall","src":"33395:9:26"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"33380:3:26"},"nodeType":"YulFunctionCall","src":"33380:25:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33368:6:26"},"nodeType":"YulFunctionCall","src":"33368:38:26"},"nodeType":"YulExpressionStatement","src":"33368:38:26"},{"nodeType":"YulAssignment","src":"33419:52:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"33430:3:26"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"33439:6:26"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"33461:6:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"33454:6:26"},"nodeType":"YulFunctionCall","src":"33454:14:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"33447:6:26"},"nodeType":"YulFunctionCall","src":"33447:22:26"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"33435:3:26"},"nodeType":"YulFunctionCall","src":"33435:35:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33426:3:26"},"nodeType":"YulFunctionCall","src":"33426:45:26"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"33419:3:26"}]}]},"nodeType":"YulCase","src":"33315:166:26","value":{"kind":"number","nodeType":"YulLiteral","src":"33320:1:26","type":"","value":"0"}},{"body":{"nodeType":"YulBlock","src":"33497:334:26","statements":[{"nodeType":"YulVariableDeclaration","src":"33542:53:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"33589:5:26"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"33557:31:26"},"nodeType":"YulFunctionCall","src":"33557:38:26"},"variables":[{"name":"dataPos","nodeType":"YulTypedName","src":"33546:7:26","type":""}]},{"nodeType":"YulVariableDeclaration","src":"33608:10:26","value":{"kind":"number","nodeType":"YulLiteral","src":"33617:1:26","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"33612:1:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"33675:110:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"33704:3:26"},{"name":"i","nodeType":"YulIdentifier","src":"33709:1:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33700:3:26"},"nodeType":"YulFunctionCall","src":"33700:11:26"},{"arguments":[{"name":"dataPos","nodeType":"YulIdentifier","src":"33719:7:26"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"33713:5:26"},"nodeType":"YulFunctionCall","src":"33713:14:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33693:6:26"},"nodeType":"YulFunctionCall","src":"33693:35:26"},"nodeType":"YulExpressionStatement","src":"33693:35:26"},{"nodeType":"YulAssignment","src":"33745:26:26","value":{"arguments":[{"name":"dataPos","nodeType":"YulIdentifier","src":"33760:7:26"},{"kind":"number","nodeType":"YulLiteral","src":"33769:1:26","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33756:3:26"},"nodeType":"YulFunctionCall","src":"33756:15:26"},"variableNames":[{"name":"dataPos","nodeType":"YulIdentifier","src":"33745:7:26"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"33642:1:26"},{"name":"length","nodeType":"YulIdentifier","src":"33645:6:26"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"33639:2:26"},"nodeType":"YulFunctionCall","src":"33639:13:26"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"33653:21:26","statements":[{"nodeType":"YulAssignment","src":"33655:17:26","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"33664:1:26"},{"kind":"number","nodeType":"YulLiteral","src":"33667:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33660:3:26"},"nodeType":"YulFunctionCall","src":"33660:12:26"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"33655:1:26"}]}]},"pre":{"nodeType":"YulBlock","src":"33635:3:26","statements":[]},"src":"33631:154:26"},{"nodeType":"YulAssignment","src":"33798:23:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"33809:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"33814:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33805:3:26"},"nodeType":"YulFunctionCall","src":"33805:16:26"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"33798:3:26"}]}]},"nodeType":"YulCase","src":"33490:341:26","value":{"kind":"number","nodeType":"YulLiteral","src":"33495:1:26","type":"","value":"1"}}],"expression":{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"33293:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"33304:1:26","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"33289:3:26"},"nodeType":"YulFunctionCall","src":"33289:17:26"},"nodeType":"YulSwitch","src":"33282:549:26"}]},"name":"abi_encode_t_string_storage_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"33051:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"33058:3:26","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"33066:3:26","type":""}],"src":"32963:874:26"},{"body":{"nodeType":"YulBlock","src":"33953:280:26","statements":[{"nodeType":"YulVariableDeclaration","src":"33963:53:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"34010:5:26"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"33977:32:26"},"nodeType":"YulFunctionCall","src":"33977:39:26"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"33967:6:26","type":""}]},{"nodeType":"YulAssignment","src":"34025:96:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"34109:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"34114:6:26"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"34032:76:26"},"nodeType":"YulFunctionCall","src":"34032:89:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"34025:3:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"34169:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"34176:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34165:3:26"},"nodeType":"YulFunctionCall","src":"34165:16:26"},{"name":"pos","nodeType":"YulIdentifier","src":"34183:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"34188:6:26"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"34130:34:26"},"nodeType":"YulFunctionCall","src":"34130:65:26"},"nodeType":"YulExpressionStatement","src":"34130:65:26"},{"nodeType":"YulAssignment","src":"34204:23:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"34215:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"34220:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34211:3:26"},"nodeType":"YulFunctionCall","src":"34211:16:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"34204:3:26"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"33934:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"33941:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"33949:3:26","type":""}],"src":"33843:390:26"},{"body":{"nodeType":"YulBlock","src":"34420:248:26","statements":[{"nodeType":"YulAssignment","src":"34431:99:26","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"34517:6:26"},{"name":"pos","nodeType":"YulIdentifier","src":"34526:3:26"}],"functionName":{"name":"abi_encode_t_string_storage_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"34438:78:26"},"nodeType":"YulFunctionCall","src":"34438:92:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"34431:3:26"}]},{"nodeType":"YulAssignment","src":"34540:102:26","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"34629:6:26"},{"name":"pos","nodeType":"YulIdentifier","src":"34638:3:26"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"34547:81:26"},"nodeType":"YulFunctionCall","src":"34547:95:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"34540:3:26"}]},{"nodeType":"YulAssignment","src":"34652:10:26","value":{"name":"pos","nodeType":"YulIdentifier","src":"34659:3:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"34652:3:26"}]}]},"name":"abi_encode_tuple_packed_t_string_storage_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"34391:3:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"34397:6:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"34405:6:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"34416:3:26","type":""}],"src":"34239:429:26"},{"body":{"nodeType":"YulBlock","src":"34772:124:26","statements":[{"nodeType":"YulAssignment","src":"34782:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34794:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"34805:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34790:3:26"},"nodeType":"YulFunctionCall","src":"34790:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"34782:4:26"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"34862:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34875:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"34886:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34871:3:26"},"nodeType":"YulFunctionCall","src":"34871:17:26"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"34818:43:26"},"nodeType":"YulFunctionCall","src":"34818:71:26"},"nodeType":"YulExpressionStatement","src":"34818:71:26"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"34744:9:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"34756:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"34767:4:26","type":""}],"src":"34674:222:26"},{"body":{"nodeType":"YulBlock","src":"35028:206:26","statements":[{"nodeType":"YulAssignment","src":"35038:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35050:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"35061:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35046:3:26"},"nodeType":"YulFunctionCall","src":"35046:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"35038:4:26"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"35118:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35131:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"35142:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35127:3:26"},"nodeType":"YulFunctionCall","src":"35127:17:26"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"35074:43:26"},"nodeType":"YulFunctionCall","src":"35074:71:26"},"nodeType":"YulExpressionStatement","src":"35074:71:26"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"35199:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35212:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"35223:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35208:3:26"},"nodeType":"YulFunctionCall","src":"35208:18:26"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"35155:43:26"},"nodeType":"YulFunctionCall","src":"35155:72:26"},"nodeType":"YulExpressionStatement","src":"35155:72:26"}]},"name":"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"34992:9:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"35004:6:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"35012:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"35023:4:26","type":""}],"src":"34902:332:26"},{"body":{"nodeType":"YulBlock","src":"35298:40:26","statements":[{"nodeType":"YulAssignment","src":"35309:22:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"35325:5:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"35319:5:26"},"nodeType":"YulFunctionCall","src":"35319:12:26"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"35309:6:26"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"35281:5:26","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"35291:6:26","type":""}],"src":"35240:98:26"},{"body":{"nodeType":"YulBlock","src":"35439:73:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"35456:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"35461:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35449:6:26"},"nodeType":"YulFunctionCall","src":"35449:19:26"},"nodeType":"YulExpressionStatement","src":"35449:19:26"},{"nodeType":"YulAssignment","src":"35477:29:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"35496:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"35501:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35492:3:26"},"nodeType":"YulFunctionCall","src":"35492:14:26"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"35477:11:26"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"35411:3:26","type":""},{"name":"length","nodeType":"YulTypedName","src":"35416:6:26","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"35427:11:26","type":""}],"src":"35344:168:26"},{"body":{"nodeType":"YulBlock","src":"35608:283:26","statements":[{"nodeType":"YulVariableDeclaration","src":"35618:52:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"35664:5:26"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"35632:31:26"},"nodeType":"YulFunctionCall","src":"35632:38:26"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"35622:6:26","type":""}]},{"nodeType":"YulAssignment","src":"35679:77:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"35744:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"35749:6:26"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"35686:57:26"},"nodeType":"YulFunctionCall","src":"35686:70:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"35679:3:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"35804:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"35811:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35800:3:26"},"nodeType":"YulFunctionCall","src":"35800:16:26"},{"name":"pos","nodeType":"YulIdentifier","src":"35818:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"35823:6:26"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"35765:34:26"},"nodeType":"YulFunctionCall","src":"35765:65:26"},"nodeType":"YulExpressionStatement","src":"35765:65:26"},{"nodeType":"YulAssignment","src":"35839:46:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"35850:3:26"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"35877:6:26"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"35855:21:26"},"nodeType":"YulFunctionCall","src":"35855:29:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35846:3:26"},"nodeType":"YulFunctionCall","src":"35846:39:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"35839:3:26"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"35589:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"35596:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"35604:3:26","type":""}],"src":"35518:373:26"},{"body":{"nodeType":"YulBlock","src":"36125:523:26","statements":[{"nodeType":"YulAssignment","src":"36135:27:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36147:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"36158:3:26","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36143:3:26"},"nodeType":"YulFunctionCall","src":"36143:19:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"36135:4:26"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"36216:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36229:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"36240:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36225:3:26"},"nodeType":"YulFunctionCall","src":"36225:17:26"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"36172:43:26"},"nodeType":"YulFunctionCall","src":"36172:71:26"},"nodeType":"YulExpressionStatement","src":"36172:71:26"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"36297:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36310:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"36321:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36306:3:26"},"nodeType":"YulFunctionCall","src":"36306:18:26"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"36253:43:26"},"nodeType":"YulFunctionCall","src":"36253:72:26"},"nodeType":"YulExpressionStatement","src":"36253:72:26"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"36379:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36392:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"36403:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36388:3:26"},"nodeType":"YulFunctionCall","src":"36388:18:26"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"36335:43:26"},"nodeType":"YulFunctionCall","src":"36335:72:26"},"nodeType":"YulExpressionStatement","src":"36335:72:26"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"36461:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36474:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"36485:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36470:3:26"},"nodeType":"YulFunctionCall","src":"36470:18:26"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"36417:43:26"},"nodeType":"YulFunctionCall","src":"36417:72:26"},"nodeType":"YulExpressionStatement","src":"36417:72:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36510:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"36521:3:26","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36506:3:26"},"nodeType":"YulFunctionCall","src":"36506:19:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"36531:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"36537:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"36527:3:26"},"nodeType":"YulFunctionCall","src":"36527:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"36499:6:26"},"nodeType":"YulFunctionCall","src":"36499:49:26"},"nodeType":"YulExpressionStatement","src":"36499:49:26"},{"nodeType":"YulAssignment","src":"36557:84:26","value":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"36627:6:26"},{"name":"tail","nodeType":"YulIdentifier","src":"36636:4:26"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"36565:61:26"},"nodeType":"YulFunctionCall","src":"36565:76:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"36557:4:26"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"36065:9:26","type":""},{"name":"value4","nodeType":"YulTypedName","src":"36077:6:26","type":""},{"name":"value3","nodeType":"YulTypedName","src":"36085:6:26","type":""},{"name":"value2","nodeType":"YulTypedName","src":"36093:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"36101:6:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"36109:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"36120:4:26","type":""}],"src":"35897:751:26"},{"body":{"nodeType":"YulBlock","src":"36716:79:26","statements":[{"nodeType":"YulAssignment","src":"36726:22:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"36741:6:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"36735:5:26"},"nodeType":"YulFunctionCall","src":"36735:13:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"36726:5:26"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"36783:5:26"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"36757:25:26"},"nodeType":"YulFunctionCall","src":"36757:32:26"},"nodeType":"YulExpressionStatement","src":"36757:32:26"}]},"name":"abi_decode_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"36694:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"36702:3:26","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"36710:5:26","type":""}],"src":"36654:141:26"},{"body":{"nodeType":"YulBlock","src":"36877:273:26","statements":[{"body":{"nodeType":"YulBlock","src":"36923:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"36925:77:26"},"nodeType":"YulFunctionCall","src":"36925:79:26"},"nodeType":"YulExpressionStatement","src":"36925:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"36898:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"36907:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"36894:3:26"},"nodeType":"YulFunctionCall","src":"36894:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"36919:2:26","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"36890:3:26"},"nodeType":"YulFunctionCall","src":"36890:32:26"},"nodeType":"YulIf","src":"36887:119:26"},{"nodeType":"YulBlock","src":"37016:127:26","statements":[{"nodeType":"YulVariableDeclaration","src":"37031:15:26","value":{"kind":"number","nodeType":"YulLiteral","src":"37045:1:26","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"37035:6:26","type":""}]},{"nodeType":"YulAssignment","src":"37060:73:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37105:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"37116:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37101:3:26"},"nodeType":"YulFunctionCall","src":"37101:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"37125:7:26"}],"functionName":{"name":"abi_decode_t_bytes4_fromMemory","nodeType":"YulIdentifier","src":"37070:30:26"},"nodeType":"YulFunctionCall","src":"37070:63:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"37060:6:26"}]}]}]},"name":"abi_decode_tuple_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"36847:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"36858:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"36870:6:26","type":""}],"src":"36801:349:26"},{"body":{"nodeType":"YulBlock","src":"37484:725:26","statements":[{"nodeType":"YulAssignment","src":"37494:27:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37506:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"37517:3:26","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37502:3:26"},"nodeType":"YulFunctionCall","src":"37502:19:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"37494:4:26"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"37575:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37588:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"37599:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37584:3:26"},"nodeType":"YulFunctionCall","src":"37584:17:26"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"37531:43:26"},"nodeType":"YulFunctionCall","src":"37531:71:26"},"nodeType":"YulExpressionStatement","src":"37531:71:26"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"37656:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37669:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"37680:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37665:3:26"},"nodeType":"YulFunctionCall","src":"37665:18:26"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"37612:43:26"},"nodeType":"YulFunctionCall","src":"37612:72:26"},"nodeType":"YulExpressionStatement","src":"37612:72:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37705:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"37716:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37701:3:26"},"nodeType":"YulFunctionCall","src":"37701:18:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"37725:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"37731:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"37721:3:26"},"nodeType":"YulFunctionCall","src":"37721:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"37694:6:26"},"nodeType":"YulFunctionCall","src":"37694:48:26"},"nodeType":"YulExpressionStatement","src":"37694:48:26"},{"nodeType":"YulAssignment","src":"37751:116:26","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"37853:6:26"},{"name":"tail","nodeType":"YulIdentifier","src":"37862:4:26"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"37759:93:26"},"nodeType":"YulFunctionCall","src":"37759:108:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"37751:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37888:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"37899:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37884:3:26"},"nodeType":"YulFunctionCall","src":"37884:18:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"37908:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"37914:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"37904:3:26"},"nodeType":"YulFunctionCall","src":"37904:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"37877:6:26"},"nodeType":"YulFunctionCall","src":"37877:48:26"},"nodeType":"YulExpressionStatement","src":"37877:48:26"},{"nodeType":"YulAssignment","src":"37934:116:26","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"38036:6:26"},{"name":"tail","nodeType":"YulIdentifier","src":"38045:4:26"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"37942:93:26"},"nodeType":"YulFunctionCall","src":"37942:108:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"37934:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38071:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"38082:3:26","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38067:3:26"},"nodeType":"YulFunctionCall","src":"38067:19:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"38092:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"38098:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"38088:3:26"},"nodeType":"YulFunctionCall","src":"38088:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"38060:6:26"},"nodeType":"YulFunctionCall","src":"38060:49:26"},"nodeType":"YulExpressionStatement","src":"38060:49:26"},{"nodeType":"YulAssignment","src":"38118:84:26","value":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"38188:6:26"},{"name":"tail","nodeType":"YulIdentifier","src":"38197:4:26"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"38126:61:26"},"nodeType":"YulFunctionCall","src":"38126:76:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"38118:4:26"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"37424:9:26","type":""},{"name":"value4","nodeType":"YulTypedName","src":"37436:6:26","type":""},{"name":"value3","nodeType":"YulTypedName","src":"37444:6:26","type":""},{"name":"value2","nodeType":"YulTypedName","src":"37452:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"37460:6:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"37468:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"37479:4:26","type":""}],"src":"37156:1053:26"},{"body":{"nodeType":"YulBlock","src":"38259:147:26","statements":[{"nodeType":"YulAssignment","src":"38269:25:26","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"38292:1:26"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"38274:17:26"},"nodeType":"YulFunctionCall","src":"38274:20:26"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"38269:1:26"}]},{"nodeType":"YulAssignment","src":"38303:25:26","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"38326:1:26"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"38308:17:26"},"nodeType":"YulFunctionCall","src":"38308:20:26"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"38303:1:26"}]},{"nodeType":"YulAssignment","src":"38337:16:26","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"38348:1:26"},{"name":"y","nodeType":"YulIdentifier","src":"38351:1:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38344:3:26"},"nodeType":"YulFunctionCall","src":"38344:9:26"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"38337:3:26"}]},{"body":{"nodeType":"YulBlock","src":"38377:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"38379:16:26"},"nodeType":"YulFunctionCall","src":"38379:18:26"},"nodeType":"YulExpressionStatement","src":"38379:18:26"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"38369:1:26"},{"name":"sum","nodeType":"YulIdentifier","src":"38372:3:26"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"38366:2:26"},"nodeType":"YulFunctionCall","src":"38366:10:26"},"nodeType":"YulIf","src":"38363:36:26"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"38246:1:26","type":""},{"name":"y","nodeType":"YulTypedName","src":"38249:1:26","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"38255:3:26","type":""}],"src":"38215:191:26"},{"body":{"nodeType":"YulBlock","src":"38594:371:26","statements":[{"nodeType":"YulAssignment","src":"38604:27:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38616:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"38627:3:26","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38612:3:26"},"nodeType":"YulFunctionCall","src":"38612:19:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"38604:4:26"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"38685:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38698:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"38709:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38694:3:26"},"nodeType":"YulFunctionCall","src":"38694:17:26"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"38641:43:26"},"nodeType":"YulFunctionCall","src":"38641:71:26"},"nodeType":"YulExpressionStatement","src":"38641:71:26"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"38766:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38779:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"38790:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38775:3:26"},"nodeType":"YulFunctionCall","src":"38775:18:26"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"38722:43:26"},"nodeType":"YulFunctionCall","src":"38722:72:26"},"nodeType":"YulExpressionStatement","src":"38722:72:26"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"38848:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38861:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"38872:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38857:3:26"},"nodeType":"YulFunctionCall","src":"38857:18:26"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"38804:43:26"},"nodeType":"YulFunctionCall","src":"38804:72:26"},"nodeType":"YulExpressionStatement","src":"38804:72:26"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"38930:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38943:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"38954:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38939:3:26"},"nodeType":"YulFunctionCall","src":"38939:18:26"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"38886:43:26"},"nodeType":"YulFunctionCall","src":"38886:72:26"},"nodeType":"YulExpressionStatement","src":"38886:72:26"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"38542:9:26","type":""},{"name":"value3","nodeType":"YulTypedName","src":"38554:6:26","type":""},{"name":"value2","nodeType":"YulTypedName","src":"38562:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"38570:6:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"38578:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"38589:4:26","type":""}],"src":"38412:553:26"},{"body":{"nodeType":"YulBlock","src":"39197:408:26","statements":[{"nodeType":"YulAssignment","src":"39207:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"39219:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"39230:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39215:3:26"},"nodeType":"YulFunctionCall","src":"39215:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"39207:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"39254:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"39265:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39250:3:26"},"nodeType":"YulFunctionCall","src":"39250:17:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"39273:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"39279:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"39269:3:26"},"nodeType":"YulFunctionCall","src":"39269:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"39243:6:26"},"nodeType":"YulFunctionCall","src":"39243:47:26"},"nodeType":"YulExpressionStatement","src":"39243:47:26"},{"nodeType":"YulAssignment","src":"39299:116:26","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"39401:6:26"},{"name":"tail","nodeType":"YulIdentifier","src":"39410:4:26"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"39307:93:26"},"nodeType":"YulFunctionCall","src":"39307:108:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"39299:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"39436:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"39447:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39432:3:26"},"nodeType":"YulFunctionCall","src":"39432:18:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"39456:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"39462:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"39452:3:26"},"nodeType":"YulFunctionCall","src":"39452:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"39425:6:26"},"nodeType":"YulFunctionCall","src":"39425:48:26"},"nodeType":"YulExpressionStatement","src":"39425:48:26"},{"nodeType":"YulAssignment","src":"39482:116:26","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"39584:6:26"},{"name":"tail","nodeType":"YulIdentifier","src":"39593:4:26"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"39490:93:26"},"nodeType":"YulFunctionCall","src":"39490:108:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"39482:4:26"}]}]},"name":"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"39161:9:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"39173:6:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"39181:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"39192:4:26","type":""}],"src":"38971:634:26"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_allocation_size_t_array$_t_bytes32_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    // bytes32[]\n    function abi_decode_available_length_t_array$_t_bytes32_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_bytes32_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_bytes32(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // bytes32[]\n    function abi_decode_t_array$_t_bytes32_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_bytes32_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_array$_t_bytes32_$dyn_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_array$_t_bytes32_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_array$_t_uint256_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_decode_tuple_t_uint256t_string_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    // uint256[]\n    function abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_uint256(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    // address[]\n    function abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_address(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // address[]\n    function abi_decode_t_array$_t_address_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_array$_t_address_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    // string -> string\n    function abi_encode_t_string_storage_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> ret {\n        let slotValue := sload(value)\n        let length := extract_byte_array_length(slotValue)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        switch and(slotValue, 1)\n        case 0 {\n            // short byte array\n            mstore(pos, and(slotValue, not(0xff)))\n            ret := add(pos, mul(length, iszero(iszero(length))))\n        }\n        case 1 {\n            // long byte array\n            let dataPos := array_dataslot_t_string_storage(value)\n            let i := 0\n            for { } lt(i, length) { i := add(i, 0x20) } {\n                mstore(add(pos, i), sload(dataPos))\n                dataPos := add(dataPos, 1)\n            }\n            ret := add(pos, length)\n        }\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_storage_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_storage_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        mstore(add(headStart, 128), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value4,  tail)\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value2,  tail)\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value3,  tail)\n\n        mstore(add(headStart, 128), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value4,  tail)\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value0,  tail)\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value1,  tail)\n\n    }\n\n}\n","id":26,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106102055760003560e01c80636b20c4541161011a578063d5391393116100ad578063e985e9c51161007c578063e985e9c5146105e6578063ee037bf914610616578063f07f552014610646578063f242432a14610676578063f5298aca1461069257610205565b8063d53913931461055e578063d547741f1461057c578063e556977314610598578063e63ab1e9146105c857610205565b806391d14854116100e957806391d14854146104c4578063a217fddf146104f4578063a22cb46514610512578063bd85b0391461052e57610205565b80636b20c45414610464578063731133e9146104805780637f3457101461049c5780638456cb59146104ba57610205565b8063248a9ca31161019d5780633f4ba83a1161016c5780633f4ba83a146103c05780634e1273f4146103ca5780634f558e79146103fa57806355f804b31461042a5780635c975abb1461044657610205565b8063248a9ca31461033c5780632eb2c2d61461036c5780632f2ff15d1461038857806336568abe146103a457610205565b80630e89341c116101d95780630e89341c146102b6578063162094c4146102e657806318160ddd146103025780631f7fdffa1461032057610205565b8062fdd58e1461020a57806301ffc9a71461023a57806302fe53051461026a57806309dca9ce14610286575b600080fd5b610224600480360381019061021f91906128f9565b6106ae565b6040516102319190612948565b60405180910390f35b610254600480360381019061024f91906129bb565b610708565b6040516102619190612a03565b60405180910390f35b610284600480360381019061027f9190612b64565b61071a565b005b6102a0600480360381019061029b9190612cab565b610751565b6040516102ad9190612db2565b60405180910390f35b6102d060048036038101906102cb9190612dd4565b610837565b6040516102dd9190612e80565b60405180910390f35b61030060048036038101906102fb9190612ea2565b610849565b005b61030a610882565b6040516103179190612948565b60405180910390f35b61033a60048036038101906103359190613062565b61088c565b005b6103566004803603810190610351919061311d565b6108c9565b6040516103639190613159565b60405180910390f35b61038660048036038101906103819190613174565b6108e9565b005b6103a2600480360381019061039d9190613243565b610991565b005b6103be60048036038101906103b99190613243565b6109b3565b005b6103c8610a2e565b005b6103e460048036038101906103df9190613346565b610a63565b6040516103f19190612db2565b60405180910390f35b610414600480360381019061040f9190612dd4565b610b72565b6040516104219190612a03565b60405180910390f35b610444600480360381019061043f9190612b64565b610b86565b005b61044e610bbd565b60405161045b9190612a03565b60405180910390f35b61047e600480360381019061047991906133be565b610bd4565b005b61049a60048036038101906104959190613449565b610c80565b005b6104a4610cbd565b6040516104b19190613159565b60405180910390f35b6104c2610ce1565b005b6104de60048036038101906104d99190613243565b610d16565b6040516104eb9190612a03565b60405180910390f35b6104fc610d81565b6040516105099190613159565b60405180910390f35b61052c600480360381019061052791906134f8565b610d88565b005b61054860048036038101906105439190612dd4565b610d9e565b6040516105559190612948565b60405180910390f35b610566610dbb565b6040516105739190613159565b60405180910390f35b61059660048036038101906105919190613243565b610ddf565b005b6105b260048036038101906105ad919061311d565b610e01565b6040516105bf9190612948565b60405180910390f35b6105d0610e1e565b6040516105dd9190613159565b60405180910390f35b61060060048036038101906105fb9190613538565b610e42565b60405161060d9190612a03565b60405180910390f35b610630600480360381019061062b9190612dd4565b610ed6565b60405161063d9190613159565b60405180910390f35b610660600480360381019061065b919061311d565b610ef3565b60405161066d9190612948565b60405180910390f35b610690600480360381019061068b9190613578565b610f30565b005b6106ac60048036038101906106a7919061360f565b610fd8565b005b600080600083815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600061071382611084565b9050919050565b7f7804d923f43a17d325d77e781528e0793b2edd9890ab45fc64efd7b4b427744c610744816110fe565b61074d82611112565b5050565b60607f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a661077d816110fe565b6000835167ffffffffffffffff81111561079a57610799612a39565b5b6040519080825280602002602001820160405280156107c85781602001602082028036833780820191505090505b50905060005b845181101561082c576107fa8582815181106107ed576107ec613662565b5b6020026020010151611125565b82828151811061080d5761080c613662565b5b6020026020010181815250508080610824906136c0565b9150506107ce565b508092505050919050565b6060610842826111df565b9050919050565b7f7804d923f43a17d325d77e781528e0793b2edd9890ab45fc64efd7b4b427744c610873816110fe565b61087d83836112c4565b505050565b6000600654905090565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a66108b6816110fe565b6108c285858585611329565b5050505050565b600060036000838152602001908152602001600020600101549050919050565b60006108f36113af565b90508073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff161415801561093857506109368682610e42565b155b1561097c5780866040517fe237d922000000000000000000000000000000000000000000000000000000008152600401610973929190613717565b60405180910390fd5b61098986868686866113b7565b505050505050565b61099a826108c9565b6109a3816110fe565b6109ad83836114af565b50505050565b6109bb6113af565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610a1f576040517f6697b23200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610a2982826115a1565b505050565b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a610a58816110fe565b610a60611694565b50565b60608151835114610aaf57815183516040517f5b059991000000000000000000000000000000000000000000000000000000008152600401610aa6929190613740565b60405180910390fd5b6000835167ffffffffffffffff811115610acc57610acb612a39565b5b604051908082528060200260200182016040528015610afa5781602001602082028036833780820191505090505b50905060005b8451811015610b6757610b37610b1f82876116f790919063ffffffff16565b610b32838761170b90919063ffffffff16565b6106ae565b828281518110610b4a57610b49613662565b5b60200260200101818152505080610b60906136c0565b9050610b00565b508091505092915050565b600080610b7e83610d9e565b119050919050565b7f7804d923f43a17d325d77e781528e0793b2edd9890ab45fc64efd7b4b427744c610bb0816110fe565b610bb98261171f565b5050565b6000600460009054906101000a900460ff16905090565b610bdc6113af565b73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614158015610c255750610c2383610c1e6113af565b610e42565b155b15610c7057610c326113af565b836040517fe237d922000000000000000000000000000000000000000000000000000000008152600401610c67929190613717565b60405180910390fd5b610c7b838383611732565b505050565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6610caa816110fe565b610cb6858585856117c6565b5050505050565b7f7804d923f43a17d325d77e781528e0793b2edd9890ab45fc64efd7b4b427744c81565b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a610d0b816110fe565b610d1361185f565b50565b60006003600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000801b81565b610d9a610d936113af565b83836118c2565b5050565b600060056000838152602001908152602001600020549050919050565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b610de8826108c9565b610df1816110fe565b610dfb83836115a1565b50505050565b600060096000838152602001908152602001600020549050919050565b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a81565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000600a6000838152602001908152602001600020549050919050565b60007f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6610f1f816110fe565b610f2883611125565b915050919050565b6000610f3a6113af565b90508073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1614158015610f7f5750610f7d8682610e42565b155b15610fc35780866040517fe237d922000000000000000000000000000000000000000000000000000000008152600401610fba929190613717565b60405180910390fd5b610fd08686868686611a32565b505050505050565b610fe06113af565b73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141580156110295750611027836110226113af565b610e42565b155b15611074576110366113af565b836040517fe237d92200000000000000000000000000000000000000000000000000000000815260040161106b929190613717565b60405180910390fd5b61107f838383611b3d565b505050565b60007f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806110f757506110f682611be4565b5b9050919050565b61110f8161110a6113af565b611cc6565b50565b80600290816111219190613975565b5050565b60008060096000848152602001908152602001600020541461115c57600960008381526020019081526020016000205490506111da565b6000600b6000815480929190611171906136c0565b91905055905080600960008581526020019081526020016000208190555082600a60008381526020019081526020016000208190555080837fea3e0acfc42d04765cb7947585765a242d0fd12a634edfb22c44cf42a363b2b860405160405180910390a3809150505b919050565b6060600060086000848152602001908152602001600020805461120190613798565b80601f016020809104026020016040519081016040528092919081815260200182805461122d90613798565b801561127a5780601f1061124f5761010080835404028352916020019161127a565b820191906000526020600020905b81548152906001019060200180831161125d57829003601f168201915b5050505050905060008151116112985761129383611d17565b6112bc565b6007816040516020016112ac929190613b06565b6040516020818303038152906040525b915050919050565b806008600084815260200190815260200160002090816112e49190613975565b50817f6bb7ff708619ba0610cba295a58592e0451dee2622938c8755667688daf3529b61131084610837565b60405161131d9190612e80565b60405180910390a25050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff160361139b5760006040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016113929190613b2a565b60405180910390fd5b6113a9600085858585611dab565b50505050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036114295760006040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016114209190613b2a565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff160361149b5760006040517f01a835140000000000000000000000000000000000000000000000000000000081526004016114929190613b2a565b60405180910390fd5b6114a88585858585611dab565b5050505050565b60006114bb8383610d16565b6115965760016003600085815260200190815260200160002060000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506115336113af565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a46001905061159b565b600090505b92915050565b60006115ad8383610d16565b156116895760006003600085815260200190815260200160002060000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506116266113af565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a46001905061168e565b600090505b92915050565b61169c611e5d565b6000600460006101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6116e06113af565b6040516116ed9190613b2a565b60405180910390a1565b600060208202602084010151905092915050565b600060208202602084010151905092915050565b806007908161172e9190613975565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036117a45760006040517f01a8351400000000000000000000000000000000000000000000000000000000815260040161179b9190613b2a565b60405180910390fd5b6117c1836000848460405180602001604052806000815250611dab565b505050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036118385760006040517f57f447ce00000000000000000000000000000000000000000000000000000000815260040161182f9190613b2a565b60405180910390fd5b6000806118458585611e9d565b91509150611857600087848487611dab565b505050505050565b611867611ecd565b6001600460006101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586118ab6113af565b6040516118b89190613b2a565b60405180910390a1565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036119345760006040517fced3e10000000000000000000000000000000000000000000000000000000000815260040161192b9190613b2a565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051611a259190612a03565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611aa45760006040517f57f447ce000000000000000000000000000000000000000000000000000000008152600401611a9b9190613b2a565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1603611b165760006040517f01a83514000000000000000000000000000000000000000000000000000000008152600401611b0d9190613b2a565b60405180910390fd5b600080611b238585611e9d565b91509150611b348787848487611dab565b50505050505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611baf5760006040517f01a83514000000000000000000000000000000000000000000000000000000008152600401611ba69190613b2a565b60405180910390fd5b600080611bbc8484611e9d565b91509150611bdd856000848460405180602001604052806000815250611dab565b5050505050565b60007fd9b67a26000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480611caf57507f0e89341c000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80611cbf5750611cbe82611f0e565b5b9050919050565b611cd08282610d16565b611d135780826040517fe2517d3f000000000000000000000000000000000000000000000000000000008152600401611d0a929190613b45565b60405180910390fd5b5050565b606060028054611d2690613798565b80601f0160208091040260200160405190810160405280929190818152602001828054611d5290613798565b8015611d9f5780601f10611d7457610100808354040283529160200191611d9f565b820191906000526020600020905b815481529060010190602001808311611d8257829003601f168201915b50505050509050919050565b611db785858585611f78565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614611e56576000611df56113af565b90506001845103611e45576000611e1660008661170b90919063ffffffff16565b90506000611e2e60008661170b90919063ffffffff16565b9050611e3e838989858589611f8a565b5050611e54565b611e5381878787878761213e565b5b505b5050505050565b611e65610bbd565b611e9b576040517f8dfc202b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b60608060405191506001825283602083015260408201905060018152826020820152604081016040529250929050565b611ed5610bbd565b15611f0c576040517fd93c066500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b611f84848484846122f2565b50505050565b60008473ffffffffffffffffffffffffffffffffffffffff163b1115612136578373ffffffffffffffffffffffffffffffffffffffff1663f23a6e6187878686866040518663ffffffff1660e01b8152600401611feb959493929190613bc3565b6020604051808303816000875af192505050801561202757506040513d601f19601f820116820180604052508101906120249190613c32565b60015b6120ab573d8060008114612057576040519150601f19603f3d011682016040523d82523d6000602084013e61205c565b606091505b5060008151036120a357846040517f57f447ce00000000000000000000000000000000000000000000000000000000815260040161209a9190613b2a565b60405180910390fd5b805181602001fd5b63f23a6e6160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461213457846040517f57f447ce00000000000000000000000000000000000000000000000000000000815260040161212b9190613b2a565b60405180910390fd5b505b505050505050565b60008473ffffffffffffffffffffffffffffffffffffffff163b11156122ea578373ffffffffffffffffffffffffffffffffffffffff1663bc197c8187878686866040518663ffffffff1660e01b815260040161219f959493929190613c5f565b6020604051808303816000875af19250505080156121db57506040513d601f19601f820116820180604052508101906121d89190613c32565b60015b61225f573d806000811461220b576040519150601f19603f3d011682016040523d82523d6000602084013e612210565b606091505b50600081510361225757846040517f57f447ce00000000000000000000000000000000000000000000000000000000815260040161224e9190613b2a565b60405180910390fd5b805181602001fd5b63bc197c8160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146122e857846040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016122df9190613b2a565b60405180910390fd5b505b505050505050565b6122fe84848484612489565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036123ce576000805b83518110156123b2576000612354828561170b90919063ffffffff16565b9050806005600061236e858961170b90919063ffffffff16565b8152602001908152602001600020600082825461238b9190613cc7565b92505081905550808361239e9190613cc7565b925050806123ab906136c0565b9050612336565b5080600660008282546123c59190613cc7565b92505081905550505b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603612483576000805b8351811015612470576000612424828561170b90919063ffffffff16565b9050806005600061243e858961170b90919063ffffffff16565b81526020019081526020016000206000828254039250508190555080830192505080612469906136c0565b9050612406565b5080600660008282540392505081905550505b50505050565b612491611ecd565b61249d848484846124a3565b50505050565b80518251146124ed57815181516040517f5b0599910000000000000000000000000000000000000000000000000000000081526004016124e4929190613740565b60405180910390fd5b60006124f76113af565b905060005b835181101561270c57600061251a828661170b90919063ffffffff16565b90506000612531838661170b90919063ffffffff16565b9050600073ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff161461265e57600080600084815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101561260657888183856040517f03dee4c50000000000000000000000000000000000000000000000000000000081526004016125fd9493929190613cfb565b60405180910390fd5b81810360008085815260200190815260200160002060008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff16146126f9578060008084815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546126f19190613cc7565b925050819055505b505080612705906136c0565b90506124fc565b5060018351036127cb57600061272c60008561170b90919063ffffffff16565b9050600061274460008561170b90919063ffffffff16565b90508573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f6285856040516127bc929190613740565b60405180910390a4505061284a565b8373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8686604051612841929190613d40565b60405180910390a45b5050505050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061289082612865565b9050919050565b6128a081612885565b81146128ab57600080fd5b50565b6000813590506128bd81612897565b92915050565b6000819050919050565b6128d6816128c3565b81146128e157600080fd5b50565b6000813590506128f3816128cd565b92915050565b600080604083850312156129105761290f61285b565b5b600061291e858286016128ae565b925050602061292f858286016128e4565b9150509250929050565b612942816128c3565b82525050565b600060208201905061295d6000830184612939565b92915050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61299881612963565b81146129a357600080fd5b50565b6000813590506129b58161298f565b92915050565b6000602082840312156129d1576129d061285b565b5b60006129df848285016129a6565b91505092915050565b60008115159050919050565b6129fd816129e8565b82525050565b6000602082019050612a1860008301846129f4565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b612a7182612a28565b810181811067ffffffffffffffff82111715612a9057612a8f612a39565b5b80604052505050565b6000612aa3612851565b9050612aaf8282612a68565b919050565b600067ffffffffffffffff821115612acf57612ace612a39565b5b612ad882612a28565b9050602081019050919050565b82818337600083830152505050565b6000612b07612b0284612ab4565b612a99565b905082815260208101848484011115612b2357612b22612a23565b5b612b2e848285612ae5565b509392505050565b600082601f830112612b4b57612b4a612a1e565b5b8135612b5b848260208601612af4565b91505092915050565b600060208284031215612b7a57612b7961285b565b5b600082013567ffffffffffffffff811115612b9857612b97612860565b5b612ba484828501612b36565b91505092915050565b600067ffffffffffffffff821115612bc857612bc7612a39565b5b602082029050602081019050919050565b600080fd5b6000819050919050565b612bf181612bde565b8114612bfc57600080fd5b50565b600081359050612c0e81612be8565b92915050565b6000612c27612c2284612bad565b612a99565b90508083825260208201905060208402830185811115612c4a57612c49612bd9565b5b835b81811015612c735780612c5f8882612bff565b845260208401935050602081019050612c4c565b5050509392505050565b600082601f830112612c9257612c91612a1e565b5b8135612ca2848260208601612c14565b91505092915050565b600060208284031215612cc157612cc061285b565b5b600082013567ffffffffffffffff811115612cdf57612cde612860565b5b612ceb84828501612c7d565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b612d29816128c3565b82525050565b6000612d3b8383612d20565b60208301905092915050565b6000602082019050919050565b6000612d5f82612cf4565b612d698185612cff565b9350612d7483612d10565b8060005b83811015612da5578151612d8c8882612d2f565b9750612d9783612d47565b925050600181019050612d78565b5085935050505092915050565b60006020820190508181036000830152612dcc8184612d54565b905092915050565b600060208284031215612dea57612de961285b565b5b6000612df8848285016128e4565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015612e3b578082015181840152602081019050612e20565b60008484015250505050565b6000612e5282612e01565b612e5c8185612e0c565b9350612e6c818560208601612e1d565b612e7581612a28565b840191505092915050565b60006020820190508181036000830152612e9a8184612e47565b905092915050565b60008060408385031215612eb957612eb861285b565b5b6000612ec7858286016128e4565b925050602083013567ffffffffffffffff811115612ee857612ee7612860565b5b612ef485828601612b36565b9150509250929050565b600067ffffffffffffffff821115612f1957612f18612a39565b5b602082029050602081019050919050565b6000612f3d612f3884612efe565b612a99565b90508083825260208201905060208402830185811115612f6057612f5f612bd9565b5b835b81811015612f895780612f7588826128e4565b845260208401935050602081019050612f62565b5050509392505050565b600082601f830112612fa857612fa7612a1e565b5b8135612fb8848260208601612f2a565b91505092915050565b600067ffffffffffffffff821115612fdc57612fdb612a39565b5b612fe582612a28565b9050602081019050919050565b600061300561300084612fc1565b612a99565b90508281526020810184848401111561302157613020612a23565b5b61302c848285612ae5565b509392505050565b600082601f83011261304957613048612a1e565b5b8135613059848260208601612ff2565b91505092915050565b6000806000806080858703121561307c5761307b61285b565b5b600061308a878288016128ae565b945050602085013567ffffffffffffffff8111156130ab576130aa612860565b5b6130b787828801612f93565b935050604085013567ffffffffffffffff8111156130d8576130d7612860565b5b6130e487828801612f93565b925050606085013567ffffffffffffffff81111561310557613104612860565b5b61311187828801613034565b91505092959194509250565b6000602082840312156131335761313261285b565b5b600061314184828501612bff565b91505092915050565b61315381612bde565b82525050565b600060208201905061316e600083018461314a565b92915050565b600080600080600060a086880312156131905761318f61285b565b5b600061319e888289016128ae565b95505060206131af888289016128ae565b945050604086013567ffffffffffffffff8111156131d0576131cf612860565b5b6131dc88828901612f93565b935050606086013567ffffffffffffffff8111156131fd576131fc612860565b5b61320988828901612f93565b925050608086013567ffffffffffffffff81111561322a57613229612860565b5b61323688828901613034565b9150509295509295909350565b6000806040838503121561325a5761325961285b565b5b600061326885828601612bff565b9250506020613279858286016128ae565b9150509250929050565b600067ffffffffffffffff82111561329e5761329d612a39565b5b602082029050602081019050919050565b60006132c26132bd84613283565b612a99565b905080838252602082019050602084028301858111156132e5576132e4612bd9565b5b835b8181101561330e57806132fa88826128ae565b8452602084019350506020810190506132e7565b5050509392505050565b600082601f83011261332d5761332c612a1e565b5b813561333d8482602086016132af565b91505092915050565b6000806040838503121561335d5761335c61285b565b5b600083013567ffffffffffffffff81111561337b5761337a612860565b5b61338785828601613318565b925050602083013567ffffffffffffffff8111156133a8576133a7612860565b5b6133b485828601612f93565b9150509250929050565b6000806000606084860312156133d7576133d661285b565b5b60006133e5868287016128ae565b935050602084013567ffffffffffffffff81111561340657613405612860565b5b61341286828701612f93565b925050604084013567ffffffffffffffff81111561343357613432612860565b5b61343f86828701612f93565b9150509250925092565b600080600080608085870312156134635761346261285b565b5b6000613471878288016128ae565b9450506020613482878288016128e4565b9350506040613493878288016128e4565b925050606085013567ffffffffffffffff8111156134b4576134b3612860565b5b6134c087828801613034565b91505092959194509250565b6134d5816129e8565b81146134e057600080fd5b50565b6000813590506134f2816134cc565b92915050565b6000806040838503121561350f5761350e61285b565b5b600061351d858286016128ae565b925050602061352e858286016134e3565b9150509250929050565b6000806040838503121561354f5761354e61285b565b5b600061355d858286016128ae565b925050602061356e858286016128ae565b9150509250929050565b600080600080600060a086880312156135945761359361285b565b5b60006135a2888289016128ae565b95505060206135b3888289016128ae565b94505060406135c4888289016128e4565b93505060606135d5888289016128e4565b925050608086013567ffffffffffffffff8111156135f6576135f5612860565b5b61360288828901613034565b9150509295509295909350565b6000806000606084860312156136285761362761285b565b5b6000613636868287016128ae565b9350506020613647868287016128e4565b9250506040613658868287016128e4565b9150509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006136cb826128c3565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036136fd576136fc613691565b5b600182019050919050565b61371181612885565b82525050565b600060408201905061372c6000830185613708565b6137396020830184613708565b9392505050565b60006040820190506137556000830185612939565b6137626020830184612939565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806137b057607f821691505b6020821081036137c3576137c2613769565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b60006008830261382b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826137ee565b61383586836137ee565b95508019841693508086168417925050509392505050565b6000819050919050565b600061387261386d613868846128c3565b61384d565b6128c3565b9050919050565b6000819050919050565b61388c83613857565b6138a061389882613879565b8484546137fb565b825550505050565b600090565b6138b56138a8565b6138c0818484613883565b505050565b5b818110156138e4576138d96000826138ad565b6001810190506138c6565b5050565b601f821115613929576138fa816137c9565b613903846137de565b81016020851015613912578190505b61392661391e856137de565b8301826138c5565b50505b505050565b600082821c905092915050565b600061394c6000198460080261392e565b1980831691505092915050565b6000613965838361393b565b9150826002028217905092915050565b61397e82612e01565b67ffffffffffffffff81111561399757613996612a39565b5b6139a18254613798565b6139ac8282856138e8565b600060209050601f8311600181146139df57600084156139cd578287015190505b6139d78582613959565b865550613a3f565b601f1984166139ed866137c9565b60005b82811015613a15578489015182556001820191506020850194506020810190506139f0565b86831015613a325784890151613a2e601f89168261393b565b8355505b6001600288020188555050505b505050505050565b600081905092915050565b60008154613a5f81613798565b613a698186613a47565b94506001821660008114613a845760018114613a9957613acc565b60ff1983168652811515820286019350613acc565b613aa2856137c9565b60005b83811015613ac457815481890152600182019150602081019050613aa5565b838801955050505b50505092915050565b6000613ae082612e01565b613aea8185613a47565b9350613afa818560208601612e1d565b80840191505092915050565b6000613b128285613a52565b9150613b1e8284613ad5565b91508190509392505050565b6000602082019050613b3f6000830184613708565b92915050565b6000604082019050613b5a6000830185613708565b613b67602083018461314a565b9392505050565b600081519050919050565b600082825260208201905092915050565b6000613b9582613b6e565b613b9f8185613b79565b9350613baf818560208601612e1d565b613bb881612a28565b840191505092915050565b600060a082019050613bd86000830188613708565b613be56020830187613708565b613bf26040830186612939565b613bff6060830185612939565b8181036080830152613c118184613b8a565b90509695505050505050565b600081519050613c2c8161298f565b92915050565b600060208284031215613c4857613c4761285b565b5b6000613c5684828501613c1d565b91505092915050565b600060a082019050613c746000830188613708565b613c816020830187613708565b8181036040830152613c938186612d54565b90508181036060830152613ca78185612d54565b90508181036080830152613cbb8184613b8a565b90509695505050505050565b6000613cd2826128c3565b9150613cdd836128c3565b9250828201905080821115613cf557613cf4613691565b5b92915050565b6000608082019050613d106000830187613708565b613d1d6020830186612939565b613d2a6040830185612939565b613d376060830184612939565b95945050505050565b60006040820190508181036000830152613d5a8185612d54565b90508181036020830152613d6e8184612d54565b9050939250505056fea2646970667358221220014f3e7bfb2c52c8c5213173fcfacca42c36254903ed2d1ed85499c71831afa164736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x205 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6B20C454 GT PUSH2 0x11A JUMPI DUP1 PUSH4 0xD5391393 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xE985E9C5 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x5E6 JUMPI DUP1 PUSH4 0xEE037BF9 EQ PUSH2 0x616 JUMPI DUP1 PUSH4 0xF07F5520 EQ PUSH2 0x646 JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x676 JUMPI DUP1 PUSH4 0xF5298ACA EQ PUSH2 0x692 JUMPI PUSH2 0x205 JUMP JUMPDEST DUP1 PUSH4 0xD5391393 EQ PUSH2 0x55E JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x57C JUMPI DUP1 PUSH4 0xE5569773 EQ PUSH2 0x598 JUMPI DUP1 PUSH4 0xE63AB1E9 EQ PUSH2 0x5C8 JUMPI PUSH2 0x205 JUMP JUMPDEST DUP1 PUSH4 0x91D14854 GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x4C4 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x4F4 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x512 JUMPI DUP1 PUSH4 0xBD85B039 EQ PUSH2 0x52E JUMPI PUSH2 0x205 JUMP JUMPDEST DUP1 PUSH4 0x6B20C454 EQ PUSH2 0x464 JUMPI DUP1 PUSH4 0x731133E9 EQ PUSH2 0x480 JUMPI DUP1 PUSH4 0x7F345710 EQ PUSH2 0x49C JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x4BA JUMPI PUSH2 0x205 JUMP JUMPDEST DUP1 PUSH4 0x248A9CA3 GT PUSH2 0x19D JUMPI DUP1 PUSH4 0x3F4BA83A GT PUSH2 0x16C JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x3C0 JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x3CA JUMPI DUP1 PUSH4 0x4F558E79 EQ PUSH2 0x3FA JUMPI DUP1 PUSH4 0x55F804B3 EQ PUSH2 0x42A JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x446 JUMPI PUSH2 0x205 JUMP JUMPDEST DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x33C JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x36C JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x388 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x3A4 JUMPI PUSH2 0x205 JUMP JUMPDEST DUP1 PUSH4 0xE89341C GT PUSH2 0x1D9 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0x2B6 JUMPI DUP1 PUSH4 0x162094C4 EQ PUSH2 0x2E6 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x302 JUMPI DUP1 PUSH4 0x1F7FDFFA EQ PUSH2 0x320 JUMPI PUSH2 0x205 JUMP JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x20A JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x23A JUMPI DUP1 PUSH4 0x2FE5305 EQ PUSH2 0x26A JUMPI DUP1 PUSH4 0x9DCA9CE EQ PUSH2 0x286 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x224 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21F SWAP2 SWAP1 PUSH2 0x28F9 JUMP JUMPDEST PUSH2 0x6AE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x231 SWAP2 SWAP1 PUSH2 0x2948 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x254 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x24F SWAP2 SWAP1 PUSH2 0x29BB JUMP JUMPDEST PUSH2 0x708 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x261 SWAP2 SWAP1 PUSH2 0x2A03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x284 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x27F SWAP2 SWAP1 PUSH2 0x2B64 JUMP JUMPDEST PUSH2 0x71A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2A0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29B SWAP2 SWAP1 PUSH2 0x2CAB JUMP JUMPDEST PUSH2 0x751 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AD SWAP2 SWAP1 PUSH2 0x2DB2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2CB SWAP2 SWAP1 PUSH2 0x2DD4 JUMP JUMPDEST PUSH2 0x837 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2DD SWAP2 SWAP1 PUSH2 0x2E80 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x300 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2FB SWAP2 SWAP1 PUSH2 0x2EA2 JUMP JUMPDEST PUSH2 0x849 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x30A PUSH2 0x882 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x317 SWAP2 SWAP1 PUSH2 0x2948 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x33A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x335 SWAP2 SWAP1 PUSH2 0x3062 JUMP JUMPDEST PUSH2 0x88C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x356 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x351 SWAP2 SWAP1 PUSH2 0x311D JUMP JUMPDEST PUSH2 0x8C9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x363 SWAP2 SWAP1 PUSH2 0x3159 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x386 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x381 SWAP2 SWAP1 PUSH2 0x3174 JUMP JUMPDEST PUSH2 0x8E9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3A2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x39D SWAP2 SWAP1 PUSH2 0x3243 JUMP JUMPDEST PUSH2 0x991 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3BE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3B9 SWAP2 SWAP1 PUSH2 0x3243 JUMP JUMPDEST PUSH2 0x9B3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3C8 PUSH2 0xA2E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3E4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3DF SWAP2 SWAP1 PUSH2 0x3346 JUMP JUMPDEST PUSH2 0xA63 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3F1 SWAP2 SWAP1 PUSH2 0x2DB2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x414 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x40F SWAP2 SWAP1 PUSH2 0x2DD4 JUMP JUMPDEST PUSH2 0xB72 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x421 SWAP2 SWAP1 PUSH2 0x2A03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x444 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x43F SWAP2 SWAP1 PUSH2 0x2B64 JUMP JUMPDEST PUSH2 0xB86 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x44E PUSH2 0xBBD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x45B SWAP2 SWAP1 PUSH2 0x2A03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x47E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x479 SWAP2 SWAP1 PUSH2 0x33BE JUMP JUMPDEST PUSH2 0xBD4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x49A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x495 SWAP2 SWAP1 PUSH2 0x3449 JUMP JUMPDEST PUSH2 0xC80 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4A4 PUSH2 0xCBD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4B1 SWAP2 SWAP1 PUSH2 0x3159 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4C2 PUSH2 0xCE1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4DE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4D9 SWAP2 SWAP1 PUSH2 0x3243 JUMP JUMPDEST PUSH2 0xD16 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4EB SWAP2 SWAP1 PUSH2 0x2A03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4FC PUSH2 0xD81 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x509 SWAP2 SWAP1 PUSH2 0x3159 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x52C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x527 SWAP2 SWAP1 PUSH2 0x34F8 JUMP JUMPDEST PUSH2 0xD88 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x548 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x543 SWAP2 SWAP1 PUSH2 0x2DD4 JUMP JUMPDEST PUSH2 0xD9E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x555 SWAP2 SWAP1 PUSH2 0x2948 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x566 PUSH2 0xDBB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x573 SWAP2 SWAP1 PUSH2 0x3159 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x596 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x591 SWAP2 SWAP1 PUSH2 0x3243 JUMP JUMPDEST PUSH2 0xDDF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5AD SWAP2 SWAP1 PUSH2 0x311D JUMP JUMPDEST PUSH2 0xE01 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5BF SWAP2 SWAP1 PUSH2 0x2948 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5D0 PUSH2 0xE1E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5DD SWAP2 SWAP1 PUSH2 0x3159 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x600 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5FB SWAP2 SWAP1 PUSH2 0x3538 JUMP JUMPDEST PUSH2 0xE42 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x60D SWAP2 SWAP1 PUSH2 0x2A03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x630 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x62B SWAP2 SWAP1 PUSH2 0x2DD4 JUMP JUMPDEST PUSH2 0xED6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x63D SWAP2 SWAP1 PUSH2 0x3159 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x660 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x65B SWAP2 SWAP1 PUSH2 0x311D JUMP JUMPDEST PUSH2 0xEF3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x66D SWAP2 SWAP1 PUSH2 0x2948 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x690 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x68B SWAP2 SWAP1 PUSH2 0x3578 JUMP JUMPDEST PUSH2 0xF30 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6AC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6A7 SWAP2 SWAP1 PUSH2 0x360F JUMP JUMPDEST PUSH2 0xFD8 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x713 DUP3 PUSH2 0x1084 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x7804D923F43A17D325D77E781528E0793B2EDD9890AB45FC64EFD7B4B427744C PUSH2 0x744 DUP2 PUSH2 0x10FE JUMP JUMPDEST PUSH2 0x74D DUP3 PUSH2 0x1112 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 PUSH2 0x77D DUP2 PUSH2 0x10FE JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x79A JUMPI PUSH2 0x799 PUSH2 0x2A39 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x7C8 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x82C JUMPI PUSH2 0x7FA DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x7ED JUMPI PUSH2 0x7EC PUSH2 0x3662 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1125 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x80D JUMPI PUSH2 0x80C PUSH2 0x3662 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 DUP1 PUSH2 0x824 SWAP1 PUSH2 0x36C0 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x7CE JUMP JUMPDEST POP DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x842 DUP3 PUSH2 0x11DF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x7804D923F43A17D325D77E781528E0793B2EDD9890AB45FC64EFD7B4B427744C PUSH2 0x873 DUP2 PUSH2 0x10FE JUMP JUMPDEST PUSH2 0x87D DUP4 DUP4 PUSH2 0x12C4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 PUSH2 0x8B6 DUP2 PUSH2 0x10FE JUMP JUMPDEST PUSH2 0x8C2 DUP6 DUP6 DUP6 DUP6 PUSH2 0x1329 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8F3 PUSH2 0x13AF JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x938 JUMPI POP PUSH2 0x936 DUP7 DUP3 PUSH2 0xE42 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x97C JUMPI DUP1 DUP7 PUSH1 0x40 MLOAD PUSH32 0xE237D92200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x973 SWAP3 SWAP2 SWAP1 PUSH2 0x3717 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x989 DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0x13B7 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x99A DUP3 PUSH2 0x8C9 JUMP JUMPDEST PUSH2 0x9A3 DUP2 PUSH2 0x10FE JUMP JUMPDEST PUSH2 0x9AD DUP4 DUP4 PUSH2 0x14AF JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x9BB PUSH2 0x13AF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xA1F JUMPI PUSH1 0x40 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA29 DUP3 DUP3 PUSH2 0x15A1 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A PUSH2 0xA58 DUP2 PUSH2 0x10FE JUMP JUMPDEST PUSH2 0xA60 PUSH2 0x1694 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0xAAF JUMPI DUP2 MLOAD DUP4 MLOAD PUSH1 0x40 MLOAD PUSH32 0x5B05999100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAA6 SWAP3 SWAP2 SWAP1 PUSH2 0x3740 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xACC JUMPI PUSH2 0xACB PUSH2 0x2A39 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xAFA JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0xB67 JUMPI PUSH2 0xB37 PUSH2 0xB1F DUP3 DUP8 PUSH2 0x16F7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xB32 DUP4 DUP8 PUSH2 0x170B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x6AE JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xB4A JUMPI PUSH2 0xB49 PUSH2 0x3662 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 PUSH2 0xB60 SWAP1 PUSH2 0x36C0 JUMP JUMPDEST SWAP1 POP PUSH2 0xB00 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xB7E DUP4 PUSH2 0xD9E JUMP JUMPDEST GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x7804D923F43A17D325D77E781528E0793B2EDD9890AB45FC64EFD7B4B427744C PUSH2 0xBB0 DUP2 PUSH2 0x10FE JUMP JUMPDEST PUSH2 0xBB9 DUP3 PUSH2 0x171F JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xBDC PUSH2 0x13AF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0xC25 JUMPI POP PUSH2 0xC23 DUP4 PUSH2 0xC1E PUSH2 0x13AF JUMP JUMPDEST PUSH2 0xE42 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0xC70 JUMPI PUSH2 0xC32 PUSH2 0x13AF JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD PUSH32 0xE237D92200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC67 SWAP3 SWAP2 SWAP1 PUSH2 0x3717 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC7B DUP4 DUP4 DUP4 PUSH2 0x1732 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 PUSH2 0xCAA DUP2 PUSH2 0x10FE JUMP JUMPDEST PUSH2 0xCB6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x17C6 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH32 0x7804D923F43A17D325D77E781528E0793B2EDD9890AB45FC64EFD7B4B427744C DUP2 JUMP JUMPDEST PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A PUSH2 0xD0B DUP2 PUSH2 0x10FE JUMP JUMPDEST PUSH2 0xD13 PUSH2 0x185F JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH2 0xD9A PUSH2 0xD93 PUSH2 0x13AF JUMP JUMPDEST DUP4 DUP4 PUSH2 0x18C2 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP2 JUMP JUMPDEST PUSH2 0xDE8 DUP3 PUSH2 0x8C9 JUMP JUMPDEST PUSH2 0xDF1 DUP2 PUSH2 0x10FE JUMP JUMPDEST PUSH2 0xDFB DUP4 DUP4 PUSH2 0x15A1 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 PUSH2 0xF1F DUP2 PUSH2 0x10FE JUMP JUMPDEST PUSH2 0xF28 DUP4 PUSH2 0x1125 JUMP JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF3A PUSH2 0x13AF JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0xF7F JUMPI POP PUSH2 0xF7D DUP7 DUP3 PUSH2 0xE42 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0xFC3 JUMPI DUP1 DUP7 PUSH1 0x40 MLOAD PUSH32 0xE237D92200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFBA SWAP3 SWAP2 SWAP1 PUSH2 0x3717 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xFD0 DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0x1A32 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xFE0 PUSH2 0x13AF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x1029 JUMPI POP PUSH2 0x1027 DUP4 PUSH2 0x1022 PUSH2 0x13AF JUMP JUMPDEST PUSH2 0xE42 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x1074 JUMPI PUSH2 0x1036 PUSH2 0x13AF JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD PUSH32 0xE237D92200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x106B SWAP3 SWAP2 SWAP1 PUSH2 0x3717 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x107F DUP4 DUP4 DUP4 PUSH2 0x1B3D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x10F7 JUMPI POP PUSH2 0x10F6 DUP3 PUSH2 0x1BE4 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x110F DUP2 PUSH2 0x110A PUSH2 0x13AF JUMP JUMPDEST PUSH2 0x1CC6 JUMP JUMPDEST POP JUMP JUMPDEST DUP1 PUSH1 0x2 SWAP1 DUP2 PUSH2 0x1121 SWAP2 SWAP1 PUSH2 0x3975 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x9 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ PUSH2 0x115C JUMPI PUSH1 0x9 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH2 0x11DA JUMP JUMPDEST PUSH1 0x0 PUSH1 0xB PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x1171 SWAP1 PUSH2 0x36C0 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE SWAP1 POP DUP1 PUSH1 0x9 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0xA PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 DUP4 PUSH32 0xEA3E0ACFC42D04765CB7947585765A242D0FD12A634EDFB22C44CF42A363B2B8 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 SWAP2 POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH2 0x1201 SWAP1 PUSH2 0x3798 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x122D SWAP1 PUSH2 0x3798 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x127A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x124F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x127A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x125D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x1298 JUMPI PUSH2 0x1293 DUP4 PUSH2 0x1D17 JUMP JUMPDEST PUSH2 0x12BC JUMP JUMPDEST PUSH1 0x7 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x12AC SWAP3 SWAP2 SWAP1 PUSH2 0x3B06 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 PUSH1 0x8 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 DUP2 PUSH2 0x12E4 SWAP2 SWAP1 PUSH2 0x3975 JUMP JUMPDEST POP DUP2 PUSH32 0x6BB7FF708619BA0610CBA295A58592E0451DEE2622938C8755667688DAF3529B PUSH2 0x1310 DUP5 PUSH2 0x837 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x131D SWAP2 SWAP1 PUSH2 0x2E80 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x139B JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1392 SWAP2 SWAP1 PUSH2 0x3B2A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x13A9 PUSH1 0x0 DUP6 DUP6 DUP6 DUP6 PUSH2 0x1DAB JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1429 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1420 SWAP2 SWAP1 PUSH2 0x3B2A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x149B JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1A8351400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1492 SWAP2 SWAP1 PUSH2 0x3B2A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x14A8 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x1DAB JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14BB DUP4 DUP4 PUSH2 0xD16 JUMP JUMPDEST PUSH2 0x1596 JUMPI PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x1533 PUSH2 0x13AF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x159B JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15AD DUP4 DUP4 PUSH2 0xD16 JUMP JUMPDEST ISZERO PUSH2 0x1689 JUMPI PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x1626 PUSH2 0x13AF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x168E JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x169C PUSH2 0x1E5D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0x16E0 PUSH2 0x13AF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16ED SWAP2 SWAP1 PUSH2 0x3B2A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MUL PUSH1 0x20 DUP5 ADD ADD MLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MUL PUSH1 0x20 DUP5 ADD ADD MLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 PUSH1 0x7 SWAP1 DUP2 PUSH2 0x172E SWAP2 SWAP1 PUSH2 0x3975 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x17A4 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1A8351400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x179B SWAP2 SWAP1 PUSH2 0x3B2A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x17C1 DUP4 PUSH1 0x0 DUP5 DUP5 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1DAB JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1838 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x182F SWAP2 SWAP1 PUSH2 0x3B2A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1845 DUP6 DUP6 PUSH2 0x1E9D JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x1857 PUSH1 0x0 DUP8 DUP5 DUP5 DUP8 PUSH2 0x1DAB JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1867 PUSH2 0x1ECD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x18AB PUSH2 0x13AF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18B8 SWAP2 SWAP1 PUSH2 0x3B2A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1934 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xCED3E10000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x192B SWAP2 SWAP1 PUSH2 0x3B2A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1A25 SWAP2 SWAP1 PUSH2 0x2A03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1AA4 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A9B SWAP2 SWAP1 PUSH2 0x3B2A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1B16 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1A8351400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B0D SWAP2 SWAP1 PUSH2 0x3B2A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1B23 DUP6 DUP6 PUSH2 0x1E9D JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x1B34 DUP8 DUP8 DUP5 DUP5 DUP8 PUSH2 0x1DAB JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1BAF JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1A8351400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BA6 SWAP2 SWAP1 PUSH2 0x3B2A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1BBC DUP5 DUP5 PUSH2 0x1E9D JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x1BDD DUP6 PUSH1 0x0 DUP5 DUP5 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1DAB JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xD9B67A2600000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x1CAF JUMPI POP PUSH32 0xE89341C00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x1CBF JUMPI POP PUSH2 0x1CBE DUP3 PUSH2 0x1F0E JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1CD0 DUP3 DUP3 PUSH2 0xD16 JUMP JUMPDEST PUSH2 0x1D13 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D0A SWAP3 SWAP2 SWAP1 PUSH2 0x3B45 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x1D26 SWAP1 PUSH2 0x3798 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1D52 SWAP1 PUSH2 0x3798 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1D9F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1D74 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1D9F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1D82 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1DB7 DUP6 DUP6 DUP6 DUP6 PUSH2 0x1F78 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1E56 JUMPI PUSH1 0x0 PUSH2 0x1DF5 PUSH2 0x13AF JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP5 MLOAD SUB PUSH2 0x1E45 JUMPI PUSH1 0x0 PUSH2 0x1E16 PUSH1 0x0 DUP7 PUSH2 0x170B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1E2E PUSH1 0x0 DUP7 PUSH2 0x170B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x1E3E DUP4 DUP10 DUP10 DUP6 DUP6 DUP10 PUSH2 0x1F8A JUMP JUMPDEST POP POP PUSH2 0x1E54 JUMP JUMPDEST PUSH2 0x1E53 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x213E JUMP JUMPDEST JUMPDEST POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1E65 PUSH2 0xBBD JUMP JUMPDEST PUSH2 0x1E9B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8DFC202B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1 DUP3 MSTORE DUP4 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH1 0x1 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD PUSH1 0x40 MSTORE SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1ED5 PUSH2 0xBBD JUMP JUMPDEST ISZERO PUSH2 0x1F0C JUMPI PUSH1 0x40 MLOAD PUSH32 0xD93C066500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F84 DUP5 DUP5 DUP5 DUP5 PUSH2 0x22F2 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x2136 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF23A6E61 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1FEB SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3BC3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x2027 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2024 SWAP2 SWAP1 PUSH2 0x3C32 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x20AB JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2057 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x205C JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x20A3 JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x209A SWAP2 SWAP1 PUSH2 0x3B2A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0xF23A6E61 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x2134 JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x212B SWAP2 SWAP1 PUSH2 0x3B2A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x22EA JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xBC197C81 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x219F SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3C5F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x21DB JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x21D8 SWAP2 SWAP1 PUSH2 0x3C32 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x225F JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x220B JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2210 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x2257 JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x224E SWAP2 SWAP1 PUSH2 0x3B2A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0xBC197C81 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x22E8 JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x22DF SWAP2 SWAP1 PUSH2 0x3B2A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x22FE DUP5 DUP5 DUP5 DUP5 PUSH2 0x2489 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x23CE JUMPI PUSH1 0x0 DUP1 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x23B2 JUMPI PUSH1 0x0 PUSH2 0x2354 DUP3 DUP6 PUSH2 0x170B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x5 PUSH1 0x0 PUSH2 0x236E DUP6 DUP10 PUSH2 0x170B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x238B SWAP2 SWAP1 PUSH2 0x3CC7 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 DUP4 PUSH2 0x239E SWAP2 SWAP1 PUSH2 0x3CC7 JUMP JUMPDEST SWAP3 POP POP DUP1 PUSH2 0x23AB SWAP1 PUSH2 0x36C0 JUMP JUMPDEST SWAP1 POP PUSH2 0x2336 JUMP JUMPDEST POP DUP1 PUSH1 0x6 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x23C5 SWAP2 SWAP1 PUSH2 0x3CC7 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2483 JUMPI PUSH1 0x0 DUP1 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x2470 JUMPI PUSH1 0x0 PUSH2 0x2424 DUP3 DUP6 PUSH2 0x170B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x5 PUSH1 0x0 PUSH2 0x243E DUP6 DUP10 PUSH2 0x170B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 DUP4 ADD SWAP3 POP POP DUP1 PUSH2 0x2469 SWAP1 PUSH2 0x36C0 JUMP JUMPDEST SWAP1 POP PUSH2 0x2406 JUMP JUMPDEST POP DUP1 PUSH1 0x6 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x2491 PUSH2 0x1ECD JUMP JUMPDEST PUSH2 0x249D DUP5 DUP5 DUP5 DUP5 PUSH2 0x24A3 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ PUSH2 0x24ED JUMPI DUP2 MLOAD DUP2 MLOAD PUSH1 0x40 MLOAD PUSH32 0x5B05999100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x24E4 SWAP3 SWAP2 SWAP1 PUSH2 0x3740 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x24F7 PUSH2 0x13AF JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x270C JUMPI PUSH1 0x0 PUSH2 0x251A DUP3 DUP7 PUSH2 0x170B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2531 DUP4 DUP7 PUSH2 0x170B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x265E JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x2606 JUMPI DUP9 DUP2 DUP4 DUP6 PUSH1 0x40 MLOAD PUSH32 0x3DEE4C500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x25FD SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3CFB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x26F9 JUMPI DUP1 PUSH1 0x0 DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x26F1 SWAP2 SWAP1 PUSH2 0x3CC7 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST POP POP DUP1 PUSH2 0x2705 SWAP1 PUSH2 0x36C0 JUMP JUMPDEST SWAP1 POP PUSH2 0x24FC JUMP JUMPDEST POP PUSH1 0x1 DUP4 MLOAD SUB PUSH2 0x27CB JUMPI PUSH1 0x0 PUSH2 0x272C PUSH1 0x0 DUP6 PUSH2 0x170B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2744 PUSH1 0x0 DUP6 PUSH2 0x170B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x27BC SWAP3 SWAP2 SWAP1 PUSH2 0x3740 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP PUSH2 0x284A JUMP JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x2841 SWAP3 SWAP2 SWAP1 PUSH2 0x3D40 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2890 DUP3 PUSH2 0x2865 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x28A0 DUP2 PUSH2 0x2885 JUMP JUMPDEST DUP2 EQ PUSH2 0x28AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x28BD DUP2 PUSH2 0x2897 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x28D6 DUP2 PUSH2 0x28C3 JUMP JUMPDEST DUP2 EQ PUSH2 0x28E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x28F3 DUP2 PUSH2 0x28CD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2910 JUMPI PUSH2 0x290F PUSH2 0x285B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x291E DUP6 DUP3 DUP7 ADD PUSH2 0x28AE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x292F DUP6 DUP3 DUP7 ADD PUSH2 0x28E4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x2942 DUP2 PUSH2 0x28C3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x295D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2939 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2998 DUP2 PUSH2 0x2963 JUMP JUMPDEST DUP2 EQ PUSH2 0x29A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x29B5 DUP2 PUSH2 0x298F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x29D1 JUMPI PUSH2 0x29D0 PUSH2 0x285B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x29DF DUP5 DUP3 DUP6 ADD PUSH2 0x29A6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x29FD DUP2 PUSH2 0x29E8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2A18 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x29F4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x2A71 DUP3 PUSH2 0x2A28 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x2A90 JUMPI PUSH2 0x2A8F PUSH2 0x2A39 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2AA3 PUSH2 0x2851 JUMP JUMPDEST SWAP1 POP PUSH2 0x2AAF DUP3 DUP3 PUSH2 0x2A68 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2ACF JUMPI PUSH2 0x2ACE PUSH2 0x2A39 JUMP JUMPDEST JUMPDEST PUSH2 0x2AD8 DUP3 PUSH2 0x2A28 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B07 PUSH2 0x2B02 DUP5 PUSH2 0x2AB4 JUMP JUMPDEST PUSH2 0x2A99 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x2B23 JUMPI PUSH2 0x2B22 PUSH2 0x2A23 JUMP JUMPDEST JUMPDEST PUSH2 0x2B2E DUP5 DUP3 DUP6 PUSH2 0x2AE5 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2B4B JUMPI PUSH2 0x2B4A PUSH2 0x2A1E JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2B5B DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2AF4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2B7A JUMPI PUSH2 0x2B79 PUSH2 0x285B JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2B98 JUMPI PUSH2 0x2B97 PUSH2 0x2860 JUMP JUMPDEST JUMPDEST PUSH2 0x2BA4 DUP5 DUP3 DUP6 ADD PUSH2 0x2B36 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2BC8 JUMPI PUSH2 0x2BC7 PUSH2 0x2A39 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2BF1 DUP2 PUSH2 0x2BDE JUMP JUMPDEST DUP2 EQ PUSH2 0x2BFC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2C0E DUP2 PUSH2 0x2BE8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C27 PUSH2 0x2C22 DUP5 PUSH2 0x2BAD JUMP JUMPDEST PUSH2 0x2A99 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x2C4A JUMPI PUSH2 0x2C49 PUSH2 0x2BD9 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2C73 JUMPI DUP1 PUSH2 0x2C5F DUP9 DUP3 PUSH2 0x2BFF JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2C4C JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2C92 JUMPI PUSH2 0x2C91 PUSH2 0x2A1E JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2CA2 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2C14 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2CC1 JUMPI PUSH2 0x2CC0 PUSH2 0x285B JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2CDF JUMPI PUSH2 0x2CDE PUSH2 0x2860 JUMP JUMPDEST JUMPDEST PUSH2 0x2CEB DUP5 DUP3 DUP6 ADD PUSH2 0x2C7D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2D29 DUP2 PUSH2 0x28C3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D3B DUP4 DUP4 PUSH2 0x2D20 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D5F DUP3 PUSH2 0x2CF4 JUMP JUMPDEST PUSH2 0x2D69 DUP2 DUP6 PUSH2 0x2CFF JUMP JUMPDEST SWAP4 POP PUSH2 0x2D74 DUP4 PUSH2 0x2D10 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2DA5 JUMPI DUP2 MLOAD PUSH2 0x2D8C DUP9 DUP3 PUSH2 0x2D2F JUMP JUMPDEST SWAP8 POP PUSH2 0x2D97 DUP4 PUSH2 0x2D47 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2D78 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2DCC DUP2 DUP5 PUSH2 0x2D54 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2DEA JUMPI PUSH2 0x2DE9 PUSH2 0x285B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2DF8 DUP5 DUP3 DUP6 ADD PUSH2 0x28E4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2E3B JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2E20 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E52 DUP3 PUSH2 0x2E01 JUMP JUMPDEST PUSH2 0x2E5C DUP2 DUP6 PUSH2 0x2E0C JUMP JUMPDEST SWAP4 POP PUSH2 0x2E6C DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2E1D JUMP JUMPDEST PUSH2 0x2E75 DUP2 PUSH2 0x2A28 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2E9A DUP2 DUP5 PUSH2 0x2E47 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2EB9 JUMPI PUSH2 0x2EB8 PUSH2 0x285B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2EC7 DUP6 DUP3 DUP7 ADD PUSH2 0x28E4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2EE8 JUMPI PUSH2 0x2EE7 PUSH2 0x2860 JUMP JUMPDEST JUMPDEST PUSH2 0x2EF4 DUP6 DUP3 DUP7 ADD PUSH2 0x2B36 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2F19 JUMPI PUSH2 0x2F18 PUSH2 0x2A39 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F3D PUSH2 0x2F38 DUP5 PUSH2 0x2EFE JUMP JUMPDEST PUSH2 0x2A99 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x2F60 JUMPI PUSH2 0x2F5F PUSH2 0x2BD9 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2F89 JUMPI DUP1 PUSH2 0x2F75 DUP9 DUP3 PUSH2 0x28E4 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2F62 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2FA8 JUMPI PUSH2 0x2FA7 PUSH2 0x2A1E JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2FB8 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2F2A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2FDC JUMPI PUSH2 0x2FDB PUSH2 0x2A39 JUMP JUMPDEST JUMPDEST PUSH2 0x2FE5 DUP3 PUSH2 0x2A28 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3005 PUSH2 0x3000 DUP5 PUSH2 0x2FC1 JUMP JUMPDEST PUSH2 0x2A99 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x3021 JUMPI PUSH2 0x3020 PUSH2 0x2A23 JUMP JUMPDEST JUMPDEST PUSH2 0x302C DUP5 DUP3 DUP6 PUSH2 0x2AE5 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3049 JUMPI PUSH2 0x3048 PUSH2 0x2A1E JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x3059 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2FF2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x307C JUMPI PUSH2 0x307B PUSH2 0x285B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x308A DUP8 DUP3 DUP9 ADD PUSH2 0x28AE JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x30AB JUMPI PUSH2 0x30AA PUSH2 0x2860 JUMP JUMPDEST JUMPDEST PUSH2 0x30B7 DUP8 DUP3 DUP9 ADD PUSH2 0x2F93 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x30D8 JUMPI PUSH2 0x30D7 PUSH2 0x2860 JUMP JUMPDEST JUMPDEST PUSH2 0x30E4 DUP8 DUP3 DUP9 ADD PUSH2 0x2F93 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3105 JUMPI PUSH2 0x3104 PUSH2 0x2860 JUMP JUMPDEST JUMPDEST PUSH2 0x3111 DUP8 DUP3 DUP9 ADD PUSH2 0x3034 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3133 JUMPI PUSH2 0x3132 PUSH2 0x285B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3141 DUP5 DUP3 DUP6 ADD PUSH2 0x2BFF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3153 DUP2 PUSH2 0x2BDE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x316E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x314A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x3190 JUMPI PUSH2 0x318F PUSH2 0x285B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x319E DUP9 DUP3 DUP10 ADD PUSH2 0x28AE JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x31AF DUP9 DUP3 DUP10 ADD PUSH2 0x28AE JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x31D0 JUMPI PUSH2 0x31CF PUSH2 0x2860 JUMP JUMPDEST JUMPDEST PUSH2 0x31DC DUP9 DUP3 DUP10 ADD PUSH2 0x2F93 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x31FD JUMPI PUSH2 0x31FC PUSH2 0x2860 JUMP JUMPDEST JUMPDEST PUSH2 0x3209 DUP9 DUP3 DUP10 ADD PUSH2 0x2F93 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x322A JUMPI PUSH2 0x3229 PUSH2 0x2860 JUMP JUMPDEST JUMPDEST PUSH2 0x3236 DUP9 DUP3 DUP10 ADD PUSH2 0x3034 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x325A JUMPI PUSH2 0x3259 PUSH2 0x285B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3268 DUP6 DUP3 DUP7 ADD PUSH2 0x2BFF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3279 DUP6 DUP3 DUP7 ADD PUSH2 0x28AE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x329E JUMPI PUSH2 0x329D PUSH2 0x2A39 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x32C2 PUSH2 0x32BD DUP5 PUSH2 0x3283 JUMP JUMPDEST PUSH2 0x2A99 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x32E5 JUMPI PUSH2 0x32E4 PUSH2 0x2BD9 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x330E JUMPI DUP1 PUSH2 0x32FA DUP9 DUP3 PUSH2 0x28AE JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x32E7 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x332D JUMPI PUSH2 0x332C PUSH2 0x2A1E JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x333D DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x32AF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x335D JUMPI PUSH2 0x335C PUSH2 0x285B JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x337B JUMPI PUSH2 0x337A PUSH2 0x2860 JUMP JUMPDEST JUMPDEST PUSH2 0x3387 DUP6 DUP3 DUP7 ADD PUSH2 0x3318 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x33A8 JUMPI PUSH2 0x33A7 PUSH2 0x2860 JUMP JUMPDEST JUMPDEST PUSH2 0x33B4 DUP6 DUP3 DUP7 ADD PUSH2 0x2F93 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x33D7 JUMPI PUSH2 0x33D6 PUSH2 0x285B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x33E5 DUP7 DUP3 DUP8 ADD PUSH2 0x28AE JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3406 JUMPI PUSH2 0x3405 PUSH2 0x2860 JUMP JUMPDEST JUMPDEST PUSH2 0x3412 DUP7 DUP3 DUP8 ADD PUSH2 0x2F93 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3433 JUMPI PUSH2 0x3432 PUSH2 0x2860 JUMP JUMPDEST JUMPDEST PUSH2 0x343F DUP7 DUP3 DUP8 ADD PUSH2 0x2F93 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x3463 JUMPI PUSH2 0x3462 PUSH2 0x285B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3471 DUP8 DUP3 DUP9 ADD PUSH2 0x28AE JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x3482 DUP8 DUP3 DUP9 ADD PUSH2 0x28E4 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x3493 DUP8 DUP3 DUP9 ADD PUSH2 0x28E4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x34B4 JUMPI PUSH2 0x34B3 PUSH2 0x2860 JUMP JUMPDEST JUMPDEST PUSH2 0x34C0 DUP8 DUP3 DUP9 ADD PUSH2 0x3034 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH2 0x34D5 DUP2 PUSH2 0x29E8 JUMP JUMPDEST DUP2 EQ PUSH2 0x34E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x34F2 DUP2 PUSH2 0x34CC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x350F JUMPI PUSH2 0x350E PUSH2 0x285B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x351D DUP6 DUP3 DUP7 ADD PUSH2 0x28AE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x352E DUP6 DUP3 DUP7 ADD PUSH2 0x34E3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x354F JUMPI PUSH2 0x354E PUSH2 0x285B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x355D DUP6 DUP3 DUP7 ADD PUSH2 0x28AE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x356E DUP6 DUP3 DUP7 ADD PUSH2 0x28AE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x3594 JUMPI PUSH2 0x3593 PUSH2 0x285B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x35A2 DUP9 DUP3 DUP10 ADD PUSH2 0x28AE JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x35B3 DUP9 DUP3 DUP10 ADD PUSH2 0x28AE JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x35C4 DUP9 DUP3 DUP10 ADD PUSH2 0x28E4 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x35D5 DUP9 DUP3 DUP10 ADD PUSH2 0x28E4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x35F6 JUMPI PUSH2 0x35F5 PUSH2 0x2860 JUMP JUMPDEST JUMPDEST PUSH2 0x3602 DUP9 DUP3 DUP10 ADD PUSH2 0x3034 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3628 JUMPI PUSH2 0x3627 PUSH2 0x285B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3636 DUP7 DUP3 DUP8 ADD PUSH2 0x28AE JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x3647 DUP7 DUP3 DUP8 ADD PUSH2 0x28E4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x3658 DUP7 DUP3 DUP8 ADD PUSH2 0x28E4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x36CB DUP3 PUSH2 0x28C3 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x36FD JUMPI PUSH2 0x36FC PUSH2 0x3691 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3711 DUP2 PUSH2 0x2885 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x372C PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x3708 JUMP JUMPDEST PUSH2 0x3739 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3708 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3755 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2939 JUMP JUMPDEST PUSH2 0x3762 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2939 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x37B0 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x37C3 JUMPI PUSH2 0x37C2 PUSH2 0x3769 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x382B PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x37EE JUMP JUMPDEST PUSH2 0x3835 DUP7 DUP4 PUSH2 0x37EE JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3872 PUSH2 0x386D PUSH2 0x3868 DUP5 PUSH2 0x28C3 JUMP JUMPDEST PUSH2 0x384D JUMP JUMPDEST PUSH2 0x28C3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x388C DUP4 PUSH2 0x3857 JUMP JUMPDEST PUSH2 0x38A0 PUSH2 0x3898 DUP3 PUSH2 0x3879 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x37FB JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x38B5 PUSH2 0x38A8 JUMP JUMPDEST PUSH2 0x38C0 DUP2 DUP5 DUP5 PUSH2 0x3883 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x38E4 JUMPI PUSH2 0x38D9 PUSH1 0x0 DUP3 PUSH2 0x38AD JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x38C6 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x3929 JUMPI PUSH2 0x38FA DUP2 PUSH2 0x37C9 JUMP JUMPDEST PUSH2 0x3903 DUP5 PUSH2 0x37DE JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x3912 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x3926 PUSH2 0x391E DUP6 PUSH2 0x37DE JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x38C5 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x394C PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x392E JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3965 DUP4 DUP4 PUSH2 0x393B JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x397E DUP3 PUSH2 0x2E01 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3997 JUMPI PUSH2 0x3996 PUSH2 0x2A39 JUMP JUMPDEST JUMPDEST PUSH2 0x39A1 DUP3 SLOAD PUSH2 0x3798 JUMP JUMPDEST PUSH2 0x39AC DUP3 DUP3 DUP6 PUSH2 0x38E8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x39DF JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x39CD JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x39D7 DUP6 DUP3 PUSH2 0x3959 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x3A3F JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x39ED DUP7 PUSH2 0x37C9 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x3A15 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x39F0 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x3A32 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x3A2E PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x393B JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SLOAD PUSH2 0x3A5F DUP2 PUSH2 0x3798 JUMP JUMPDEST PUSH2 0x3A69 DUP2 DUP7 PUSH2 0x3A47 JUMP JUMPDEST SWAP5 POP PUSH1 0x1 DUP3 AND PUSH1 0x0 DUP2 EQ PUSH2 0x3A84 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x3A99 JUMPI PUSH2 0x3ACC JUMP JUMPDEST PUSH1 0xFF NOT DUP4 AND DUP7 MSTORE DUP2 ISZERO ISZERO DUP3 MUL DUP7 ADD SWAP4 POP PUSH2 0x3ACC JUMP JUMPDEST PUSH2 0x3AA2 DUP6 PUSH2 0x37C9 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3AC4 JUMPI DUP2 SLOAD DUP2 DUP10 ADD MSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3AA5 JUMP JUMPDEST DUP4 DUP9 ADD SWAP6 POP POP POP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3AE0 DUP3 PUSH2 0x2E01 JUMP JUMPDEST PUSH2 0x3AEA DUP2 DUP6 PUSH2 0x3A47 JUMP JUMPDEST SWAP4 POP PUSH2 0x3AFA DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2E1D JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B12 DUP3 DUP6 PUSH2 0x3A52 JUMP JUMPDEST SWAP2 POP PUSH2 0x3B1E DUP3 DUP5 PUSH2 0x3AD5 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3B3F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3708 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3B5A PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x3708 JUMP JUMPDEST PUSH2 0x3B67 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x314A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B95 DUP3 PUSH2 0x3B6E JUMP JUMPDEST PUSH2 0x3B9F DUP2 DUP6 PUSH2 0x3B79 JUMP JUMPDEST SWAP4 POP PUSH2 0x3BAF DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2E1D JUMP JUMPDEST PUSH2 0x3BB8 DUP2 PUSH2 0x2A28 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x3BD8 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x3708 JUMP JUMPDEST PUSH2 0x3BE5 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x3708 JUMP JUMPDEST PUSH2 0x3BF2 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x2939 JUMP JUMPDEST PUSH2 0x3BFF PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x2939 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x3C11 DUP2 DUP5 PUSH2 0x3B8A JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3C2C DUP2 PUSH2 0x298F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3C48 JUMPI PUSH2 0x3C47 PUSH2 0x285B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3C56 DUP5 DUP3 DUP6 ADD PUSH2 0x3C1D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x3C74 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x3708 JUMP JUMPDEST PUSH2 0x3C81 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x3708 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x3C93 DUP2 DUP7 PUSH2 0x2D54 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x3CA7 DUP2 DUP6 PUSH2 0x2D54 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x3CBB DUP2 DUP5 PUSH2 0x3B8A JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3CD2 DUP3 PUSH2 0x28C3 JUMP JUMPDEST SWAP2 POP PUSH2 0x3CDD DUP4 PUSH2 0x28C3 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x3CF5 JUMPI PUSH2 0x3CF4 PUSH2 0x3691 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x3D10 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x3708 JUMP JUMPDEST PUSH2 0x3D1D PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x2939 JUMP JUMPDEST PUSH2 0x3D2A PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x2939 JUMP JUMPDEST PUSH2 0x3D37 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x2939 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3D5A DUP2 DUP6 PUSH2 0x2D54 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x3D6E DUP2 DUP5 PUSH2 0x2D54 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADD 0x4F RETURNDATACOPY PUSH28 0xFB2C52C8C5213173FCFACCA42C36254903ED2D1ED85499C71831AFA1 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"719:3852:25:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2245:132:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4366:203:25;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3417:103;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2014:315;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2983:153;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3269:138;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1211:100:8;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3866:198:25;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3810:120:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4012:429:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4226:136:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5328:245;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3603:75:25;;;:::i;:::-;;2534:552:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1404:106:8;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3146:113:25;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1850:84:16;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;681:313:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3684:176:25;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;836:70;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3526:71;;;:::i;:::-;;2854:136:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2187:49;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3154:144:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1043:111:8;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;980:62:25;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4642:138:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2522:112:25;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;912:62;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3365:157:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2396:121:25;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1881:128;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3589:351:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;394:281:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2245:132:3;2322:7;2348:9;:13;2358:2;2348:13;;;;;;;;;;;:22;2362:7;2348:22;;;;;;;;;;;;;;;;2341:29;;2245:132;;;;:::o;4366:203:25:-;4499:4;4526:36;4550:11;4526:23;:36::i;:::-;4519:43;;4366:203;;;:::o;3417:103::-;878:28;2464:16:0;2475:4;2464:10;:16::i;:::-;3498:15:25::1;3506:6;3498:7;:15::i;:::-;3417:103:::0;;:::o;2014:315::-;2101:16;1018:24;2464:16:0;2475:4;2464:10;:16::i;:::-;2129:20:25::1;2166:11;:18;2152:33;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2129:56;;2200:9;2195:108;2219:11;:18;2215:1;:22;2195:108;;;2267:25;2277:11;2289:1;2277:14;;;;;;;;:::i;:::-;;;;;;;;2267:9;:25::i;:::-;2258:3;2262:1;2258:6;;;;;;;;:::i;:::-;;;;;;;:34;;;::::0;::::1;2239:3;;;;;:::i;:::-;;;;2195:108;;;;2319:3;2312:10;;;2014:315:::0;;;;:::o;2983:153::-;3079:13;3111:18;3121:7;3111:9;:18::i;:::-;3104:25;;2983:153;;;:::o;3269:138::-;878:28;2464:16:0;2475:4;2464:10;:16::i;:::-;3374:26:25::1;3382:7;3391:8;3374:7;:26::i;:::-;3269:138:::0;;;:::o;1211:100:8:-;1263:7;1289:15;;1282:22;;1211:100;:::o;3866:198:25:-;1018:24;2464:16:0;2475:4;2464:10;:16::i;:::-;4023:34:25::1;4034:2;4038:3;4043:7;4052:4;4023:10;:34::i;:::-;3866:198:::0;;;;;:::o;3810:120:0:-;3875:7;3901:6;:12;3908:4;3901:12;;;;;;;;;;;:22;;;3894:29;;3810:120;;;:::o;4012:429:3:-;4206:14;4223:12;:10;:12::i;:::-;4206:29;;4257:6;4249:14;;:4;:14;;;;:49;;;;;4268:30;4285:4;4291:6;4268:16;:30::i;:::-;4267:31;4249:49;4245:129;;;4350:6;4358:4;4321:42;;;;;;;;;;;;:::i;:::-;;;;;;;;4245:129;4383:51;4406:4;4412:2;4416:3;4421:6;4429:4;4383:22;:51::i;:::-;4196:245;4012:429;;;;;:::o;4226:136:0:-;4300:18;4313:4;4300:12;:18::i;:::-;2464:16;2475:4;2464:10;:16::i;:::-;4330:25:::1;4341:4;4347:7;4330:10;:25::i;:::-;;4226:136:::0;;;:::o;5328:245::-;5443:12;:10;:12::i;:::-;5421:34;;:18;:34;;;5417:102;;5478:30;;;;;;;;;;;;;;5417:102;5529:37;5541:4;5547:18;5529:11;:37::i;:::-;;5328:245;;:::o;3603:75:25:-;950:24;2464:16:0;2475:4;2464:10;:16::i;:::-;3661:10:25::1;:8;:10::i;:::-;3603:75:::0;:::o;2534:552:3:-;2658:16;2709:3;:10;2690:8;:15;:29;2686:121;;2768:3;:10;2780:8;:15;2742:54;;;;;;;;;;;;:::i;:::-;;;;;;;;2686:121;2817:30;2864:8;:15;2850:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2817:63;;2896:9;2891:158;2915:8;:15;2911:1;:19;2891:158;;;2970:68;2980:30;3008:1;2980:8;:27;;:30;;;;:::i;:::-;3012:25;3035:1;3012:3;:22;;:25;;;;:::i;:::-;2970:9;:68::i;:::-;2951:13;2965:1;2951:16;;;;;;;;:::i;:::-;;;;;;;:87;;;;;2932:3;;;;:::i;:::-;;;2891:158;;;;3066:13;3059:20;;;2534:552;;;;:::o;1404:106:8:-;1461:4;1502:1;1484:15;1496:2;1484:11;:15::i;:::-;:19;1477:26;;1404:106;;;:::o;3146:113:25:-;878:28;2464:16:0;2475:4;2464:10;:16::i;:::-;3232:20:25::1;3244:7;3232:11;:20::i;:::-;3146:113:::0;;:::o;1850:84:16:-;1897:4;1920:7;;;;;;;;;;;1913:14;;1850:84;:::o;681:313:6:-;804:12;:10;:12::i;:::-;793:23;;:7;:23;;;;:67;;;;;821:39;838:7;847:12;:10;:12::i;:::-;821:16;:39::i;:::-;820:40;793:67;789:156;;;912:12;:10;:12::i;:::-;926:7;883:51;;;;;;;;;;;;:::i;:::-;;;;;;;;789:156;955:32;966:7;975:3;980:6;955:10;:32::i;:::-;681:313;;;:::o;3684:176:25:-;1018:24;2464:16:0;2475:4;2464:10;:16::i;:::-;3821:32:25::1;3827:7;3836:2;3840:6;3848:4;3821:5;:32::i;:::-;3684:176:::0;;;;;:::o;836:70::-;878:28;836:70;:::o;3526:71::-;950:24;2464:16:0;2475:4;2464:10;:16::i;:::-;3582:8:25::1;:6;:8::i;:::-;3526:71:::0;:::o;2854:136:0:-;2931:4;2954:6;:12;2961:4;2954:12;;;;;;;;;;;:20;;:29;2975:7;2954:29;;;;;;;;;;;;;;;;;;;;;;;;;2947:36;;2854:136;;;;:::o;2187:49::-;2232:4;2187:49;;;:::o;3154:144:3:-;3239:52;3258:12;:10;:12::i;:::-;3272:8;3282;3239:18;:52::i;:::-;3154:144;;:::o;1043:111:8:-;1105:7;1131:12;:16;1144:2;1131:16;;;;;;;;;;;;1124:23;;1043:111;;;:::o;980:62:25:-;1018:24;980:62;:::o;4642:138:0:-;4717:18;4730:4;4717:12;:18::i;:::-;2464:16;2475:4;2464:10;:16::i;:::-;4747:26:::1;4759:4;4765:7;4747:11;:26::i;:::-;;4642:138:::0;;;:::o;2522:112:25:-;2578:7;2604:11;:23;2616:10;2604:23;;;;;;;;;;;;2597:30;;2522:112;;;:::o;912:62::-;950:24;912:62;:::o;3365:157:3:-;3455:4;3478:18;:27;3497:7;3478:27;;;;;;;;;;;;;;;:37;3506:8;3478:37;;;;;;;;;;;;;;;;;;;;;;;;;3471:44;;3365:157;;;;:::o;2396:121:25:-;2457:7;2483:18;:27;2502:7;2483:27;;;;;;;;;;;;2476:34;;2396:121;;;:::o;1881:128::-;1957:7;1018:24;2464:16:0;2475:4;2464:10;:16::i;:::-;1981:21:25::1;1991:10;1981:9;:21::i;:::-;1974:28;;1881:128:::0;;;;:::o;3589:351:3:-;3712:14;3729:12;:10;:12::i;:::-;3712:29;;3763:6;3755:14;;:4;:14;;;;:49;;;;;3774:30;3791:4;3797:6;3774:16;:30::i;:::-;3773:31;3755:49;3751:129;;;3856:6;3864:4;3827:42;;;;;;;;;;;;:::i;:::-;;;;;;;;3751:129;3889:44;3907:4;3913:2;3917;3921:5;3928:4;3889:17;:44::i;:::-;3702:238;3589:351;;;;;:::o;394:281:6:-;492:12;:10;:12::i;:::-;481:23;;:7;:23;;;;:67;;;;;509:39;526:7;535:12;:10;:12::i;:::-;509:16;:39::i;:::-;508:40;481:67;477:156;;;600:12;:10;:12::i;:::-;614:7;571:51;;;;;;;;;;;;:::i;:::-;;;;;;;;477:156;643:25;649:7;658:2;662:5;643;:25::i;:::-;394:281;;;:::o;2565:202:0:-;2650:4;2688:32;2673:47;;;:11;:47;;;;:87;;;;2724:36;2748:11;2724:23;:36::i;:::-;2673:87;2666:94;;2565:202;;;:::o;3199:103::-;3265:30;3276:4;3282:12;:10;:12::i;:::-;3265:10;:30::i;:::-;3199:103;:::o;10290:86:3:-;10363:6;10356:4;:13;;;;;;:::i;:::-;;10290:86;:::o;1350:525:25:-;1407:7;1511:1;1484:11;:23;1496:10;1484:23;;;;;;;;;;;;:28;1480:89;;1535:11;:23;1547:10;1535:23;;;;;;;;;;;;1528:30;;;;1480:89;1625:13;1641:12;;:14;;;;;;;;;:::i;:::-;;;;;1625:30;;1740:5;1714:11;:23;1726:10;1714:23;;;;;;;;;;;:31;;;;1783:10;1755:18;:25;1774:5;1755:25;;;;;;;;;;;:38;;;;1839:5;1827:10;1817:28;;;;;;;;;;1863:5;1856:12;;;1350:525;;;;:::o;1334:332:9:-;1402:13;1427:22;1452:10;:19;1463:7;1452:19;;;;;;;;;;;1427:44;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1601:1;1582:8;1576:22;:26;:83;;1641:18;1651:7;1641:9;:18::i;:::-;1576:83;;;1619:8;1629;1605:33;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1576:83;1569:90;;;1334:332;;;:::o;1746:163::-;1853:8;1831:10;:19;1842:7;1831:19;;;;;;;;;;;:30;;;;;;:::i;:::-;;1894:7;1876:26;1880:12;1884:7;1880:3;:12::i;:::-;1876:26;;;;;;:::i;:::-;;;;;;;;1746:163;;:::o;11531:282:3:-;11666:1;11652:16;;:2;:16;;;11648:88;;11722:1;11691:34;;;;;;;;;;;:::i;:::-;;;;;;;;11648:88;11745:61;11780:1;11784:2;11788:3;11793:6;11801:4;11745:26;:61::i;:::-;11531:282;;;;:::o;656:96:14:-;709:7;735:10;728:17;;656:96;:::o;9023:445:3:-;9230:1;9216:16;;:2;:16;;;9212:88;;9286:1;9255:34;;;;;;;;;;;:::i;:::-;;;;;;;;9212:88;9329:1;9313:18;;:4;:18;;;9309:88;;9383:1;9354:32;;;;;;;;;;;:::i;:::-;;;;;;;;9309:88;9406:55;9433:4;9439:2;9443:3;9448:6;9456:4;9406:26;:55::i;:::-;9023:445;;;;;:::o;6179:316:0:-;6256:4;6277:22;6285:4;6291:7;6277;:22::i;:::-;6272:217;;6347:4;6315:6;:12;6322:4;6315:12;;;;;;;;;;;:20;;:29;6336:7;6315:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;6397:12;:10;:12::i;:::-;6370:40;;6388:7;6370:40;;6382:4;6370:40;;;;;;;;;;6431:4;6424:11;;;;6272:217;6473:5;6466:12;;6179:316;;;;;:::o;6730:317::-;6808:4;6828:22;6836:4;6842:7;6828;:22::i;:::-;6824:217;;;6898:5;6866:6;:12;6873:4;6866:12;;;;;;;;;;;:20;;:29;6887:7;6866:29;;;;;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;6949:12;:10;:12::i;:::-;6922:40;;6940:7;6922:40;;6934:4;6922:40;;;;;;;;;;6983:4;6976:11;;;;6824:217;7025:5;7018:12;;6730:317;;;;;:::o;2710:117:16:-;1721:16;:14;:16::i;:::-;2778:5:::1;2768:7;;:15;;;;;;;;;;;;;;;;;;2798:22;2807:12;:10;:12::i;:::-;2798:22;;;;;;:::i;:::-;;;;;;;;2710:117::o:0;16128:197:12:-;16214:11;16302:4;16297:3;16293:14;16286:4;16281:3;16277:14;16273:35;16267:42;16260:49;;16128:197;;;;:::o;16926:::-;17012:11;17100:4;17095:3;17091:14;17084:4;17079:3;17075:14;17071:35;17065:42;17058:49;;16926:197;;;;:::o;1991:96:9:-;2073:7;2062:8;:18;;;;;;:::i;:::-;;1991:96;:::o;12792:265:3:-;12912:1;12896:18;;:4;:18;;;12892:88;;12966:1;12937:32;;;;;;;;;;;:::i;:::-;;;;;;;;12892:88;12989:61;13016:4;13030:1;13034:3;13039:6;12989:61;;;;;;;;;;;;:26;:61::i;:::-;12792:265;;;:::o;10754:346::-;10864:1;10850:16;;:2;:16;;;10846:88;;10920:1;10889:34;;;;;;;;;;;:::i;:::-;;;;;;;;10846:88;10944:20;10966:23;10993:29;11012:2;11016:5;10993:18;:29::i;:::-;10943:79;;;;11032:61;11067:1;11071:2;11075:3;11080:6;11088:4;11032:26;:61::i;:::-;10836:264;;10754:346;;;;:::o;2463:115:16:-;1474:19;:17;:19::i;:::-;2532:4:::1;2522:7;;:14;;;;;;;;;;;;;;;;;;2551:20;2558:12;:10;:12::i;:::-;2551:20;;;;;;:::i;:::-;;;;;;;;2463:115::o:0;13276:315:3:-;13403:1;13383:22;;:8;:22;;;13379:94;;13459:1;13428:34;;;;;;;;;;;:::i;:::-;;;;;;;;13379:94;13520:8;13482:18;:25;13501:5;13482:25;;;;;;;;;;;;;;;:35;13508:8;13482:35;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;13565:8;13543:41;;13558:5;13543:41;;;13575:8;13543:41;;;;;;:::i;:::-;;;;;;;;13276:315;;;:::o;8159:463::-;8295:1;8281:16;;:2;:16;;;8277:88;;8351:1;8320:34;;;;;;;;;;;:::i;:::-;;;;;;;;8277:88;8394:1;8378:18;;:4;:18;;;8374:88;;8448:1;8419:32;;;;;;;;;;;:::i;:::-;;;;;;;;8374:88;8472:20;8494:23;8521:29;8540:2;8544:5;8521:18;:29::i;:::-;8471:79;;;;8560:55;8587:4;8593:2;8597:3;8602:6;8610:4;8560:26;:55::i;:::-;8267:355;;8159:463;;;;;:::o;12107:329::-;12202:1;12186:18;;:4;:18;;;12182:88;;12256:1;12227:32;;;;;;;;;;;:::i;:::-;;;;;;;;12182:88;12280:20;12302:23;12329:29;12348:2;12352:5;12329:18;:29::i;:::-;12279:79;;;;12368:61;12395:4;12409:1;12413:3;12418:6;12368:61;;;;;;;;;;;;:26;:61::i;:::-;12172:264;;12107:329;;;:::o;1378:305::-;1480:4;1530:26;1515:41;;;:11;:41;;;;:109;;;;1587:37;1572:52;;;:11;:52;;;;1515:109;:161;;;;1640:36;1664:11;1640:23;:36::i;:::-;1515:161;1496:180;;1378:305;;;:::o;3432:197:0:-;3520:22;3528:4;3534:7;3520;:22::i;:::-;3515:108;;3598:7;3607:4;3565:47;;;;;;;;;;;;:::i;:::-;;;;;;;;3515:108;3432:197;;:::o;2082:103:3:-;2142:13;2174:4;2167:11;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2082:103;;;:::o;7002:700::-;7203:30;7211:4;7217:2;7221:3;7226:6;7203:7;:30::i;:::-;7261:1;7247:16;;:2;:16;;;7243:453;;7279:16;7298:12;:10;:12::i;:::-;7279:31;;7342:1;7328:3;:10;:15;7324:362;;7363:10;7376:25;7399:1;7376:3;:22;;:25;;;;:::i;:::-;7363:38;;7419:13;7435:28;7461:1;7435:6;:25;;:28;;;;:::i;:::-;7419:44;;7481:72;7517:8;7527:4;7533:2;7537;7541:5;7548:4;7481:35;:72::i;:::-;7345:223;;7324:362;;;7592:79;7633:8;7643:4;7649:2;7653:3;7658:6;7666:4;7592:40;:79::i;:::-;7324:362;7265:431;7243:453;7002:700;;;;;:::o;2202:126:16:-;2265:8;:6;:8::i;:::-;2260:62;;2296:15;;;;;;;;;;;;;;2260:62;2202:126::o;13707:822:3:-;13815:23;13840;13974:4;13968:11;13958:21;;14044:1;14036:6;14029:17;14182:8;14175:4;14167:6;14163:17;14156:35;14304:4;14296:6;14292:17;14282:27;;14337:1;14329:6;14322:17;14378:8;14371:4;14363:6;14359:17;14352:35;14507:4;14499:6;14495:17;14489:4;14482:31;13707:822;;;;;:::o;2002:128:16:-;2067:8;:6;:8::i;:::-;2063:61;;;2098:15;;;;;;;;;;;;;;2063:61;2002:128::o;763:146:20:-;839:4;877:25;862:40;;;:11;:40;;;;855:47;;763:146;;;:::o;4138:222:25:-;4317:36;4331:4;4337:2;4341:3;4346:6;4317:13;:36::i;:::-;4138:222;;;;:::o;998:959:11:-;1214:1;1197:2;:14;;;:18;1193:758;;;1252:2;1235:38;;;1274:8;1284:4;1290:2;1294:5;1301:4;1235:71;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;1231:710;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1622:1;1605:6;:13;:18;1601:326;;1748:2;1710:41;;;;;;;;;;;:::i;:::-;;;;;;;;1601:326;1879:6;1873:13;1864:6;1860:2;1856:15;1849:38;1231:710;1367:43;;;1355:55;;;:8;:55;;;;1351:189;;1518:2;1480:41;;;;;;;;;;;:::i;:::-;;;;;;;;1351:189;1307:247;1193:758;998:959;;;;;;:::o;2505:1026::-;2746:1;2729:2;:14;;;:18;2725:800;;;2784:2;2767:43;;;2811:8;2821:4;2827:3;2832:6;2840:4;2767:78;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;2763:752;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3196:1;3179:6;:13;:18;3175:326;;3322:2;3284:41;;;;;;;;;;;:::i;:::-;;;;;;;;3175:326;3453:6;3447:13;3438:6;3434:2;3430:15;3423:38;2763:752;2936:48;;;2924:60;;;:8;:60;;;;2920:194;;3092:2;3054:41;;;;;;;;;;;:::i;:::-;;;;;;;;2920:194;2846:282;2725:800;2505:1026;;;;;;:::o;1567:1594:8:-;1731:36;1745:4;1751:2;1755:3;1760:6;1731:13;:36::i;:::-;1798:1;1782:18;;:4;:18;;;1778:571;;1816:22;1861:9;1856:331;1880:3;:10;1876:1;:14;1856:331;;;1915:13;1931:28;1957:1;1931:6;:25;;:28;;;;:::i;:::-;1915:44;;2126:5;2083:12;:39;2096:25;2119:1;2096:3;:22;;:25;;;;:::i;:::-;2083:39;;;;;;;;;;;;:48;;;;;;;:::i;:::-;;;;;;;;2167:5;2149:23;;;;;:::i;:::-;;;1897:290;1892:3;;;;:::i;:::-;;;1856:331;;;;2324:14;2305:15;;:33;;;;;;;:::i;:::-;;;;;;;;1802:547;1778:571;2377:1;2363:16;;:2;:16;;;2359:796;;2395:22;2440:9;2435:497;2459:3;:10;2455:1;:14;2435:497;;;2494:13;2510:28;2536:1;2510:6;:25;;:28;;;;:::i;:::-;2494:44;;2738:5;2695:12;:39;2708:25;2731:1;2708:3;:22;;:25;;;;:::i;:::-;2695:39;;;;;;;;;;;;:48;;;;;;;;;;;2894:5;2876:23;;;;2476:456;2471:3;;;;:::i;:::-;;;2435:497;;;;3116:14;3097:15;;:33;;;;;;;;;;;2381:774;2359:796;1567:1594;;;;:::o;1129:221:7:-;1474:19:16;:17;:19::i;:::-;1307:36:7::1;1321:4;1327:2;1331:3;1336:6;1307:13;:36::i;:::-;1129:221:::0;;;;:::o;5142:1281:3:-;5277:6;:13;5263:3;:10;:27;5259:117;;5339:3;:10;5351:6;:13;5313:52;;;;;;;;;;;;:::i;:::-;;;;;;;;5259:117;5386:16;5405:12;:10;:12::i;:::-;5386:31;;5433:9;5428:691;5452:3;:10;5448:1;:14;5428:691;;;5483:10;5496:25;5519:1;5496:3;:22;;:25;;;;:::i;:::-;5483:38;;5535:13;5551:28;5577:1;5551:6;:25;;:28;;;;:::i;:::-;5535:44;;5614:1;5598:18;;:4;:18;;;5594:420;;5636:19;5658:9;:13;5668:2;5658:13;;;;;;;;;;;:19;5672:4;5658:19;;;;;;;;;;;;;;;;5636:41;;5713:5;5699:11;:19;5695:129;;;5776:4;5782:11;5795:5;5802:2;5749:56;;;;;;;;;;;;;;:::i;:::-;;;;;;;;5695:129;5976:5;5962:11;:19;5940:9;:13;5950:2;5940:13;;;;;;;;;;;:19;5954:4;5940:19;;;;;;;;;;;;;;;:41;;;;5618:396;5594:420;6046:1;6032:16;;:2;:16;;;6028:81;;6089:5;6068:9;:13;6078:2;6068:13;;;;;;;;;;;:17;6082:2;6068:17;;;;;;;;;;;;;;;;:26;;;;;;;:::i;:::-;;;;;;;;6028:81;5469:650;;5464:3;;;;:::i;:::-;;;5428:691;;;;6147:1;6133:3;:10;:15;6129:288;;6164:10;6177:25;6200:1;6177:3;:22;;:25;;;;:::i;:::-;6164:38;;6216:13;6232:28;6258:1;6232:6;:25;;:28;;;;:::i;:::-;6216:44;;6310:2;6279:45;;6304:4;6279:45;;6294:8;6279:45;;;6314:2;6318:5;6279:45;;;;;;;:::i;:::-;;;;;;;;6150:185;;6129:288;;;6390:2;6360:46;;6384:4;6360:46;;6374:8;6360:46;;;6394:3;6399:6;6360:46;;;;;;;:::i;:::-;;;;;;;;6129:288;5249:1174;5142:1281;;;;:::o;7:75:26:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:77::-;878:7;907:5;896:16;;841:77;;;:::o;924:122::-;997:24;1015:5;997:24;:::i;:::-;990:5;987:35;977:63;;1036:1;1033;1026:12;977:63;924:122;:::o;1052:139::-;1098:5;1136:6;1123:20;1114:29;;1152:33;1179:5;1152:33;:::i;:::-;1052:139;;;;:::o;1197:474::-;1265:6;1273;1322:2;1310:9;1301:7;1297:23;1293:32;1290:119;;;1328:79;;:::i;:::-;1290:119;1448:1;1473:53;1518:7;1509:6;1498:9;1494:22;1473:53;:::i;:::-;1463:63;;1419:117;1575:2;1601:53;1646:7;1637:6;1626:9;1622:22;1601:53;:::i;:::-;1591:63;;1546:118;1197:474;;;;;:::o;1677:118::-;1764:24;1782:5;1764:24;:::i;:::-;1759:3;1752:37;1677:118;;:::o;1801:222::-;1894:4;1932:2;1921:9;1917:18;1909:26;;1945:71;2013:1;2002:9;1998:17;1989:6;1945:71;:::i;:::-;1801:222;;;;:::o;2029:149::-;2065:7;2105:66;2098:5;2094:78;2083:89;;2029:149;;;:::o;2184:120::-;2256:23;2273:5;2256:23;:::i;:::-;2249:5;2246:34;2236:62;;2294:1;2291;2284:12;2236:62;2184:120;:::o;2310:137::-;2355:5;2393:6;2380:20;2371:29;;2409:32;2435:5;2409:32;:::i;:::-;2310:137;;;;:::o;2453:327::-;2511:6;2560:2;2548:9;2539:7;2535:23;2531:32;2528:119;;;2566:79;;:::i;:::-;2528:119;2686:1;2711:52;2755:7;2746:6;2735:9;2731:22;2711:52;:::i;:::-;2701:62;;2657:116;2453:327;;;;:::o;2786:90::-;2820:7;2863:5;2856:13;2849:21;2838:32;;2786:90;;;:::o;2882:109::-;2963:21;2978:5;2963:21;:::i;:::-;2958:3;2951:34;2882:109;;:::o;2997:210::-;3084:4;3122:2;3111:9;3107:18;3099:26;;3135:65;3197:1;3186:9;3182:17;3173:6;3135:65;:::i;:::-;2997:210;;;;:::o;3213:117::-;3322:1;3319;3312:12;3336:117;3445:1;3442;3435:12;3459:102;3500:6;3551:2;3547:7;3542:2;3535:5;3531:14;3527:28;3517:38;;3459:102;;;:::o;3567:180::-;3615:77;3612:1;3605:88;3712:4;3709:1;3702:15;3736:4;3733:1;3726:15;3753:281;3836:27;3858:4;3836:27;:::i;:::-;3828:6;3824:40;3966:6;3954:10;3951:22;3930:18;3918:10;3915:34;3912:62;3909:88;;;3977:18;;:::i;:::-;3909:88;4017:10;4013:2;4006:22;3796:238;3753:281;;:::o;4040:129::-;4074:6;4101:20;;:::i;:::-;4091:30;;4130:33;4158:4;4150:6;4130:33;:::i;:::-;4040:129;;;:::o;4175:308::-;4237:4;4327:18;4319:6;4316:30;4313:56;;;4349:18;;:::i;:::-;4313:56;4387:29;4409:6;4387:29;:::i;:::-;4379:37;;4471:4;4465;4461:15;4453:23;;4175:308;;;:::o;4489:146::-;4586:6;4581:3;4576;4563:30;4627:1;4618:6;4613:3;4609:16;4602:27;4489:146;;;:::o;4641:425::-;4719:5;4744:66;4760:49;4802:6;4760:49;:::i;:::-;4744:66;:::i;:::-;4735:75;;4833:6;4826:5;4819:21;4871:4;4864:5;4860:16;4909:3;4900:6;4895:3;4891:16;4888:25;4885:112;;;4916:79;;:::i;:::-;4885:112;5006:54;5053:6;5048:3;5043;5006:54;:::i;:::-;4725:341;4641:425;;;;;:::o;5086:340::-;5142:5;5191:3;5184:4;5176:6;5172:17;5168:27;5158:122;;5199:79;;:::i;:::-;5158:122;5316:6;5303:20;5341:79;5416:3;5408:6;5401:4;5393:6;5389:17;5341:79;:::i;:::-;5332:88;;5148:278;5086:340;;;;:::o;5432:509::-;5501:6;5550:2;5538:9;5529:7;5525:23;5521:32;5518:119;;;5556:79;;:::i;:::-;5518:119;5704:1;5693:9;5689:17;5676:31;5734:18;5726:6;5723:30;5720:117;;;5756:79;;:::i;:::-;5720:117;5861:63;5916:7;5907:6;5896:9;5892:22;5861:63;:::i;:::-;5851:73;;5647:287;5432:509;;;;:::o;5947:311::-;6024:4;6114:18;6106:6;6103:30;6100:56;;;6136:18;;:::i;:::-;6100:56;6186:4;6178:6;6174:17;6166:25;;6246:4;6240;6236:15;6228:23;;5947:311;;;:::o;6264:117::-;6373:1;6370;6363:12;6387:77;6424:7;6453:5;6442:16;;6387:77;;;:::o;6470:122::-;6543:24;6561:5;6543:24;:::i;:::-;6536:5;6533:35;6523:63;;6582:1;6579;6572:12;6523:63;6470:122;:::o;6598:139::-;6644:5;6682:6;6669:20;6660:29;;6698:33;6725:5;6698:33;:::i;:::-;6598:139;;;;:::o;6760:710::-;6856:5;6881:81;6897:64;6954:6;6897:64;:::i;:::-;6881:81;:::i;:::-;6872:90;;6982:5;7011:6;7004:5;6997:21;7045:4;7038:5;7034:16;7027:23;;7098:4;7090:6;7086:17;7078:6;7074:30;7127:3;7119:6;7116:15;7113:122;;;7146:79;;:::i;:::-;7113:122;7261:6;7244:220;7278:6;7273:3;7270:15;7244:220;;;7353:3;7382:37;7415:3;7403:10;7382:37;:::i;:::-;7377:3;7370:50;7449:4;7444:3;7440:14;7433:21;;7320:144;7304:4;7299:3;7295:14;7288:21;;7244:220;;;7248:21;6862:608;;6760:710;;;;;:::o;7493:370::-;7564:5;7613:3;7606:4;7598:6;7594:17;7590:27;7580:122;;7621:79;;:::i;:::-;7580:122;7738:6;7725:20;7763:94;7853:3;7845:6;7838:4;7830:6;7826:17;7763:94;:::i;:::-;7754:103;;7570:293;7493:370;;;;:::o;7869:539::-;7953:6;8002:2;7990:9;7981:7;7977:23;7973:32;7970:119;;;8008:79;;:::i;:::-;7970:119;8156:1;8145:9;8141:17;8128:31;8186:18;8178:6;8175:30;8172:117;;;8208:79;;:::i;:::-;8172:117;8313:78;8383:7;8374:6;8363:9;8359:22;8313:78;:::i;:::-;8303:88;;8099:302;7869:539;;;;:::o;8414:114::-;8481:6;8515:5;8509:12;8499:22;;8414:114;;;:::o;8534:184::-;8633:11;8667:6;8662:3;8655:19;8707:4;8702:3;8698:14;8683:29;;8534:184;;;;:::o;8724:132::-;8791:4;8814:3;8806:11;;8844:4;8839:3;8835:14;8827:22;;8724:132;;;:::o;8862:108::-;8939:24;8957:5;8939:24;:::i;:::-;8934:3;8927:37;8862:108;;:::o;8976:179::-;9045:10;9066:46;9108:3;9100:6;9066:46;:::i;:::-;9144:4;9139:3;9135:14;9121:28;;8976:179;;;;:::o;9161:113::-;9231:4;9263;9258:3;9254:14;9246:22;;9161:113;;;:::o;9310:732::-;9429:3;9458:54;9506:5;9458:54;:::i;:::-;9528:86;9607:6;9602:3;9528:86;:::i;:::-;9521:93;;9638:56;9688:5;9638:56;:::i;:::-;9717:7;9748:1;9733:284;9758:6;9755:1;9752:13;9733:284;;;9834:6;9828:13;9861:63;9920:3;9905:13;9861:63;:::i;:::-;9854:70;;9947:60;10000:6;9947:60;:::i;:::-;9937:70;;9793:224;9780:1;9777;9773:9;9768:14;;9733:284;;;9737:14;10033:3;10026:10;;9434:608;;;9310:732;;;;:::o;10048:373::-;10191:4;10229:2;10218:9;10214:18;10206:26;;10278:9;10272:4;10268:20;10264:1;10253:9;10249:17;10242:47;10306:108;10409:4;10400:6;10306:108;:::i;:::-;10298:116;;10048:373;;;;:::o;10427:329::-;10486:6;10535:2;10523:9;10514:7;10510:23;10506:32;10503:119;;;10541:79;;:::i;:::-;10503:119;10661:1;10686:53;10731:7;10722:6;10711:9;10707:22;10686:53;:::i;:::-;10676:63;;10632:117;10427:329;;;;:::o;10762:99::-;10814:6;10848:5;10842:12;10832:22;;10762:99;;;:::o;10867:169::-;10951:11;10985:6;10980:3;10973:19;11025:4;11020:3;11016:14;11001:29;;10867:169;;;;:::o;11042:246::-;11123:1;11133:113;11147:6;11144:1;11141:13;11133:113;;;11232:1;11227:3;11223:11;11217:18;11213:1;11208:3;11204:11;11197:39;11169:2;11166:1;11162:10;11157:15;;11133:113;;;11280:1;11271:6;11266:3;11262:16;11255:27;11104:184;11042:246;;;:::o;11294:377::-;11382:3;11410:39;11443:5;11410:39;:::i;:::-;11465:71;11529:6;11524:3;11465:71;:::i;:::-;11458:78;;11545:65;11603:6;11598:3;11591:4;11584:5;11580:16;11545:65;:::i;:::-;11635:29;11657:6;11635:29;:::i;:::-;11630:3;11626:39;11619:46;;11386:285;11294:377;;;;:::o;11677:313::-;11790:4;11828:2;11817:9;11813:18;11805:26;;11877:9;11871:4;11867:20;11863:1;11852:9;11848:17;11841:47;11905:78;11978:4;11969:6;11905:78;:::i;:::-;11897:86;;11677:313;;;;:::o;11996:654::-;12074:6;12082;12131:2;12119:9;12110:7;12106:23;12102:32;12099:119;;;12137:79;;:::i;:::-;12099:119;12257:1;12282:53;12327:7;12318:6;12307:9;12303:22;12282:53;:::i;:::-;12272:63;;12228:117;12412:2;12401:9;12397:18;12384:32;12443:18;12435:6;12432:30;12429:117;;;12465:79;;:::i;:::-;12429:117;12570:63;12625:7;12616:6;12605:9;12601:22;12570:63;:::i;:::-;12560:73;;12355:288;11996:654;;;;;:::o;12656:311::-;12733:4;12823:18;12815:6;12812:30;12809:56;;;12845:18;;:::i;:::-;12809:56;12895:4;12887:6;12883:17;12875:25;;12955:4;12949;12945:15;12937:23;;12656:311;;;:::o;12990:710::-;13086:5;13111:81;13127:64;13184:6;13127:64;:::i;:::-;13111:81;:::i;:::-;13102:90;;13212:5;13241:6;13234:5;13227:21;13275:4;13268:5;13264:16;13257:23;;13328:4;13320:6;13316:17;13308:6;13304:30;13357:3;13349:6;13346:15;13343:122;;;13376:79;;:::i;:::-;13343:122;13491:6;13474:220;13508:6;13503:3;13500:15;13474:220;;;13583:3;13612:37;13645:3;13633:10;13612:37;:::i;:::-;13607:3;13600:50;13679:4;13674:3;13670:14;13663:21;;13550:144;13534:4;13529:3;13525:14;13518:21;;13474:220;;;13478:21;13092:608;;12990:710;;;;;:::o;13723:370::-;13794:5;13843:3;13836:4;13828:6;13824:17;13820:27;13810:122;;13851:79;;:::i;:::-;13810:122;13968:6;13955:20;13993:94;14083:3;14075:6;14068:4;14060:6;14056:17;13993:94;:::i;:::-;13984:103;;13800:293;13723:370;;;;:::o;14099:307::-;14160:4;14250:18;14242:6;14239:30;14236:56;;;14272:18;;:::i;:::-;14236:56;14310:29;14332:6;14310:29;:::i;:::-;14302:37;;14394:4;14388;14384:15;14376:23;;14099:307;;;:::o;14412:423::-;14489:5;14514:65;14530:48;14571:6;14530:48;:::i;:::-;14514:65;:::i;:::-;14505:74;;14602:6;14595:5;14588:21;14640:4;14633:5;14629:16;14678:3;14669:6;14664:3;14660:16;14657:25;14654:112;;;14685:79;;:::i;:::-;14654:112;14775:54;14822:6;14817:3;14812;14775:54;:::i;:::-;14495:340;14412:423;;;;;:::o;14854:338::-;14909:5;14958:3;14951:4;14943:6;14939:17;14935:27;14925:122;;14966:79;;:::i;:::-;14925:122;15083:6;15070:20;15108:78;15182:3;15174:6;15167:4;15159:6;15155:17;15108:78;:::i;:::-;15099:87;;14915:277;14854:338;;;;:::o;15198:1363::-;15343:6;15351;15359;15367;15416:3;15404:9;15395:7;15391:23;15387:33;15384:120;;;15423:79;;:::i;:::-;15384:120;15543:1;15568:53;15613:7;15604:6;15593:9;15589:22;15568:53;:::i;:::-;15558:63;;15514:117;15698:2;15687:9;15683:18;15670:32;15729:18;15721:6;15718:30;15715:117;;;15751:79;;:::i;:::-;15715:117;15856:78;15926:7;15917:6;15906:9;15902:22;15856:78;:::i;:::-;15846:88;;15641:303;16011:2;16000:9;15996:18;15983:32;16042:18;16034:6;16031:30;16028:117;;;16064:79;;:::i;:::-;16028:117;16169:78;16239:7;16230:6;16219:9;16215:22;16169:78;:::i;:::-;16159:88;;15954:303;16324:2;16313:9;16309:18;16296:32;16355:18;16347:6;16344:30;16341:117;;;16377:79;;:::i;:::-;16341:117;16482:62;16536:7;16527:6;16516:9;16512:22;16482:62;:::i;:::-;16472:72;;16267:287;15198:1363;;;;;;;:::o;16567:329::-;16626:6;16675:2;16663:9;16654:7;16650:23;16646:32;16643:119;;;16681:79;;:::i;:::-;16643:119;16801:1;16826:53;16871:7;16862:6;16851:9;16847:22;16826:53;:::i;:::-;16816:63;;16772:117;16567:329;;;;:::o;16902:118::-;16989:24;17007:5;16989:24;:::i;:::-;16984:3;16977:37;16902:118;;:::o;17026:222::-;17119:4;17157:2;17146:9;17142:18;17134:26;;17170:71;17238:1;17227:9;17223:17;17214:6;17170:71;:::i;:::-;17026:222;;;;:::o;17254:1509::-;17408:6;17416;17424;17432;17440;17489:3;17477:9;17468:7;17464:23;17460:33;17457:120;;;17496:79;;:::i;:::-;17457:120;17616:1;17641:53;17686:7;17677:6;17666:9;17662:22;17641:53;:::i;:::-;17631:63;;17587:117;17743:2;17769:53;17814:7;17805:6;17794:9;17790:22;17769:53;:::i;:::-;17759:63;;17714:118;17899:2;17888:9;17884:18;17871:32;17930:18;17922:6;17919:30;17916:117;;;17952:79;;:::i;:::-;17916:117;18057:78;18127:7;18118:6;18107:9;18103:22;18057:78;:::i;:::-;18047:88;;17842:303;18212:2;18201:9;18197:18;18184:32;18243:18;18235:6;18232:30;18229:117;;;18265:79;;:::i;:::-;18229:117;18370:78;18440:7;18431:6;18420:9;18416:22;18370:78;:::i;:::-;18360:88;;18155:303;18525:3;18514:9;18510:19;18497:33;18557:18;18549:6;18546:30;18543:117;;;18579:79;;:::i;:::-;18543:117;18684:62;18738:7;18729:6;18718:9;18714:22;18684:62;:::i;:::-;18674:72;;18468:288;17254:1509;;;;;;;;:::o;18769:474::-;18837:6;18845;18894:2;18882:9;18873:7;18869:23;18865:32;18862:119;;;18900:79;;:::i;:::-;18862:119;19020:1;19045:53;19090:7;19081:6;19070:9;19066:22;19045:53;:::i;:::-;19035:63;;18991:117;19147:2;19173:53;19218:7;19209:6;19198:9;19194:22;19173:53;:::i;:::-;19163:63;;19118:118;18769:474;;;;;:::o;19249:311::-;19326:4;19416:18;19408:6;19405:30;19402:56;;;19438:18;;:::i;:::-;19402:56;19488:4;19480:6;19476:17;19468:25;;19548:4;19542;19538:15;19530:23;;19249:311;;;:::o;19583:710::-;19679:5;19704:81;19720:64;19777:6;19720:64;:::i;:::-;19704:81;:::i;:::-;19695:90;;19805:5;19834:6;19827:5;19820:21;19868:4;19861:5;19857:16;19850:23;;19921:4;19913:6;19909:17;19901:6;19897:30;19950:3;19942:6;19939:15;19936:122;;;19969:79;;:::i;:::-;19936:122;20084:6;20067:220;20101:6;20096:3;20093:15;20067:220;;;20176:3;20205:37;20238:3;20226:10;20205:37;:::i;:::-;20200:3;20193:50;20272:4;20267:3;20263:14;20256:21;;20143:144;20127:4;20122:3;20118:14;20111:21;;20067:220;;;20071:21;19685:608;;19583:710;;;;;:::o;20316:370::-;20387:5;20436:3;20429:4;20421:6;20417:17;20413:27;20403:122;;20444:79;;:::i;:::-;20403:122;20561:6;20548:20;20586:94;20676:3;20668:6;20661:4;20653:6;20649:17;20586:94;:::i;:::-;20577:103;;20393:293;20316:370;;;;:::o;20692:894::-;20810:6;20818;20867:2;20855:9;20846:7;20842:23;20838:32;20835:119;;;20873:79;;:::i;:::-;20835:119;21021:1;21010:9;21006:17;20993:31;21051:18;21043:6;21040:30;21037:117;;;21073:79;;:::i;:::-;21037:117;21178:78;21248:7;21239:6;21228:9;21224:22;21178:78;:::i;:::-;21168:88;;20964:302;21333:2;21322:9;21318:18;21305:32;21364:18;21356:6;21353:30;21350:117;;;21386:79;;:::i;:::-;21350:117;21491:78;21561:7;21552:6;21541:9;21537:22;21491:78;:::i;:::-;21481:88;;21276:303;20692:894;;;;;:::o;21592:1039::-;21719:6;21727;21735;21784:2;21772:9;21763:7;21759:23;21755:32;21752:119;;;21790:79;;:::i;:::-;21752:119;21910:1;21935:53;21980:7;21971:6;21960:9;21956:22;21935:53;:::i;:::-;21925:63;;21881:117;22065:2;22054:9;22050:18;22037:32;22096:18;22088:6;22085:30;22082:117;;;22118:79;;:::i;:::-;22082:117;22223:78;22293:7;22284:6;22273:9;22269:22;22223:78;:::i;:::-;22213:88;;22008:303;22378:2;22367:9;22363:18;22350:32;22409:18;22401:6;22398:30;22395:117;;;22431:79;;:::i;:::-;22395:117;22536:78;22606:7;22597:6;22586:9;22582:22;22536:78;:::i;:::-;22526:88;;22321:303;21592:1039;;;;;:::o;22637:943::-;22732:6;22740;22748;22756;22805:3;22793:9;22784:7;22780:23;22776:33;22773:120;;;22812:79;;:::i;:::-;22773:120;22932:1;22957:53;23002:7;22993:6;22982:9;22978:22;22957:53;:::i;:::-;22947:63;;22903:117;23059:2;23085:53;23130:7;23121:6;23110:9;23106:22;23085:53;:::i;:::-;23075:63;;23030:118;23187:2;23213:53;23258:7;23249:6;23238:9;23234:22;23213:53;:::i;:::-;23203:63;;23158:118;23343:2;23332:9;23328:18;23315:32;23374:18;23366:6;23363:30;23360:117;;;23396:79;;:::i;:::-;23360:117;23501:62;23555:7;23546:6;23535:9;23531:22;23501:62;:::i;:::-;23491:72;;23286:287;22637:943;;;;;;;:::o;23586:116::-;23656:21;23671:5;23656:21;:::i;:::-;23649:5;23646:32;23636:60;;23692:1;23689;23682:12;23636:60;23586:116;:::o;23708:133::-;23751:5;23789:6;23776:20;23767:29;;23805:30;23829:5;23805:30;:::i;:::-;23708:133;;;;:::o;23847:468::-;23912:6;23920;23969:2;23957:9;23948:7;23944:23;23940:32;23937:119;;;23975:79;;:::i;:::-;23937:119;24095:1;24120:53;24165:7;24156:6;24145:9;24141:22;24120:53;:::i;:::-;24110:63;;24066:117;24222:2;24248:50;24290:7;24281:6;24270:9;24266:22;24248:50;:::i;:::-;24238:60;;24193:115;23847:468;;;;;:::o;24321:474::-;24389:6;24397;24446:2;24434:9;24425:7;24421:23;24417:32;24414:119;;;24452:79;;:::i;:::-;24414:119;24572:1;24597:53;24642:7;24633:6;24622:9;24618:22;24597:53;:::i;:::-;24587:63;;24543:117;24699:2;24725:53;24770:7;24761:6;24750:9;24746:22;24725:53;:::i;:::-;24715:63;;24670:118;24321:474;;;;;:::o;24801:1089::-;24905:6;24913;24921;24929;24937;24986:3;24974:9;24965:7;24961:23;24957:33;24954:120;;;24993:79;;:::i;:::-;24954:120;25113:1;25138:53;25183:7;25174:6;25163:9;25159:22;25138:53;:::i;:::-;25128:63;;25084:117;25240:2;25266:53;25311:7;25302:6;25291:9;25287:22;25266:53;:::i;:::-;25256:63;;25211:118;25368:2;25394:53;25439:7;25430:6;25419:9;25415:22;25394:53;:::i;:::-;25384:63;;25339:118;25496:2;25522:53;25567:7;25558:6;25547:9;25543:22;25522:53;:::i;:::-;25512:63;;25467:118;25652:3;25641:9;25637:19;25624:33;25684:18;25676:6;25673:30;25670:117;;;25706:79;;:::i;:::-;25670:117;25811:62;25865:7;25856:6;25845:9;25841:22;25811:62;:::i;:::-;25801:72;;25595:288;24801:1089;;;;;;;;:::o;25896:619::-;25973:6;25981;25989;26038:2;26026:9;26017:7;26013:23;26009:32;26006:119;;;26044:79;;:::i;:::-;26006:119;26164:1;26189:53;26234:7;26225:6;26214:9;26210:22;26189:53;:::i;:::-;26179:63;;26135:117;26291:2;26317:53;26362:7;26353:6;26342:9;26338:22;26317:53;:::i;:::-;26307:63;;26262:118;26419:2;26445:53;26490:7;26481:6;26470:9;26466:22;26445:53;:::i;:::-;26435:63;;26390:118;25896:619;;;;;:::o;26521:180::-;26569:77;26566:1;26559:88;26666:4;26663:1;26656:15;26690:4;26687:1;26680:15;26707:180;26755:77;26752:1;26745:88;26852:4;26849:1;26842:15;26876:4;26873:1;26866:15;26893:233;26932:3;26955:24;26973:5;26955:24;:::i;:::-;26946:33;;27001:66;26994:5;26991:77;26988:103;;27071:18;;:::i;:::-;26988:103;27118:1;27111:5;27107:13;27100:20;;26893:233;;;:::o;27132:118::-;27219:24;27237:5;27219:24;:::i;:::-;27214:3;27207:37;27132:118;;:::o;27256:332::-;27377:4;27415:2;27404:9;27400:18;27392:26;;27428:71;27496:1;27485:9;27481:17;27472:6;27428:71;:::i;:::-;27509:72;27577:2;27566:9;27562:18;27553:6;27509:72;:::i;:::-;27256:332;;;;;:::o;27594:::-;27715:4;27753:2;27742:9;27738:18;27730:26;;27766:71;27834:1;27823:9;27819:17;27810:6;27766:71;:::i;:::-;27847:72;27915:2;27904:9;27900:18;27891:6;27847:72;:::i;:::-;27594:332;;;;;:::o;27932:180::-;27980:77;27977:1;27970:88;28077:4;28074:1;28067:15;28101:4;28098:1;28091:15;28118:320;28162:6;28199:1;28193:4;28189:12;28179:22;;28246:1;28240:4;28236:12;28267:18;28257:81;;28323:4;28315:6;28311:17;28301:27;;28257:81;28385:2;28377:6;28374:14;28354:18;28351:38;28348:84;;28404:18;;:::i;:::-;28348:84;28169:269;28118:320;;;:::o;28444:141::-;28493:4;28516:3;28508:11;;28539:3;28536:1;28529:14;28573:4;28570:1;28560:18;28552:26;;28444:141;;;:::o;28591:93::-;28628:6;28675:2;28670;28663:5;28659:14;28655:23;28645:33;;28591:93;;;:::o;28690:107::-;28734:8;28784:5;28778:4;28774:16;28753:37;;28690:107;;;;:::o;28803:393::-;28872:6;28922:1;28910:10;28906:18;28945:97;28975:66;28964:9;28945:97;:::i;:::-;29063:39;29093:8;29082:9;29063:39;:::i;:::-;29051:51;;29135:4;29131:9;29124:5;29120:21;29111:30;;29184:4;29174:8;29170:19;29163:5;29160:30;29150:40;;28879:317;;28803:393;;;;;:::o;29202:60::-;29230:3;29251:5;29244:12;;29202:60;;;:::o;29268:142::-;29318:9;29351:53;29369:34;29378:24;29396:5;29378:24;:::i;:::-;29369:34;:::i;:::-;29351:53;:::i;:::-;29338:66;;29268:142;;;:::o;29416:75::-;29459:3;29480:5;29473:12;;29416:75;;;:::o;29497:269::-;29607:39;29638:7;29607:39;:::i;:::-;29668:91;29717:41;29741:16;29717:41;:::i;:::-;29709:6;29702:4;29696:11;29668:91;:::i;:::-;29662:4;29655:105;29573:193;29497:269;;;:::o;29772:73::-;29817:3;29772:73;:::o;29851:189::-;29928:32;;:::i;:::-;29969:65;30027:6;30019;30013:4;29969:65;:::i;:::-;29904:136;29851:189;;:::o;30046:186::-;30106:120;30123:3;30116:5;30113:14;30106:120;;;30177:39;30214:1;30207:5;30177:39;:::i;:::-;30150:1;30143:5;30139:13;30130:22;;30106:120;;;30046:186;;:::o;30238:543::-;30339:2;30334:3;30331:11;30328:446;;;30373:38;30405:5;30373:38;:::i;:::-;30457:29;30475:10;30457:29;:::i;:::-;30447:8;30443:44;30640:2;30628:10;30625:18;30622:49;;;30661:8;30646:23;;30622:49;30684:80;30740:22;30758:3;30740:22;:::i;:::-;30730:8;30726:37;30713:11;30684:80;:::i;:::-;30343:431;;30328:446;30238:543;;;:::o;30787:117::-;30841:8;30891:5;30885:4;30881:16;30860:37;;30787:117;;;;:::o;30910:169::-;30954:6;30987:51;31035:1;31031:6;31023:5;31020:1;31016:13;30987:51;:::i;:::-;30983:56;31068:4;31062;31058:15;31048:25;;30961:118;30910:169;;;;:::o;31084:295::-;31160:4;31306:29;31331:3;31325:4;31306:29;:::i;:::-;31298:37;;31368:3;31365:1;31361:11;31355:4;31352:21;31344:29;;31084:295;;;;:::o;31384:1395::-;31501:37;31534:3;31501:37;:::i;:::-;31603:18;31595:6;31592:30;31589:56;;;31625:18;;:::i;:::-;31589:56;31669:38;31701:4;31695:11;31669:38;:::i;:::-;31754:67;31814:6;31806;31800:4;31754:67;:::i;:::-;31848:1;31872:4;31859:17;;31904:2;31896:6;31893:14;31921:1;31916:618;;;;32578:1;32595:6;32592:77;;;32644:9;32639:3;32635:19;32629:26;32620:35;;32592:77;32695:67;32755:6;32748:5;32695:67;:::i;:::-;32689:4;32682:81;32551:222;31886:887;;31916:618;31968:4;31964:9;31956:6;31952:22;32002:37;32034:4;32002:37;:::i;:::-;32061:1;32075:208;32089:7;32086:1;32083:14;32075:208;;;32168:9;32163:3;32159:19;32153:26;32145:6;32138:42;32219:1;32211:6;32207:14;32197:24;;32266:2;32255:9;32251:18;32238:31;;32112:4;32109:1;32105:12;32100:17;;32075:208;;;32311:6;32302:7;32299:19;32296:179;;;32369:9;32364:3;32360:19;32354:26;32412:48;32454:4;32446:6;32442:17;32431:9;32412:48;:::i;:::-;32404:6;32397:64;32319:156;32296:179;32521:1;32517;32509:6;32505:14;32501:22;32495:4;32488:36;31923:611;;;31886:887;;31476:1303;;;31384:1395;;:::o;32785:148::-;32887:11;32924:3;32909:18;;32785:148;;;;:::o;32963:874::-;33066:3;33103:5;33097:12;33132:36;33158:9;33132:36;:::i;:::-;33184:89;33266:6;33261:3;33184:89;:::i;:::-;33177:96;;33304:1;33293:9;33289:17;33320:1;33315:166;;;;33495:1;33490:341;;;;33282:549;;33315:166;33399:4;33395:9;33384;33380:25;33375:3;33368:38;33461:6;33454:14;33447:22;33439:6;33435:35;33430:3;33426:45;33419:52;;33315:166;;33490:341;33557:38;33589:5;33557:38;:::i;:::-;33617:1;33631:154;33645:6;33642:1;33639:13;33631:154;;;33719:7;33713:14;33709:1;33704:3;33700:11;33693:35;33769:1;33760:7;33756:15;33745:26;;33667:4;33664:1;33660:12;33655:17;;33631:154;;;33814:6;33809:3;33805:16;33798:23;;33497:334;;33282:549;;33070:767;;32963:874;;;;:::o;33843:390::-;33949:3;33977:39;34010:5;33977:39;:::i;:::-;34032:89;34114:6;34109:3;34032:89;:::i;:::-;34025:96;;34130:65;34188:6;34183:3;34176:4;34169:5;34165:16;34130:65;:::i;:::-;34220:6;34215:3;34211:16;34204:23;;33953:280;33843:390;;;;:::o;34239:429::-;34416:3;34438:92;34526:3;34517:6;34438:92;:::i;:::-;34431:99;;34547:95;34638:3;34629:6;34547:95;:::i;:::-;34540:102;;34659:3;34652:10;;34239:429;;;;;:::o;34674:222::-;34767:4;34805:2;34794:9;34790:18;34782:26;;34818:71;34886:1;34875:9;34871:17;34862:6;34818:71;:::i;:::-;34674:222;;;;:::o;34902:332::-;35023:4;35061:2;35050:9;35046:18;35038:26;;35074:71;35142:1;35131:9;35127:17;35118:6;35074:71;:::i;:::-;35155:72;35223:2;35212:9;35208:18;35199:6;35155:72;:::i;:::-;34902:332;;;;;:::o;35240:98::-;35291:6;35325:5;35319:12;35309:22;;35240:98;;;:::o;35344:168::-;35427:11;35461:6;35456:3;35449:19;35501:4;35496:3;35492:14;35477:29;;35344:168;;;;:::o;35518:373::-;35604:3;35632:38;35664:5;35632:38;:::i;:::-;35686:70;35749:6;35744:3;35686:70;:::i;:::-;35679:77;;35765:65;35823:6;35818:3;35811:4;35804:5;35800:16;35765:65;:::i;:::-;35855:29;35877:6;35855:29;:::i;:::-;35850:3;35846:39;35839:46;;35608:283;35518:373;;;;:::o;35897:751::-;36120:4;36158:3;36147:9;36143:19;36135:27;;36172:71;36240:1;36229:9;36225:17;36216:6;36172:71;:::i;:::-;36253:72;36321:2;36310:9;36306:18;36297:6;36253:72;:::i;:::-;36335;36403:2;36392:9;36388:18;36379:6;36335:72;:::i;:::-;36417;36485:2;36474:9;36470:18;36461:6;36417:72;:::i;:::-;36537:9;36531:4;36527:20;36521:3;36510:9;36506:19;36499:49;36565:76;36636:4;36627:6;36565:76;:::i;:::-;36557:84;;35897:751;;;;;;;;:::o;36654:141::-;36710:5;36741:6;36735:13;36726:22;;36757:32;36783:5;36757:32;:::i;:::-;36654:141;;;;:::o;36801:349::-;36870:6;36919:2;36907:9;36898:7;36894:23;36890:32;36887:119;;;36925:79;;:::i;:::-;36887:119;37045:1;37070:63;37125:7;37116:6;37105:9;37101:22;37070:63;:::i;:::-;37060:73;;37016:127;36801:349;;;;:::o;37156:1053::-;37479:4;37517:3;37506:9;37502:19;37494:27;;37531:71;37599:1;37588:9;37584:17;37575:6;37531:71;:::i;:::-;37612:72;37680:2;37669:9;37665:18;37656:6;37612:72;:::i;:::-;37731:9;37725:4;37721:20;37716:2;37705:9;37701:18;37694:48;37759:108;37862:4;37853:6;37759:108;:::i;:::-;37751:116;;37914:9;37908:4;37904:20;37899:2;37888:9;37884:18;37877:48;37942:108;38045:4;38036:6;37942:108;:::i;:::-;37934:116;;38098:9;38092:4;38088:20;38082:3;38071:9;38067:19;38060:49;38126:76;38197:4;38188:6;38126:76;:::i;:::-;38118:84;;37156:1053;;;;;;;;:::o;38215:191::-;38255:3;38274:20;38292:1;38274:20;:::i;:::-;38269:25;;38308:20;38326:1;38308:20;:::i;:::-;38303:25;;38351:1;38348;38344:9;38337:16;;38372:3;38369:1;38366:10;38363:36;;;38379:18;;:::i;:::-;38363:36;38215:191;;;;:::o;38412:553::-;38589:4;38627:3;38616:9;38612:19;38604:27;;38641:71;38709:1;38698:9;38694:17;38685:6;38641:71;:::i;:::-;38722:72;38790:2;38779:9;38775:18;38766:6;38722:72;:::i;:::-;38804;38872:2;38861:9;38857:18;38848:6;38804:72;:::i;:::-;38886;38954:2;38943:9;38939:18;38930:6;38886:72;:::i;:::-;38412:553;;;;;;;:::o;38971:634::-;39192:4;39230:2;39219:9;39215:18;39207:26;;39279:9;39273:4;39269:20;39265:1;39254:9;39250:17;39243:47;39307:108;39410:4;39401:6;39307:108;:::i;:::-;39299:116;;39462:9;39456:4;39452:20;39447:2;39436:9;39432:18;39425:48;39490:108;39593:4;39584:6;39490:108;:::i;:::-;39482:116;;38971:634;;;;;:::o"},"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","MINTER_ROLE()":"d5391393","PAUSER_ROLE()":"e63ab1e9","URI_SETTER_ROLE()":"7f345710","balanceOf(address,uint256)":"00fdd58e","balanceOfBatch(address[],uint256[])":"4e1273f4","burn(address,uint256,uint256)":"f5298aca","burnBatch(address,uint256[],uint256[])":"6b20c454","createId(bytes32)":"f07f5520","createIds(bytes32[])":"09dca9ce","exists(uint256)":"4f558e79","getExternalId(uint256)":"ee037bf9","getId(bytes32)":"e5569773","getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","isApprovedForAll(address,address)":"e985e9c5","mint(address,uint256,uint256,bytes)":"731133e9","mintBatch(address,uint256[],uint256[],bytes)":"1f7fdffa","pause()":"8456cb59","paused()":"5c975abb","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"2eb2c2d6","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a","setApprovalForAll(address,bool)":"a22cb465","setBaseURI(string)":"55f804b3","setTokenURI(uint256,string)":"162094c4","setURI(string)":"02fe5305","supportsInterface(bytes4)":"01ffc9a7","totalSupply()":"18160ddd","totalSupply(uint256)":"bd85b039","unpause()":"3f4ba83a","uri(uint256)":"0e89341c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"defaultAdmin\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"pauser\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"externalId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"IDCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINTER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PAUSER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"URI_SETTER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"burnBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"externalId\",\"type\":\"bytes32\"}],\"name\":\"createId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"externalIds\",\"type\":\"bytes32[]\"}],\"name\":\"createIds\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getExternalId\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"externalId\",\"type\":\"bytes32\"}],\"name\":\"getId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mintBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"baseURI\",\"type\":\"string\"}],\"name\":\"setBaseURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"tokenURI\",\"type\":\"string\"}],\"name\":\"setTokenURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"newuri\",\"type\":\"string\"}],\"name\":\"setURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"custom:security-contact\":\"andy@shipstone.com\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}],\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}]},\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"exists(uint256)\":{\"details\":\"Indicates whether any token exist with a given id, or not.\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"totalSupply()\":{\"details\":\"Total value of tokens.\"},\"totalSupply(uint256)\":{\"details\":\"Total value of tokens in with a given id.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/IPDocV5.sol\":\"IPDocV5\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46326c0bb1e296b67185e81c918e0b40501b8b6386165855df0a3f3c634b6a80\",\"dweb:/ipfs/QmTwyrDYtsxsk6pymJTK94PnEpzsmkpUxFuzEiakDopy4Z\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xc1c2a7f1563b77050dc6d507db9f4ada5d042c1f6a9ddbffdc49c77cdc0a1606\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd54abb96a6156d9a761f6fdad1d3004bc48d2d4fce47f40a3f91a7ae83fc3a1\",\"dweb:/ipfs/QmUrFSGkTDJ7WaZ6qPVVe3Gn5uN2viPb7x7QQ35UX4DofX\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0x22933f0f4897ff70a991c3baebfbc2574fd052dc4bae7fcafec45b07c1f23dd3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://13674cffad18cec55f013056496d7d2e3a34bd7bdbe23d1ef0c7588088c73367\",\"dweb:/ipfs/QmcBkrwxNvCApG48Gyby2L6qCNtuhaFncGpbJt3zuukTmu\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x68d6fdbeb467192c3627a46aa7bf5cbb73267363b740abc511f521a5a41a446e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ce608c19d5e917c60f9c8aa3e5f0eb05b326280ac0a235e8bb9a848a3a64a91\",\"dweb:/ipfs/QmdLPsWQJj7JvRae8MM13GEo4PBXaEFmD4b4heqcyMJNPG\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x61a23d601c2ab69dd726ac55058604cbda98e1d728ba31a51c379a3f9eeea715\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d8cbb06152d82ebdd5ba1d33454e5759492040f309a82637c7e99c948a04fa20\",\"dweb:/ipfs/QmQQuLr6WSfLu97pMEh6XLefk99TSj9k5Qu1zXGPepwGiK\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":{\"keccak256\":\"0xdfab949ba677f4b122d0c14225e6db7ca8a65524e2f00049e57b04f68eceeb87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://25d240211d484954a409a8870c3a971af9e2eb6b6d0ab46b50c193c4a1576006\",\"dweb:/ipfs/QmdzSJoJ6iqoWrGKNeDjV4KVfCqna7Vc7AMoQxpxTdTMpF\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Pausable.sol\":{\"keccak256\":\"0x8caf50b64528a487bc45c6cf89b514adbbdaae20aaf6e98a834c5e74c914c660\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6408411bf7a72026f5fee578ff58f4fb0f6951e6ee7092776b81f563931dd704\",\"dweb:/ipfs/QmeFjtJxSKFRD5LjREUds1bptQzqHs7gwPtrHBdDfzumJC\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":{\"keccak256\":\"0xf1ad6c52c43d20b37c6324a7b7543a408d5cb3e609fa8ea164d29209ac3ca0ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://997802f43f4b5c13814b9f858ff1d97135973119a020f12364502ae712a2aaba\",\"dweb:/ipfs/QmdhpM7YW5sZkiPxxahPbCP3AbUeqvPp4N8xNPFPBW5BnG\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155URIStorage.sol\":{\"keccak256\":\"0x80b9723f553df46ffdbcab394b08623ab4a5a6bcb2112c1af8e2ec6bf7bb57d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3baec0f4007a80970e3974e60465e106a0b7391cb83a95c9c39734b006405921\",\"dweb:/ipfs/QmUVSU1yPHD5UmHZQ6k9Vr3sKU2xXM6LE6zwJgN15PKgUw\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0x35d120c427299af1525aaf07955314d9e36a62f14408eb93dec71a2e001f74d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://743e38acf441eece428c008be399c40a3ca5b2d595d58faf656cbdbac1a45374\",\"dweb:/ipfs/QmcWDuWkndox3dxa5P7ZgpKy3iuQKkxBq1cR9hPV1ZzAfa\"]},\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol\":{\"keccak256\":\"0x30afe9013aaeb3ba735284a9310792776f57a3b2db6fc1d99628f2c47287f5cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c675b740746031092efcedb2e18179f05fce8ba482de64e982715e4aa16bc90\",\"dweb:/ipfs/QmVdUD89qYudLc88k5AsuQ6VWyz9SE1c6UXrVK32Yqh1YS\"]},\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0xaf9586854de33dc9d3a7160cad8170fdfb4119d02a44bad90ba16d71d701cc92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c15a02762b0a51d66e36be135c27de656093fc09292fa743df8484b87d4486ea\",\"dweb:/ipfs/QmbEozFrt5XwC9nzDFuXvN1RF3hQVwKYNi8c2R4bFvYJ2X\"]},\"@openzeppelin/contracts/utils/Comparators.sol\":{\"keccak256\":\"0x302eecd8cf323b4690e3494a7d960b3cbce077032ab8ef655b323cdd136cec58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49ba706f1bc476d68fe6c1fad75517acea4e9e275be0989b548e292eb3a3eacd\",\"dweb:/ipfs/QmeBpvcdGWzWMKTQESUCEhHgnEQYYATVwPxLMxa6vMT7jC\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xb2e5f50762c27fb4b123e3619c3c02bdcba5e515309382e5bfb6f7d6486510bd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1a4b83328c98d518a2699c2cbe9e9b055e78aa57fa8639f1b88deb8b3750b5dc\",\"dweb:/ipfs/QmXdcYj5v7zQxXFPULShHkR5p4Wa2zYuupbHnFdV3cHYtc\"]},\"@openzeppelin/contracts/utils/SlotDerivation.sol\":{\"keccak256\":\"0x8447b57b63810fe2e367c09496a966f143ec0e825d71ddb9fce2506cff84b618\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://996cb48f793bf151555045b37138e36b3cdb31d6bc6552d3149285260be00cfb\",\"dweb:/ipfs/QmcLaTTMNVbkMx58xhkp6GeFt4V3GtSyupZuaKG3vYW2Zc\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x44f87e91783e88415bde66f1a63f6c7f0076f2d511548820407d5c95643ac56c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://13a51bc2b23827744dcf5bad10c69e72528cf015a6fe48c93632cdb2c0eb1251\",\"dweb:/ipfs/QmZwPA47Yqgje1qtkdEFEja8ntTahMStYzKf5q3JRnaR7d\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"contracts/IPDocV5.sol\":{\"keccak256\":\"0xb6ce6e71b4f4c17482338d228c74782f90d567c7fc9a2d72f1229addf6e5b41f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8a03a03129e9b17e56582655f90a42d4b85454b12761ff8ccf668b9fb548a741\",\"dweb:/ipfs/QmRLqxH7t1GGGVHg1Eb2q4vvv197MTzJvPpdAsfstkXWkn\"]}},\"version\":1}"}}}}}