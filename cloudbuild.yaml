steps:
  # Set up cache tag based on branch/PR
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk:slim'
    id: SetupCacheVars
    entrypoint: bash
    args:
      - -c
      - |
        # Set cache tag based on branch or PR
        if [[ "$BRANCH_NAME" == "main" ]]; then
          CACHE_TAG="main-latest"
        elif [[ "$BRANCH_NAME" == "legacy" ]]; then
          CACHE_TAG="legacy-latest"
        elif [[ "$_PR_NUMBER" != "" ]]; then
          CACHE_TAG="pr-$_PR_NUMBER-latest"
        else
          # Replace slashes with hyphens for branch name
          BRANCH_SAFE=$BRANCH_NAME
          BRANCH_SAFE=$${BRANCH_SAFE//\//-}
          CACHE_TAG="$$BRANCH_SAFE-latest"
        fi
        
        # Save to a file that can be accessed by other steps
        echo "$$CACHE_TAG" > /workspace/cache_tag.txt
        echo "Using cache tag: $$CACHE_TAG"
        
        # Pull the cache image if it exists (won't fail if it doesn't)
        docker pull $_AR_HOSTNAME/$_AR_PROJECT_ID/$_AR_REPOSITORY/conciliator-app/$_SERVICE_NAME:$$CACHE_TAG || true

  # Build with cache
  - name: 'gcr.io/cloud-builders/docker'
    id: Build
    entrypoint: bash
    args:
      - -c
      - |
        CACHE_TAG=$$(cat /workspace/cache_tag.txt)
        docker build \
          --tag=$_AR_HOSTNAME/$_AR_PROJECT_ID/$_AR_REPOSITORY/conciliator-app/$_SERVICE_NAME:$COMMIT_SHA \
          --cache-from=$_AR_HOSTNAME/$_AR_PROJECT_ID/$_AR_REPOSITORY/conciliator-app/$_SERVICE_NAME:$$CACHE_TAG \
          --build-arg=NEXT_PUBLIC_STYTCH_PROJECT_ENV=$_NEXT_PUBLIC_STYTCH_PROJECT_ENV \
          --build-arg=NEXT_PUBLIC_STYTCH_PUBLIC_TOKEN=$_NEXT_PUBLIC_STYTCH_PUBLIC_TOKEN \
          --build-arg=NEXT_PUBLIC_STYTCH_APP_ID=$_NEXT_PUBLIC_STYTCH_APP_ID \
          --build-arg=NEXT_PUBLIC_LIT_RELAY_API_KEY=$_NEXT_PUBLIC_LIT_RELAY_API_KEY \
          --build-arg=NEXT_PUBLIC_LIT_CONTRACT_ADDRESS=$_NEXT_PUBLIC_LIT_CONTRACT_ADDRESS \
          --build-arg=NEXT_PUBLIC_LIT_ADDRESS=$_NEXT_PUBLIC_LIT_ADDRESS \
          --build-arg=NEXT_PUBLIC_FIREBASE_CONFIG=$_NEXT_PUBLIC_FIREBASE_CONFIG \
          .

  # Push with commit SHA
  - name: 'gcr.io/cloud-builders/docker'
    id: Push
    args:
      - 'push'
      - '$_AR_HOSTNAME/$_AR_PROJECT_ID/$_AR_REPOSITORY/conciliator-app/$_SERVICE_NAME:$COMMIT_SHA'
      
  # Tag and push with cache tag
  - name: 'gcr.io/cloud-builders/docker'
    id: TagForCache
    entrypoint: bash
    args:
      - -c
      - |
        CACHE_TAG=$$(cat /workspace/cache_tag.txt)
        docker tag $_AR_HOSTNAME/$_AR_PROJECT_ID/$_AR_REPOSITORY/conciliator-app/$_SERVICE_NAME:$COMMIT_SHA $_AR_HOSTNAME/$_AR_PROJECT_ID/$_AR_REPOSITORY/conciliator-app/$_SERVICE_NAME:$$CACHE_TAG
        docker push $_AR_HOSTNAME/$_AR_PROJECT_ID/$_AR_REPOSITORY/conciliator-app/$_SERVICE_NAME:$$CACHE_TAG
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk:slim'
    id: Deploy
    entrypoint: bash
    args:
      - -c
      - |
        # Set tag based on branch or PR
        DO_ROLLOUT=""
        if [[ "$BRANCH_NAME" == "main" ]]; then
          # No tag for main branch
          TAG_OPTION="--no-traffic"
          DO_ROLLOUT="yes"
        elif [[ "$BRANCH_NAME" == "legacy" ]]; then
          # Tag as legacy for legacy branch
          TAG_OPTION="--tag=legacy --no-traffic"
        elif [[ "$_PR_NUMBER" != "" ]]; then
          # Tag with PR number for pull requests
          TAG_OPTION="--tag=pr-$_PR_NUMBER --no-traffic"
        else
          # Default: no tag
          TAG_OPTION="--no-traffic"
        fi
        
        # Execute the deploy command with dynamic tag
        # Use $$ to escape bash variables in Cloud Build YAML
        gcloud run services update $_SERVICE_NAME \
          --platform=managed \
          --image=$_AR_HOSTNAME/$_AR_PROJECT_ID/$_AR_REPOSITORY/conciliator-app/$_SERVICE_NAME:$COMMIT_SHA \
          --labels=managed-by=gcp-cloud-build-deploy-cloud-run,commit-sha=$COMMIT_SHA,gcb-build-id=$BUILD_ID,gcb-trigger-id=$_TRIGGER_ID \
          --region=$_DEPLOY_REGION \
          --quiet \
          $$TAG_OPTION
        if [[ "$$DO_ROLLOUT" == "yes" ]]
        then
          gcloud run services update-traffic $_SERVICE_NAME \
            --platform=managed \
            --to-latest \
            --region=$_DEPLOY_REGION \
            --quiet
        fi
images:
  - >-
    $_AR_HOSTNAME/$_AR_PROJECT_ID/$_AR_REPOSITORY/conciliator-app/$_SERVICE_NAME:$COMMIT_SHA
options:
  substitutionOption: ALLOW_LOOSE
  logging: CLOUD_LOGGING_ONLY
substitutions:
  _TRIGGER_ID: 9cb89cf6-252e-44ae-a6b5-4e104ca14efa
  _AR_HOSTNAME: us-central1-docker.pkg.dev
  _AR_REPOSITORY: cloud-run-source-deploy
  _AR_PROJECT_ID: conciliator-456321
  _PLATFORM: managed
  _SERVICE_NAME: conciliator
  _DEPLOY_REGION: us-central1
  _NEXT_PUBLIC_STYTCH_PROJECT_ENV: ''
  _NEXT_PUBLIC_STYTCH_PUBLIC_TOKEN: ''
  _NEXT_PUBLIC_STYTCH_APP_ID: ''
  _NEXT_PUBLIC_LIT_RELAY_API_KEY: ''
  _NEXT_PUBLIC_LIT_CONTRACT_ADDRESS: ''
  _NEXT_PUBLIC_LIT_ADDRESS: ''
  _NEXT_PUBLIC_FIREBASE_CONFIG: ''

tags:
  - gcp-cloud-build-deploy-cloud-run
  - gcp-cloud-build-deploy-cloud-run-managed
  - conciliator
