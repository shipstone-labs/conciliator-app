name: Lint, Test, Build

on:
  pull_request:
    branches:
      - 'main'
      - 'lilypad'
  push:
    branches:
      - 'main'
      - 'lilypad'

concurrency:
  group: compile-${{ github.ref }}
  cancel-in-progress: true

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Extract branch name
        shell: bash
        run: |
          if [[ "${{ github.event_name }}" == "push" && "${{ github.ref }}" == "refs/heads/lilypad" ]] || \
            [[ "${{ github.event_name }}" == "pull_request" && "${{ github.event.pull_request.base.ref }}" == "lilypad" ]]; then
            echo project=conciliator-lilypad >> $GITHUB_OUTPUT
            PROJECT_NAME=conciliator-lilypad
          else          
            echo project=conciliator-app >> $GITHUB_OUTPUT
            PROJECT_NAME=conciliator-app
          fi
          PR_NUMBER="${{ github.event.number }}"
          if [ -n "$PR_NUMBER" ]
          then
            echo "branch_name=pr-${PR_NUMBER}" >> $GITHUB_OUTPUT
            echo "url=https://pr-${PR_NUMBER}.${PROJECT_NAME}.pages.dev" >> $GITHUB_OUTPUT
          else
            echo "branch_name=" >> $GITHUB_OUTPUT
          fi

        id: extract_branch

      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'

      - name: Set up TinyGo
        uses: acifani/setup-tinygo@v2
        with:
          tinygo-version: '0.28.1'  # Specify the TinyGo version you need
      
      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: "10.6.5"
      
      - uses: actions/setup-node@v3
        with:
          node-version: '22.13.1'
          cache: 'pnpm'

      - name: ⚙️ Install dependencies
        run: pnpm install

      - name: Build
        run: |
          pnpm pages:build

      - name: 'Deploy release'
        if: ${{ steps.extract_branch.outputs.branch_name == '' }}
        env:
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CF_ACCOUNT_ID }}
          CLOUDFLARE_API_TOKEN: ${{ secrets.CF_API_TOKEN }}
        run: |
          pnpm dlx wrangler pages deploy --project-name "${{ steps.extract_branch.outputs.project }}" --branch main

      - name: Deploy ${{ steps.extract_branch.outputs.branch_name }} (PR)
        if: ${{ steps.extract_branch.outputs.branch_name != '' }}
        env:
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CF_ACCOUNT_ID }}
          CLOUDFLARE_API_TOKEN: ${{ secrets.CF_API_TOKEN }}
        run: |
          pnpm dlx wrangler pages deploy --project-name "${{ steps.extract_branch.outputs.project }}" --branch "${{ steps.extract_branch.outputs.branch_name }}" | tee output.log
          sed < output.log -n 's#.*Take a peek over at \(.*\)$#specific_url=\1#p' >> $GITHUB_OUTPUT
        id: deploy

      - name: Create commit comment
        uses: mshick/add-pr-comment@v2
        if: ${{ steps.extract_branch.outputs.branch_name != '' }}
        with:
          message: |
            ### Deployed with **Cloudflare Pages** :cloud: :rocket: :ok:
            - **URL**: [${{ steps.extract_branch.outputs.url }}](${{ steps.extract_branch.outputs.url }})
            - **Specific**: [${{ steps.deploy.outputs.specific_url }}](${{ steps.deploy.outputs.specific_url }})
