name: Lint, Test, Build

on:
  workflow_dispatch:
  # pull_request:
  #   branches:
  #     - 'main'
  #     - 'legacy'
  # push:
  #   branches:
  #     - 'main'
  #     - 'legacy'

env:
  CF_PROJECT_NAME: conciliator-app
  CF_BASE_URL: conciliator-app

jobs:
  deploy:
    if: false
    runs-on: ubuntu-latest

    steps:
      - name: Extract branch name
        shell: bash
        run: |
          if [[ "${{ github.event_name }}" == "push" && "${{ github.ref }}" == "refs/heads/legacy" ]] || \
            [[ "${{ github.event_name }}" == "pull_request" && "${{ github.event.pull_request.base.ref }}" == "legacy" ]]; then
            echo project=conciliator-app >> $GITHUB_OUTPUT
            PROJECT_NAME=conciliator-app
          else          
            echo project=conciliator-lilypad >> $GITHUB_OUTPUT
            PROJECT_NAME=conciliator-lilypad
          fi
          PR_NUMBER="${{ github.event.number }}"
          if [ -n "$PR_NUMBER" ]
          then
            echo "branch_name=pr-${PR_NUMBER}" >> $GITHUB_OUTPUT
            echo "url=https://pr-${PR_NUMBER}.${PROJECT_NAME}.pages.dev" >> $GITHUB_OUTPUT
          else
            echo "branch_name=" >> $GITHUB_OUTPUT
          fi

        id: extract_branch

      - uses: actions/checkout@v3

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: "10.7.1"
      
      - uses: actions/setup-node@v3
        with:
          node-version: '22.13.1'
          cache: 'pnpm'

      - name: ⚙️ Install dependencies
        run: pnpm install

      - name: Build
        env:
          NEXT_PUBLIC_STYTCH_PROJECT_ENV: ${{ secrets.NEXT_PUBLIC_STYTCH_PROJECT_ENV }}
          NEXT_PUBLIC_STYTCH_PUBLIC_TOKEN: ${{ secrets.NEXT_PUBLIC_STYTCH_PUBLIC_TOKEN }}
          NEXT_PUBLIC_STYTCH_APP_ID: ${{ secrets.NEXT_PUBLIC_STYTCH_APP_ID }}
          NEXT_PUBLIC_LIT_RELAY_API_KEY: ${{ secrets.NEXT_PUBLIC_LIT_RELAY_API_KEY }}
        run: |
          trap 'rm -f .env.local' EXIT
          echo <<EOF > .env.local
          NEXT_PUBLIC_STYTCH_PROJECT_ENV=${NEXT_PUBLIC_STYTCH_PROJECT_ENV}
          NEXT_PUBLIC_STYTCH_PUBLIC_TOKEN=${NEXT_PUBLIC_STYTCH_PUBLIC_TOKEN}
          NEXT_PUBLIC_STYTCH_APP_ID=${NEXT_PUBLIC_STYTCH_APP_ID}
          NEXT_PUBLIC_LIT_RELAY_API_KEY=${NEXT_PUBLIC_LIT_RELAY_API_KEY}
          NEXT_PUBLIC_FIREBASE_CONFIG=${NEXT_PUBLIC_FIREBASE_CONFIG}
          EOF
          pnpm pages:build

      - name: 'Deploy release'
        if: ${{ steps.extract_branch.outputs.branch_name == '' }}
        env:
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CF_ACCOUNT_ID }}
          CLOUDFLARE_API_TOKEN: ${{ secrets.CF_API_TOKEN }}
        run: |
          pnpm dlx wrangler pages deploy --project-name "${{ steps.extract_branch.outputs.project }}"

      - name: Deploy ${{ steps.extract_branch.outputs.branch_name }} (PR)
        if: ${{ steps.extract_branch.outputs.branch_name != '' }}
        env:
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CF_ACCOUNT_ID }}
          CLOUDFLARE_API_TOKEN: ${{ secrets.CF_API_TOKEN }}
        run: |
          pnpm dlx wrangler pages deploy --project-name "${{ steps.extract_branch.outputs.project }}" --branch "${{ steps.extract_branch.outputs.branch_name }}" | tee output.log
          sed < output.log -n 's#.*Take a peek over at \(.*\)$#specific_url=\1#p' >> $GITHUB_OUTPUT
        id: deploy

      - name: Create commit comment
        uses: mshick/add-pr-comment@v2
        if: ${{ steps.extract_branch.outputs.branch_name != '' }}
        with:
          message: |
            ### Deployed with **Cloudflare Pages** :cloud: :rocket: :ok:
            - **URL**: [${{ steps.extract_branch.outputs.url }}](${{ steps.extract_branch.outputs.url }})
            - **Specific**: [${{ steps.deploy.outputs.specific_url }}](${{ steps.deploy.outputs.specific_url }})
